#!/usr/bin/env perl

use strict;
use warnings;
use Data::Dumper;
use Algorithm::Permute;

use File::Slurp qw/read_file/;

my @data = read_file('input');

my %conn;
foreach my $line (@data) {
	chomp $line;
	my ($from, $to, $dist) = $line =~ m/^(\w+) to (\w+) = (\d+)$/;
	$conn{$from}{$to} = $dist;
	$conn{$to}{$from} = $dist;
}

my $min = 1e99;

my $p = new Algorithm::Permute([keys %conn]);

while (my @res = $p->next) {
	my $len = 0;
	my $count = 1;
	my $prev = shift @res;
	foreach my $city (@res) {
		last unless $conn{$prev}{$city};
		$len += $conn{$prev}{$city};
		$prev = $city;
		$count++;
	}
	next unless $count == scalar keys %conn;
	$min = $len if $len < $min;
}


print Dumper $min;
