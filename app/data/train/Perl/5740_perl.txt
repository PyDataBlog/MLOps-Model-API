package Org::Tokenizer;


#** @class Org::Tokenizer
#
# Regular expressions to detect Org-mode's structural elements.
#
# See Org::TextTokenizer for emphasis and link stuff.
#
# @author Sebastian Rose <sebastian_rose@gmx.de>
#*

use utf8;
use Modern::Perl;


our $rx_EMPTY_LINE = qr/^\s*$/o;

# Trim a string on both ends.  Keep leading spaces and rest without newline.
# Usage: ( $leading_whitespace, $line) = $line =~ /$Org::Tokenizer::rx_TRIM/;
our $rx_TRIM  = qr/^(\s*)((?:[^\s])(?:.*[^\s]+)*)\s*$/o;

# CORE::chomp remove only the '\n' from a line ending in '\r\n'. So..
our $rx_CHOMP = qr/\015?\012\Z/o;

# Detect a headline.
our $rx_SECTION = qr/^
  ( \*+ )                                         # Stars
  \s+                                             # Space(s)
  (?:
    (TODO|STARTED|WAITING|CANCELED|DONE)          # TODO keyword ...
   \s+                                            # ...and space
   )?
  ( [^\s:].*? )?                                  # Title
  \s*                                             # Trim the title
  ((?::[a-zA-Z_-]+)+:)?                           # Tags
  \s*                                             # Allow for spaces
$/xio;

# Detect a listitem.  Groups are SPACES BULLET REST
our $rx_LIST_ITEM = qr/^(\s+)([-+*]|\d+[\.\)]) +(.+?)\s*$/o;
our $rx_ULIST     = qr/^(\s+)([-+*]) +(.+?)\s*$/o;
our $rx_OLIST     = qr/^(\s+)(\d+[\.\)]) +(.+?)\s*$/o;

# Matches a table conent line.
our $rx_TABLE = qr/^\s*\|[^\|]{3,}(?:\|[^\|]{3,})*\|\s*$/o;

# Matches a table line.
our $rx_TABLE_LINE = qr/^\s*\|-{3,}(?:\+-{3,})*\|\s*$/o;

# Matches numeric table cell content.
# Allows for prefixed operators (hence the optional spaces).
our $rx_TABLE_CELL_IS_NUMERIC = qr/^\s*(?:[\+-=\/\*]\s*)?\d+(?:[\.,]\d+)?\s*$/;

# Preformated by leading colon. Finds a NOT EMPTY line.
our $rx_PRE_BY_COLON = qr/^\s*: +(.+)$/o;

# Prefix of preformated by colon. Last space optional.
# NOTE: will delete one space following the colon if used in =~ s/// expression.
our $rx_PRE_BY_COLON_PREFIX = qr/^\s*:\s?/o;

# A block.  Keeps TYPE, OPTIONSTRING
our $rx_BLOCK_TYPE_OPTIONS = qr/^\s*#\+begin_([a-z:]+)((\s+[^\s]+)+)?\s*$/io;

# Start of block
our $rx_BLOCK_BEGIN = qr/^\s*#\+begin_([a-z:]+)/io;

# End of block.
our $rx_BLOCK_END = qr/^\s*#\+end_[a-z]+\s*$/io;

# A drawer.
our $rx_DRAWER = qr/^\s*:[a-z]+:\s*$/io;

# End of drawer.
our $rx_DRAWER_END = qr/^\s*:end:\s*$/io;

# Org-Specials start with #+ALPHA... The ALPHA part is found in $1.
our $rx_ORG_SPECIAL = qr/^\s*#\+([a-z_]+):/oi;

# Any Line, that is not a plain text line
our $rx_ORG_ANY = qr/
    ^(?:
       \*+\s                                      # Headline
     |  \s* \#\+[a-z-A-Z_]+                       # Special
     |  \s* [-\*\+:]\s                            # List, pre
     |  \s* \|[\s-]                               # Table
     |  \s* \d+[\.\)]\s                           # Numbered lists
     |  \s*:[a-z]+:\s                             # Drawer
    )/ox;

# Path or URL to hidden file or directory, if this matches:
our $rx_HIDDEN_FILE = qr {
    (?:  ^ | / )                                  # Start or '/'
    \.                                            # The dot
    (?: [^\.|\/] | $)                             # Followed by one of these
}xo;


1;
