#!/usr/bin/perl
#
# Sorts and stacks authors and pages from auextractor
# Manual sorting required after for PERL cannot into sorting
#

use utf8;
use open ':encoding(utf8)';
use Sort::Naturally;
#use Data::Dumper;

binmode STDOUT, ':utf8';



foreach $file (@ARGV) {
open (TextFile, "<", $file) or die "$!";
$entireFile = do { local $/;<TextFile> }; # file to string, fuck these arrays
close (TextFile);
$entireFile =~ s/\r\n/\n/g;
#$entireFile =~ s/\n//g;

while ($entireFile =~ m#(.*?)\n#gc)
{
push (@strings, "$1");
}

@strings = nsort @strings;

#print Dumper(@strings);
$i=0;
 foreach $VAR (@strings) {
 $i--;
my $prevstr = @strings[$i]; $i++;
my $prevauth = $prevstr; $prevauth =~ s#(.*?)\t.*#$1#;

# print "previous author = " . $prevauth . "\n";

my $currstr = @strings[$i]; $i++;
my $currauth = $currstr; $currauth =~ s#(.*?)\t.*#$1#;
my $currpage = $currstr; $currpage =~ s#.*\t(d*)#$1#;

# print "current author = " . $currauth . "\ncurrent page num = " . $currpage . "\n";
# if ($currauth eq $prevauth) { print "likeprev\n\n"; } else { print "unlike prev\n\n";}


if ($currauth eq $prevauth) {
 print  ", " . $currpage;
} else {
 print "\n" . $currauth . "\t" . $currpage;
}

}

undef @strings;
}