use strict;
use warnings;

# Define Test Program
my $program_name = "printtokens2";
print "Start Testing Process...\n";
# Compile for gcov
print "Compiling...\n";
system("gcc -g -fprofile-arcs -ftest-coverage -o $program_name $program_name.c");
# Run Test
print "Testing...\n";
my $rownum = readpipe("grep -v \"^\\s*\$\" universe.txt | wc -l");
# Get total coverage
open (my $tcpool, "<", "universe.txt") || die ("Could not open temp file");
while(my $row =  <$tcpool>){
my $result = readpipe("./$program_name $row");
}
close($tcpool);
my $total = readpipe("gcov $program_name");
open (my $temp, ">", "temp.txt") || die ("Could not create temp file");
print $temp "$total";
close($temp);
open ($temp, "<", "temp.txt") || die ("Could not open temp file");
my $totalcoverage = 0;
while (<$temp>){
    if(/Lines executed:(.*?)% of (.*)/){
        $totalcoverage = $1;
        print "Total statement coverage is: $totalcoverage%\n";
    }
}
close($temp);
system("rm temp.txt");
system("rm $program_name.gcda");
my $coverage = 0;
while($coverage < $totalcoverage){
    my $counter = 0;
    srand;
    my $pick = int(rand($rownum));
    open($tcpool, "<", "universe.txt") or die "Could not open universe.txt file ";
    while(my $row =  <$tcpool>){
# Random prioritization
        if($counter == $pick){
# Read record to get coverage
            my $result = readpipe("./$program_name $row");
            my $statement = readpipe("gcov $program_name");

            open (my $temp, ">", "temp.txt") || die ("Could not create temp file");
            print $temp "$statement";
            close($temp);
            open ($temp, "<", "temp.txt") || die ("Could not open temp file");

            while(<$temp>){
                if(/Lines executed:(.*?)% of (.*)/){
                    if($coverage < $1){
                        $coverage = $1;
                        print "$row";
                        print "Coverage: $coverage%\n";
                    }
                }
            }
            close($temp);
        }
        $counter++;
    }
    close($tcpool);
}
system("rm temp.txt");
