export function bnAbs() : any;
export function addTwo(x: number, y: number) : number;
export function bnCompareTo(a: any) : any;
export function nbits(x: any) : any;
export function bnBitLength() : any;
export function bnpDLShiftTo(n: any,r: any) :any;
export function bnpDRShiftTo(n: any,r: any) :any;
export function bnpLShiftTo(n: any,r: any) :any;
export function bnpRShiftTo(n: any,r: any) : any;
export function bnpSubTo(a: any,r: any) : any;
export function bnpMultiplyTo(a: any,r : any) : any;
export function bnpSquareTo(r: any) : any;
export function bnpDivRemTo(m: any,q: any,r: any) : any;
export function bnMod(a: any) : any;
export function Classic(m: any) : any;
export function cConvert(x: any) : any;
export function cRevert(x: any) : any;
export function cReduce(x: any) : any;
export function cMulTo(x: any,y: any,r: any) : any;
export function cSqrTo(x: any,r: any) : any;
export function bnpInvDigit() : any;
export function Montgomery(m: any) : any;
export function montConvert(x: any) : any;
export function montRevert(x: any) : any;
export function montReduce(x: any) : any;
export function montSqrTo(x: any,r: any) : any;
export function montMulTo(x: any,y: any,r: any) : any;
export function bnpIsEven() : any;
export function bnpExp(e: any,z: any) : any;
export function bnModPowInt(e: any,m: any) : any;
