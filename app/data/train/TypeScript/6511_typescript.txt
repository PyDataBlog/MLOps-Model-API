/**
 * Created by rt3 on 2/15/17.
 */
// import { IPeers, IPeer, IUser, ICredentials }  from './config.interfaces';

class SeedConfig {
  /**
   * Projet name for chaincode project, under ./src
   * @type {string}
   */
  CC_PROJECT_NAME   = 'build-chaincode';

  /**
   * Hyperledger Network Name
   * @type {string}
   */
  NETWORK_NAME      = 'Example Network';

}
export const seedConfig =  new SeedConfig();

// Get config from bluemix or local
const credentials = require('./ServiceCredentials.json');
const adminUser   = credentials.users.filter(
    (user: any) => user.enrollId === 'WebAppAdmin')[0];

// bluemix config
export const bluemix = {
  network: {
    peers: credentials.peers,
    ca: credentials.ca,
    users: credentials.users,
  },
  chaincode: {
    projectName: seedConfig.CC_PROJECT_NAME,
    deployedDir: 'deploy/bluemix',
    webAppAdmin: {
      enrollId: adminUser.enrollId,
      enrollSecret: adminUser.enrollSecret,
    },
  },
  cert: credentials.cert,
};

// Docker-compose config
export const local = {
  network: {
    peers: [
      {
        discovery_host: 'localhost',
        discovery_port: 7051,
      },
    ],
    ca: {
      ca: {
        url: 'localhost:7054',
      },
    },
  },
  chaincode: {
    projectName: seedConfig.CC_PROJECT_NAME, // src/build-chaincode/chaincode.go
    deployedDir: 'tools/utils/project/blockchain/deployLocal',
    webAppAdmin: {
      enrollId: 'WebAppAdmin',
      enrollSecret: 'DJY27pEnl16d',
    },
  },
};

