import * as crypto from "crypto";

export class BinanceAuthentication {

    private secretKey: string;
    private apiKey: string;

    public signParameters(parameters: string): string {
        const hmac = crypto.createHmac("sha256", this.getSecretKey());
        hmac.update(parameters);
        return hmac.digest().toString("hex");
    }

    public setSecretKey(secretKey: string) {
        this.secretKey = secretKey;
    }

    public setApiKey(apiKey: string) {
        this.apiKey = apiKey;
    }

    public getApiKey(): string {
        if (this.apiKey) {
            return this.apiKey;
        }
        const apiKey = process.env.BINANCE_API_KEY;
        if (apiKey) {
            return apiKey;
        }
        throw new Error("API Key not available.  Set BINANCE_API_KEY environment variable or use method setApiKey");
    }

    public getSecretKey(): string {
        if (this.secretKey) {
            return this.secretKey;
        }
        const secretKey = process.env.BINANCE_SECRET_KEY;
        if (secretKey) {
            return secretKey;
        }
        throw new Error("SECRET Key not available.  " +
            "Set BINANCE_SECRET_KEY environment variable or use method setSecretKey");
    }

}
