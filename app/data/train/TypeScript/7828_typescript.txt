import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot } from '@angular/router';

import { BackLiveDetailService } from "./service/back-live-detail.service";
import { ProfileService } from "../../../service/profile.service";


declare var $: any;
declare var prismplayer: any;
declare var layer: any;
declare var prismplayer: any;
declare var QRCode: any;
declare var Clipboard: any;

@Component({
  selector: 'app-back-live-detail',
  templateUrl: './back-live-detail.component.html',
  styleUrls: ['./back-live-detail.component.scss'],
  providers: [
    BackLiveDetailService,
    ProfileService
  ]
})
export class BackLiveDetailComponent implements OnInit {
  public player;
  public cover;
  public source;
  public anchorDetail;
  public isFollow: boolean;
  public profile;
  public shareUrl;// 分享地址
  public shareCode;// 分享二维码插件实例化

  constructor(
    public router: Router,
    public activatedRoute: ActivatedRoute,
    public backLiveDetailService: BackLiveDetailService,
    public profileService: ProfileService,
  ) { }

  ngOnInit() {
    this.profile = JSON.parse(window.localStorage.getItem("profile"));
    this.activatedRoute.params
      .subscribe(
      data => {
        // console.log(data);
        this.backLiveDetailService.getBackLiveDetail(data.id)
          .subscribe(
          datas => {
            console.log(datas);
            this.anchorDetail = datas.d;
            this.cover = this.anchorDetail.avatar;
            this.source = this.anchorDetail.live;
            this.media(this.source, this.cover);
            this.anchorDetail.followed ? this.isFollow = true : this.isFollow = false;
          },
          errors => console.log(errors)
          )
      },
      error => console.log(error)
      )
    this.shareUrl = 'http://api.clive.1booker.com/share/MTAwODVfMTAwNDg=';
  }

  media(source, cover) {
    // console.log(source, cover);
    this.player = new prismplayer({
      id: "J_prismPlayer", // 容器id
      source: source,
      autoplay: true,    //自动播放：否
      width: "100%",       // 播放器宽度
      height: "inherit",      // 播放器高度
      preload: true,
      cover: cover
    });

    this.player.on("pause", function () {
      console.log("播放器暂停啦！");
    });
  }

  doFollow(status, id) {
    console.log(status, id);
    if (status == false) {
      this.backLiveDetailService.addFollow(id)
        .subscribe(
        data => {
          console.log(data)
          layer.msg("關注成功");
          this.isFollow = true;
        },
        error => console.log(error)
        )
    } else {
      this.backLiveDetailService.cancelFollow(id)
        .subscribe(
        data => {
          console.log(data);
          layer.msg("已取消關注");
          this.isFollow = false;
        },
        error => console.log(error)
        )
    }
  }

  showShare(e) {
    e.target.parentNode.querySelector('.sharedPanel').style.display = 'block';
    this.shareCode = new QRCode(e.target.parentNode.querySelector('.sharedPanel .qrcode .code'), {
      text: this.shareUrl,
      width: 140,
      height: 140,
    });
  }

  hideShare(e) {
    e.target.parentNode.querySelector('.sharedPanel').style.display = 'none';
    e.target.parentNode.querySelector('.sharedPanel .qrcode .code').innerHTML = '';
    this.shareCode.clear();
  }

  clipboradShare(e) {// 复制分享地址
    let clipboard = new Clipboard('.copy');
    clipboard.on('success', (e) => {
      layer.msg('復製成功');
    });
    clipboard.on('error', (e) => {
      layer.msg('複製失敗');
    });
  }

  shareToQQ(url, pics, event) {//手动分享到qq
    let source = event.target.ownerDocument.querySelector("head meta[name='site']").getAttribute('content');
    let title = event.target.ownerDocument.querySelector("head title").innerHTML;
    let desc = event.target.ownerDocument.querySelector("head meta[name='description']").getAttribute('content');
    pics = this.cover;
    window.location.href = "http://connect.qq.com/widget/shareqq/index.html?url=" + url + "&title=" + title + "&source=" + source + "&desc=" + desc + "&pics=" + pics;
  }

  shareToXinlang(url, pics, event) {//手动分享到微博
    let source = event.target.ownerDocument.querySelector("head meta[name='site']").getAttribute('content');
    let title = event.target.ownerDocument.querySelector("head title").innerHTML;
    let desc = event.target.ownerDocument.querySelector("head meta[name='description']").getAttribute('content');
    pics = this.cover;
    window.location.href = "http://service.weibo.com/share/share.php?url=" + url + "&title=" + title + "&pic=" + pics + "&appkey=" + '';
  }

}
