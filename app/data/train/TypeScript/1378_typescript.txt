/* Importing core module */
import {Injectable}         from 'angular2/core';
import {Response}           from 'angular2/http';
import {Observable}         from 'rxjs/Observable';

import {HttpClient}         from './http-client.service';

/* Importing model */
import {OrderModel}         from '../model/order.model';
import {OrderDetailsModel}  from '../model/order-details.model';

/* Importing configuration */
import {Configuration}      from '../app.constants';

/* Class deocrator */
@Injectable()
export class OrderService {

    private _actionUrl:     string;
    private _isHeadersSet:  boolean;

    constructor (private _config: Configuration, private _httpClient: HttpClient) {

        this._actionUrl = _config.serverUrl + 'orders/';
        this._isHeadersSet = false;

    }

    /**
    *  Make the following request to the server: [GET][/orders]: fetch all orders in the database
    */
    getAllOrders() {
        return this._httpClient.get(this._actionUrl)
                         .map(res => <OrderModel[]> res.json().order)
                         .catch(this.handleError);
    }

    /**
    *  Make the following request to the server: [GET][/orders/:id]: fetch all order's details
    */
    getOrderDetails (id) {
        return this._httpClient.get(this._actionUrl + id)
                         .map(res => <OrderDetailsModel> res.json().order)
                         .catch(this.handleError);
    }

    private handleError (error: Response) {
        // in a real world app, we may send the error to some remote logging infrastructure
        // instead of just logging it to the console
        console.error(error);
        return Observable.throw(error.json().error || 'Server error');
    }
}
