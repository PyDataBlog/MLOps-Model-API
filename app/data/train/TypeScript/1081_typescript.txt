declare const System:any;

/*
System.config({
    defaultJSExtensions: true,
    packages: {
        app: { format: 'register', defaultExtension: 'js' },
        '@ngrx/store': { main: 'dist/index.js', defaultExtension: 'js' }
    },
    paths: {
        '*': '*.js',
        'angular2/*': '../node_modules/angular2/*',
        'fs': '../node_modules/fs/index',
        'rxjs/*': '../node_modules/rxjs/*',
        'rxjs': '../node_modules/rxjs/Rx',
        'Rickshaw': '../node_modules/rickshaw/rickshaw',
        'socket.io-client': '../node_modules/socket.io-client/socket.io'
    },
    map: { '@ngrx/store': 'lib/@ngrx/store' }
});
System.import('js/main').then(null, console.error.bind(console));
*/


(function(global) {
    var map = {
        '@angular':                   '../node_modules/@angular',
        '@ngrx/store':                'lib/@ngrx/store',
        'angular2-in-memory-web-api': '../node_modules/angular2-in-memory-web-api',
        'app':                        'app',
        'rxjs':                       '../node_modules/rxjs'
    };
    var packages = {
        '@ngrx/store':                { defaultExtension: 'js', main: 'dist/index.js' },
        'app':                        { defaultExtension: 'js', main: 'main.js' },
        'angular2-in-memory-web-api': { defaultExtension: 'js', main: 'index.js' },
        'rxjs':                       { defaultExtension: 'js' }
    };
    var ngPackageNames = [
        'common',
        'compiler',
        'core',
        'http',
        'platform-browser',
        'platform-browser-dynamic',
        'router',
        'router-deprecated',
        'upgrade',
    ];
    // Individual files (~300 requests):
    function packIndex(pkgName) { packages['@angular/'+pkgName] = { main: 'index.js', defaultExtension: 'js' } }
    // Bundled (~40 requests):
    function packUmd(pkgName) { packages['@angular/'+pkgName] = { main: pkgName + '.umd.js', defaultExtension: 'js' } };
    // Most environments should use UMD; some (Karma) need the individual index files
    var setPackageConfig = System.packageWithIndex ? packIndex : packUmd;
    // Add package entries for angular packages
    ngPackageNames.forEach(setPackageConfig);

    System.config({ map: map, packages: packages });
})(this);


