import * as Component from 'lib/Component'
import * as Direction from 'lib/Direction'
import * as Points from 'lib/Points'
import clone from 'lib/clone'

export const key = 'neighbors'

interface NeighborsComponent extends Component.Type {
  value: Points.Type
}
export { NeighborsComponent as Type }

export function connect (initialValue: Points.Type, direction: Direction.Type, id: string): Points.Type {
  const value = clone(initialValue)
  value[Direction.toString(direction)] = id

  return value
}

export function create (neighbors: Points.Type = {}): NeighborsComponent {
  return Component.create(key, neighbors)
}

export function toString (neighbors: Points.Type): string {
  return Points.toString(neighbors)
}
