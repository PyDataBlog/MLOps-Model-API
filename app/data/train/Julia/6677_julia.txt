# method to allow skipping proposal density when symmetric
function mcmcABC(θ, reps, burnin, Prior, lnL, Proposal::Function, report=true::Bool)
    ProposalDensity = (a,b) -> 1.0
    mcmcABC(θ, reps, burnin, Prior, lnL, Proposal, ProposalDensity, report)
end    

# the main loop
function mcmcABC(θ, reps, burnin, Prior, lnL, Proposal, ProposalDensity, report=true)
    reportevery = Int((reps+burnin)/100)
    lnLθ, ghat = lnL(θ)
    chain = zeros(reps, size(θ,1) + size(ghat,2)+1)
    naccept = zeros(size(θ,1))
    for rep = 1:reps+burnin
        θᵗ = Proposal(θ) # new trial value
        i = .!(θᵗ .== θ) # find which changed
        lnLθᵗ, ghatᵗ = lnL(θᵗ)
        # MH accept/reject
        accept = rand() < 
            exp(lnLθᵗ-lnLθ)*
            Prior(θᵗ)/Prior(θ)*
            ProposalDensity(θ,θᵗ)/ProposalDensity(θᵗ,θ)
        if accept
            θ = copy(θᵗ)
            lnLθ = lnLθᵗ
            ghat = ghatᵗ
        end
        naccept[i] += accept
        if (mod(rep,reportevery)==0 && report)
            println(θ)
            println("acceptance rate by parameter: ", naccept/reportevery)
            naccept = naccept - naccept
        end    
        if rep > burnin
            chain[rep-burnin,:] = [θ; ghat'; accept]'
        end    
    end
    return chain
end


