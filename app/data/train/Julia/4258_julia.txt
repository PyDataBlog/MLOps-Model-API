nprocs()<2 && addprocs(3)
using PyPlot
using ProxAlgs

## Minimize sum of squares, subject to affine constraint
@everywhere A = randn(1,3)
@everywhere b = randn(1)
@everywhere f(x) = sum(x.^2)
@everywhere g = ProxAlgs.AffineConstraint(A,b)
x0 = randn(3)

## simple consensus algorithm
result = ProxAlgs.minimize([f,g],x0,method=:consensus,tol=1e-4,max_iter=1000)

figure()
plot(result.primal_resid)
plot(result.dual_resid)
yscale("log")
title("consensus")
show()

## parallel consensus algorithm
s = SharedArray(Float64,3)
s[:] = x0
par_result = ProxAlgs.minimize([f,g],s,method=:par_consensus,tol=1e-4,max_iter=1000)


figure()
plot(par_result.primal_resid)
plot(par_result.dual_resid)
yscale("log")
title("parallel consensus")
show()