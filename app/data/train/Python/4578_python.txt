import requests

import copy


# Получаем участников группы FB
def fb_get_group_members(fb_page_id, access_token):

    url = 'https://graph.facebook.com/v2.8/%s/members?limit=1000&access_token=%s' % (fb_page_id, access_token)

    fb_group_members = {'status':'OK', 'data':{'members':[], 'users_count':0}}


    while True:

        response = requests.get(url)

        if response.status_code == 200:
            try:

                keys = response.json().keys()
                
                if 'data' in keys:
                    #title_id += [ id['id'] for id in content ]
                    content = response.json()['data']
                    
                    keys = response.json().keys()

                    url = ''

                    if 'paging' in keys:
                        keys = response.json()['paging'].keys()
                        if 'next' in keys:
                            url = response.json()['paging']['next']

                    for member in content:
                        member['is_group_mamber'] = 1
                        fb_group_members['data']['members'].append(member)

                if url =='':
                    break

            except (KeyError, TypeError):
                fb_group_members['status'] = 'Unknown error'
               
                break

        else:
            fb_group_members['status'] = str(response.status_code)
            break
    
    fb_group_members['data']['users_count'] = len(fb_group_members['data']['members'])
   
    return fb_group_members   


# получаем общую информацию о группе
def fb_get_group_data(fb_page_id, access_token):
    
    url = 'https://graph.facebook.com/v2.8/%s/?fields=id,name&access_token=%s' % (fb_page_id, access_token)

  
    fb_group = {'status':'OK', 'data':{'id':'','name':'', 'updated_time':'','members':[], 'users_count':0, 'all_users':[] }}
    

    response =requests.get(url)

    if response.status_code == 200:
        fb_data = fb_group['data']
        
        data = response.json()
        keys = data.keys()

        if 'id' in keys:
            fb_data['id'] = data['id']
        else:
            fb_group['status'] = 'Missing group id'

        if 'name' in keys:
            fb_data['name'] = data['name']
        else:
            fb_group['status'] = 'Missing group name'
        '''    
        if 'updated_time' in keys:
            fb_data['updated_time'] = data['updated_time']
'''
        members = fb_get_group_members(fb_page_id, access_token)

        if members['status']== 'OK':

            fb_group['data']['members'] = copy.deepcopy(members['data']['members'])

            fb_group['data']['users_count'] = members['data']['users_count'] 

            fb_group['data']['all_users'] = copy.deepcopy(members['data']['members'])       

    else:
        fb_group['status'] = str(response.status_code)
    
    return fb_group


#-----Получаем все посты из группы-------
def fb_get_all_posts(fb_page_id, access_token):

    url = 'https://graph.facebook.com/v2.8/%s/feed?fields=id,name,link,message,from,updated_time,created_time&access_token=%s' % (fb_page_id, access_token)

    fb_posts = {'status':'OK', 'data':{'posts':[],'posts_count':0}}

    #fb_posts = {'status':'OK', 'data':{'id':'','name':'', 'updated_time':'','link':'', 'message':''}}

    while True:

        response = requests.get(url)
       # print(response.status_code)

        if response.status_code == 200:
            try:
                keys = response.json().keys()
                #найти is jason

                if 'data' in keys:
                    
                    content = response.json()['data']
                    
                    keys = response.json().keys()             
                    
                    url = ''

                    if 'paging' in keys:
                        keys = response.json()['paging'].keys()
                        if 'next' in keys:
                            url = response.json()['paging']['next']

                    for post in content:
                        fb_posts['data']['posts'].append(post)

                if url =='':
                    break

            except (KeyError, TypeError):
                fb_posts['status'] = 'Unknown error'
               
                break

        else:
            fb_posts['status'] = str(response.status_code)
            break

    fb_posts['data']['posts_count'] = len(fb_posts['data']['posts'])
    
    return fb_posts  


#получаем все лайки поста 
def fb_get_post_likes(post_id, access_token):

    url = 'https://graph.facebook.com/v2.8/%s/reactions/?access_token=%s' % (post_id, access_token)

    fb_likes = {'status':'OK', 'data':{'likes':[],'likes_count':0}}

    while True:

        response = requests.get(url)

        if response.status_code == 200:
            try:
                keys = response.json().keys()
                #найти is jason

                if 'data' in keys:
                    
                    content = response.json()['data']
                    
                    keys = response.json().keys()             
                    
                    url = ''

                    if 'paging' in keys:
                        keys = response.json()['paging'].keys()
                        if 'next' in keys:
                            url = response.json()['paging']['next']

                    for fb_like in content:
                        fb_likes['data']['likes'].append(fb_like)

                if url =='':
                    break

            except (KeyError, TypeError):
                fb_likes['status'] = 'Unknown error'
               
                break

        else:
            fb_likes['status'] = str(response.status_code)
            break

    fb_likes['data']['likes_count'] = len(fb_likes['data']['likes'])

    
    return fb_likes  


#получаем все комментарии поста 
def fb_get_post_comments(post_id, access_token):

    url = 'https://graph.facebook.com/v2.8/%s/comments/?fields=id,message,from,updated_time,created_time&access_token=%s' % (post_id, access_token)

    fb_comments = {'status':'OK', 'data':{'comments':[],'comments_count':0}}

    while True:

        response = requests.get(url)

        if response.status_code == 200:
            try:
                keys = response.json().keys()
                #найти is jason

                if 'data' in keys:
                    
                    content = response.json()['data']
                    
                    keys = response.json().keys()             
                    
                    url = ''

                    if 'paging' in keys:
                        keys = response.json()['paging'].keys()
                        if 'next' in keys:
                            url = response.json()['paging']['next']

                    for fb_comment in content:
                        fb_comments['data']['comments'].append(fb_comment)

                if url =='':
                    break

            except (KeyError, TypeError):
                fb_comments['status'] = 'Unknown error'
               
                break

        else:
            fb_comments['status'] = str(response.status_code)
            break

    fb_comments['data']['comments_count'] = len(fb_comments['data']['comments'])
    
    return fb_comments  

# Получаем все данные о странице
def fb_get_all_data(fb_page_id, access_token):

    #считываем все данные группы 

    fb_group = fb_get_group_data(fb_page_id, access_token)

    if fb_group['status'] == 'OK':
        print('Group id: %s name: %s' % (fb_group['data']['id'], fb_group['data']['name']))
        print('User in group: %s' % fb_group['data']['users_count'])
        #пишем в бд в БД
        
    else:
        print(fb_group['status'])
        exit()

    #считываем все посты
    print('*************считываем все посты************')
    data = fb_get_all_posts(fb_page_id, access_token)

    if data['status'] == 'OK':
        
        fb_posts = copy.deepcopy(data['data']['posts'])
        posts_count = data['data']['posts_count']
       # print(fb_posts[0])  
        print('Posts in group: %s' % posts_count)

        for fb_post in fb_posts:

            print('*************Пост %s от %s ************' % (fb_post['id'], fb_post['created_time']))
            # тестиирум лайки к посту
            
            data = fb_get_post_likes(fb_post['id'], access_token)

            if data['status'] == 'OK':

                fb_post['likes'] = copy.deepcopy(data['data']['likes'])
                fb_post['likes_count'] = data['data']['likes_count']
                
                #print('post likes to users')
                for user_like in fb_post['likes']:
                    #print(user_like)

                    if not user_like['id'] in fb_group['data']['members']:
                        #print('new user %s'% user_like)
                        fb_group['data']['all_users'].append({'id':user_like['id'],'name':user_like['name'], 'is_group_mamber':0})


                print('Likes count: %s' % fb_post['likes_count'])
            else:
                print(data['status'])

            #тестируем комментарии к посту
            
            data = fb_get_post_comments(fb_post['id'], access_token)
            
            if data['status'] == 'OK':

                fb_post['comments'] = copy.deepcopy(data['data']['comments'])
                fb_post['comments_count'] = data['data']['comments_count']
                print('Comments count: %s' % fb_post['comments_count'] )

                #print('post likes to users')
                for user_comments in fb_post['comments']:
                    #print(user_like)

                    keys = user_comments.keys()

                    comment_user_id = user_comments['from']['id'] if 'from' in keys else ''
                    comment_user_name = user_comments['from']['name'] if 'from' in keys else ''
                    
                    if (not comment_user_id == '') and (not user_comments in fb_group['data']['members']):
                        #print('new user %s'% user_like)
                        fb_group['data']['all_users'].append({'id':comment_user_id,'name':comment_user_name, 'is_group_mamber':0})


            else:
                print(data['status'])
        
        fb_group['data']['posts'] = copy.deepcopy(fb_posts)


        fb_group['data']['posts_count'] = posts_count

    
    else:
        print(data['status'])

    #print('до %s' % fb_group)

    return fb_group

if __name__ == '__main__':
    
    print ('Not runns in console')