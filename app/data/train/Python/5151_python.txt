import experiment

from ..util import dirs
from ..util import file_handling as fh

from optparse import OptionParser
import sys


def main():

    usage = "%prog project logfile "
    parser = OptionParser(usage=usage)
    parser.add_option('-n', dest='new_name', default=None,
                      help='New name for experiment: default= old name + _rerun')
    #parser.add_option('--boolarg', action="store_true", dest="boolarg", default=False,
    #                  help='Keyword argument: default=%default')


    (options, args) = parser.parse_args()
    project = args[0]
    log_filename = args[1]
    new_name = options.new_name

    log = fh.read_json(log_filename)
    if new_name is None:
        new_name = log['name'] + '_rerun'

    log['name'] = new_name

    float_vars = ['best_alpha', 'alpha_exp_base', 'max_alpha_exp', 'min_alpha_exp', 'orig_T', 'tau']
    for v in float_vars:
        if v in log:
            if log[v] is not None:
                log[v] = float(log[v])
            else:
                log[v] = None
    #if log['reuse'] == 'False':
    #    log['reuse'] = False
    #else:
    #    log['reuse'] = True
    # convert list stirng to list
    #list_vars = ['feature_list', 'additional_label_files', 'additional_label_weights']
    #for v in list_vars:
    #    if v in log:
    #        print v
    #        print log[v]
    #        quoted_strings = [p.strip() for p in log[v][1:-1].split(',')]
    #        print quoted_strings
    #        log[v] = [p[1:-1] for p in quoted_strings]
    #        print log[v]
    #        print '\n'
    #print log
    #if 'additional_label_weights' in log:
    #    log['additional_label_weights'] = [float(w) for w in log['additional_label_weights']]

    dirs.make_base_dir(project)

    print log
    result = experiment.run_experiment(**log)
    print result


if __name__ == '__main__':
    main()