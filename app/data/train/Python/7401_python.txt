import xml.etree.ElementTree as ET
import datetime
import sys
import openpyxl
import re
import dateutil

def main(): 
	print 'Number of arguments:', len(sys.argv), 'arguments.' #DEBUG
	print 'Argument List:', str(sys.argv) #DEBUG
	
	Payrate = raw_input("Enter your pay rate: ") #DEBUG

	sNumber = raw_input("Enter 900#: ") #DEBUG

	
	xml = ET.parse("xml.xml") #DEBUG

	root = xml.getroot()
	root = root[3][0] #Go directly to worksheet/table
	sheet = openpyxl.load_workbook(sys.argv[1], data_only=True).active


	writeName(root)
	writeEmployeeNum(root)
	writeStudentNum(sNumber)
	writePayRate(payRate)
	
        #At this point all that is left are the times
        
        for x in root.findall(".//*"):
                if x.text != None: 
                        dates.append(x.text)
        

	for x in char_range('G','Z'):
		writeTimes(x + '17' , dates)
                

	
def writeTimes (position, dateList):
        
	match = next(x[0] for x in enumerate(dateList) if x[1] == sheet[position].value)
        jobCode = dateList[num+4]
        if jobCode == 900:
                raise error("Cannot start day with 900 break")
        else:
                sheet[date] = roundTime( 

def roundTime(time):
        date = dateutil.parser.parse(x)
        
        if date.minute <= 7
                return date.replace(minute=0)
        else if date.minute >= 8 and date.minute <= 22:
                return date.replace(minute=15)
        else if date.minute >= 23 and date.minute <= 37:
                return date.replace(minute=30)
        else if date.minute >= 38 and date.minute <= 52:
                return date.replace(minute=45)
        else if date.minute >= 53:
                if date.hour == 23: 
                        raise error("Worked overnight or did not clock out")
                else: 
                        date += datetime.timedelta(minutes= (60-date.minute))
                        #Rounds time to next hour by adding minutes until 60
                        return date

        else:
                raise error("Something went wrong in roundTime")

        
def writeName(tree): 
	name = tree[-1][4][0].text
	sheet['I8'] = name
	
def writeEmployeeNum(tree):
	num = root[2][0][0].text
	sheet['4D'] = re.match('.*?([0-9]+)$', num).group(1)

def writeStudentNum(num):
	sheet['8S']=num	

def writePayRate(num): 
	sheet['6k']=num

def char_range(c1, c2):
    """Generates the characters from `c1` to `c2`, inclusive."""
    """Courtesy http://stackoverflow.com/questions/7001144/range-over-character-in-python"""
    for c in xrange(ord(c1), ord(c2)+1):
        yield chr(c)

main()
