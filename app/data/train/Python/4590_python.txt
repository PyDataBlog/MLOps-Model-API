'''
Auxiliary code providing vector-valued scoring functions
for convenient use in the parameter-free Ladder Mechanism.

Original algorithm by Avrim Blum and Moritz Hardt
Python implementation by Jamie Hall and Moritz Hardt

MIT License
'''

from sklearn.utils import check_consistent_length
from functools import wraps
import numpy as np 


def validate_input(metric):
    @wraps(metric)
    def wrapped(y, y_pred):
        _check_y_shapes(y, y_pred)
        return metric(y, y_pred)
    return wrapped


@validate_input
def squared_error(y, y_pred):
    return ((y - y_pred)**2)

@validate_input
def absolute_error(y, y_pred):
    return np.abs(y-y_pred)

@validate_input
def zero_one_loss(y, y_pred):
    return np.sum(y != y_pred)


def _check_y_shapes(y_true, y_pred):
    ''' Check that two target vectors are compatible.
    This is based on sklearn's validation in sklearn.metrics.regression._check_reg_targets
    and sklearn.metrics.classification._check_targets.
    '''
    check_consistent_length(y_true, y_pred)

    if y_true.ndim == 1:
        y_true = y_true.reshape((-1, 1))

    if y_pred.ndim == 1:
        y_pred = y_pred.reshape((-1, 1))

    if y_true.shape[1] != y_pred.shape[1]:
        raise ValueError("y_true and y_pred have different number of output "
                         "({0}!={1})".format(y_true.shape[1], y_pred.shape[1]))