from django.http import HttpResponseRedirect, JsonResponse
from django.views.generic import CreateView, UpdateView
from django.contrib.messages.views import SuccessMessageMixin

from .models import HistoriaClinica, Patologia
from .forms import HistoriaClinicaForms

from apps.afiliados.models import Titular, Adherente
from apps.personas.models import Persona


class HistoriaClinicaCreate(SuccessMessageMixin, CreateView):

    model = HistoriaClinica
    form_class = HistoriaClinicaForms
    template_name = 'historias_clinicas/historia_clinica_form.html'
    success_url = '/historia/clinica/alta/'
    success_message = 'La historia clínica se guardo con exito'

    def form_valid(self, form):
        form.instance.persona = Persona.objects.get(pk=self.kwargs['pk'])
        self.success_url = '/historia/clinica/redireccion/%s' % str(Persona.objects.get(pk=self.kwargs['pk']).id)
        return super(HistoriaClinicaCreate, self).form_valid(form)

    def get_context_data(self, **kwargs):
        context = super(HistoriaClinicaCreate, self).get_context_data(**kwargs)
        context['persona'] = Persona.objects.get(pk=self.kwargs['pk'])
        return context


def redireccion(request, id):

    titular = Titular.objects.filter(id=id)
    if titular.exists():
        persona = Persona.objects.filter(titular=titular)
        historia_clinica = HistoriaClinica.objects.filter(persona=persona)
        if historia_clinica.exists():
            return HttpResponseRedirect('/historia/clinica/modi/' + str(historia_clinica[0].id))
        else:
            return HttpResponseRedirect('/historia/clinica/alta/' + str(persona[0].id))
    else:
        adherente = Adherente.objects.filter(id=id)
        if adherente.exists():
            persona = Persona.objects.filter(adherente=adherente)
            historia_clinica = HistoriaClinica.objects.filter(persona=persona)
            if historia_clinica.exists():
                return HttpResponseRedirect('/historia/clinica/modi/' + str(historia_clinica[0].id))
            else:
                return HttpResponseRedirect('/historia/clinica/alta/' + str(persona[0].id))


class HistoriaClinicaUpdate(SuccessMessageMixin, UpdateView):

    model = HistoriaClinica
    form_class = HistoriaClinicaForms
    template_name = 'historias_clinicas/historia_clinica_form.html'
    success_url = '/historia/clinica/alta/'
    success_message = 'La historia clínica se guardo con exito'

    def form_valid(self, form):
        form.instance.persona = Persona.objects.get(pk=HistoriaClinica.objects.get(pk=self.kwargs['pk']).persona.id)
        self.success_url = '/historia/clinica/redireccion/%s' % str(HistoriaClinica.objects.get(
            pk=self.kwargs['pk']).persona.id)

        return super(HistoriaClinicaUpdate, self).form_valid(form)

    def get_context_data(self, **kwargs):
        context = super(HistoriaClinicaUpdate, self).get_context_data(**kwargs)
        context['persona'] = Persona.objects.get(pk=HistoriaClinica.objects.get(pk=self.kwargs['pk']).persona.id)
        return context


# Ajax ######

def patologia_create_ajax(request):

    if request.method == 'POST':
        if request.is_ajax():
            id = ''
            patologia = Patologia(nombre_enfermedad=request.POST.get('id_nombre_enfermedad_patologia_ajax'),
                                  fecha_deteccion=request.POST.get('id_fecha_deteccion_patologia_ajax'))
            patologia.save()
            patologia = Patologia.objects.filter(
                nombre_enfermedad=request.POST.get('id_nombre_enfermedad_patologia_ajax'),
                fecha_deteccion=request.POST.get('id_fecha_deteccion_patologia_ajax'))
            for indice in patologia.values('id'):
                for valor in indice:
                    id = indice[valor]
            for indice in patologia.values('nombre_enfermedad'):
                for valor in indice:
                    nombre_enfermedad = indice[valor]
            return JsonResponse({'id': id, 'nombre_enfermedad': nombre_enfermedad})
