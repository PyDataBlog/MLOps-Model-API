blocklevel = ["blockquote", "div", "form", "p", "table", "video", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "details", "article", "header", "main"]
def normalizeEnter(src):
	#Deletes all user defined for readability reason existing line breaks that are issues for the HTML output
	for elem in blocklevel:
		while src.find("\r<" + elem) > -1:
			src = src.replace("\r<" + elem, "<" + elem)
		while src.find("</" + elem + ">\r") > -1:
			src = src.replace("</" + elem + ">\r", "</" + elem + ">")
		while src.find(">\r") > -1:
			src = src.replace(">\r", ">") #It is really needed, it created some other bugs?!
		while src.find("\r</") > -1:
			src = src.replace("\r</", "</") ##It is really needed, it created some other bugs?!
	return src
def main(islinput, inputfile, pluginData, globalData):
	currentIndex = 0
	for item in islinput:
		item = normalizeEnter(item) #Deletes not wanted line breaks in order to prevent the problem we have with Markdown.
		islinput[currentIndex] = item
		currentIndex += 1
	return islinput, pluginData, globalData
