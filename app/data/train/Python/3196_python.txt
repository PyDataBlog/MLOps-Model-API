import smtplib
from email.mime.text import MIMEText
from django.core.mail import EmailMultiAlternatives
from django.conf import settings


def send_message(message):
    """
    * desc    快捷发送邮件
    * input   要发送的邮件信息
    * output  None
    """
    mail_handler = SendMail()
    mail_handler.send_mail(settings.REPORT_USER, 'Error info', message)


class SendMail(object):
    """docstring for SendMail"""

    def __init__(self):
        self.mail_host = settings.MAIL_HOST
        self.mail_host_user = settings.MAIL_HOST_USER
        self.mail_host_pwd = settings.MAIL_HOST_PWD
        self.smtp = smtplib.SMTP()
        self.smtp_login()

    def smtp_login(self):
        # login the host
        self.smtp.connect(self.mail_host)
        self.smtp.login(self.mail_host_user, self.mail_host_pwd)

    def send_file_mail(self, receiver_list, subject, file_info, file_name):
        # 发送附件的方法
        part = MIMEApplication(file_info)
        part.add_header('Content-Disposition',
                        'attachment', filename=file_name)
        msg.attach(part)
        sender = self.mail_host_user
        msg['Subject'] = subject
        msg['From'] = sender
        msg['To'] = ";".join(receiver_list)
        self.smtp.sendmail(sender, receiver_list, msg.as_string())

    def send_mail(self, receiver_list, subject, context, mail_type="plain"):
        """
        *  desc 发送邮件的接口
        *  input  receiver_list 收件人的地址列表 subject 主题  context 发送的内容   mail_type 邮件的格式  目前测试成功 plain 和 html
        *  output 发送成功与否
        """
        sender = self.mail_host_user
        msg = MIMEText(context, mail_type)
        msg['Subject'] = subject
        msg['From'] = sender
        msg['To'] = ";".join(receiver_list)
        self.smtp.sendmail(sender, receiver_list, msg.as_string())

    def close(self):
        # 关闭建立的链接
        self.smtp.close()


class MailHandler(object):
    def __init__(self):
        pass

    def send_mail_message(self, to_user, msg, error=0):
        """
        * desc    发送错误邮件
        * input   要发送的人  发送的消息 错误还是告警
        * output  0 发送成功  1 发送失败
        """
        subject = settings.MSUBMAIL
        if error:
            text_content = 'Virtual Manager Error'
        else:
            text_content = 'Virtual Manager Warning'
        from_email = settings.FMAIL
        try:
            to = [str(user) + "@hujiang.com" for user in to_user.split(',')]
            print(to)
            content_msg = EmailMultiAlternatives(
                subject, text_content, from_email, to)
            html_content = u'<b>' + msg + '</b>'
            content_msg.attach_alternative(html_content, 'text/html')
            content_msg.send()
            return 0
        except:
            return 1
