// wb_t@CÌCN[h
#include <tchar.h>		// TCHAR^
#include <stdio.h>		// WüoÍ
#include <winsock2.h>	// Windows\Pbg
#include <windows.h>	// WWindowsAPI

// _tmainÖÌè`
int _tmain(int argc, TCHAR *argv[]){	// mainÖÌTCHARÅ.

	// ÏÌé¾
	WSADATA wsaData;	// WinSockÌú»ÉKvÈWSADATA\¢ÌÏwsaData.
	int iRet;			// ú»ÌÊiRet.
	int soc;			// \Pbgt@CfBXNv^soc.
	u_short ns_port;	// |[gÔÌlbg[NoCgI\_l.

	// WinSockÌú»
	iRet = WSAStartup(MAKEWORD(2, 2), &wsaData);	// WSAStartupÅWinSockÌú».
	if (iRet){	// 0ÅÈ¢ê.

		// G[.
		_tprintf(_T("Error!(iRet = %d.)\n"), iRet);	// ßèlðoÍ.
		WSACleanup();	// WSACleanupÅI¹.
		return -1;	// -1ðÔµÄÙíI¹.

	}

	// ú»¬÷bZ[W.
	_tprintf(_T("WSAStartup success!\n"));	// "WSAStartup success!"ÆoÍ.

	// \PbgÌì¬
	soc = socket(AF_INET, SOCK_STREAM, 0);	// socketÅ\Pbgì¬.
	if (soc == -1){	// socª-1Èç.

		// G[
		_tprintf(_T("socket Error!\n"));	// "socket Error!"ÆoÍ.
		WSACleanup();	// WSACleanupÅI¹.
		return -1;	// -1ðÔµÄÙíI¹.

	}

	// socÌlðoÍ.
	_tprintf(_T("soc = %d\n"), soc);	// socÌlðoÍ.

	// |[gÔÌÏ·.
	ns_port = htons(4000);	// htonsÅ|[gÔðlbg[NoCgI\_ÉÏ·.

	// |[gÔÌoÍ.
	_tprintf(_T("port = %04x, ns_port = %04x\n"), 4000, ns_port);	// |[gÔÆlbg[NoCgI\_È|[gÔðoÍ.

	// \Pbgt@CfBXNv^ðÂ¶é.
	closesocket(soc);	// closesocketÅsocðÂ¶é.

	// WinSockÌI¹.
	WSACleanup();	// WSACleanupÅI¹.

	// vOÌI¹.
	return 0;

}