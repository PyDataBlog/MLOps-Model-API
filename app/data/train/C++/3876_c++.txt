/*
 * main.cpp
 *
 *  Created on: 2015Äê12ÔÂ3ÈÕ
 *      Author: weiteng
 */

#include <sys/file.h>

#include "libc2c/pid_guard.h"
#include "../../include/log_manager.h"

#include "app_config.h"
#include "config_report_agent.h"

void CheckProcessAlive(const char *sPIDPath,const char *sPIDFile)
{
	assert(sPIDPath);
	assert(sPIDFile);

	char sFilePath[255];
	
    snprintf(sFilePath,sizeof(sFilePath),"%s%s",sPIDPath,sPIDFile);
	
	int fd;
 	fd = open(sFilePath,O_CREAT|O_RDWR,0666);
 	if( fd == -1)
  	{
  		printf("open file error,filename:%s\n",sFilePath);
  		exit(1);
 	}
 	int ret = flock(fd,LOCK_EX|LOCK_NB);
 	if(ret != 0)
 	{
  		printf("process already run!\n");
		exit(0);
 	}

}

int main(int argc, char ** argv)
{
	std::string sXmlCfgFile = DEFAULT_CONFIG_FILE;
	if (argc >= 2)
	{
		sXmlCfgFile = argv[1];
	}

	if (access(sXmlCfgFile.c_str(), F_OK) == -1)
	{
		printf("can't open config file %s\n", sXmlCfgFile.c_str());
		return EXIT_FAILURE;
	}

	// µ¥½ø³ÌÔËÐÐ
	CheckProcessAlive("/var/tmp/",APP_PROCESS_NAME.c_str());

	// ³õÊ¼»¯
	wq::report::CConfigReportAgent oConfigReportAgent;
	if (oConfigReportAgent.Init(sXmlCfgFile) < 0)
	{
		printf("confi report agent init failed.");
		return EXIT_FAILURE;
	}

	// ¿ªÊ¼Ñ­»·
	oConfigReportAgent.StartLoop();

	return EXIT_SUCCESS;
}

