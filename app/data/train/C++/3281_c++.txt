#include "jai_texture_object.h"
#include "jai_shader_define.h"

namespace jai { namespace drawable {
    TextureObject::TextureObject()
    {
        mColorEffect.setIdentity();
    }
    
    void TextureObject::_prepareDraw(int sample, Mat4 const & transform)
    {
        using namespace jai::ogl;
        
        auto sct = mShader ? mShader : ShaderCoordSample::GetNoraml();
        sct->use();
        
        unsigned char * buffer = (unsigned char *)mVertexts.data();
        
        draw::SetVertexAttribData(sct->mACoord, 4, EDataType::Float, false, sizeof(Vertext), buffer + JumpPos);
		
        draw::SetVertexAttribData(sct->mASmpCoord, 2, EDataType::Float, false, sizeof(Vertext), buffer + JumpTV);
        
        if(sct->hasEffect()) draw::SetUniformMat(sct->mUEffect, mColorEffect);
        
        draw::SetUniformInt(sct->mUSmp, sample);
        draw::SetUniformFloat(sct->mUColor, mColor.red, mColor.green, mColor.blue, mColor.alpha);
        
        draw::SetUniformMat(sct->mUTransform, transform);
        
        draw::EnableVertexAttrib(sct->mACoord);
        draw::EnableVertexAttrib(sct->mASmpCoord);
    }
}}
