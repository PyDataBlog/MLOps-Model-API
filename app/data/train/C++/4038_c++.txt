// Copyright (c) 2015, Samvel Khalatyan. All rights reserved.

#include <unistd.h>
#include <stdio.h>

#include <initializer_list>

namespace {

const char* StdFilename(int fd) {
    if (fd > STDERR_FILENO) {
        return "invalid file descriptor";
    }
    const char* fnames[] {"stdin", "stdout", "stderr"};
    return fnames[fd];
}

void Seek(int fd) {
    off_t offset = lseek(fd, 0, SEEK_CUR);
    if (-1 == offset) {
        printf("%s offset: can not be seeked\n", StdFilename(fd));
    } else {
        printf("%s offset: %ld\n", StdFilename(fd), offset);
    }
}

}  // namespace

int main(int, char* []) {
    for (auto fd : {STDIN_FILENO, STDOUT_FILENO, STDERR_FILENO}) {
        Seek(fd);
    }
    return 0;
}
