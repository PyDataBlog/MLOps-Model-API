#include <iostream>
#include <stack>
using namespace std;

//  µ÷ÊÔ¿ª¹Ø
#define __tmain main

#ifdef __tmain

#define debug cout

#else

#define debug 0 && cout

#endif // __tmain

class Solution
{
public:
    void push(int node)
    {
        stackIn.push(node);
    }

    int pop()
    {
        int node = -1;

        //  Á½¸öÕ»¶¼ÊÇNULLµÄÊ±ºò£¬Õû¸ö¶ÓÁÐÎª¿Õ
        if(this->empty( ) == true)
        {
            debug <<"Õû¸ö¶ÓÁÐÎªNULL" <<endl;

            return -1;
        }
        else
        {
            //  ·ñÔò¶ÓÁÐÖÐÓÐÔªËØ
            //  ´ËÊ±·ÖÁ½ÖÖÇé¿ö£¬
            //  µ±Êä³öÕ»²»Îª¿ÕµÄÊ±ºò, Ö±½Ó½«Êä³öÕ»ÖÐÔªËØµ¯³ö¼´¿É
            //  µ±Êä³öÕ»ÎªNULL, µ«ÊÇÊäÈëÕ»²»Îª¿ÕµÄÊ±ºò£¬ÐèÒª½«ÊäÈëÕ»µÄÔªËØÈ«²¿µ¹ÈëÊä³öÕ»ÖÐ

            if(stackOut.empty() == true)     //  ´ËÊ±Êä³öÕ»Îª¿Õ, ÊäÈëÕ»±Ø²»Îª¿Õ
            {
                //  ´ËÊ±»º³åÕ»£¨Êä³öÕ»£©ÖÐÃ»ÓÐÔªËØ
                //  ÐèÒª½«ÊäÈëÕ»ÖÐµÄÔªËØµ¹ÈëÊä³öÕ»
                // ¿´ÊäÈëÕ»ÖÐÓÐÃ»ÓÐÔªËØ

                //  ·ñÔò½«ÔªËØ´ÓÊäÈëÕ»µ¼ÈëÊä³öÕ»
                while(stackIn.empty( ) != true)
                {
                    node = stackIn.top( );
                    stackIn.pop( );
                    stackOut.push(node);
                    debug <<node <<"µ¼ÈëÊä³öÕ»" <<endl;
                }
            }

            node = stackOut.top( );
            stackOut.pop( );

            debug <<"¶ÓÍ·ÔªËØ" <<node <<endl;
        }

        return node;
    }

    bool empty( )
    {
        return (stackIn.empty() == true && stackOut.empty() == true);
    }

private:
    stack<int> stackIn;
    stack<int> stackOut;
};


int __tmain( )
{
    Solution solu;
    solu.push(1);
    solu.push(2);
    solu.push(3);
    solu.push(4);

    int node;
    while(solu.empty() != true)
    {

        cout <<solu.pop( );
    }

    return 0;
}
