#include "Display.h"
#include <memory>
#include <GL/glew.h>
#include <SFML/Graphics.hpp>

/* Display source file
 * Used for handling and managing the display portion of the engine
 */
namespace Display {

    constexpr static int Width = 640;
    constexpr static int Height = 480;

    std::unique_ptr<sf::RenderWindow> window;

    void init() {
        sf::ContextSettings settings;
        settings.depthBits = 24;
        // Set the openGL
        settings.majorVersion = 4;
        settings.minorVersion = 4;

        window = std::make_unique<sf::RenderWindow>(sf::VideoMode(Width, Height), "qDoom", sf::Style::Close, settings);

        // Initialize GLEW and set the drawing area
        glewInit();
        glViewport(0, 0, Width, Height);
    }

    void close() {
        window->close();
    }

    void clear() {
        glClearColor(0.0, 0.0, 0.0, 1.0);
        glClear(GL_DEPTH_BUFFER_BIT | GL_COLOR_BUFFER_BIT);
    }

    void update() {
        window->display();
    }

    void checkClose() {
        sf::Event e;
        while(window->pollEvent(e)) {
            if(e.type == sf::Event::Closed) {
                close();
            }
        }
    }

    bool isOpen() {
        return window->isOpen();
    }
}
