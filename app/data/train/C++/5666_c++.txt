/*    Copyright 2011 Jay Elliott
**
**    This file is part of md2_viewer.
**
**    md2_viewer is free software: you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**   the Free Software Foundation, either version 3 of the License, or
**    (at your option) any later version.
**
**    md2_viewer is distributed in the hope that it will be useful,
**    but WITHOUT ANY WARRANTY; without even the implied warranty of
**    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**    GNU General Public License for more details.
**
**    You should have received a copy of the GNU General Public License
**    along with md2_viewer.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef CPOINT3D_H_
#define CPOINT3D_H_

class Point3d
{
public:
    float x, y, z;

    Point3d(float x = 0.0f, float y = 0.0f, float z = 0.0f);

    float GetMag(void) const;
    float dot(const Point3d& other) const;
    Point3d cross(const Point3d& other) const;
    Point3d GetNorm(void) const;

    //addition
    Point3d operator+(const Point3d& other) const;
    void operator+=(const Point3d& other);

    //subtraction
    Point3d operator-(const Point3d& other) const;
    void operator-=(const Point3d& other);

    bool operator=(const Point3d& other);//copies other into this
    Point3d operator-(void) const;//multiplies by -1

    //0 for x, 1 for y, 2 for z
    float operator[](int index);

    //scalar multiplication
    friend Point3d operator*(const Point3d& p, float s);
    friend Point3d operator*(float s, const Point3d& p);
    friend void operator*=(Point3d& p, float s);
};

//scalar multiplication
Point3d operator*(const Point3d& p, float s);
Point3d operator*(float s, const Point3d& p);
void operator*=(Point3d& p, float s);

#endif
