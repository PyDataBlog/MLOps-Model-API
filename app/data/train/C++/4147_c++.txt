#include "tinyxml.h"
#include <iostream>
#include "xmlWriter.h"
#include "treeWriter.h"
#include <cstdlib>
#include "debugMacros.h"


xmlWriter::xmlWriter(const char * filename){
    debug("XMLWriter - Creating New Object from Filename") 
    currentDoc = new TiXmlDocument(filename);
    docAllocated = true;
}

xmlWriter::xmlWriter(std::string filename){
    xmlWriter(filename.c_str());
}
xmlWriter::xmlWriter(TiXmlDocument * existing){
    debug("XMLWriter - Creating New Object from Existing Document")
    currentDoc = existing;
    docAllocated = false;
}

xmlWriter::~xmlWriter(){
    debug("XMLWriter - Destroying Object")
    if(docAllocated)	free(currentDoc);
    
}

void xmlWriter::pop(){
    debug("XMLWriter - Popping to Parent")
    if (currentNode == NULL)	return;
    currentNode = currentNode->Parent();
}

void xmlWriter::pop(const char * input ){
    debug("XMLWriter - Popping to Parent, returning value")
    if (currentNode == NULL)	{input = ""; return;}
    input = currentNode->Value().c_str();
    pop();
}

void xmlWriter::pop(std::string input){
    if (currentNode == NULL)	{input = ""; return;}
    input = currentNode->Value();
    pop();
}

void xmlWriter::push(const char * input){
    debug("XMLWriter - Pushing to New Node")
    if ((currentNode == NULL)||(input == NULL))	return;
    TiXmlNode * newItem = new TiXmlElement(input);
    if (newItem == NULL)	return;
    currentNode = currentNode->InsertEndChild(*newItem);
    free(newItem);
}

void xmlWriter::push(std::string input){
    push(input.c_str());
}

void xmlWriter::reset(){
    if (currentNode == NULL)	return;
    while(currentNode->Parent() != NULL)currentNode = currentNode->Parent();
}





void loadIntoTree(treeWriter * writer, TiXmlDocument * document){
    /** Parser - Load XML Document into Tree
     * Using the treeWriter object, we will pass it the commands to
     * recreate the document pieces in the tree. In addition to the
     * recreation, we will also add in any data requested.
     */
    
}

void readFromTree(treeWriter * writer, TiXmlDocument * document){
    /** Parser - Save XML Document as Read from Tree
     * By reading data from the treeWriter object, we will save the
     * data to an XML file.
     */
    
}

#undef debug

