#include "EllipseFromCorners.h"


void  EllipseFromCorners::EllipseFromCornersUpdate(MainWindow& wnd, Graphics& gfx, Menu& menu)
{
	if (wnd.mouse.LeftIsPressed())
	{
		if (EllipseWorkspace(menu)) // do not initialize if out side of work space
		{
			Ex1  = wnd.mouse.GetPosX();
			Ey1 = wnd.mouse.GetPosY();
			EllipseFromCornersDraw(gfx, menu);
		}
	}
	else
	{
		Ex0 = wnd.mouse.GetPosX();
		Ey0 = wnd.mouse.GetPosY();
	}
}



void  EllipseFromCorners::EllipseFromCornersDraw(Graphics & gfx, Menu & menu)
{
	
	//two point ellipse
	if (!menu.GetMenuActive())
	{

		for (int y = Ey0; y != Ey1; Ey0 < Ey1 ? y++ : y--)
		{
			for (int x = Ex0; x != Ex1; Ex0 < Ex1 ? x++ : x--)
			{
				if ((y < menu.GetMenuTop()) && (y > menu.GetMenuBottom()) && (x < menu.GetMenuRight()) && (x > menu.GetMenuLeft())) //if in work space draw 
				{

					float a = abs(Ex1 - Ex0) / 2;
					float b = abs(Ey1 - Ey0) / 2;


					if (!(a == 0.0f) && !(b == 0.0f))
					{
						float a_sqrd = a*a;
						float b_sqrd = b*b;

						float x_local = a - (x - (Ex0 < Ex1 ? Ex0 : Ex1));    // get The local Value of x
						float y_local = b - (y - (Ey0 < Ey1 ? Ey0 : Ey1));	  // get The local Value of y

						float x_local_sqrd = x_local * x_local;
						float y_local_sqrd = y_local * y_local;

						float x_total = x_local_sqrd / a_sqrd;
						float y_total = y_local_sqrd / b_sqrd;

						if (x_total + y_total < 1)
						{
							gfx.PutPixel(x, y, 125, 0, 0);
						}
					}
				}
			}
		}
	}

	/*
	int a = abs(Ex0 - Ex1 );
	int b = abs(Ey0 - Ey1);

	for (int y = Ey0 - b; y < (Ey0 < Ey1 ? Ey1 : Ey1 + 2 * b); y++)
	{
		for (int x = Ex0 - a; x < (Ex0 < Ex1  ? Ex1  : Ex1  + 2 * a); x++)
		{
			if ((y < menu.GetMenuTop()) && (y > menu.GetMenuBottom()) && (x < menu.GetMenuRight()) && (x > menu.GetMenuLeft())) //Draw if in work space
			{
				if (!(a == 0) && !(b == 0))
				{
					float a_sqrd = a*a;
					float b_sqrd = b*b;

					float x_local = x - Ex0;
					float y_local = y - Ey0;

					float x_local_sqrd = x_local * x_local;
					float y_local_sqrd = y_local * y_local;

					float x_total = x_local_sqrd / a_sqrd;
					float y_total = y_local_sqrd / b_sqrd;

					if (x_total + y_total < 1)
					{
						gfx.PutPixel(x, y, 125, 0, 0);
					}
				}
			}
		}
	}
	*/
}

bool EllipseFromCorners::EllipseWorkspace(Menu & menu)
{
	return (Ey0 < menu.GetMenuTop()) && (Ey0 > menu.GetMenuBottom()) && (Ex0 < menu.GetMenuRight()) && (Ex0 > menu.GetMenuLeft());
}

