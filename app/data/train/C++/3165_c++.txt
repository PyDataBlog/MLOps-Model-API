/****************************************************************************
*  ¹¦    ÄÜ£ºÒôÆµÎÄ¼þ²Ù×÷Àà                                                 *
*  Ìí ¼Ó ÈË£ºÐ¡¿É                                                           *
*  Ìí¼ÓÊ±¼ä£º2015.01.17 12£º27                                              *
*  °æ±¾ÀàÐÍ£º³õÊ¼°æ±¾                                                       *
*  ÁªÏµ·½Ê½£ºQQ-1035144170                                                  *
****************************************************************************/

#include "StdAfx.h"
#include "MusicOperat.h"

CMusicOpreat::CMusicOpreat(HWND m_PWnd)
{
	m_ParenhWnd=m_PWnd;
	nIndex=0;         //²¥·ÅË÷Òý
	hStream=NULL;     //²¥·ÅÁ÷
	m_pBassMusic=NULL;
	m_pMainState=NULL;

	//²âÊÔ£º
	CLrcParse lrcPar;
	lrcPar.ReadFile("");

}

CMusicOpreat::~CMusicOpreat(void)
{
	
	if (hStream)
	{
		BASS_ChannelStop(hStream);
		hStream=NULL;
	}
}
//CMusicOpreat * CMusicOpreat::GetInstance()
//{
//	static CMusicOpreat _Instance;
//
//	return &_Instance;
//}

void CMusicOpreat::InitDatas()
{
	//³õÊ¼»¯ÉùÒô×é¼þ
	m_pBassMusic = CBassMusicEngine::GetInstance();
	if ( m_pBassMusic == NULL )
	{
		if ( SMessageBox(NULL,TEXT("ÉùÒôÒýÇæ³õÊ¼»¯Ê§°Ü"),_T("¾¯¸æ"),MB_OK|MB_ICONEXCLAMATION) == IDOK )
		{
			PostQuitMessage(0);
		}
	}
	m_pBassMusic->Init(m_hWnd,this);

}

void CMusicOpreat::InsertMapInfo(int nNum, CString strPath, tagMusicInfo &pMuInfo)
{
	//¼ÓÔØÎÄ¼þ
	HSTREAM hStream = m_pBassMusic->LoadFile(strPath);
	if ( hStream == -1 ) return;

	//»ñÈ¡Ã½Ìå±êÇ©
	tagMusicInfo *pInfo = m_pBassMusic->GetInfo(hStream);

	//Í¨¹ýmapºÍListBox½áºÏ£¬Ò»Æð¹ÜÀí²¥·ÅÁÐ±í
	tagMusicInfo *pMusicInfo = new tagMusicInfo;

	pMusicInfo->dwTime = pInfo->dwTime;
	pMusicInfo->hStream = pInfo->hStream;
	lstrcpyn(pMusicInfo->szArtist,pInfo->szArtist,CountArray(pMusicInfo->szArtist));
	lstrcpyn(pMusicInfo->szTitle,pInfo->szTitle,CountArray(pMusicInfo->szTitle));

	pMuInfo=*pMusicInfo;
	m_MusicManager.insert(pair<int,tagMusicInfo*>(nNum,pMusicInfo));
}

void CMusicOpreat::OnButPrev()         // ÉÏÒ»Çú
{
	m_pBassMusic->Stop(hStream);

	nIndex--;
	if (nIndex<0)
	{
		nIndex=m_MusicManager.size()-1;
	}

	CMusicManagerMap::iterator iter = m_MusicManager.find(nIndex);
	if ( iter == m_MusicManager.end() ) return;

	hStream = iter->second->hStream;

	if( m_pBassMusic->Play(hStream,true) )
	{
		int i=0;
	}
}

void CMusicOpreat::OnButPlay()         // ²¥·Å
{

	m_pBassMusic->Stop(hStream);

	CMusicManagerMap::iterator iter = m_MusicManager.find(nIndex);
	if ( iter == m_MusicManager.end() )
	{
		return;
	}else
	{
		hStream = iter->second->hStream;
		if( m_pBassMusic->Play(hStream,/*(++nIndex!= nIndex) ? false : true)*/true ))
		{
			int i=0;
		}
	}

}

void CMusicOpreat::OnButPause()        // ÔÝÍ£
{
	if ( m_pBassMusic->IsPlaying(hStream) == FALSE ) return;

	if( m_pBassMusic->Pause(hStream) )
	{
		int i=0;

	}
}

void CMusicOpreat::OnButPlayNext()     // ÏÂÒ»Çú
{
	m_pBassMusic->Stop(hStream);

	nIndex++;
	if (nIndex>=m_MusicManager.size())
	{
		nIndex=0;
	}

	CMusicManagerMap::iterator iter = m_MusicManager.find(nIndex);
	if ( iter == m_MusicManager.end() ) return;

	hStream = iter->second->hStream;

	if( m_pBassMusic->Play(hStream,true) )
	{
		int i=0;
	}
}

void CMusicOpreat::OnStop()
{
	//×Ô¶¯ÇÐ»»ÏÂÒ»Ê×¸è
	OnButPlayNext();
	//::PostMessage(GetContainer()->GetHostHwnd(), MSG_USER_SEARCH_DMTASKDLG, 0, 0);
	::PostMessage(m_ParenhWnd,MSG_USER_REDRAW,0,0);
}