--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.10
-- Dumped by pg_dump version 9.5.10

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: postgis; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS postgis WITH SCHEMA public;


--
-- Name: EXTENSION postgis; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION postgis IS 'PostGIS geometry, geography, and raster spatial types and functions';


SET search_path = public, pg_catalog;

--
-- Name: actions_id_seq; Type: SEQUENCE; Schema: public; Owner: tw
--

CREATE SEQUENCE actions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE actions_id_seq OWNER TO tw;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: admin_divisions; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE admin_divisions (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    type character varying(255) NOT NULL,
    geometry geometry(Geometry,4326) NOT NULL
);


ALTER TABLE admin_divisions OWNER TO tw;

--
-- Name: antennas; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE antennas (
    id integer NOT NULL,
    location geometry(Point,4326),
    valid_from timestamp without time zone NOT NULL,
    valid_to timestamp without time zone NOT NULL,
    is_supplier boolean DEFAULT false NOT NULL
);


ALTER TABLE antennas OWNER TO tw;

--
-- Name: cables_id_seq; Type: SEQUENCE; Schema: public; Owner: tw
--

CREATE SEQUENCE cables_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE cables_id_seq OWNER TO tw;

--
-- Name: cables; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE cables (
    id integer DEFAULT nextval('cables_id_seq'::regclass) NOT NULL,
    route geometry(LineString,4326) NOT NULL,
    type character varying(30) NOT NULL,
    valid_from timestamp without time zone NOT NULL,
    valid_to timestamp without time zone NOT NULL,
    endpoint1_id integer NOT NULL,
    endpoint2_id integer NOT NULL,
    date_log timestamp without time zone DEFAULT now(),
    user_log character varying(100)
);


ALTER TABLE cables OWNER TO tw;

--
-- Name: cables_history; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE cables_history (
    id integer NOT NULL,
    route geometry(LineString,4326) NOT NULL,
    type character varying(30) NOT NULL,
    valid_from timestamp without time zone NOT NULL,
    valid_to timestamp without time zone NOT NULL,
    endpoint1_id integer NOT NULL,
    endpoint2_id integer NOT NULL,
    date_log timestamp without time zone,
    user_log character varying(100),
    action_log character varying(100),
    action_date_log timestamp without time zone DEFAULT now(),
    action_log_user character varying(100)
);


ALTER TABLE cables_history OWNER TO tw;

--
-- Name: connection_id_seq; Type: SEQUENCE; Schema: public; Owner: tw
--

CREATE SEQUENCE connection_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE connection_id_seq OWNER TO tw;

--
-- Name: connections; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE connections (
    antenna1_id integer NOT NULL,
    antenna2_id integer NOT NULL,
    bidirectional boolean NOT NULL,
    valid_from timestamp without time zone NOT NULL,
    valid_to timestamp without time zone NOT NULL,
    antenna1_valid_from timestamp without time zone NOT NULL,
    antenna1_valid_to timestamp without time zone NOT NULL,
    antenna2_valid_from timestamp without time zone NOT NULL,
    antenna2_valid_to timestamp without time zone NOT NULL,
    id integer DEFAULT nextval('connection_id_seq'::regclass) NOT NULL
);


ALTER TABLE connections OWNER TO tw;

--
-- Name: logged_actions; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE logged_actions (
    id integer DEFAULT nextval('actions_id_seq'::regclass) NOT NULL,
    action_timestamp timestamp without time zone,
    action_name character varying(60),
    cable1_id integer,
    cable2_id integer,
    user_log character varying(100)
);


ALTER TABLE logged_actions OWNER TO tw;

--
-- Name: node_id_seq; Type: SEQUENCE; Schema: public; Owner: tw
--

CREATE SEQUENCE node_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE node_id_seq OWNER TO tw;

--
-- Name: nodes; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE nodes (
    id integer DEFAULT nextval('node_id_seq'::regclass) NOT NULL,
    name character varying(255),
    location geometry(Point,4326) NOT NULL,
    is_supplier boolean DEFAULT false NOT NULL,
    valid_from timestamp without time zone NOT NULL,
    valid_to timestamp without time zone NOT NULL
);


ALTER TABLE nodes OWNER TO tw;

--
-- Name: nodes_history; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE nodes_history (
    id integer NOT NULL,
    name character varying(255),
    location geometry(Point,4326) NOT NULL,
    is_supplier boolean DEFAULT false NOT NULL,
    valid_from timestamp without time zone NOT NULL,
    valid_to timestamp without time zone NOT NULL,
    date_log timestamp without time zone,
    user_log character varying(100)
);


ALTER TABLE nodes_history OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: tw
--

CREATE TABLE users (
    username character varying(100) NOT NULL,
    password_hash character varying(100) NOT NULL,
    role character varying(20) NOT NULL
);


ALTER TABLE users OWNER TO tw;

--
-- Name: admin_divisions_pkey; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY admin_divisions
    ADD CONSTRAINT admin_divisions_pkey PRIMARY KEY (id, type);


--
-- Name: antennas_pkey; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY antennas
    ADD CONSTRAINT antennas_pkey PRIMARY KEY (id, valid_from, valid_to);


--
-- Name: cables_pkey; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY cables
    ADD CONSTRAINT cables_pkey PRIMARY KEY (id, valid_from, valid_to);


--
-- Name: connections_pkey; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY connections
    ADD CONSTRAINT connections_pkey PRIMARY KEY (id, valid_from, valid_to);


--
-- Name: nodes_idkey; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY nodes
    ADD CONSTRAINT nodes_idkey UNIQUE (id);


--
-- Name: nodes_location_key; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY nodes
    ADD CONSTRAINT nodes_location_key UNIQUE (location);


--
-- Name: nodes_pkey; Type: CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY nodes
    ADD CONSTRAINT nodes_pkey PRIMARY KEY (id, valid_from, valid_to);


--
-- Name: admin_divisions_geom; Type: INDEX; Schema: public; Owner: tw
--

CREATE INDEX admin_divisions_geom ON admin_divisions USING gist (geometry);


--
-- Name: antennas_geom; Type: INDEX; Schema: public; Owner: tw
--

CREATE INDEX antennas_geom ON antennas USING gist (location);


--
-- Name: cables_geom; Type: INDEX; Schema: public; Owner: tw
--

CREATE INDEX cables_geom ON cables USING gist (route);


--
-- Name: cables_endpoint1_fkey; Type: FK CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY cables
    ADD CONSTRAINT cables_endpoint1_fkey FOREIGN KEY (endpoint1_id) REFERENCES nodes(id);


--
-- Name: cables_endpoint2_fkey; Type: FK CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY cables
    ADD CONSTRAINT cables_endpoint2_fkey FOREIGN KEY (endpoint2_id) REFERENCES nodes(id);


--
-- Name: connections_antenna1_fkey; Type: FK CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY connections
    ADD CONSTRAINT connections_antenna1_fkey FOREIGN KEY (antenna1_id, antenna1_valid_from, antenna1_valid_to) REFERENCES antennas(id, valid_from, valid_to);


--
-- Name: connections_antenna2_fkey; Type: FK CONSTRAINT; Schema: public; Owner: tw
--

ALTER TABLE ONLY connections
    ADD CONSTRAINT connections_antenna2_fkey FOREIGN KEY (antenna2_id, antenna2_valid_from, antenna2_valid_to) REFERENCES antennas(id, valid_from, valid_to);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: admin_divisions; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE admin_divisions FROM PUBLIC;
REVOKE ALL ON TABLE admin_divisions FROM tw;
GRANT ALL ON TABLE admin_divisions TO tw;


--
-- Name: antennas; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE antennas FROM PUBLIC;
REVOKE ALL ON TABLE antennas FROM tw;
GRANT ALL ON TABLE antennas TO tw;


--
-- Name: cables; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE cables FROM PUBLIC;
REVOKE ALL ON TABLE cables FROM tw;
GRANT ALL ON TABLE cables TO tw;


--
-- Name: cables_history; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE cables_history FROM PUBLIC;
REVOKE ALL ON TABLE cables_history FROM tw;
GRANT ALL ON TABLE cables_history TO tw;


--
-- Name: connections; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE connections FROM PUBLIC;
REVOKE ALL ON TABLE connections FROM tw;
GRANT ALL ON TABLE connections TO tw;


--
-- Name: logged_actions; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE logged_actions FROM PUBLIC;
REVOKE ALL ON TABLE logged_actions FROM tw;
GRANT ALL ON TABLE logged_actions TO tw;


--
-- Name: nodes; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE nodes FROM PUBLIC;
REVOKE ALL ON TABLE nodes FROM tw;
GRANT ALL ON TABLE nodes TO tw;


--
-- Name: nodes_history; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE nodes_history FROM PUBLIC;
REVOKE ALL ON TABLE nodes_history FROM postgres;
GRANT ALL ON TABLE nodes_history TO postgres;
GRANT ALL ON TABLE nodes_history TO tw;


--
-- Name: users; Type: ACL; Schema: public; Owner: tw
--

REVOKE ALL ON TABLE users FROM PUBLIC;
REVOKE ALL ON TABLE users FROM tw;
GRANT ALL ON TABLE users TO tw;


--
-- PostgreSQL database dump complete
--

