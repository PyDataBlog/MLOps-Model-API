USE auth;

DROP PROCEDURE IF EXISTS init;

DELIMITER //

CREATE PROCEDURE init()
  BEGIN
	IF NOT EXISTS (SELECT * from resource)
      THEN
		START TRANSACTION;
        
		INSERT INTO resource(code, description, status, created_date, last_update_date, last_update_user_id) VALUES('authapi', 'Whizbang Authorization API', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		SET @resourceId=(SELECT id FROM resource WHERE code='authapi');
        
        INSERT INTO scopes(resource_id, scope, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'ANY', 'Any Scope', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
        INSERT INTO scopes(resource_id, scope, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'API', 'RESTful API Scope', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
        INSERT INTO scopes(resource_id, scope, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'WEB', 'Web Scope', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
        
		INSERT INTO roles(resource_id, role, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'ROLE_SUPER_ADMIN', 'System Administrator', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		INSERT INTO roles(resource_id, role, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'ROLE_CUST_ADMIN', 'Customer Administrator', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		INSERT INTO roles(resource_id, role, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'ROLE_CUST_SVC', 'Customer Service', 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		INSERT INTO roles(resource_id, role, description, status, created_date, last_update_date, last_update_user_id) VALUES(@resourceId, 'ROLE_USER', 'User', 1, current_timestamp(), current_timestamp(), 'SYSTEM');

		INSERT INTO client(client_id, secret, organization, auth_code, implicit, client, password, refresh_token, status, created_date, last_update_date, last_update_user_id) VALUES ('0230f1ca-cd68-40fb-a20c-a716424c4ae1', '$2a$10$8tz373Ay5xBBp7fFu/eUTODnxJRAMw7ul0RdQbNhptIQcq/JaVfmC', '9d92569e-d511-4737-8dc9-be8cf6b5b0d0', 1, 1, 1, 1, 1, 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		SET @clientId = (SELECT id from client WHERE client_id='0230f1ca-cd68-40fb-a20c-a716424c4ae1');
        
        INSERT INTO clientresources(client_id, resource_id, status, created_date, last_update_date, last_update_user_id) VALUES (@clientId, @resourceId, 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		
        SET @clientResourceId=(SELECT id FROM clientresources WHERE client_id=@clientId AND resource_id=@resourceId);
        
        SET @anyScope=(SELECT id FROM scopes WHERE scope='ANY' AND resource_id=@resourceId);
        
        INSERT INTO clientscopes(client_resource_id, scope_id, auto_approve, status, created_date, last_update_date, last_update_user_id) VALUES (@clientResourceId, @anyScope, 1, 1, current_timestamp(), current_timestamp(), 'SYSTEM');
      
		SET @saRole=(SELECT id FROM roles WHERE role='ROLE_SUPER_ADMIN' AND resource_id=@resourceId);
        
        INSERT INTO clientroles (client_resource_id, role_id, status, created_date, last_update_date, last_update_user_id) VALUES (@clientResourceId, @saRole, 1, current_timestamp(), current_timestamp(), 'SYSTEM');
      
		INSERT INTO users(username, password, enabled, account_non_expired, credentials_non_expired, account_non_locked, created_date, last_update_date, last_update_user_id) VALUES('root', '$2a$10$8tz373Ay5xBBp7fFu/eUTODnxJRAMw7ul0RdQbNhptIQcq/JaVfmC', 1, 1, 1, 1, current_timestamp(), current_timestamp(), 'SYSTEM');
		
        SET @userId=(SELECT id FROM users WHERE username='root');
        
        INSERT INTO userroles(user_id, role_id, status, created_date, last_update_date, last_update_user_id) VALUES(@userId, @saRole, 1, current_timestamp(), current_timestamp(), 'SYSTEM');
      
		COMMIT;
      END IF;
  END;
//
DELIMITER ;

CALL init();
