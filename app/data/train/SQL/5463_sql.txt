CREATE TABLE collection(
  collection_id TINYINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(64) UNIQUE
);

INSERT INTO collection(collection_id, name) VALUES
  (1, 'Default');

CREATE TABLE clients(
  client_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(512),
  host VARCHAR(512),
  access VARCHAR(512),
  public_key VARCHAR(4000)
);

CREATE TABLE containers(
  container_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  size BIGINT DEFAULT 0 NOT NULL,
  state INTEGER NOT NULL
);
CREATE INDEX index_c_cid_state ON containers(container_id, state);

CREATE TABLE digest_audits(
  container_id BIGINT,
  algorithm VARCHAR(8),
  time DATETIME(3),
  result BOOLEAN,
  FOREIGN KEY (container_id) REFERENCES containers(container_id) ON DELETE CASCADE
);
CREATE INDEX index_da_cid_time ON digest_audits(container_id, time);

CREATE TABLE txs(
  tx_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  state INTEGER NOT NULL,
  client VARCHAR(512),
  opened DATETIME(3),
  closed DATETIME(3),
  collection_id TINYINT,
  FOREIGN KEY (collection_id) REFERENCES collection(collection_id)
);

CREATE TABLE blobs(
  blob_id BIGINT PRIMARY KEY AUTO_INCREMENT,
  container_id BIGINT,
  offset BIGINT,
  tx_id BIGINT,
  collection_id TINYINT,
  legacy_path VARCHAR(512),
  FOREIGN KEY (container_id) REFERENCES containers(container_id),
  FOREIGN KEY (collection_id) REFERENCES collection(collection_id)
);
CREATE INDEX index_b_bid_cid ON blobs(blob_id, container_id);
CREATE UNIQUE INDEX blobs_legacy_path ON blobs(legacy_path);

CREATE TABLE digests(
  blob_id BIGINT NOT NULL,
  algorithm VARCHAR(8) NOT NULL,
  digest VARCHAR(512),
  PRIMARY KEY(blob_id, algorithm),
  FOREIGN KEY(blob_id) REFERENCES blobs (blob_id) ON DELETE CASCADE
);

CREATE TABLE container_history(
  container_id BIGINT,
  state INTEGER,
  time DATETIME(3),
  FOREIGN KEY(container_id) REFERENCES containers (container_id) ON DELETE CASCADE
);
CREATE INDEX ch_time_desc ON container_history(time);

CREATE TABLE container_digests(
  container_id BIGINT NOT NULL,
  algorithm VARCHAR(8) NOT NULL,
  digest VARCHAR(512),
  PRIMARY KEY(container_id, algorithm),
  FOREIGN KEY(container_id) REFERENCES containers (container_id) ON DELETE CASCADE
);

CREATE TABLE legacy_digest_audits(
  blob_id BIGINT,
  algorithm VARCHAR(8),
  time DATETIME(3),
  result BOOLEAN
);
CREATE INDEX legaud_time_desc ON legacy_digest_audits(time DESC);

CREATE TABLE client_access(
  client_id BIGINT,
  collection_id TINYINT,
  access CHAR(5),
  FOREIGN KEY (client_id) REFERENCES clients(client_id) ON DELETE CASCADE ,
  FOREIGN KEY (collection_id) REFERENCES collection(collection_id)
);
