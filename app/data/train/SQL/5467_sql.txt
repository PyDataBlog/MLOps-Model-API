CREATE TABLE IF NOT EXISTS lister.ls_template_schema (
    subject_id uuid NOT NULL
  , record_id uuid NOT NULL
  , created timestamp(6) with time zone DEFAULT current_timestamp
  , created_by varchar(50) NOT NULL
  , is_current boolean NOT NULL
  , replaced timestamp(6) with time zone NULL
  , replaced_by_record uuid NULL
  , template_id uuid NOT NULL
  , template_version uuid NOT NULL
  , sequence_number integer NOT NULL
  , min_occurrences integer DEFAULT 1
  , max_occurrences integer DEFAULT 1
  , name varchar(50) NOT NULL
  , description varchar(1024) DEFAULT ''
  , type_option varchar(30) NOT NULL
  , type_id uuid NOT NULL

  CONSTRAINT
    PRIMARY KEY ( subject_id, record_id )
);

CREATE INDEX IF NOT EXISTS lister.ls_template_schema_subject ON lister.ls_template_schema ( subject_id );
CREATE INDEX IF NOT EXISTS lister.ls_template_schema_current ON lister.ls_template_schema ( subject_id, is_current );
CREATE INDEX IF NOT EXISTS lister.ls_template_schema_author ON lister.ls_template_schema ( created_by );
CREATE INDEX IF NOT EXISTS lister.ls_template_schema_version  ON lister.ls_template_schema ( template_version );

COMMENT ON TABLE lister.ls_template_schema IS
  'Associates an ordered set of types with a template, effectively defining the structure of the template.';
COMMENT ON COLUMN lister.ls_template_schema.subject_id IS
  'A universally unique identifier for a subject, about which this table contains one or more records.';
COMMENT ON COLUMN lister.ls_template_schema.record_id IS
  'A universally unique identifier for a record about a subject.';
COMMENT ON COLUMN lister.ls_template_schema.created IS
  'A time stamp indicating the instant the record was created.';
COMMENT ON COLUMN lister.ls_template_schema.created_by IS
  'The user name of the user responsible for creating this record.';
COMMENT ON COLUMN lister.ls_template_schema.is_current IS
  'Indicates whether or not this record is the currently valid record for the subject.';
COMMENT ON COLUMN lister.ls_template_schema.replaced IS
  'A time stamp indicating the instant the record was replaced by another record as the currently valid record. NULL if this is the currently valid record.';
COMMENT ON COLUMN lister.ls_template_schema.replaced_by_record IS
  'The record_id of the record that replaced this one as the currently valid record. NULL if this is the currently valid record.';
COMMENT ON COLUMN lister.ls_template_schema.template_id IS
  'Foreign key to ls_template.subject_id, representing the template (subject) to which this schema value belongs.';
COMMENT ON COLUMN lister.ls_template_schema.template_version IS
  'Foreign key to ls_template.record_id, representing the template version (record) to which this schema value belongs.';
COMMENT ON COLUMN lister.ls_template_schema.sequence_number IS
  'Represents the order in which the value intances of the template are presented.';
COMMENT ON COLUMN lister.ls_template_schema.min_occurrences IS
  'The minimum number of occurrences of this value type in a document. The default value is one. Zero means an occurrence of this value is optional. Negative numbers should be assumed to mean zero. Back-end clients are expected to enforce the meaning of this constraint for document instances. (It is not enforced at by the database.)';
COMMENT ON COLUMN lister.ls_template_schema.max_occurrences IS
  'The maximum number of occurrences of this value type in a document. The default value is one. Zero and negative numbers are illogical, and should be assumed to mean the same value as min_occurrences. Likewise, records where both min_occurrences and max_occurrences are zero are illogical and should not be written. Back-end clients are expected to enforce the meaning of this constraint for document instances. (It is not enforced at by the database.)';
COMMENT ON COLUMN lister.ls_template_schema.name IS
  'The name of this value instance in the referenced template.';
COMMENT ON COLUMN lister.ls_template_schema.description IS
  'A short description of the purpose of the value instance in this template.';
COMMENT ON COLUMN lister.ls_template_schema.type_option IS
  'Indicates which table defines the value type recorded in this schema entry. Should be one of "simple", "choice", or "composite", refering to ls_simple_type, ls_choice_type, and ls_composite_type respectively.';
COMMENT ON COLUMN lister.ls_template_schema.type_id IS
  'Foreign key to the subject_id of the table referenced in type_option, representing the value type that defines this value instance.';
