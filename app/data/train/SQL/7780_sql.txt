create table aurss (
	schemaversion int
);
insert into aurss (schemaversion) values (1);
create table users (
  uuid char(36),
  login varchar(50),
  pass varchar(130),
  salt varchar(130),
  system varchar(20),
  share_googleplus int default 0, 
  share_twitter int default 0, 
  share_facebook int default 0, 
  share_email int default 0,
  unread_only int default 0,
  list_view_mode varchar(30) default 'article',
  sort_order varchar(4) default 'desc',
  theme varchar(100) default 'default',
  primary key (uuid)
);
create table user_tokens (
  user_uuid char(36),
  valid_until int,
  token varchar(130)
);
create table feeds (
  uuid char(36),
  url varchar(2100),
  name varchar(255),
  last_update int,
  error_message varchar(500),
  primary key (uuid)
);
create table user_feeds (
  uuid char(36),
  user_uuid char(36),
  feed_uuid char(36),
  folder_uuid char(36),
  name varchar(255),  
  refresh_interval int,
  view_mode varchar(30),  
  primary key (uuid)
);
create table feed_entries (
	uuid char(36),
	feed_uuid char(36),
	item_id varchar(200),
	title varchar(2100),
	description longtext,
	link varchar(2100),
	comment_link varchar(2100),
	entry_date int,
	primary key(uuid)
);
create table user_feed_entries (
	user_uuid char(36),
	feed_entry_uuid char(36),
	unread int default 1,
	keep_unread int default 0,
	starred int default 0
); 
create table folders (
	uuid char(36),
	user_uuid char(36),
	name varchar(200),
	collapsed int default 1,
	primary key(uuid)
);
create table tags (
	uuid char(36),
	name varchar(200),
	user_uuid char(36) default null,
	primary key(uuid)
);
create table user_feed_entry_tags (
	user_uuid char(36),
	feed_entry_uuid char(36),
	tag_uuid char(36)
);
create table authors (
	uuid char(36),
	name varchar(200),
	email varchar(200),
	primary key(uuid)
);
create table feed_entry_authors (
	feed_entry_uuid char(36),
	author_uuid char(36)
);

create table search_result (
    result_uuid char(36),
    user_uuid char(36),
    valid_until int
);
 
create table search_result_data (
    result_uuid char(36),
    result_index int,
    feed_entry_uuid char(36)        
);


create index i_uf_feed_uuid ON user_feeds (feed_uuid);
create index i_srd_result_index ON search_result_data (result_uuid, result_index);
create index i_sr_result_user ON search_result (result_uuid, user_uuid);
create index i_ufe_feed_uuid ON user_feed_entries (feed_entry_uuid,user_uuid);
