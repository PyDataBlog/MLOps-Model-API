/*Script is designed for use in T-SQL; similar functionality can be acheived in PL SQL through use of the DUAL table,
or through DB2 through use of the SYSIBM.SYSDUMMY1 table*/
/*Script returns a series of unsorted integers between 0 and 2^20-1*/
CREATE TABLE auxiliary.integers (i INT)

INSERT INTO auxiliary.integers 
SELECT i0.i + i1.i + i2.i + i3.i + i4.i + i5.i + i6.i + i7.i + i8.i + i9.i + i10.i + i11.i + i12.i + i13.i + i14.i + i15.i + i16.i + i17.i + i18.i + i19.i AS i
  FROM (SELECT 0 AS i UNION SELECT POWER(2,0)) AS i0
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,1)) AS i1
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,2)) AS i2
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,3)) AS i3
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,4)) AS i4
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,5)) AS i5
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,6)) AS i6
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,7)) AS i7
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,8)) AS i8
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,9)) AS i9
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,10)) AS i10
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,11)) AS i11
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,12)) AS i12
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,13)) AS i13
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,14)) AS i14
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,15)) AS i15
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,16)) AS i16
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,17)) AS i17
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,18)) AS i18
  CROSS JOIN (SELECT 0 AS i UNION SELECT POWER(2,19)) AS i19
