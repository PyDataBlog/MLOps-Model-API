DROP DATABASE IF EXISTS `limba`;
CREATE DATABASE  `limba` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
use limba;
DROP TABLE IF EXISTS LANGUE_INFO;
DROP TABLE IF EXISTS TOKENS;
DROP TABLE IF EXISTS GROUPS;
DROP TABLE IF EXISTS TRANSLATION;
DROP TABLE IF EXISTS PROPERTY_VALUES;
DROP TABLE IF EXISTS PROPERTY_INFO;
DROP TABLE IF EXISTS DOCUMENT_INFO;
DROP TABLE IF EXISTS CATEGORIES_INFO;
DROP TABLE IF EXISTS DOCUMENTS;
DROP TABLE IF EXISTS WORDS;
DROP TABLE IF EXISTS PROPERTY;
DROP TABLE IF EXISTS CATEGORIES;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS LANGUES;
DROP TABLE IF EXISTS TYPE_DOCUMENT;
DROP TABLE IF EXISTS LIST;
DROP TABLE IF EXISTS TYPE_PROPERTY;
DROP TABLE IF EXISTS TOKEN;
DROP TABLE IF EXISTS PROFILE;

CREATE TABLE PROFILE (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , LABEL VARCHAR(30)
     , COMMENT TEXT
     , AVAILABLE BOOLEAN DEFAULT true
     , PRIMARY KEY (ID)
);

CREATE TABLE TOKEN (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , LABEL VARCHAR(30) NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE TYPE_PROPERTY (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , LABEL VARCHAR(20) NOT NULL
     , COMMENT TEXT
     , IS_CONTAINER BOOLEAN NOT NULL DEFAULT false
     , METHOD VARCHAR(30) NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE LIST (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , LABEL VARCHAR(20) NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE TYPE_DOCUMENT (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , LABEL VARCHAR(30) NOT NULL
     , AVAILABLE BOOLEAN NOT NULL DEFAULT true
     , PRIMARY KEY (ID)
);

CREATE TABLE LANGUES (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , ISO CHAR(5) NOT NULL
     , ORDERED INTEGER NOT NULL
     , AVAILABLE BOOLEAN DEFAULT true
     , IS_DEFAULT BOOLEAN DEFAULT false
     , PRIMARY KEY (ID)
);

CREATE TABLE USER (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , NAME VARCHAR(30) NOT NULL
     , SURNAME VARCHAR(40) NOT NULL
     , PSEUDO VARCHAR(20) NOT NULL
     , EMAIL VARCHAR(255) NOT NULL
     , STREET VARCHAR(50)
     , NUMBER VARCHAR(10)
     , ZIP VARCHAR(10)
     , CITY VARCHAR(50)
     , COUNTRY VARCHAR(30)
     , LANGUE_ID INTEGER NOT NULL
     , LAST_IP VARCHAR(15)
     , CREATED TIMESTAMP
     , LAST_CONNECTED TIMESTAMP
     , PWS_HASH VARCHAR(32) NOT NULL
     , ACTIVE BOOLEAN DEFAULT true
     , DDN DATE
     , PRIMARY KEY (ID)
);

CREATE TABLE CATEGORIES (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , PARENT_CAT_ID INTEGER NOT NULL
     , IS_ROOT BOOLEAN NOT NULL DEFAULT false
     , OWNER_ID INTEGER NOT NULL
     , GROUP_ID INTEGER NOT NULL
     , PERM_BIN VARCHAR(12) NOT NULL
     , VISIBLE BOOLEAN NOT NULL DEFAULT true
     , CREATED DATETIME NOT NULL
     , UPDATED TIMESTAMP NOT NULL
     , ALTERNATE VARCHAR(50)
     , POSITION INTEGER NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE PROPERTY (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , IS_DEFAULT BOOLEAN NOT NULL DEFAULT false
     , TYPE_PROPERTY_ID INTEGER NOT NULL
     , LIST_ID INTEGER
     , TYPE_DOCUMENT INTEGER
     , PARENT_PROP INTEGER
     , CSS_CLASS VARCHAR(12)
     , CSS_ID VARCHAR(12)
     , VALIDATION_METHOD VARCHAR(30)
     , NABLE BOOLEAN NOT NULL DEFAULT false
     , PRIMARY KEY (ID)
);

CREATE TABLE WORDS (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , NAME VARCHAR(40) NOT NULL
     , LIST_ID INTEGER
     , PRIMARY KEY (ID)
);

CREATE TABLE DOCUMENTS (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , PARENT_CAT_ID INTEGER NOT NULL
     , TYPE_DOCUMENT INTEGER NOT NULL
     , OWNER_ID INTEGER NOT NULL
     , GROUP_ID INTEGER NOT NULL
     , PERM_BIN VARCHAR(12) NOT NULL
     , VISIBLE BOOLEAN NOT NULL DEFAULT true
     , CREATED DATETIME NOT NULL
     , UPDATED TIMESTAMP NOT NULL
     , POSITION INTEGER NOT NULL
     , ALTERNATE VARCHAR(50)
     , PRIMARY KEY (ID)
);

CREATE TABLE CATEGORIES_INFO (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , CAT_ID INTEGER NOT NULL
     , LNG_ID INTEGER NOT NULL
     , LABEL VARCHAR(100) NOT NULL
     , TOOLTIP VARCHAR(255)
     , PRIMARY KEY (ID)
);

CREATE TABLE DOCUMENT_INFO (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , DOC_ID INTEGER NOT NULL
     , LNG_ID INTEGER NOT NULL
     , LABEL VARCHAR(100) NOT NULL
     , TOOLTIP VARCHAR(255)
     , PRIMARY KEY (ID)
);

CREATE TABLE PROPERTY_INFO (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , PROP_ID INTEGER NOT NULL
     , LNG_ID INTEGER NOT NULL
     , LABEL VARCHAR(100) NOT NULL
     , TOOLTIP VARCHAR(255)
     , PRIMARY KEY (ID)
);

CREATE TABLE PROPERTY_VALUES (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , PROP_ID INTEGER NOT NULL
     , LNG_ID INTEGER NOT NULL
     , VALUE_SHORT VARCHAR(100)
     , VALUE_TEXT TEXT
     , WORD_ID INTEGER
     , VALUE_DATE_FROM DATE
     , VALUE_DATE_TO DATE
     , DURATION SMALLINT(6)
     , CHECKED BOOLEAN DEFAULT false
     , DOCUMENT_ID INTEGER NOT NULL
     , CHILD_DOC_ID INTEGER
     , PRIMARY KEY (ID)
);

CREATE TABLE TRANSLATION (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , WORD_ID INTEGER NOT NULL
     , LNG_ID INTEGER NOT NULL
     , LABEL TEXT NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE GROUPS (
       PROFILE_ID INTEGER NOT NULL
     , USER_ID INTEGER NOT NULL
);

CREATE TABLE TOKENS (
       TOKEN_ID INTEGER NOT NULL
     , PROFILE_ID INTEGER NOT NULL
);

CREATE TABLE LANGUE_INFO (
       ID INTEGER NOT NULL AUTO_INCREMENT
     , LANGUE_ID INTEGER NOT NULL
     , LABEL VARCHAR(30) NOT NULL
     , LANGUE_TRADUCTION_ID INTEGER NOT NULL
     , PRIMARY KEY (ID)
);

ALTER TABLE TOKEN
  ADD CONSTRAINT UQ_TOKEN_1
      UNIQUE (LABEL);

ALTER TABLE TYPE_DOCUMENT
  ADD CONSTRAINT UQ_TYPE_DOCUMENT_1
      UNIQUE (LABEL);

ALTER TABLE LANGUES
  ADD CONSTRAINT UQ_LANGUES_1
      UNIQUE (ISO);

ALTER TABLE USER
  ADD CONSTRAINT UQ_USER_1
      UNIQUE (EMAIL);

ALTER TABLE WORDS
  ADD CONSTRAINT UQ_WORDS_1
      UNIQUE (NAME);

ALTER TABLE CATEGORIES_INFO
  ADD CONSTRAINT UQ_CATEGORIES_INFO_1
      UNIQUE (CAT_ID, LNG_ID);

ALTER TABLE DOCUMENT_INFO
  ADD CONSTRAINT UQ_DOCUMENT_INFO_1
      UNIQUE (DOC_ID, LNG_ID);

ALTER TABLE LANGUE_INFO
  ADD CONSTRAINT UQ_LANGUE_LABEL_1
      UNIQUE (LANGUE_ID, LANGUE_TRADUCTION_ID);

ALTER TABLE USER
  ADD CONSTRAINT FK_USER_1
      FOREIGN KEY (LANGUE_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE CATEGORIES
  ADD CONSTRAINT FK_CATEGORIES_2
      FOREIGN KEY (GROUP_ID)
      REFERENCES PROFILE (ID);

ALTER TABLE CATEGORIES
  ADD CONSTRAINT FK_CATEGORIES_1
      FOREIGN KEY (OWNER_ID)
      REFERENCES USER (ID);

ALTER TABLE PROPERTY
  ADD CONSTRAINT FK_PROPERTY_2
      FOREIGN KEY (TYPE_PROPERTY_ID)
      REFERENCES TYPE_PROPERTY (ID);

ALTER TABLE PROPERTY
  ADD CONSTRAINT FK_PROPERTY_3
      FOREIGN KEY (LIST_ID)
      REFERENCES LIST (ID);

ALTER TABLE PROPERTY
  ADD CONSTRAINT FK_PROPERTY_4
      FOREIGN KEY (TYPE_DOCUMENT)
      REFERENCES TYPE_DOCUMENT (ID);

ALTER TABLE WORDS
  ADD CONSTRAINT FK_WORDS_1
      FOREIGN KEY (LIST_ID)
      REFERENCES LIST (ID);

ALTER TABLE DOCUMENTS
  ADD CONSTRAINT FK_DOCUMENTS_1
      FOREIGN KEY (PARENT_CAT_ID)
      REFERENCES CATEGORIES (ID);

ALTER TABLE DOCUMENTS
  ADD CONSTRAINT FK_DOCUMENTS_3
      FOREIGN KEY (TYPE_DOCUMENT)
      REFERENCES TYPE_DOCUMENT (ID);

ALTER TABLE DOCUMENTS
  ADD CONSTRAINT FK_DOCUMENTS_4
      FOREIGN KEY (OWNER_ID)
      REFERENCES USER (ID);

ALTER TABLE DOCUMENTS
  ADD CONSTRAINT FK_DOCUMENTS_5
      FOREIGN KEY (GROUP_ID)
      REFERENCES PROFILE (ID);

ALTER TABLE CATEGORIES_INFO
  ADD CONSTRAINT FK_CATEGORIES_INFO_1
      FOREIGN KEY (CAT_ID)
      REFERENCES CATEGORIES (ID);

ALTER TABLE CATEGORIES_INFO
  ADD CONSTRAINT FK_CATEGORIES_INFO_2
      FOREIGN KEY (LNG_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE DOCUMENT_INFO
  ADD CONSTRAINT FK_DOCUMENT_INFO_1
      FOREIGN KEY (DOC_ID)
      REFERENCES DOCUMENTS (ID);

ALTER TABLE DOCUMENT_INFO
  ADD CONSTRAINT FK_DOCUMENT_INFO_2
      FOREIGN KEY (LNG_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE PROPERTY_INFO
  ADD CONSTRAINT FK_PROPERTY_INFO_1
      FOREIGN KEY (LNG_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE PROPERTY_INFO
  ADD CONSTRAINT FK_PROPERTY_INFO_2
      FOREIGN KEY (PROP_ID)
      REFERENCES PROPERTY (ID);

ALTER TABLE PROPERTY_VALUES
  ADD CONSTRAINT FK_PROPERTY_VALUES_2
      FOREIGN KEY (LNG_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE PROPERTY_VALUES
  ADD CONSTRAINT FK_PROPERTY_VALUES_1
      FOREIGN KEY (PROP_ID)
      REFERENCES PROPERTY (ID);

ALTER TABLE PROPERTY_VALUES
  ADD CONSTRAINT FK_PROPERTY_VALUES_4
      FOREIGN KEY (DOCUMENT_ID)
      REFERENCES DOCUMENTS (ID);

ALTER TABLE PROPERTY_VALUES
  ADD CONSTRAINT FK_PROPERTY_VALUES_5
      FOREIGN KEY (WORD_ID)
      REFERENCES WORDS (ID);

ALTER TABLE TRANSLATION
  ADD CONSTRAINT FK_TRANSLATION_1
      FOREIGN KEY (LNG_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE TRANSLATION
  ADD CONSTRAINT FK_TRANSLATION_2
      FOREIGN KEY (WORD_ID)
      REFERENCES WORDS (ID);

ALTER TABLE GROUPS
  ADD CONSTRAINT FK_GROUPS_1
      FOREIGN KEY (USER_ID)
      REFERENCES USER (ID);

ALTER TABLE GROUPS
  ADD CONSTRAINT FK_GROUPS_2
      FOREIGN KEY (PROFILE_ID)
      REFERENCES PROFILE (ID);

ALTER TABLE TOKENS
  ADD CONSTRAINT FK_TOKENS_1
      FOREIGN KEY (PROFILE_ID)
      REFERENCES PROFILE (ID);

ALTER TABLE TOKENS
  ADD CONSTRAINT FK_TOKENS_2
      FOREIGN KEY (TOKEN_ID)
      REFERENCES TOKEN (ID);

ALTER TABLE LANGUE_INFO
  ADD CONSTRAINT FK_LANGUE_LABEL_1
      FOREIGN KEY (LANGUE_ID)
      REFERENCES LANGUES (ID);

ALTER TABLE LANGUE_INFO
  ADD CONSTRAINT FK_LANGUE_LABEL_2
      FOREIGN KEY (LANGUE_TRADUCTION_ID)
      REFERENCES LANGUES (ID);

