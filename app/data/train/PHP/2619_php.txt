<?php
/**
 * simplemon
 *
 * @license ${LICENSE_LINK}
 * @link    ${PROJECT_URL_LINK}
 * @version ${VERSION}
 * @package ${PACKAGE_NAME}
 * @author  Casey McLaughlin <caseyamcl@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * ------------------------------------------------------------------
 */

namespace SimpleMon\Utility;

use Twig_Error_Loader;

/**
 * Class TwigTryFileLoader
 *
 * Allows cascading loading of templates, first checking the given path
 * in the loader, and then auto-checking with prepended namespaces until the
 * template is found.
 *
 * @author Casey McLaughlin <caseyamcl@gmail.com>
 */
class TwigTryFileLoader extends \Twig_Loader_Filesystem
{
    /**
     * @var array|\string[]
     */
    private $nsSearchOrder;

    /**
     * TwigTryFileLoader constructor.
     *
     * @param array          $paths
     * @param array|string[] $nsSearchOrder Namespace search order (without '@' characters)
     */
    public function __construct($paths = [], array $nsSearchOrder = [self::MAIN_NAMESPACE])
    {
        parent::__construct($paths);
        $this->nsSearchOrder = array_unique(array_merge([self::MAIN_NAMESPACE], $nsSearchOrder));
    }

    protected function findTemplate($name)
    {
        // If namespaced name provided, then use default behavior
        if ($name{0} == '@') {
            return parent::findTemplate($name);
        }

        // Else try paths until finding one.
        foreach ($this->nsSearchOrder as $ns) {
            $nsName = '@' . $ns . '/' . $name;

            try {
                return parent::findTemplate($nsName);
            }
            catch (Twig_Error_Loader $e) {
                // pass..
            }
        }

        // If made it here, then just behave normally and throw
        // an exception
        return parent::findTemplate($name);
    }
}
