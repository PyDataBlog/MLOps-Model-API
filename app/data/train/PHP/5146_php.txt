<?php

namespace BackendBundle\Form;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;

class ArticleType extends AbstractType
{
    /**
     * {@inheritdoc}
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
            ->add('titre')
            ->add('contenu', Type\TextareaType::class, array(
                'attr' => array(
                    'class' => 'tinymce',
                    'data-theme' => 'advanced'
                )
            ))
            ->add('published', Type\ChoiceType::class, array(
                'choices' => array(
                    'Oui' => true,
                    'Non' => false)
            ))
            ->add('image', Type\FileType::class, array(
                'required' => false
                )
            )
            ->add('dateDebutParution', Type\DateType::class, array(
                'widget' => 'choice',
                'years' => $this->getYears(10)
            ))
            ->add('dateFinParution', Type\DateType::class, array(
                'widget' => 'choice',
                'years' => $this->getYears(10)
            ))
            ->add('envoyer', Type\SubmitType::class);
    }

    /**
     * {@inheritdoc}
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => 'BackendBundle\Entity\Article'
        ));
    }

    /**
     * {@inheritdoc}
     */
    public function getBlockPrefix()
    {
        return 'backendbundle_article';
    }

    /**
     * Retourne un tableau d'années avec le nombre d'année entré en parametre
     *
     * @param $nbYears
     * @return array
     */
    private function getYears($nbYears)
    {
        $years = array();
        $currentYear = date("Y");

        for ($i = 0; $i < $nbYears; $i++) {

            $newdate = strtotime('+' . $i . ' years', strtotime($currentYear));

            $years[] = (int)date('Y', $newdate);
        }

        return ($years);
    }
}
