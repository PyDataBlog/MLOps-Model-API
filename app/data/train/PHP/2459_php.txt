<?php

namespace siigap\FichasBundle\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use siigap\FichasBundle\Form\ConsultaPersonasType;
use siigap\FichasBundle\Form\ConsultaViviendasType;
use siigap\FichasBundle\Form\ConsultaFichasType;

class ConsultasController extends Controller
{
    public function consultaFichasAction(Request $request)
    {        
        $form = $this->createForm(new ConsultaFichasType(), array());
        return $this->render('siigapFichasBundle:Consultas:consultaFichas.html.twig', array('form'=>$form->createView()));
    }
    
    public function consultaFichasShowAction(Request $request)
    {
        $form = $this->createForm(new ConsultaFichasType(), array());
        $form->handleRequest($request);
        
        if ($form->isValid())
        {
            $results = $this->getDoctrine()->getRepository('siigapMainBundle:TsgFichasIdentificacion')->getFiltroFichas($form, $this->getUser()->getGobierno());
            
            return $this->render('siigapFichasBundle:Consultas:consultaFichasShow.html.twig', array(
                'datos' => $results['resultQuery']
            ));
        }
        else
        {
            $errors = array();
            $errors[]['message'] = 'Se ha producido un error desconocido. Es probable una manipulaci&oacute;n deliberada de los datos. '.$form->getErrorsAsString();
            return $this->render('siigapMainBundle:Default:errores.html.twig', array('errors'=>$errors));
        }
    }
    
    public function consultaViviendasAction(Request $request)
    {
        $options = array('codigoGeografico'=>$this->getUser()->getGobierno()->getCodigoGeografico());
        $form = $this->createForm(new ConsultaViviendasType($options), array());
        return $this->render('siigapFichasBundle:Consultas:consultaViviendas.html.twig', array('form'=>$form->createView()));
    }
    
    public function consultaViviendasShowAction(Request $request)
    {
        $options = array('codigoGeografico'=>$this->getUser()->getGobierno()->getCodigoGeografico());
        $form = $this->createForm(new ConsultaViviendasType($options), array());
        $form->handleRequest($request);
        
        if ($form->isValid())
        {
            $results = $this->getDoctrine()->getRepository('siigapMainBundle:TsgViviendas')->getFiltroViviendas($form, $this->getUser()->getGobierno());
            $datos = array();
            $i = 0;
            foreach($results['resultQuery'] as $dato)
            {
                $datos[$i]['codigoVivienda'] = $dato->getCodigoVivienda();
                $datos[$i]['geograficoMinimo'] = $dato->getGeograficoMinimo();//$this->getLocalidadMinima($dato->getGeograficoMinimo());
                $datos[$i]['tipoConstruccion'] = $dato->getTipoConstruccion();
                $datos[$i]['esMiduvi'] = ($dato->getEsMiduvi()) ? 'SI' : 'NO';
                $datos[$i]['totalPersonas'] = count($dato->getPersonas());
                $datos[$i]['idFicha'] = $dato->getFichaIdentificacion()->getId();
                $datos[$i]['numeroFicha'] = $dato->getFichaIdentificacion()->getNumeroFicha();
                $i++;
            }
            
            return $this->render('siigapFichasBundle:Consultas:consultaViviendasShow.html.twig', array(
                'datos' => $datos
            ));
        }
        else
        {
            $errors = array();
            $errors[]['message'] = 'Se ha producido un error desconocido. Es probable una manipulaci&oacute;n deliberada de los datos. '.$form->getErrorsAsString();
            return $this->render('siigapMainBundle:Default:errores.html.twig', array('errors'=>$errors));
        }
    }
    
    private function getLocalidadMinima($geograficoMinimo)
    {
        $result = '';
        if ($geograficoMinimo->getPadre())
        {
            $result .= $geograficoMinimo->getPadre()->getNombre();
        }
        if ($geograficoMinimo->getPadre()->getPadre())
        {
            $result .= ' - '.$geograficoMinimo->getPadre()->getPadre()->getNombre();
        }
        $result .= ($result <> '') ? ' - '.$geograficoMinimo->getNombre() : $geograficoMinimo->getNombre();
        
        return $result;
    }
    
    public function consultaPersonasAction(Request $request)
    {        
        $form = $this->createForm(new ConsultaPersonasType(), array());
        return $this->render('siigapFichasBundle:Consultas:consultaPersonas.html.twig', array('form'=>$form->createView()));
    }
    
    public function consultaPersonasShowAction(Request $request)
    {
        $form = $this->createForm(new ConsultaPersonasType(), array());
        $form->handleRequest($request);
        
        if ($form->isValid())
        {
            $results = $this->getDoctrine()->getRepository('siigapMainBundle:TsgPersonasVivienda')->getFiltroPersonas($form, $this->getUser()->getGobierno());
            
            return $this->render('siigapFichasBundle:Consultas:consultaPersonasShow.html.twig', array(
                'datos' => $results['resultQuery']
            ));
        }
        else
        {
            $errors = array();
            $errors[]['message'] = 'Se ha producido un error desconocido. Es probable una manipulaci&oacute;n deliberada de los datos. '.$form->getErrorsAsString();
            return $this->render('siigapMainBundle:Default:errores.html.twig', array('errors'=>$errors));
        }
    }
    
    public function consultaGrupoAtencionShowAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $nick = $request->get('name');
        
        $grupoAtencion = $this->getDoctrine()->getRepository('siigapMainBundle:TsgGruposAtencion')->findOneByNick($nick);
        
        if (!$grupoAtencion)
        {
            throw $this->createNotFoundException('No se encontro el grupo de atencion solicitado.');
        }
        
        $repository = $em->getRepository('siigapMainBundle:TsgPersonasVivienda');
        $query = $repository->createQueryBuilder('tsp')
                            ->innerJoin('tsp.grupoAtencion', 'tga')
                            ->where('tga.id = :grupoAtencion')->setParameter('grupoAtencion', $grupoAtencion)
                            ->getQuery();
        
        $datos =  $query->getResult();
            
        return $this->render('siigapFichasBundle:Consultas:consultaPersonasShow.html.twig', array(
            'datos' => $datos
        ));
    }
    
    public function consultaFichaCompletaShowAction(Request $request)
    {
        $id = $request->get('id');
        
        $fichaIdentificacion = $this->getDoctrine()->getRepository('siigapMainBundle:TsgFichasIdentificacion')->findOneById($id);
        
        if (!$fichaIdentificacion)
        {
            throw $this->createNotFoundException('No se encontron los datos solicitados.');
        }
        
        $existeVivienda = ($fichaIdentificacion->getVivienda()) ? true : false;
            
        return $this->render('siigapFichasBundle:Consultas:fichaCompletaShow.html.twig', array(
            'fichaIdentificacion' => $fichaIdentificacion,
            'existeVivienda' => $existeVivienda
        ));
    }
}
