<?php

namespace Mecha\ComparableInterop;

/**
 * Generic interface for any comparable entity.
 * 
 * @version 0.1
 * @category Comparable
 * @author Miguel Muscat <miguelmuscat93@gmail.com>
 */
interface ComparableInterface
{
    
    /**
     * Compares this instance with another.
     * 
     * The implementor must ensure:
     * 
     * - that `$x->compareTo($y)` is equal to the `-($y->compareTo($x))`
     * - that if `$x->compareTo($y) == 0`, then `$y->compareTo($x) == 0`
     * - transitivity. If `$x->compareTo($y) > 0` and `$y->compareTo($z) > 0` then `$x->compareTo($z) > 0`
     * - if `$x->compareTo($y) == 0`, then `$x->compareTo($z) == $y->compareTo($z)`
     * 
     * @param ComparableInterface $other The other comparable instance to compare to.
     * @return integer Greater than 0 if this instance is greater than $other, less than zero if less or 0 if equal.
     * @throws ComparableException If the implementor rejects the parameter type.
     */
    public function compareTo(ComparableInterface $other);

}
