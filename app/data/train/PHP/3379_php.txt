<?php

namespace app\modules\systemJournal\models;

use app\components\custom\TSearchModelTools;
use app\components\helpers\TimeHelper;
use Yii;
use yii\data\ActiveDataProvider;

class SystemJournalSearch extends SystemJournal
{
    const VIEW_MODE_ALL = 'All';
    const VIEW_MODE_DELETED = 'Deleted';
    
    use TSearchModelTools;
    
    public $hasContent;
    
    public function rules()
    {
        return array_merge(parent::rules(), [
            [['viewMode', 'hasContent'], 'safe'],
        ]);
    }
    
    public function view($params)
    {
        $this->setAttributes($params);
        $query = self::find()
                ->filterWhere(['system_journal.id' => $this->id])
                ->andFilterWhere(['system_journal.severity_name' => $this->severity_name])
                ->andFilterWhere(['like', 'system_journal.subject', $this->subject])
                ->andFilterWhere(['like', 'system_journal.reporter_user_name', $this->reporter_user_name])
                ->select([
                    'system_journal.id',
                    'system_journal.severity_name',
                    'system_journal.reporter_user_name',
                    'system_journal.subject',
                    'LENGTH(system_journal.content) AS hasContent',
                    'system_journal.is_readed',
                    'system_journal.created_at',
                    'system_journal.deleted_at',
                ]);
        
        $date = explode(' - ', $this->created_at);
        
        if (count($date) == 2) {
            $query->andFilterWhere(['between', 'system_journal.created_at', TimeHelper::format($date[0], TimeHelper::FORMAT_TIMESTAMP), TimeHelper::format($date[1], TimeHelper::FORMAT_TIMESTAMP)]);
            $this->created_at = $date[0];
        } else {
            $this->created_at = null;
        }
        
        switch ($this->viewMode) {
            case self::VIEW_MODE_DELETED:
                $query->andWhere(['IS NOT', 'deleted_at', null]);
                break;
            default:
                $query->andWhere(['system_journal.deleted_at' => null]);
                break;
        }
        
        return new ActiveDataProvider([
            'query' => $query,
            'sort' => [
                'attributes' => [
                    'id' => [
                        'asc' => ['system_journal.id' => SORT_ASC],
                        'desc' => ['system_journal.id' => SORT_DESC],
                    ],
                    'reporter_user_name' => [
                        'asc' => ['system_journal.reporter_user_name' => SORT_ASC],
                        'desc' => ['system_journal.reporter_user_name' => SORT_DESC],
                    ],
                    'severity_name' => [
                        'asc' => ['system_journal.severity_name' => SORT_ASC],
                        'desc' => ['system_journal.severity_name' => SORT_DESC],
                    ],
                    'subject' => [
                        'asc' => ['system_journal.subject' => SORT_ASC],
                        'desc' => ['system_journal.subject' => SORT_DESC],
                    ],
                    'is_readed' => [
                        'asc' => ['system_journal.is_readed' => SORT_ASC],
                        'desc' => ['system_journal.is_readed' => SORT_DESC],
                    ],
                    'created_at' => [
                        'asc' => ['system_journal.created_at' => SORT_ASC],
                        'desc' => ['system_journal.created_at' => SORT_DESC],
                    ],
                ],
                'defaultOrder' => ['is_readed' => SORT_ASC, 'id' => SORT_DESC],
            ],
        ]);
    }
    
    public static function listViewModes()
    {
        return [self::VIEW_MODE_ALL, self::VIEW_MODE_DELETED];
    }
}
