<?php

class Language implements \ArrayAccess
{
  private static $_instance = null;
  private $_registry;
  private $_data = [];

  public function getInstance (\Registry $registry)
  {
    if (self::$_instance !== null) {
      self::$_instance = new __CLASS__($registry);
    }

    return self::$_instance;
  }

  private function __construct (\Registry $registry)
  {
    $this->_registry = $registry;
    $this->load();
  }

  protected function load ()
  {
    $lang = 'en_us';

    if (isset($_SESSION['lang']))
      $lang = $_SESSION['lang'];
    else
      $lang = ORM::forTable('setting')->where('key', 'default_language')->findOne()->value;

    $this->_data = array_merge_recursive(
      file_get_contents($this->_registry['config']['language_dir'] . 'en_us.php'),
      file_get_contents($this->_registry['config']['language_dir'] . $lang . '.php')
      );
  }

  private function __clone () {}

  private function __wakeup () {}

  public function offSetExists ($key)
  {
    return isset($this->_data[$key]);
  }

  public function offSetSet ($key, $value)
  {
    $this->_data[$key] = $value;
  }

  public function offSetGet ($key)
  {
    if (!isset($this->_data[$key])) {
      throw new \InvalidArgumentException(sprintf('Identifier "%s" is not defined.', $key));
    }

    return $this->_data[$key]($this);
  }

  public function offSetUnset ($key)
  {
    if (isset($this->_data[$key])) {
      unset($this->_data[$key]);
    }
  }

}
