<?php

/**
 * Get Partial
 * Get and render a partial template file.
 *
 * @since 1.0.0
 *
 * $part: (string) name of the partial, relative to
 * the _templates/partials directory.
 */
function get_partial( $part ) {

    # Get theme object
    global $_theme;
    return $_theme->get_partial($part);

}

/**
 * Get Header
 * Get header partial.
 *
 * @since 1.0.0
 *
 * $name: (string) name of custom header file.
 */
function get_header( $name = 'header' ) {
    return get_partial($name);
}

/**
 * Get Footer
 * Get footer partial.
 *
 * @since 1.0.0
 *
 * $name: (string) name of custom footer file.
 */
function get_footer( $name = 'footer' ) {
    return get_partial($name);
}

/**
 * Get Sidebar
 * Get sidebar partial.
 *
 * @since 1.0.0
 *
 * $name: (string) name of custom sidebar file.
 */
function get_sidebar( $name = 'sidebar' ) {
    return get_partial($name);
}

/**
 * Theme Add Meta
 *
 * @since 1.0.1
 *
 * $meta: (array) meta tags to add (key => value)
 */
function theme_add_meta( array $meta = array() ) {

    # Get Page Array
    $page = get('page');

    # Merge New Data
    $page = array_merge($page, $meta);

    # Update Page Array
    set('page', $page);

    # Return updated array
    return $page;

}

/**
 * Theme Remove Meta
 *
 * @since 1.0.1
 *
 * $key: (string) key of the meta data to remove
 */
function theme_remove_meta( $key ) {

    # Get Page Array
    $page = get('page');

    # Protected Keys
    $protected = array(
        'is_home',
        'path',
        'slug'
    );

    # Check Key is not protected
    if ( in_array($key, $protected) ) {
        return false;
    }

    # Check Key exists
    if ( isset($page[$key]) ) {

        # Remove value
        unset($page[$key]);

        # Update Page Array
        set('page', $page);

        return $page;
    }

    return false;
}

/**
 * Assets Dir
 * Return location of assets relative to
 * the ROOT_DIR.
 *
 * @since 1.0.1
 *
 * $prefix: (string) string to prepend to the returned value.
 * $print: (bool) print the value to the screen
 */
function assets_dir( $prefix = '/', $print = true ) {

    # Get Theme
    global $_theme;

    # Get Current Theme Location
    $location = $_theme->prop('dir');

    if ( $print === true ) {
        echo $prefix . $location . '/assets';
    } else {
        return $prefix . $location . '/assets';
    }

}
