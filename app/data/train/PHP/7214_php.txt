<?php

namespace Pz\Silex\Tests\Provider;

use Silex\Application;
use Pz\Silex\Provider\TwigThemesServiceProvider;

class TwigThemesServiceProviderTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Application
     */
    protected $app;

    public function setUp()
    {
        $this->app = new Application();
        $this->app->register(new TwigThemesServiceProvider());
    }

    /**
     * @expectedException \InvalidArgumentException
     * @expectedExceptionMessageRegExp #Base themes dir '.*' not found.#
     */
    public function testRegisterNoBasePathSecurity()
    {
        $this->app['themes'];
    }

    /**
     * @expectedException \Twig_Error_Loader
     * @expectedExceptionMessage Theme "" not registered.
     */
    public function testRegisterNotThemeSetSecurity()
    {
        $this->app['themes.dir.base'] = dirname(__FILE__).'/Fixtures';
        $this->app['themes'];
    }

    public function testRegister()
    {
        $this->app['themes.dir.base'] = dirname(__FILE__).'/Fixtures';
        $this->app['themes.theme'] = 'theme';

        $themesLoader = $this->app['themes'];

        $this->assertInstanceOf('Twig_Loader_Themes', $themesLoader);
    }

    public function testBoot()
    {
        $this->app['themes.dir.base'] = dirname(__FILE__).'/Fixtures';
        $this->app['themes.theme'] = 'theme';

        $twigChainLoader = $this->getMock('Twig_Loader_Chain', array('addLoader'));
        $twigChainLoader->expects($this->once())
            ->method('addLoader')
            ->with($this->app['themes']);

        $this->app['twig.loader'] = $twigChainLoader;

        $this->app->boot();
    }

}
