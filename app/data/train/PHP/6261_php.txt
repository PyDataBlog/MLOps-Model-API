<?php
/**
 * Red Internacion
 * 
 * @author Sebastian Berra
 * 
 * @since 0.1.5
 * 
 */
namespace RI\DBRIBundle\Entity;

use Doctrine\ORM\EntityRepository;

use RI\RIBundle\Utils\RI\RI;
use RI\RIBundle\Utils\RI\RIUtiles;

/**
 * Repositorio Doctrine tabla salas_hist
 *
 * @author Sebastian Berra
 * 
 */
class SalasHistRepository extends EntityRepository
{
    
    /**
     * Trae los objetos SalasHist y Salas del efector pasado como parámetro
     * 
     * @param integer $id_efector
     * @return SalasHist
     * @throws \Exception
     */
    public function findByIdEfector($id_efector)
    {
                        
        $dql =
            "SELECT "
                ."sh, s "
            ."FROM "
                .RIUtiles::DB_BUNDLE.":SalasHist sh "
            ."INNER JOIN "
                ."sh.idSala s "
            ."WHERE "
                ."s.idEfector = :id_efector "
            ."ORDER BY "
                ."sh.fechaApertura ";
        
        try{
            
            $query = $this->getEntityManager()->createQuery($dql);
            
            $query->setParameter("id_efector", $id_efector);
            
            $salas_hist = $query->getResult();
            
        } catch (\Exception $e) {

            RI::$error_debug .= $e->getMessage();
            
            throw $e;
        }
//        dump($salas_hist);die();
        return $salas_hist;
    }
    
    
    /**
     * Trae el SalasHist sin fecha cierre según el id_sala pasado como parámetro
     * 
     * @param integer $id_sala
     * @return SalasHist
     * @throws \Exception
     */
    public function findByIdSalaSinFechaCierre($id_sala)
    {
                        
        $dql =
            "SELECT "
                ."sh "
            ."FROM "
                .RIUtiles::DB_BUNDLE.":SalasHist sh "
            ."WHERE "
                ."sh.idSala = :id_sala "
            ."AND sh.fechaCierre IS NULL ";
        
        try{
            
            $query = $this->getEntityManager()->createQuery($dql);
            
            $query->setParameter("id_sala", $id_sala);
            
            $salas_hist = $query->getSingleResult();
            
        } catch (\Exception $e) {

            RI::$error_debug .= $e->getMessage();
            
            throw $e;
        }
        
        return $salas_hist;
    }
    
    /**
     * Trae el último período vigente SalasHist según el id_sala pasado como parámetro
     * 
     * @param integer $id_sala
     * @return SalasHist
     * @throws \Exception
     */
    public function findByIdSalaUltimoVigente($id_sala)
    {
                        
        $dql =
            "SELECT "
                ."sh "
            ."FROM "
                .RIUtiles::DB_BUNDLE.":SalasHist sh "
            ."WHERE "
                ."sh.idSala = :id_sala "
            ."ORDER BY "
                ."sh.fechaApertura DESC ";
        
        try{
            
            $query = $this->getEntityManager()->createQuery($dql)->setMaxResults(1);
            
            $query->setParameter("id_sala", $id_sala);
            
            $salas_hist = $query->getSingleResult();
            
        } catch (\Exception $e) {

            RI::$error_debug .= $e->getMessage();
            
            throw $e;
        }
        
        return $salas_hist;
    }
    
    /**
     * Trae período vigente SalasHist según el id y fecha pasados 
     * como parámetro
     * 
     * @param integer $id_sala
     * @param string $fecha_vigencia
     * @return SalasHist
     * @throws \Exception
     */
    public function findByFechaVigencia($id_sala, $fecha_vigencia)
    {
                        
        $dql =
            "SELECT "
                ."sh "
            ."FROM "
                .RIUtiles::DB_BUNDLE.":SalasHist sh "
            ."WHERE "
                ."sh.idSala = :id_sala "
            ."AND sh.fechaApertura <= :fecha_vigencia "
            ."AND (sh.fechaCierre >= :fecha_vigencia "
                ." OR sh.fechaCierre IS NULL) ";
        
        try{
            
            $query = $this->getEntityManager()->createQuery($dql)->setMaxResults(1);
            
            $query->setParameter("id_sala", $id_sala);
            $query->setParameter("fecha_vigencia", $fecha_vigencia);
            
            $salas_hist = $query->getSingleResult();
            
        } catch (\Exception $e) {

            RI::$error_debug .= $e->getMessage();
            
            throw $e;
        }
        
        return $salas_hist;
    }
    
    /**
     * Trae período vigente SalasHist según el id y fecha de apertura y cierre
     * pasados como parámetro
     * 
     * @param integer $id_sala
     * @param string $fecha_apertura
     * @param string $fecha_cierre
     * @return SalasHist
     * @throws \Exception
     */
    public function findByPeriodoVigencia(
            $id_sala, 
            $fecha_apertura,
            $fecha_cierre)
    {
                        
        $dql =
            "SELECT "
                ."sh "
            ."FROM "
                .RIUtiles::DB_BUNDLE.":SalasHist sh "
            ."WHERE "
                ."sh.idSala = :id_sala "
            ."AND sh.fechaApertura <= :fecha_apertura "
            ."AND (sh.fechaCierre >= :fecha_cierre "
                ." OR sh.fechaCierre IS NULL) ";
        
        try{
            
            $query = $this->getEntityManager()->createQuery($dql)->setMaxResults(1);
            
            $query->setParameter("id_sala", $id_sala);
            $query->setParameter("fecha_apertura", $fecha_apertura);
            $query->setParameter("fecha_cierre", $fecha_cierre);
            
            $salas_hist = $query->getSingleResult();
            
        } catch (\Exception $e) {

            RI::$error_debug .= $e->getMessage();
            
            throw $e;
        }
        
        return $salas_hist;
    }
    
}