extern crate env_logger;

use super::*;

#[test]
fn combat_result_add() {
    let _ = env_logger::init();

    let combat_result_1 = CombatResult {
        wounds_suffered: 3,
        models_slain: 3,
    };

    let combat_result_2 = CombatResult {
        wounds_suffered: 2,
        models_slain: 0,
    };

    let result = combat_result_1 + combat_result_2;

    assert_eq!(result.wounds_suffered, 5);
    assert_eq!(result.models_slain, 3);
}

#[test]
fn combat_result_addassign() {
    let _ = env_logger::init();

    let mut combat_result_1 = CombatResult {
        wounds_suffered: 3,
        models_slain: 3,
    };

    let combat_result_2 = CombatResult {
        wounds_suffered: 2,
        models_slain: 0,
    };

    combat_result_1 += combat_result_2;

    assert_eq!(combat_result_1.wounds_suffered, 5);
    assert_eq!(combat_result_1.models_slain, 3);
}

#[test]
fn combat_result_sum() {
    let _ = env_logger::init();

    let combat_results: Vec<CombatResult> = vec![
        CombatResult {
            wounds_suffered: 3,
            models_slain: 3,
        },
        CombatResult {
            wounds_suffered: 2,
            models_slain: 0,
        },
        CombatResult {
            wounds_suffered: 15,
            models_slain: 15,
        },
        CombatResult {
            wounds_suffered: 4,
            models_slain: 1,
        },
    ];

    let sum: CombatResult = combat_results.into_iter().sum();

    assert_eq!(sum.wounds_suffered, 24);
    assert_eq!(sum.models_slain, 19);
}
