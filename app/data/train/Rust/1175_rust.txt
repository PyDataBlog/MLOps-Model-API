#[cfg(not(any(test, rustdoc)))]
use alloc::prelude::v1::*;
#[cfg(any(test, rustdoc))]
use std::prelude::v1::*;

use core::fmt::Write;

use crate::debugshell::{Command, DebugShell};
use crate::DRIVERS;

pub fn builtin_drivers(_sh: &mut DebugShell, _args: Vec<String>) -> String {
    let mut out = String::new();

    for _driver in DRIVERS.get().drivers.iter() {
        let driver = _driver.get();
        writeln!(out, " * {} [ID {}]", driver.name(), driver.driver_id()).unwrap();
    }

    out
}

pub fn register_builtins(sh: &mut DebugShell) {
    sh.commands.push(Command {
        name: String::from("drivers"),
        func: builtin_drivers,
    });
}
