extern crate crypto;

use crypto::md5::Md5;
use crypto::digest::Digest;

fn main() {
    let mut sh = Md5::new();
    let seed = "reyedfim";
    let mut key = 0;
    let mut code_length = 0;

    while code_length < seed.len() {
        sh.input(seed.as_bytes());
        sh.input(key.to_string().as_bytes());

        let mut output = [0; 16];
        sh.result(&mut output);

        if is_5_0(&output[0..4]) {
            print_md5_hash(&key, &output);
            code_length += 1;
        }

        sh.reset();
        key += 1;
    }
}

fn is_5_0(md5: &[u8]) -> bool {
    md5[0] == 0 && md5[1] == 0 && (md5[2] >> 4) == 0
}

fn print_md5_hash(key: &i32, md5: &[u8]) {
    print!("key: {}, MD5: ", key);
    for i in 0..16 {
        print!("{:02X}", md5[i]);
    }
    println!("");
}
