use core::fmt::{self, Write};

use crate::event::Event;
use crate::KERNEL_EVENTEMITTER;

pub struct DriverWriter {
    pub driver_id: Option<usize>,
}

impl DriverWriter {
    pub fn new() -> DriverWriter {
        DriverWriter { driver_id: None }
    }

    pub fn set_driver_id(&mut self, driver_id: usize) {
        self.driver_id = Some(driver_id);
    }
}

impl Write for DriverWriter {
    fn write_str(&mut self, s: &str) -> fmt::Result {
        if self.driver_id.is_none() {
            return Ok(());
        }

        let mut ev =
            Event::new_from_string("driver", &format!("{}", self.driver_id.unwrap()), "send", s);
        ev.immediate = true;
        KERNEL_EVENTEMITTER.get().push_event(ev);

        Ok(())
    }
}
