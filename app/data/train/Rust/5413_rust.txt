#![feature(custom_derive, plugin)]
#![plugin(serde_macros)]
extern crate mui;
use std::cell::Cell;
use mui::prelude::*;

fn main() {
    let mut app = mui::App::new("Mui Widgets Demo!");
    // primitives
    let rect = mui::Rect::new("r1", true);
    rect.set_zpos(3);
    app.add_widget(&rect);
    
    let count = Cell::new(0);
    let count2 = Cell::new(0);

    // sa - stand alone
    let mut sa_button = mui::Button::new("b1");
    sa_button.set_text("I'm a button");
    sa_button.set_xy(700.0, 300.0);

    //let cl = sa_button.clone();
    sa_button.set_on_click_fn(Box::new(move |this| {
        this.set_text("Told you!");
    }));
    app.add_widget(&sa_button);

    let mut button = mui::Button::new("b2");
    button.set_text("Click me");
    button.set_on_click_fn(Box::new(move |this| {
        count.set(count.get()+1);
        this.set_text(format!("Clicked {}", count.get()));
    }));

    let mut button2 = mui::Button::new("b3");
    button2.set_text("Click me");
    button2.set_on_click_fn(Box::new(move |this| {
        count2.set(count2.get()+1);
        this.set_text(format!("Clicked {}", count2.get()));
    }));

    let mut layout = mui::BoxLayout::new("l1");
    layout.set_xy(300.0, 40.0);
    layout.set_zpos(5);
    layout.add_widget(&button);
    layout.add_widget(&button2);
    app.add_widget(&layout);

    let sa_textbox = mui::TextBox::new("textbox");
    sa_textbox.set_xy(600.0, 200.0);
    app.add_widget(&sa_textbox);

    app.run();
}
