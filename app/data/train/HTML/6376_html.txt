<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class CompositeRangeExtensions
   | CodeJam </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class CompositeRangeExtensions
   | CodeJam ">
    <meta name="generator" content="docfx 2.23.1.0">
    
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../styles/docfx.css">
    <link rel="stylesheet" href="../../styles/main.css">
    <meta property="docfx:navrel" content="../../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    <meta property="docfx:rel" content="../../">
    
  </head>
  <body data-spy="scroll" data-target="#affix">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../../index.html">
                <img id="logo" class="svg" src="../../images/CodeJam.Main.Icon.png" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list"></div>
          <div class="sr-items"></div>
          <ul id="pagination"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="CodeJam.Ranges.CompositeRangeExtensions">
  
  
  <h1 id="CodeJam_Ranges_CompositeRangeExtensions" data-uid="CodeJam.Ranges.CompositeRangeExtensions" class="text-break">Class CompositeRangeExtensions
  </h1>
  <div class="markdown level0 summary"><p>Extension methods for <a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange&lt;T&gt;</a>.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">CompositeRangeExtensions</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="CodeJam.Ranges.html">CodeJam.Ranges</a></h6>
  <h6><strong>Assembly</strong>: CodeJam.dll</h6>
  <h5 id="CodeJam_Ranges_CompositeRangeExtensions_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static class CompositeRangeExtensions</code></pre>
  </div>
  <h3 id="methods">Methods
  </h3>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L288">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``1(CodeJam.Ranges.CompositeRange{``0},``0)">Contains&lt;T&gt;(CompositeRange&lt;T&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains the specified value.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T value)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">value</span></td>
        <td><p>The value to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains the value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L319">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``1(CodeJam.Ranges.CompositeRange{``0},``0,``0)">Contains&lt;T&gt;(CompositeRange&lt;T&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value of the range to check.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value of the range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L328">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0})">Contains&lt;T&gt;(CompositeRange&lt;T&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryFrom___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.RangeBoundaryFrom%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L298">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryFrom___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.RangeBoundaryFrom{``0})">Contains&lt;T&gt;(CompositeRange&lt;T&gt;, RangeBoundaryFrom&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains the specified range boundary.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, RangeBoundaryFrom&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryFrom-1.html">RangeBoundaryFrom</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The boundary to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains the boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryTo___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.RangeBoundaryTo%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L308">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryTo___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.RangeBoundaryTo{``0})">Contains&lt;T&gt;(CompositeRange&lt;T&gt;, RangeBoundaryTo&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains the specified range boundary.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, RangeBoundaryTo&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryTo-1.html">RangeBoundaryTo</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The boundary to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains the boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L310">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0,``1},``0)">Contains&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains the specified value.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T value)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">value</span></td>
        <td><p>The value to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains the value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L344">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0,``1},``0,``0)">Contains&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value of the range to check.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value of the range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L354">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0})">Contains&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryFrom___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.RangeBoundaryFrom%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L321">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryFrom___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.RangeBoundaryFrom{``0})">Contains&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, RangeBoundaryFrom&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains the specified range boundary.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, RangeBoundaryFrom&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryFrom-1.html">RangeBoundaryFrom</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The boundary to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains the boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryTo___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.RangeBoundaryTo%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L332">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryTo___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.RangeBoundaryTo{``0})">Contains&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, RangeBoundaryTo&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains the specified range boundary.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, RangeBoundaryTo&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryTo-1.html">RangeBoundaryTo</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The boundary to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains the boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0____1_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%601)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L358">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0____1_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0},``1)">Contains&lt;T, TCompositeRange&gt;(CompositeRange&lt;T&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TCompositeRange&gt;(this CompositeRange&lt;T&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L346">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``2(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0,``1})">Contains&lt;T, TKey2&gt;(CompositeRange&lt;T&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey2&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__3_CodeJam_Ranges_CompositeRange___0___1____2_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%602)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L386">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__3_CodeJam_Ranges_CompositeRange___0___1____2_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``3(CodeJam.Ranges.CompositeRange{``0,``1},``2)">Contains&lt;T, TKey, TCompositeRange&gt;(CompositeRange&lt;T, TKey&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey, TCompositeRange&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Contains__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Contains%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L373">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Contains_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Contains__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Contains``3(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0,``2})">Contains&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range contains another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool Contains&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range contains another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__1_CodeJam_Ranges_CompositeRange___0____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L757">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__1_CodeJam_Ranges_CompositeRange___0____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``1(CodeJam.Ranges.CompositeRange{``0},``0,``0)">Except&lt;T&gt;(CompositeRange&lt;T&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Except&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L766">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0})">Except&lt;T&gt;(CompositeRange&lt;T&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Except&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0___1____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L804">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0___1____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``2(CodeJam.Ranges.CompositeRange{``0,``1},``0,``0)">Except&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Except&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L814">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0})">Except&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Except&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0____1_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%601)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L793">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0____1_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``2(CodeJam.Ranges.CompositeRange{``0},``1)">Except&lt;T, TCompositeRange&gt;(CompositeRange&lt;T&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Except&lt;T, TCompositeRange&gt;(this CompositeRange&lt;T&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L783">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``2(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0,``1})">Except&lt;T, TKey2&gt;(CompositeRange&lt;T&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Except&lt;T, TKey2&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__3_CodeJam_Ranges_CompositeRange___0___1____2_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%602)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L843">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__3_CodeJam_Ranges_CompositeRange___0___1____2_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``3(CodeJam.Ranges.CompositeRange{``0,``1},``2)">Except&lt;T, TKey, TCompositeRange&gt;(CompositeRange&lt;T, TKey&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Except&lt;T, TKey, TCompositeRange&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Except__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Except%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L832">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Except_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Except__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Except``3(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0,``2})">Except&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns source range with other range excluded.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Except&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>Source range with other range excluded.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__1_CodeJam_Ranges_CompositeRange___0____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L545">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__1_CodeJam_Ranges_CompositeRange___0____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom``1(CodeJam.Ranges.CompositeRange{``0},``0)">ExtendFrom&lt;T&gt;(CompositeRange&lt;T&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; ExtendFrom&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>A new value From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range with a new From boundary or the source fange if the new boundary is greater than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryFrom___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.RangeBoundaryFrom%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L556">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryFrom___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.RangeBoundaryFrom{``0})">ExtendFrom&lt;T&gt;(CompositeRange&lt;T&gt;, RangeBoundaryFrom&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; ExtendFrom&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, RangeBoundaryFrom&lt;T&gt; from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryFrom-1.html">RangeBoundaryFrom</a>&lt;T&gt;</td>
        <td><span class="parametername">from</span></td>
        <td><p>A new boundary From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range with a new From boundary or the source fange if the new boundary is greater than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__2_CodeJam_Ranges_CompositeRange___0___1____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L580">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__2_CodeJam_Ranges_CompositeRange___0___1____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom``2(CodeJam.Ranges.CompositeRange{``0,``1},``0)">ExtendFrom&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ExtendFrom&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>A new value From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range with a new From boundary or the source fange if the new boundary is greater than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryFrom___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.RangeBoundaryFrom%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L592">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendFrom__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryFrom___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendFrom``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.RangeBoundaryFrom{``0})">ExtendFrom&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, RangeBoundaryFrom&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ExtendFrom&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, RangeBoundaryFrom&lt;T&gt; from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryFrom-1.html">RangeBoundaryFrom</a>&lt;T&gt;</td>
        <td><span class="parametername">from</span></td>
        <td><p>A new boundary From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range with a new From boundary or the source fange if the new boundary is greater than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__1_CodeJam_Ranges_CompositeRange___0____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendTo%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L580">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__1_CodeJam_Ranges_CompositeRange___0____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo``1(CodeJam.Ranges.CompositeRange{``0},``0)">ExtendTo&lt;T&gt;(CompositeRange&lt;T&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; ExtendTo&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>A new value To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range with a new To boundary or the source fange if the new boundary is less than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryTo___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendTo%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.RangeBoundaryTo%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L591">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryTo___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.RangeBoundaryTo{``0})">ExtendTo&lt;T&gt;(CompositeRange&lt;T&gt;, RangeBoundaryTo&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; ExtendTo&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, RangeBoundaryTo&lt;T&gt; to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryTo-1.html">RangeBoundaryTo</a>&lt;T&gt;</td>
        <td><span class="parametername">to</span></td>
        <td><p>A new boundary To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range with a new To boundary or the source fange if the new boundary is less than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__2_CodeJam_Ranges_CompositeRange___0___1____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendTo%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L617">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__2_CodeJam_Ranges_CompositeRange___0___1____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo``2(CodeJam.Ranges.CompositeRange{``0,``1},``0)">ExtendTo&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ExtendTo&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>A new value To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range with a new To boundary or the source fange if the new boundary is less than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryTo___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ExtendTo%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.RangeBoundaryTo%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L629">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ExtendTo__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryTo___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ExtendTo``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.RangeBoundaryTo{``0})">ExtendTo&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, RangeBoundaryTo&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Extends the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ExtendTo&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, RangeBoundaryTo&lt;T&gt; to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryTo-1.html">RangeBoundaryTo</a>&lt;T&gt;</td>
        <td><span class="parametername">to</span></td>
        <td><p>A new boundary To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range with a new To boundary or the source fange if the new boundary is less than original.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__1_CodeJam_Ranges_CompositeRange___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetComplementation%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L277">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__1_CodeJam_Ranges_CompositeRange___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation``1(CodeJam.Ranges.CompositeRange{``0})">GetComplementation&lt;T&gt;(CompositeRange&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns complementation composite range.
Result range contains result of (infinityRange.Exclude(<code data-dev-comment-type="paramref" class="paramref">compositeRange</code>).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; GetComplementation&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Complementation composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__1_CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetComplementation%60%601(CodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L254">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__1_CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation``1(CodeJam.Ranges.Range{``0})">GetComplementation&lt;T&gt;(Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns complementation composite range.
Result range contains result of (infinityRange.Exclude(<code data-dev-comment-type="paramref" class="paramref">range</code>).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; GetComplementation&lt;T&gt;(this Range&lt;T&gt; range)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">range</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Complementation composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__2_CodeJam_Ranges_CompositeRange___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetComplementation%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L289">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__2_CodeJam_Ranges_CompositeRange___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation``2(CodeJam.Ranges.CompositeRange{``0,``1})">GetComplementation&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns complementation composite range.
Result range contains result of (infinityRange.Exclude(<code data-dev-comment-type="paramref" class="paramref">compositeRange</code>).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; GetComplementation&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Complementation composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__2_CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetComplementation%60%602(CodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L266">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetComplementation__2_CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetComplementation``2(CodeJam.Ranges.Range{``0,``1})">GetComplementation&lt;T, TKey&gt;(Range&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns complementation composite range.
Result range contains result of (infinityRange.Exclude(<code data-dev-comment-type="paramref" class="paramref">range</code>).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; GetComplementation&lt;T, TKey&gt;(this Range&lt;T, TKey&gt; range)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">range</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>Complementation composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__1_CodeJam_Ranges_CompositeRange___0____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L190">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__1_CodeJam_Ranges_CompositeRange___0____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``1(CodeJam.Ranges.CompositeRange{``0},``0)">GetIntersection&lt;T&gt;(CompositeRange&lt;T&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Range&lt;T&gt;[] GetIntersection&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T value)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">value</span></td>
        <td><p>The value to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;[]</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__1_CodeJam_Ranges_CompositeRange___0____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L219">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__1_CodeJam_Ranges_CompositeRange___0____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``1(CodeJam.Ranges.CompositeRange{``0},``0,``0)">GetIntersection&lt;T&gt;(CompositeRange&lt;T&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static RangeIntersection&lt;T&gt; GetIntersection&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value of the range to check.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value of the range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeIntersection-1.html">RangeIntersection</a>&lt;T&gt;</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L228">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0})">GetIntersection&lt;T&gt;(CompositeRange&lt;T&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static RangeIntersection&lt;T&gt; GetIntersection&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeIntersection-1.html">RangeIntersection</a>&lt;T&gt;</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0___1____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L207">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0___1____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``2(CodeJam.Ranges.CompositeRange{``0,``1},``0)">GetIntersection&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Range&lt;T, TKey&gt;[] GetIntersection&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T value)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">value</span></td>
        <td><p>The value to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey&gt;[]</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0___1____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L237">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0___1____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``2(CodeJam.Ranges.CompositeRange{``0,``1},``0,``0)">GetIntersection&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static RangeIntersection&lt;T, TKey&gt; GetIntersection&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value of the range to check.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value of the range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeIntersection-2.html">RangeIntersection</a>&lt;T, TKey&gt;</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L247">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0})">GetIntersection&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static RangeIntersection&lt;T, TKey&gt; GetIntersection&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeIntersection-2.html">RangeIntersection</a>&lt;T, TKey&gt;</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L245">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``2(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0,``1})">GetIntersection&lt;T, TKey2&gt;(CompositeRange&lt;T&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static RangeIntersection&lt;T&gt; GetIntersection&lt;T, TKey2&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeIntersection-1.html">RangeIntersection</a>&lt;T&gt;</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersection%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L265">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersection__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersection``3(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0,``2})">GetIntersection&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns ranges that has intersections with passed range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static RangeIntersection&lt;T, TKey&gt; GetIntersection&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeIntersection-2.html">RangeIntersection</a>&lt;T, TKey&gt;</td>
        <td><p>Ranges that has intersections with passed range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersections__1_CodeJam_Ranges_CompositeRange___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersections%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L126">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersections_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersections*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersections__1_CodeJam_Ranges_CompositeRange___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersections``1(CodeJam.Ranges.CompositeRange{``0})">GetIntersections&lt;T&gt;(CompositeRange&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns all range intersections from the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;RangeIntersection&lt;T&gt;&gt; GetIntersections&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="CodeJam.Ranges.RangeIntersection-1.html">RangeIntersection</a>&lt;T&gt;&gt;</td>
        <td><p>All range intersections from the composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_GetIntersections__2_CodeJam_Ranges_CompositeRange___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.GetIntersections%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L142">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersections_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersections*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_GetIntersections__2_CodeJam_Ranges_CompositeRange___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.GetIntersections``2(CodeJam.Ranges.CompositeRange{``0,``1})">GetIntersections&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns all range intersections from the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static IEnumerable&lt;RangeIntersection&lt;T, TKey&gt;&gt; GetIntersections&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="CodeJam.Ranges.RangeIntersection-2.html">RangeIntersection</a>&lt;T, TKey&gt;&gt;</td>
        <td><p>All range intersections from the composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__1_CodeJam_Ranges_CompositeRange___0____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L402">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__1_CodeJam_Ranges_CompositeRange___0____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``1(CodeJam.Ranges.CompositeRange{``0},``0,``0)">HasIntersection&lt;T&gt;(CompositeRange&lt;T&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite  has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value of the range to check.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value of the range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L413">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0})">HasIntersection&lt;T&gt;(CompositeRange&lt;T&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0___1____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L431">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0___1____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``2(CodeJam.Ranges.CompositeRange{``0,``1},``0,``0)">HasIntersection&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite  has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value of the range to check.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value of the range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L443">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0})">HasIntersection&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0____1_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%601)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L443">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0____1_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``2(CodeJam.Ranges.CompositeRange{``0},``1)">HasIntersection&lt;T, TCompositeRange&gt;(CompositeRange&lt;T&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T, TCompositeRange&gt;(this CompositeRange&lt;T&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L431">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``2(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0,``1})">HasIntersection&lt;T, TKey2&gt;(CompositeRange&lt;T&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T, TKey2&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__3_CodeJam_Ranges_CompositeRange___0___1____2_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%602)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L475">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__3_CodeJam_Ranges_CompositeRange___0___1____2_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``3(CodeJam.Ranges.CompositeRange{``0,``1},``2)">HasIntersection&lt;T, TKey, TCompositeRange&gt;(CompositeRange&lt;T, TKey&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T, TKey, TCompositeRange&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.HasIntersection%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L462">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_HasIntersection__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.HasIntersection``3(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0,``2})">HasIntersection&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Determines whether the composite range has intersection with another range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool HasIntersection&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to check.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td><p><code>true</code>, if the composite range has intersection with another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__1_CodeJam_Ranges_CompositeRange___0____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L616">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__1_CodeJam_Ranges_CompositeRange___0____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``1(CodeJam.Ranges.CompositeRange{``0},``0,``0)">Intersect&lt;T&gt;(CompositeRange&lt;T&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Intersect&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L625">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0})">Intersect&lt;T&gt;(CompositeRange&lt;T&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Intersect&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0___1____0___0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L655">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0___1____0___0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``2(CodeJam.Ranges.CompositeRange{``0,``1},``0,``0)">Intersect&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T, T)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Intersect&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>The boundary From value.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>The boundary To value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L665">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0})">Intersect&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Intersect&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0____1_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%601)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L652">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0____1_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``2(CodeJam.Ranges.CompositeRange{``0},``1)">Intersect&lt;T, TCompositeRange&gt;(CompositeRange&lt;T&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Intersect&lt;T, TCompositeRange&gt;(this CompositeRange&lt;T&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L642">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__2_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``2(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0,``1})">Intersect&lt;T, TKey2&gt;(CompositeRange&lt;T&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Intersect&lt;T, TKey2&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__3_CodeJam_Ranges_CompositeRange___0___1____2_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%602)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L694">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__3_CodeJam_Ranges_CompositeRange___0___1____2_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``3(CodeJam.Ranges.CompositeRange{``0,``1},``2)">Intersect&lt;T, TKey, TCompositeRange&gt;(CompositeRange&lt;T, TKey&gt;, TCompositeRange)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Intersect&lt;T, TKey, TCompositeRange&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, TCompositeRange other)where TCompositeRange : ICompositeRange&lt;T&gt;</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TCompositeRange</span></td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TCompositeRange</span></td>
        <td><p>The type of another range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Intersect__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Intersect%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L683">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Intersect_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Intersect__3_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Intersect``3(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0,``2})">Intersect&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns an intersection of the the ranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Intersect&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T, TKey2&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey2&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to intersect with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>An intersection range or empty range if the ranges do not intersect.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the other range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_MakeExclusive__1_CodeJam_Ranges_CompositeRange___0__System_Func___0___0__System_Func___0___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.MakeExclusive%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%600%7D%2CSystem.Func%7B%60%600%2C%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L68">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_MakeExclusive_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeExclusive*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_MakeExclusive__1_CodeJam_Ranges_CompositeRange___0__System_Func___0___0__System_Func___0___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeExclusive``1(CodeJam.Ranges.CompositeRange{``0},System.Func{``0,``0},System.Func{``0,``0})">MakeExclusive&lt;T&gt;(CompositeRange&lt;T&gt;, Func&lt;T, T&gt;, Func&lt;T, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Replaces inclusive boundaries with exclusive ones with the values from the selector callbacks</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; MakeExclusive&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Func&lt;T, T&gt; fromValueSelector, Func&lt;T, T&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a new value for the From boundary. Used if the boundary is inclusive.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a new value for the To boundary. Used if the boundary is inclusive.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range with exclusive boundaries.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_MakeExclusive__2_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___0__System_Func___0___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.MakeExclusive%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%600%7D%2CSystem.Func%7B%60%600%2C%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L81">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_MakeExclusive_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeExclusive*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_MakeExclusive__2_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___0__System_Func___0___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeExclusive``2(CodeJam.Ranges.CompositeRange{``0,``1},System.Func{``0,``0},System.Func{``0,``0})">MakeExclusive&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Func&lt;T, T&gt;, Func&lt;T, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Replaces inclusive boundaries with exclusive ones with the values from the selector callbacks</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; MakeExclusive&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Func&lt;T, T&gt; fromValueSelector, Func&lt;T, T&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a new value for the From boundary. Used if the boundary is inclusive.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a new value for the To boundary. Used if the boundary is inclusive.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range with exclusive boundaries.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_MakeInclusive__1_CodeJam_Ranges_CompositeRange___0__System_Func___0___0__System_Func___0___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.MakeInclusive%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%600%7D%2CSystem.Func%7B%60%600%2C%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L46">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_MakeInclusive_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeInclusive*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_MakeInclusive__1_CodeJam_Ranges_CompositeRange___0__System_Func___0___0__System_Func___0___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeInclusive``1(CodeJam.Ranges.CompositeRange{``0},System.Func{``0,``0},System.Func{``0,``0})">MakeInclusive&lt;T&gt;(CompositeRange&lt;T&gt;, Func&lt;T, T&gt;, Func&lt;T, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Replaces exclusive boundaries with inclusive ones with the values from the selector callbacks</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; MakeInclusive&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Func&lt;T, T&gt; fromValueSelector, Func&lt;T, T&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a new value for the From boundary. Used if the boundary is exclusive.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a new value for the To boundary. Used if the boundary is exclusive.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range with inclusive boundaries.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_MakeInclusive__2_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___0__System_Func___0___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.MakeInclusive%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%600%7D%2CSystem.Func%7B%60%600%2C%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L58">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_MakeInclusive_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeInclusive*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_MakeInclusive__2_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___0__System_Func___0___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.MakeInclusive``2(CodeJam.Ranges.CompositeRange{``0,``1},System.Func{``0,``0},System.Func{``0,``0})">MakeInclusive&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Func&lt;T, T&gt;, Func&lt;T, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Replaces exclusive boundaries with inclusive ones with the values from the selector callbacks</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; MakeInclusive&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Func&lt;T, T&gt; fromValueSelector, Func&lt;T, T&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a new value for the From boundary. Used if the boundary is exclusive.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a new value for the To boundary. Used if the boundary is exclusive.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range with inclusive boundaries.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__1_CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange%60%601(CodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L24">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__1_CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange``1(CodeJam.Ranges.Range{``0})">ToCompositeRange&lt;T&gt;(Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts range to the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; ToCompositeRange&lt;T&gt;(this Range&lt;T&gt; range)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">range</span></td>
        <td><p>The range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A new composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__1_System_Collections_Generic_IEnumerable_CodeJam_Ranges_Range___0___.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange%60%601(System.Collections.Generic.IEnumerable%7BCodeJam.Ranges.Range%7B%60%600%7D%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L32">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__1_System_Collections_Generic_IEnumerable_CodeJam_Ranges_Range___0___" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange``1(System.Collections.Generic.IEnumerable{CodeJam.Ranges.Range{``0}})">ToCompositeRange&lt;T&gt;(IEnumerable&lt;Range&lt;T&gt;&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; ToCompositeRange&lt;T&gt;(this IEnumerable&lt;Range&lt;T&gt;&gt; ranges)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;&gt;</td>
        <td><span class="parametername">ranges</span></td>
        <td><p>The ranges.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A new composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__2_CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange%60%602(CodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L34">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__2_CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange``2(CodeJam.Ranges.Range{``0,``1})">ToCompositeRange&lt;T, TKey&gt;(Range&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts range to the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ToCompositeRange&lt;T, TKey&gt;(this Range&lt;T, TKey&gt; range)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">range</span></td>
        <td><p>The range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A new composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__2_System_Collections_Generic_IEnumerable___1__System_Func___1___0__System_Func___1___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange%60%602(System.Collections.Generic.IEnumerable%7B%60%601%7D%2CSystem.Func%7B%60%601%2C%60%600%7D%2CSystem.Func%7B%60%601%2C%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L23">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__2_System_Collections_Generic_IEnumerable___1__System_Func___1___0__System_Func___1___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Func{``1,``0})">ToCompositeRange&lt;T, TKey&gt;(IEnumerable&lt;TKey&gt;, Func&lt;TKey, T&gt;, Func&lt;TKey, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ToCompositeRange&lt;T, TKey&gt;(this IEnumerable&lt;TKey&gt; source, Func&lt;TKey, T&gt; fromValueSelector, Func&lt;TKey, T&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TKey&gt;</td>
        <td><span class="parametername">source</span></td>
        <td><p>Original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TKey, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a value for the From boundary.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TKey, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a value for the To boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A new composite range with keys filled from the original collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__2_System_Collections_Generic_IEnumerable_CodeJam_Ranges_Range___0___1___.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange%60%602(System.Collections.Generic.IEnumerable%7BCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L43">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__2_System_Collections_Generic_IEnumerable_CodeJam_Ranges_Range___0___1___" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange``2(System.Collections.Generic.IEnumerable{CodeJam.Ranges.Range{``0,``1}})">ToCompositeRange&lt;T, TKey&gt;(IEnumerable&lt;Range&lt;T, TKey&gt;&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ToCompositeRange&lt;T, TKey&gt;(this IEnumerable&lt;Range&lt;T, TKey&gt;&gt; ranges)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;<a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey&gt;&gt;</td>
        <td><span class="parametername">ranges</span></td>
        <td><p>The ranges.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A new composite range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___1__System_Func___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange%60%603(System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L41">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRange__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___1__System_Func___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRange``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``1},System.Func{``0,``2})">ToCompositeRange&lt;TSource, T, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, T&gt;, Func&lt;TSource, T&gt;, Func&lt;TSource, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ToCompositeRange&lt;TSource, T, TKey&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, T&gt; fromValueSelector, Func&lt;TSource, T&gt; toValueSelector, Func&lt;TSource, TKey&gt; keySelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TSource&gt;</td>
        <td><span class="parametername">source</span></td>
        <td><p>Original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a value for the From boundary.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a value for the To boundary.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, TKey&gt;</td>
        <td><span class="parametername">keySelector</span></td>
        <td><p>Callback to obtain a value for the range key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A new composite range with keys filled from the original collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TSource</span></td>
        <td><p>The type of the values in original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeFrom__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeFrom%60%602(System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L62">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeFrom__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeFrom``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">ToCompositeRangeFrom&lt;TSource, T&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range using only From boundary.
The To boundary value is taken from the next item in sequence (+∞ for the last item in sequence)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TSource&gt; ToCompositeRangeFrom&lt;TSource, T&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, T&gt; fromValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TSource&gt;</td>
        <td><span class="parametername">source</span></td>
        <td><p>Original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a value for the From boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TSource&gt;</td>
        <td><p>A new composite range with keys filled from the original collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TSource</span></td>
        <td><p>The type of the values in original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeFrom__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeFrom%60%603(System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L79">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeFrom__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeFrom``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">ToCompositeRangeFrom&lt;TSource, T, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, T&gt;, Func&lt;TSource, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range using only From boundary.
The To boundary value is taken from the next item in sequence (+∞ for the last item in sequence)</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ToCompositeRangeFrom&lt;TSource, T, TKey&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, T&gt; fromValueSelector, Func&lt;TSource, TKey&gt; keySelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TSource&gt;</td>
        <td><span class="parametername">source</span></td>
        <td><p>Original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, T&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a value for the From boundary.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, TKey&gt;</td>
        <td><span class="parametername">keySelector</span></td>
        <td><p>Callback to obtain a value for the range key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A new composite range with keys filled from the original collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TSource</span></td>
        <td><p>The type of the values in original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeTo__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeTo%60%602(System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L133">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeTo__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeTo``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">ToCompositeRangeTo&lt;TSource, T&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, T&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range using only To boundary.
The From boundary value is taken from the previous item in sequence (-∞ for the last item in sequence).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TSource&gt; ToCompositeRangeTo&lt;TSource, T&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, T&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TSource&gt;</td>
        <td><span class="parametername">source</span></td>
        <td><p>Original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a value for the To boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TSource&gt;</td>
        <td><p>A new composite range with keys filled from the original collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TSource</span></td>
        <td><p>The type of the values in original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeTo__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeTo%60%603(System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L150">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_ToCompositeRangeTo__3_System_Collections_Generic_IEnumerable___0__System_Func___0___1__System_Func___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.ToCompositeRangeTo``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">ToCompositeRangeTo&lt;TSource, T, TKey&gt;(IEnumerable&lt;TSource&gt;, Func&lt;TSource, T&gt;, Func&lt;TSource, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Converts sequence of elements to the composite range using only To boundary.
The From boundary value is taken from the previous item in sequence (-∞ for the last item in sequence).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; ToCompositeRangeTo&lt;TSource, T, TKey&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, T&gt; toValueSelector, Func&lt;TSource, TKey&gt; keySelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Collections.Generic.IEnumerable</span>&lt;TSource&gt;</td>
        <td><span class="parametername">source</span></td>
        <td><p>Original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, T&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a value for the To boundary.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TSource, TKey&gt;</td>
        <td><span class="parametername">keySelector</span></td>
        <td><p>Callback to obtain a value for the range key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A new composite range with keys filled from the original collection.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">TSource</span></td>
        <td><p>The type of the values in original collection.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__1_CodeJam_Ranges_CompositeRange___0____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimFrom%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L720">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__1_CodeJam_Ranges_CompositeRange___0____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom``1(CodeJam.Ranges.CompositeRange{``0},``0)">TrimFrom&lt;T&gt;(CompositeRange&lt;T&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; TrimFrom&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>A new value From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range trimmed with a new From boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryFrom___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimFrom%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.RangeBoundaryFrom%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L729">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryFrom___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.RangeBoundaryFrom{``0})">TrimFrom&lt;T&gt;(CompositeRange&lt;T&gt;, RangeBoundaryFrom&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; TrimFrom&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, RangeBoundaryFrom&lt;T&gt; from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryFrom-1.html">RangeBoundaryFrom</a>&lt;T&gt;</td>
        <td><span class="parametername">from</span></td>
        <td><p>A new boundary From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range trimmed with a new From boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__2_CodeJam_Ranges_CompositeRange___0___1____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimFrom%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L763">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__2_CodeJam_Ranges_CompositeRange___0___1____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom``2(CodeJam.Ranges.CompositeRange{``0,``1},``0)">TrimFrom&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; TrimFrom&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">from</span></td>
        <td><p>A new value From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range trimmed with a new From boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryFrom___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimFrom%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.RangeBoundaryFrom%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L773">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimFrom__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryFrom___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimFrom``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.RangeBoundaryFrom{``0})">TrimFrom&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, RangeBoundaryFrom&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the left.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; TrimFrom&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, RangeBoundaryFrom&lt;T&gt; from)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryFrom-1.html">RangeBoundaryFrom</a>&lt;T&gt;</td>
        <td><span class="parametername">from</span></td>
        <td><p>A new boundary From.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range trimmed with a new From boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimTo__1_CodeJam_Ranges_CompositeRange___0____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimTo%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L738">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo__1_CodeJam_Ranges_CompositeRange___0____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo``1(CodeJam.Ranges.CompositeRange{``0},``0)">TrimTo&lt;T&gt;(CompositeRange&lt;T&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; TrimTo&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>A new value To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range trimmed with a new To boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimTo__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryTo___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimTo%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.RangeBoundaryTo%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L747">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_RangeBoundaryTo___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.RangeBoundaryTo{``0})">TrimTo&lt;T&gt;(CompositeRange&lt;T&gt;, RangeBoundaryTo&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; TrimTo&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, RangeBoundaryTo&lt;T&gt; to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryTo-1.html">RangeBoundaryTo</a>&lt;T&gt;</td>
        <td><span class="parametername">to</span></td>
        <td><p>A new boundary To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A range trimmed with a new To boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimTo__2_CodeJam_Ranges_CompositeRange___0___1____0_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimTo%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%600)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L783">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo__2_CodeJam_Ranges_CompositeRange___0___1____0_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo``2(CodeJam.Ranges.CompositeRange{``0,``1},``0)">TrimTo&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, T)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; TrimTo&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, T to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">T</span></td>
        <td><span class="parametername">to</span></td>
        <td><p>A new value To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range trimmed with a new To boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_TrimTo__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryTo___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.TrimTo%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.RangeBoundaryTo%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L793">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_TrimTo__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_RangeBoundaryTo___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.TrimTo``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.RangeBoundaryTo{``0})">TrimTo&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, RangeBoundaryTo&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Trims the range from the right.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; TrimTo&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, RangeBoundaryTo&lt;T&gt; to)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.RangeBoundaryTo-1.html">RangeBoundaryTo</a>&lt;T&gt;</td>
        <td><span class="parametername">to</span></td>
        <td><p>A new boundary To.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A range trimmed with a new To boundary.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Union__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_CompositeRange___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Union%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.CompositeRange%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L495">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Union_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Union__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_CompositeRange___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.CompositeRange{``0})">Union&lt;T&gt;(CompositeRange&lt;T&gt;, CompositeRange&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns a union range containing all subranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Union&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, CompositeRange&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to union with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A union range containing all subranges.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Union__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Union%60%601(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CCodeJam.Ranges.Range%7B%60%600%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L486">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Union_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Union__1_CodeJam_Ranges_CompositeRange___0__CodeJam_Ranges_Range___0__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union``1(CodeJam.Ranges.CompositeRange{``0},CodeJam.Ranges.Range{``0})">Union&lt;T&gt;(CompositeRange&lt;T&gt;, Range&lt;T&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns a union range containing all subranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; Union&lt;T&gt;(this CompositeRange&lt;T&gt; compositeRange, Range&lt;T&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-1.html">Range</a>&lt;T&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to union with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A union range containing all subranges.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Union__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_CompositeRange___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Union%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L529">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Union_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Union__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_CompositeRange___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.CompositeRange{``0,``1})">Union&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, CompositeRange&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns a union range containing all subranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Union&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, CompositeRange&lt;T, TKey&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to union with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A union range containing all subranges.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_Union__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.Union%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CCodeJam.Ranges.Range%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L519">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_Union_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_Union__2_CodeJam_Ranges_CompositeRange___0___1__CodeJam_Ranges_Range___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.Union``2(CodeJam.Ranges.CompositeRange{``0,``1},CodeJam.Ranges.Range{``0,``1})">Union&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;, Range&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Returns a union range containing all subranges.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey&gt; Union&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Range&lt;T, TKey&gt; other)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.Range-2.html">Range</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">other</span></td>
        <td><p>The range to union with.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><p>A union range containing all subranges.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithKeys__2_CodeJam_Ranges_CompositeRange___0____1_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithKeys%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2C%60%601)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L199">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithKeys_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithKeys*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithKeys__2_CodeJam_Ranges_CompositeRange___0____1_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithKeys``2(CodeJam.Ranges.CompositeRange{``0},``1)">WithKeys&lt;T, TKey2&gt;(CompositeRange&lt;T&gt;, TKey2)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey2&gt; WithKeys&lt;T, TKey2&gt;(this CompositeRange&lt;T&gt; compositeRange, TKey2 key)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TKey2</span></td>
        <td><span class="parametername">key</span></td>
        <td><p>The value of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey2&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithKeys__3_CodeJam_Ranges_CompositeRange___0___1____2_.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithKeys%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2C%60%602)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L212">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithKeys_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithKeys*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithKeys__3_CodeJam_Ranges_CompositeRange___0___1____2_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithKeys``3(CodeJam.Ranges.CompositeRange{``0,``1},``2)">WithKeys&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, TKey2)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey2&gt; WithKeys&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, TKey2 key)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">TKey2</span></td>
        <td><span class="parametername">key</span></td>
        <td><p>The value of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey2&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithKeys__3_CodeJam_Ranges_CompositeRange___0___1__System_Func___1___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithKeys%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%601%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L226">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithKeys_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithKeys*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithKeys__3_CodeJam_Ranges_CompositeRange___0___1__System_Func___1___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithKeys``3(CodeJam.Ranges.CompositeRange{``0,``1},System.Func{``1,``2})">WithKeys&lt;T, TKey, TKey2&gt;(CompositeRange&lt;T, TKey&gt;, Func&lt;TKey, TKey2&gt;)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T, TKey2&gt; WithKeys&lt;T, TKey, TKey2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Func&lt;TKey, TKey2&gt; keySelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;TKey, TKey2&gt;</td>
        <td><span class="parametername">keySelector</span></td>
        <td><p>Callback to obtain a value for the range key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey2&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey2</span></td>
        <td><p>The type of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithoutKeys__2_CodeJam_Ranges_CompositeRange___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithoutKeys%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.cs/#L239">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithoutKeys_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithoutKeys*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithoutKeys__2_CodeJam_Ranges_CompositeRange___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithoutKeys``2(CodeJam.Ranges.CompositeRange{``0,``1})">WithoutKeys&lt;T, TKey&gt;(CompositeRange&lt;T, TKey&gt;)</h4>
  <div class="markdown level1 summary"><p>Removes keys from the composite range.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T&gt; WithoutKeys&lt;T, TKey&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><p>A new composite range without associated keys.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithValues__2_CodeJam_Ranges_CompositeRange___0__System_Func___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithValues%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L89">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithValues_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithValues__2_CodeJam_Ranges_CompositeRange___0__System_Func___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues``2(CodeJam.Ranges.CompositeRange{``0},System.Func{``0,``1})">WithValues&lt;T, T2&gt;(CompositeRange&lt;T&gt;, Func&lt;T, T2&gt;)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T2&gt; WithValues&lt;T, T2&gt;(this CompositeRange&lt;T&gt; compositeRange, Func&lt;T, T2&gt; newValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T2&gt;</td>
        <td><span class="parametername">newValueSelector</span></td>
        <td><p>The value of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T2&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T2</span></td>
        <td><p>The type of new range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithValues__2_CodeJam_Ranges_CompositeRange___0__System_Func___0___1__System_Func___0___1__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithValues%60%602(CodeJam.Ranges.CompositeRange%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%601%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.NoKey.cs/#L104">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithValues_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithValues__2_CodeJam_Ranges_CompositeRange___0__System_Func___0___1__System_Func___0___1__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues``2(CodeJam.Ranges.CompositeRange{``0},System.Func{``0,``1},System.Func{``0,``1})">WithValues&lt;T, T2&gt;(CompositeRange&lt;T&gt;, Func&lt;T, T2&gt;, Func&lt;T, T2&gt;)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T2&gt; WithValues&lt;T, T2&gt;(this CompositeRange&lt;T&gt; compositeRange, Func&lt;T, T2&gt; fromValueSelector, Func&lt;T, T2&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T2&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a new value for the From boundary. Used if boundary has a value.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T2&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a new value for the To boundary. Used if boundary has a value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-1.html">CompositeRange</a>&lt;T2&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T2</span></td>
        <td><p>The type of new range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithValues__3_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithValues%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L103">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithValues_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithValues__3_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues``3(CodeJam.Ranges.CompositeRange{``0,``1},System.Func{``0,``2})">WithValues&lt;T, TKey, T2&gt;(CompositeRange&lt;T, TKey&gt;, Func&lt;T, T2&gt;)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T2, TKey&gt; WithValues&lt;T, TKey, T2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Func&lt;T, T2&gt; newValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T2&gt;</td>
        <td><span class="parametername">newValueSelector</span></td>
        <td><p>The value of the new key.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T2, TKey&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T2</span></td>
        <td><p>The type of new range values.</p>
</td>
      </tr>
    </tbody>
  </table>
  <span class="small pull-right mobile-hide">
    <span class="divider">|</span>
    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions_WithValues__3_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___2__System_Func___0___2__.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions.WithValues%60%603(CodeJam.Ranges.CompositeRange%7B%60%600%2C%60%601%7D%2CSystem.Func%7B%60%600%2C%60%602%7D%2CSystem.Func%7B%60%600%2C%60%602%7D)%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A">Improve this Doc</a>
  </span>
  <span class="small pull-right mobile-hide">
    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L119">View Source</a>
  </span>
  <a id="CodeJam_Ranges_CompositeRangeExtensions_WithValues_" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues*"></a>
  <h4 id="CodeJam_Ranges_CompositeRangeExtensions_WithValues__3_CodeJam_Ranges_CompositeRange___0___1__System_Func___0___2__System_Func___0___2__" data-uid="CodeJam.Ranges.CompositeRangeExtensions.WithValues``3(CodeJam.Ranges.CompositeRange{``0,``1},System.Func{``0,``2},System.Func{``0,``2})">WithValues&lt;T, TKey, T2&gt;(CompositeRange&lt;T, TKey&gt;, Func&lt;T, T2&gt;, Func&lt;T, T2&gt;)</h4>
  <div class="markdown level1 summary"><p>Creates a new composite range with the key specified.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static CompositeRange&lt;T2, TKey&gt; WithValues&lt;T, TKey, T2&gt;(this CompositeRange&lt;T, TKey&gt; compositeRange, Func&lt;T, T2&gt; fromValueSelector, Func&lt;T, T2&gt; toValueSelector)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T, TKey&gt;</td>
        <td><span class="parametername">compositeRange</span></td>
        <td><p>The source range.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T2&gt;</td>
        <td><span class="parametername">fromValueSelector</span></td>
        <td><p>Callback to obtain a new value for the From boundary. Used if boundary has a value.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.Func</span>&lt;T, T2&gt;</td>
        <td><span class="parametername">toValueSelector</span></td>
        <td><p>Callback to obtain a new value for the To boundary. Used if boundary has a value.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="CodeJam.Ranges.CompositeRange-2.html">CompositeRange</a>&lt;T2, TKey&gt;</td>
        <td><p>A new composite range with the key specified.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="typeParameters">Type Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="parametername">T</span></td>
        <td><p>The type of the range values.</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">TKey</span></td>
        <td><p>The type of the range key</p>
</td>
      </tr>
      <tr>
        <td><span class="parametername">T2</span></td>
        <td><p>The type of new range values.</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/rsdn/CodeJam/new/master/apiSpec/new?filename=CodeJam_Ranges_CompositeRangeExtensions.md&amp;value=---%0Auid%3A%20CodeJam.Ranges.CompositeRangeExtensions%0Asummary%3A%20'*You%20can%20override%20summary%20for%20the%20API%20here%20using%20*MARKDOWN*%20syntax'%0A---%0A%0A*Please%20type%20below%20more%20information%20about%20this%20API%3A*%0A%0A" class="contribution-link">Improve this Doc</a>
                  </li>
                  <li>
                    <a href="https://github.com/rsdn/CodeJam/blob/master/Main/src/Ranges/[RangeExtensions]/CompositeRangeExtensions.WithKey.generated.cs/#L24" class="contribution-link">View Source</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            Copyright � 2015-2017
            
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../styles/main.js"></script>
  </body>
</html>
