<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>gem5: mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.7 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="modules.html"><span>Modules</span></a></li>
    <li><a href="namespaces.html"><span>Namespaces</span></a></li>
    <li><a href="classes.html"><span>Classes</span></a></li>
    <li id="current"><a href="files.html"><span>Files</span></a></li>
    <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
  </ul></div>
<div class="tabs">
  <ul>
    <li><a href="files.html"><span>File&nbsp;List</span></a></li>
    <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
  </ul></div>
<h1>mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.cc</h1><a href="GarnetNetwork__d_8cc.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Copyright (c) 2008 Princeton University</span>
<a name="l00003"></a>00003 <span class="comment"> * All rights reserved.</span>
<a name="l00004"></a>00004 <span class="comment"> *</span>
<a name="l00005"></a>00005 <span class="comment"> * Redistribution and use in source and binary forms, with or without</span>
<a name="l00006"></a>00006 <span class="comment"> * modification, are permitted provided that the following conditions are</span>
<a name="l00007"></a>00007 <span class="comment"> * met: redistributions of source code must retain the above copyright</span>
<a name="l00008"></a>00008 <span class="comment"> * notice, this list of conditions and the following disclaimer;</span>
<a name="l00009"></a>00009 <span class="comment"> * redistributions in binary form must reproduce the above copyright</span>
<a name="l00010"></a>00010 <span class="comment"> * notice, this list of conditions and the following disclaimer in the</span>
<a name="l00011"></a>00011 <span class="comment"> * documentation and/or other materials provided with the distribution;</span>
<a name="l00012"></a>00012 <span class="comment"> * neither the name of the copyright holders nor the names of its</span>
<a name="l00013"></a>00013 <span class="comment"> * contributors may be used to endorse or promote products derived from</span>
<a name="l00014"></a>00014 <span class="comment"> * this software without specific prior written permission.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>
<a name="l00017"></a>00017 <span class="comment"> * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>
<a name="l00018"></a>00018 <span class="comment"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span>
<a name="l00019"></a>00019 <span class="comment"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>
<a name="l00020"></a>00020 <span class="comment"> * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span>
<a name="l00021"></a>00021 <span class="comment"> * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</span>
<a name="l00022"></a>00022 <span class="comment"> * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span>
<a name="l00023"></a>00023 <span class="comment"> * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</span>
<a name="l00024"></a>00024 <span class="comment"> * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span>
<a name="l00025"></a>00025 <span class="comment"> * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span>
<a name="l00026"></a>00026 <span class="comment"> * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span>
<a name="l00027"></a>00027 <span class="comment"> *</span>
<a name="l00028"></a>00028 <span class="comment"> * Authors: Niket Agarwal</span>
<a name="l00029"></a>00029 <span class="comment"> */</span>
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="preprocessor">#include &lt;cassert&gt;</span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#include "<a class="code" href="cast_8hh.html">base/cast.hh</a>"</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include "<a class="code" href="stl__helpers_8hh.html">base/stl_helpers.hh</a>"</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include "<a class="code" href="Global_8hh.html">mem/ruby/common/Global.hh</a>"</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include "<a class="code" href="NetDest_8hh.html">mem/ruby/common/NetDest.hh</a>"</span>
<a name="l00037"></a>00037 <span class="preprocessor">#include "<a class="code" href="CreditLink__d_8hh.html">mem/ruby/network/garnet/fixed-pipeline/CreditLink_d.hh</a>"</span>
<a name="l00038"></a>00038 <span class="preprocessor">#include "<a class="code" href="GarnetLink__d_8hh.html">mem/ruby/network/garnet/fixed-pipeline/GarnetLink_d.hh</a>"</span>
<a name="l00039"></a>00039 <span class="preprocessor">#include "<a class="code" href="GarnetNetwork__d_8hh.html">mem/ruby/network/garnet/fixed-pipeline/GarnetNetwork_d.hh</a>"</span>
<a name="l00040"></a>00040 <span class="preprocessor">#include "<a class="code" href="NetworkInterface__d_8hh.html">mem/ruby/network/garnet/fixed-pipeline/NetworkInterface_d.hh</a>"</span>
<a name="l00041"></a>00041 <span class="preprocessor">#include "<a class="code" href="NetworkLink__d_8hh.html">mem/ruby/network/garnet/fixed-pipeline/NetworkLink_d.hh</a>"</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include "<a class="code" href="Router__d_8hh.html">mem/ruby/network/garnet/fixed-pipeline/Router_d.hh</a>"</span>
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keyword">using namespace </span>std;
<a name="l00045"></a>00045 <span class="keyword">using</span> <a class="code" href="namespacem5_1_1stl__helpers.html#789891cb80a549639c232ca96afb3fe1">m5::stl_helpers::deletePointers</a>;
<a name="l00046"></a>00046 
<a name="l00047"></a><a class="code" href="classGarnetNetwork__d.html#7b0b8a98ebe6fe5f5a7cc0e56559b4b8">00047</a> <a class="code" href="classGarnetNetwork__d.html#7b0b8a98ebe6fe5f5a7cc0e56559b4b8">GarnetNetwork_d::GarnetNetwork_d</a>(<span class="keyword">const</span> <a class="code" href="namespaceThePipeline.html#a93998cbab17d7a8eb0acb0c9153b70a">Params</a> *<a class="code" href="namespaceMipsISA.html#e12ae9e12fab22594609e2fefce7f7c2">p</a>)
<a name="l00048"></a>00048     : <a class="code" href="classBaseGarnetNetwork.html">BaseGarnetNetwork</a>(p)
<a name="l00049"></a>00049 {
<a name="l00050"></a>00050     <a class="code" href="classGarnetNetwork__d.html#bc94c3870730d90676f93eff3a228168">m_buffers_per_data_vc</a> = p-&gt;buffers_per_data_vc;
<a name="l00051"></a>00051     <a class="code" href="classGarnetNetwork__d.html#bde574665f5b8b9e508a0ab225dff4ef">m_buffers_per_ctrl_vc</a> = p-&gt;buffers_per_ctrl_vc;
<a name="l00052"></a>00052 
<a name="l00053"></a>00053     <a class="code" href="classGarnetNetwork__d.html#d4e58efc892b06c1b02fd32991a58d82">m_vnet_type</a>.resize(<a class="code" href="classNetwork.html#068f576b7d341d24e20b9565c83cce48">m_virtual_networks</a>);
<a name="l00054"></a>00054     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#d4e58efc892b06c1b02fd32991a58d82">m_vnet_type</a>.size(); <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>++) {
<a name="l00055"></a>00055         <a class="code" href="classGarnetNetwork__d.html#d4e58efc892b06c1b02fd32991a58d82">m_vnet_type</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>] = <a class="code" href="NetworkHeader_8hh.html#101d399ed954ebfe3619308e600de4d3dd0d18811b4f7962d7e60a772fd8d503">NULL_VNET_</a>; <span class="comment">// default</span>
<a name="l00056"></a>00056     }
<a name="l00057"></a>00057 
<a name="l00058"></a>00058     <span class="comment">// record the routers</span>
<a name="l00059"></a>00059     <span class="keywordflow">for</span> (<a class="code" href="classstd_1_1vector.html">vector&lt;BasicRouter*&gt;::const_iterator</a> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> =  p-&gt;routers.begin();
<a name="l00060"></a>00060          <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> != p-&gt;routers.end(); ++<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>) {
<a name="l00061"></a>00061         <a class="code" href="classRouter__d.html">Router_d</a>* router = safe_cast&lt;Router_d*&gt;(*<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>);
<a name="l00062"></a>00062         <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>.push_back(router);
<a name="l00063"></a>00063 
<a name="l00064"></a>00064         <span class="comment">// initialize the router's network pointers</span>
<a name="l00065"></a>00065         router-&gt;init_net_ptr(<span class="keyword">this</span>);
<a name="l00066"></a>00066     }
<a name="l00067"></a>00067 
<a name="l00068"></a>00068     <span class="comment">// record the network interfaces</span>
<a name="l00069"></a>00069     <span class="keywordflow">for</span> (<a class="code" href="classstd_1_1vector.html">vector&lt;ClockedObject*&gt;::const_iterator</a> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = p-&gt;netifs.begin();
<a name="l00070"></a>00070          <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> != p-&gt;netifs.end(); ++<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>) {
<a name="l00071"></a>00071         <a class="code" href="classNetworkInterface__d.html">NetworkInterface_d</a> *<a class="code" href="namespacePowerISA.html#ebceacd450396814cf9033e707b21655">ni</a> = safe_cast&lt;NetworkInterface_d *&gt;(*<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>);
<a name="l00072"></a>00072         <a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>.push_back(<a class="code" href="namespacePowerISA.html#ebceacd450396814cf9033e707b21655">ni</a>);
<a name="l00073"></a>00073         <a class="code" href="namespacePowerISA.html#ebceacd450396814cf9033e707b21655">ni</a>-&gt;init_net_ptr(<span class="keyword">this</span>);
<a name="l00074"></a>00074     }
<a name="l00075"></a>00075 }
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 <span class="keywordtype">void</span>
<a name="l00078"></a><a class="code" href="classGarnetNetwork__d.html#9631341b2a4a0c9be4e54045db8cf687">00078</a> <a class="code" href="classGarnetNetwork__d.html#9631341b2a4a0c9be4e54045db8cf687">GarnetNetwork_d::init</a>()
<a name="l00079"></a>00079 {
<a name="l00080"></a>00080     <a class="code" href="classBaseGarnetNetwork.html#a46cf0bd771e9c09c05e7cf43f013fdf">BaseGarnetNetwork::init</a>();
<a name="l00081"></a>00081 
<a name="l00082"></a>00082     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>=0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classNetwork.html#127e3eb3884dbce0eb1184c6295213d2">m_nodes</a>; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>++) {
<a name="l00083"></a>00083         <a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;addNode(<a class="code" href="classNetwork.html#1a73121626eede748600948485096f28">m_toNetQueues</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>], <a class="code" href="classNetwork.html#813a61596185b9a3104f395b30913ad0">m_fromNetQueues</a>[i]);
<a name="l00084"></a>00084     }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="comment">// The topology pointer should have already been initialized in the</span>
<a name="l00087"></a>00087     <span class="comment">// parent network constructor</span>
<a name="l00088"></a>00088     assert(<a class="code" href="classNetwork.html#80360a850b12ae4b9bc6418f6d837159">m_topology_ptr</a> != NULL);
<a name="l00089"></a>00089     <a class="code" href="classNetwork.html#80360a850b12ae4b9bc6418f6d837159">m_topology_ptr</a>-&gt;<a class="code" href="classTopology.html#3a6118254f13a1f8a03d24f1307ccf2c">createLinks</a>(<span class="keyword">this</span>);
<a name="l00090"></a>00090 
<a name="l00091"></a>00091     <span class="comment">// FaultModel: declare each router to the fault model</span>
<a name="l00092"></a>00092     <span class="keywordflow">if</span>(<a class="code" href="classBaseGarnetNetwork.html#c5835a080854ad531a33088d2e5874df">isFaultModelEnabled</a>()){
<a name="l00093"></a>00093         <span class="keywordflow">for</span> (<a class="code" href="classstd_1_1vector.html">vector&lt;Router_d*&gt;::const_iterator</a> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>= <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>.begin();
<a name="l00094"></a>00094              <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> != <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>.end(); ++<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>) {
<a name="l00095"></a>00095             <a class="code" href="classRouter__d.html">Router_d</a>* router = safe_cast&lt;Router_d*&gt;(*<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>);
<a name="l00096"></a>00096             <span class="keywordtype">int</span> router_id M5_VAR_USED =
<a name="l00097"></a>00097                 <a class="code" href="classBaseGarnetNetwork.html#b64da443477e6a9c28f8945f3dd5cf70">fault_model</a>-&gt;<a class="code" href="classFaultModel.html#dec49134e94ef16d8afdf6155a5ad5fe">declare_router</a>(router-&gt;get_num_inports(),
<a name="l00098"></a>00098                                             router-&gt;get_num_outports(),
<a name="l00099"></a>00099                                             router-&gt;get_vc_per_vnet(),
<a name="l00100"></a>00100                                             <a class="code" href="classGarnetNetwork__d.html#9117f3bbbc142f0b48bb1f2000a4157d">getBuffersPerDataVC</a>(),
<a name="l00101"></a>00101                                             <a class="code" href="classGarnetNetwork__d.html#819fc0efd50dec43cc136cd3c117b741">getBuffersPerCtrlVC</a>());
<a name="l00102"></a>00102             assert(router_id == router-&gt;get_id());
<a name="l00103"></a>00103             router-&gt;printAggregateFaultProbability(cout);
<a name="l00104"></a>00104             router-&gt;printFaultVector(cout);
<a name="l00105"></a>00105         }
<a name="l00106"></a>00106     }
<a name="l00107"></a>00107 }
<a name="l00108"></a>00108 
<a name="l00109"></a><a class="code" href="classGarnetNetwork__d.html#e8e44e49f3183dcf460cefff62e0b915">00109</a> <a class="code" href="classGarnetNetwork__d.html#e8e44e49f3183dcf460cefff62e0b915">GarnetNetwork_d::~GarnetNetwork_d</a>()
<a name="l00110"></a>00110 {
<a name="l00111"></a>00111     <a class="code" href="namespacem5_1_1stl__helpers.html#789891cb80a549639c232ca96afb3fe1">deletePointers</a>(<a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>);
<a name="l00112"></a>00112     <a class="code" href="namespacem5_1_1stl__helpers.html#789891cb80a549639c232ca96afb3fe1">deletePointers</a>(<a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>);
<a name="l00113"></a>00113     <a class="code" href="namespacem5_1_1stl__helpers.html#789891cb80a549639c232ca96afb3fe1">deletePointers</a>(<a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>);
<a name="l00114"></a>00114     <a class="code" href="namespacem5_1_1stl__helpers.html#789891cb80a549639c232ca96afb3fe1">deletePointers</a>(<a class="code" href="classGarnetNetwork__d.html#0284ffac042cc592a7d383eaa3ef63fc">m_creditlinks</a>);
<a name="l00115"></a>00115 }
<a name="l00116"></a>00116 
<a name="l00117"></a>00117 <span class="comment">/*</span>
<a name="l00118"></a>00118 <span class="comment"> * This function creates a link from the Network Interface (NI)</span>
<a name="l00119"></a>00119 <span class="comment"> * into the Network.</span>
<a name="l00120"></a>00120 <span class="comment"> * It creates a Network Link from the NI to a Router and a Credit Link from</span>
<a name="l00121"></a>00121 <span class="comment"> * the Router to the NI</span>
<a name="l00122"></a>00122 <span class="comment">*/</span>
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 <span class="keywordtype">void</span>
<a name="l00125"></a><a class="code" href="classGarnetNetwork__d.html#7159c3060272052898db0f7cc56f9fad">00125</a> <a class="code" href="classGarnetNetwork__d.html#7159c3060272052898db0f7cc56f9fad">GarnetNetwork_d::makeInLink</a>(<a class="code" href="TypeDefines_8hh.html#83c14b4ae37e80071f6b3506a6c46151">NodeID</a> src, <a class="code" href="TypeDefines_8hh.html#c925a332c83eaf1e40e056e7a20ebcd8">SwitchID</a> dest, <a class="code" href="classBasicLink.html">BasicLink</a>* link,
<a name="l00126"></a>00126                             LinkDirection direction,
<a name="l00127"></a>00127                             <span class="keyword">const</span> <a class="code" href="classNetDest.html">NetDest</a>&amp; routing_table_entry)
<a name="l00128"></a>00128 {
<a name="l00129"></a>00129     assert(src &lt; <a class="code" href="classNetwork.html#127e3eb3884dbce0eb1184c6295213d2">m_nodes</a>);
<a name="l00130"></a>00130 
<a name="l00131"></a>00131     <a class="code" href="classGarnetExtLink__d.html">GarnetExtLink_d</a>* garnet_link = safe_cast&lt;GarnetExtLink_d*&gt;(link);
<a name="l00132"></a>00132     <a class="code" href="classNetworkLink__d.html">NetworkLink_d</a>* net_link = garnet_link-&gt;<a class="code" href="classGarnetExtLink__d.html#609bb8dbcd8058d7351a1f67f0b98a3f">m_network_links</a>[direction];
<a name="l00133"></a>00133     <a class="code" href="classCreditLink__d.html">CreditLink_d</a>* credit_link = garnet_link-&gt;<a class="code" href="classGarnetExtLink__d.html#f201fd2dc57c793eae011d2ef5d8622b">m_credit_links</a>[direction];
<a name="l00134"></a>00134 
<a name="l00135"></a>00135     <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>.push_back(net_link);
<a name="l00136"></a>00136     <a class="code" href="classGarnetNetwork__d.html#0284ffac042cc592a7d383eaa3ef63fc">m_creditlinks</a>.push_back(credit_link);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138     <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[dest]-&gt;addInPort(net_link, credit_link);
<a name="l00139"></a>00139     <a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>[src]-&gt;addOutPort(net_link, credit_link);
<a name="l00140"></a>00140 }
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="comment">/*</span>
<a name="l00143"></a>00143 <span class="comment"> * This function creates a link from the Network to a NI.</span>
<a name="l00144"></a>00144 <span class="comment"> * It creates a Network Link from a Router to the NI and</span>
<a name="l00145"></a>00145 <span class="comment"> * a Credit Link from NI to the Router</span>
<a name="l00146"></a>00146 <span class="comment">*/</span>
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 <span class="keywordtype">void</span>
<a name="l00149"></a><a class="code" href="classGarnetNetwork__d.html#b257488afff89eefa6647d038378d869">00149</a> <a class="code" href="classGarnetNetwork__d.html#b257488afff89eefa6647d038378d869">GarnetNetwork_d::makeOutLink</a>(<a class="code" href="TypeDefines_8hh.html#c925a332c83eaf1e40e056e7a20ebcd8">SwitchID</a> src, <a class="code" href="TypeDefines_8hh.html#83c14b4ae37e80071f6b3506a6c46151">NodeID</a> dest, <a class="code" href="classBasicLink.html">BasicLink</a>* link,
<a name="l00150"></a>00150                              LinkDirection direction,
<a name="l00151"></a>00151                              <span class="keyword">const</span> <a class="code" href="classNetDest.html">NetDest</a>&amp; routing_table_entry)
<a name="l00152"></a>00152 {
<a name="l00153"></a>00153     assert(dest &lt; <a class="code" href="classNetwork.html#127e3eb3884dbce0eb1184c6295213d2">m_nodes</a>);
<a name="l00154"></a>00154     assert(src &lt; <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>.size());
<a name="l00155"></a>00155     assert(<a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[src] != NULL);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <a class="code" href="classGarnetExtLink__d.html">GarnetExtLink_d</a>* garnet_link = safe_cast&lt;GarnetExtLink_d*&gt;(link);
<a name="l00158"></a>00158     <a class="code" href="classNetworkLink__d.html">NetworkLink_d</a>* net_link = garnet_link-&gt;<a class="code" href="classGarnetExtLink__d.html#609bb8dbcd8058d7351a1f67f0b98a3f">m_network_links</a>[direction];
<a name="l00159"></a>00159     <a class="code" href="classCreditLink__d.html">CreditLink_d</a>* credit_link = garnet_link-&gt;<a class="code" href="classGarnetExtLink__d.html#f201fd2dc57c793eae011d2ef5d8622b">m_credit_links</a>[direction];
<a name="l00160"></a>00160 
<a name="l00161"></a>00161     <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>.push_back(net_link);
<a name="l00162"></a>00162     <a class="code" href="classGarnetNetwork__d.html#0284ffac042cc592a7d383eaa3ef63fc">m_creditlinks</a>.push_back(credit_link);
<a name="l00163"></a>00163 
<a name="l00164"></a>00164     <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[src]-&gt;addOutPort(net_link, routing_table_entry,
<a name="l00165"></a>00165                                          link-&gt;<a class="code" href="classBasicLink.html#64487a2c53ccdd40a3b6f61ca3ce6534">m_weight</a>, credit_link);
<a name="l00166"></a>00166     <a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>[dest]-&gt;addInPort(net_link, credit_link);
<a name="l00167"></a>00167 }
<a name="l00168"></a>00168 
<a name="l00169"></a>00169 <span class="comment">/*</span>
<a name="l00170"></a>00170 <span class="comment"> * This function creates an internal network link</span>
<a name="l00171"></a>00171 <span class="comment">*/</span>
<a name="l00172"></a>00172 
<a name="l00173"></a>00173 <span class="keywordtype">void</span>
<a name="l00174"></a><a class="code" href="classGarnetNetwork__d.html#46370fd6e8d94fd166f1aa3c546b8974">00174</a> <a class="code" href="classGarnetNetwork__d.html#46370fd6e8d94fd166f1aa3c546b8974">GarnetNetwork_d::makeInternalLink</a>(<a class="code" href="TypeDefines_8hh.html#c925a332c83eaf1e40e056e7a20ebcd8">SwitchID</a> src, <a class="code" href="TypeDefines_8hh.html#c925a332c83eaf1e40e056e7a20ebcd8">SwitchID</a> dest, <a class="code" href="classBasicLink.html">BasicLink</a>* link,
<a name="l00175"></a>00175                                   LinkDirection direction,
<a name="l00176"></a>00176                                   <span class="keyword">const</span> <a class="code" href="classNetDest.html">NetDest</a>&amp; routing_table_entry)
<a name="l00177"></a>00177 {
<a name="l00178"></a>00178     <a class="code" href="classGarnetIntLink__d.html">GarnetIntLink_d</a>* garnet_link = safe_cast&lt;GarnetIntLink_d*&gt;(link);
<a name="l00179"></a>00179     <a class="code" href="classNetworkLink__d.html">NetworkLink_d</a>* net_link = garnet_link-&gt;<a class="code" href="classGarnetIntLink__d.html#74e24681482b2e24e98900b05b104a8a">m_network_links</a>[direction];
<a name="l00180"></a>00180     <a class="code" href="classCreditLink__d.html">CreditLink_d</a>* credit_link = garnet_link-&gt;<a class="code" href="classGarnetIntLink__d.html#5b72460824783e156489f753b746279e">m_credit_links</a>[direction];
<a name="l00181"></a>00181 
<a name="l00182"></a>00182     <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>.push_back(net_link);
<a name="l00183"></a>00183     <a class="code" href="classGarnetNetwork__d.html#0284ffac042cc592a7d383eaa3ef63fc">m_creditlinks</a>.push_back(credit_link);
<a name="l00184"></a>00184 
<a name="l00185"></a>00185     <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[dest]-&gt;addInPort(net_link, credit_link);
<a name="l00186"></a>00186     <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[src]-&gt;addOutPort(net_link, routing_table_entry,
<a name="l00187"></a>00187                                          link-&gt;<a class="code" href="classBasicLink.html#64487a2c53ccdd40a3b6f61ca3ce6534">m_weight</a>, credit_link);
<a name="l00188"></a>00188 }
<a name="l00189"></a>00189 
<a name="l00190"></a>00190 <span class="keywordtype">void</span>
<a name="l00191"></a>00191 <a class="code" href="classGarnetNetwork__d.html#75c580344c2e2d0b498dab4fb1e80cb0">GarnetNetwork_d::checkNetworkAllocation</a>(<a class="code" href="TypeDefines_8hh.html#83c14b4ae37e80071f6b3506a6c46151">NodeID</a> <span class="keywordtype">id</span>, <span class="keywordtype">bool</span> ordered,
<a name="l00192"></a>00192                                         <span class="keywordtype">int</span> network_num,
<a name="l00193"></a>00193                                         string vnet_type)
<a name="l00194"></a>00194 {
<a name="l00195"></a>00195     assert(<span class="keywordtype">id</span> &lt; <a class="code" href="classNetwork.html#127e3eb3884dbce0eb1184c6295213d2">m_nodes</a>);
<a name="l00196"></a>00196     assert(network_num &lt; <a class="code" href="classNetwork.html#068f576b7d341d24e20b9565c83cce48">m_virtual_networks</a>);
<a name="l00197"></a>00197 
<a name="l00198"></a>00198     <span class="keywordflow">if</span> (ordered) {
<a name="l00199"></a>00199         <a class="code" href="classNetwork.html#03db9dfd14c69a6bb7ac7eb39a497855">m_ordered</a>[network_num] = <span class="keyword">true</span>;
<a name="l00200"></a>00200     }
<a name="l00201"></a>00201     <a class="code" href="classNetwork.html#166181ca52d57805ecd29ac9412d3ab7">m_in_use</a>[network_num] = <span class="keyword">true</span>;
<a name="l00202"></a>00202 
<a name="l00203"></a>00203     <span class="keywordflow">if</span> (vnet_type == <span class="stringliteral">"response"</span>)
<a name="l00204"></a>00204         <a class="code" href="classGarnetNetwork__d.html#d4e58efc892b06c1b02fd32991a58d82">m_vnet_type</a>[network_num] = <a class="code" href="NetworkHeader_8hh.html#101d399ed954ebfe3619308e600de4d3bfbd450873f8a1968fda519825404bc7">DATA_VNET_</a>; <span class="comment">// carries data (and ctrl) packets</span>
<a name="l00205"></a>00205     <span class="keywordflow">else</span>
<a name="l00206"></a>00206         <a class="code" href="classGarnetNetwork__d.html#d4e58efc892b06c1b02fd32991a58d82">m_vnet_type</a>[network_num] = <a class="code" href="NetworkHeader_8hh.html#101d399ed954ebfe3619308e600de4d31781405fb51f9f09f3c4d311ee18fd0d">CTRL_VNET_</a>; <span class="comment">// carries only ctrl packets</span>
<a name="l00207"></a>00207 }
<a name="l00208"></a>00208 
<a name="l00209"></a>00209 <span class="keywordtype">void</span>
<a name="l00210"></a><a class="code" href="classGarnetNetwork__d.html#2790eb99b8dc0f68d46f6858e65ded7b">00210</a> <a class="code" href="classGarnetNetwork__d.html#2790eb99b8dc0f68d46f6858e65ded7b">GarnetNetwork_d::regStats</a>()
<a name="l00211"></a>00211 {
<a name="l00212"></a>00212     <a class="code" href="classBaseGarnetNetwork.html#3248340d35a6ab9195080a5b7c752263">BaseGarnetNetwork::regStats</a>();
<a name="l00213"></a>00213     <a class="code" href="classGarnetNetwork__d.html#d2accbb1580f93132cc8e38a8f43d619">regLinkStats</a>();
<a name="l00214"></a>00214     <a class="code" href="classGarnetNetwork__d.html#852338962a9b353f8f6ae899a8626d21">regPowerStats</a>();
<a name="l00215"></a>00215 }
<a name="l00216"></a>00216 
<a name="l00217"></a>00217 <span class="keywordtype">void</span>
<a name="l00218"></a><a class="code" href="classGarnetNetwork__d.html#d2accbb1580f93132cc8e38a8f43d619">00218</a> <a class="code" href="classGarnetNetwork__d.html#d2accbb1580f93132cc8e38a8f43d619">GarnetNetwork_d::regLinkStats</a>()
<a name="l00219"></a>00219 {
<a name="l00220"></a>00220     <a class="code" href="classGarnetNetwork__d.html#468c39cb194a7f35e8d9160fff85050d">m_average_link_utilization</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".avg_link_utilization"</span>);
<a name="l00221"></a>00221 
<a name="l00222"></a>00222     <a class="code" href="classGarnetNetwork__d.html#012f50b8c78d0434a6d84245a07e34f3">m_average_vc_load</a>
<a name="l00223"></a>00223         .<a class="code" href="classStats_1_1VectorBase.html#da7b4d1605ccdfba6975aa1025b861a2">init</a>(<a class="code" href="classNetwork.html#068f576b7d341d24e20b9565c83cce48">m_virtual_networks</a> * <a class="code" href="classBaseGarnetNetwork.html#bb04633fac715773f97236138eff9b74">m_vcs_per_vnet</a>)
<a name="l00224"></a>00224         .name(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".avg_vc_load"</span>)
<a name="l00225"></a>00225         .flags(<a class="code" href="namespaceStats.html#5f76f954301997f032327da330cdc19b">Stats::pdf</a> | <a class="code" href="namespaceStats.html#4a8d8ef967fddb728594b751a6170802">Stats::total</a> | <a class="code" href="namespaceStats.html#00451440f3857f3f127f9493cfe6eede">Stats::nozero</a> | <a class="code" href="namespaceStats.html#f647bf7bf753717c39a9d61d962929d9">Stats::oneline</a>)
<a name="l00226"></a>00226         ;
<a name="l00227"></a>00227 }
<a name="l00228"></a>00228 
<a name="l00229"></a>00229 <span class="keywordtype">void</span>
<a name="l00230"></a><a class="code" href="classGarnetNetwork__d.html#852338962a9b353f8f6ae899a8626d21">00230</a> <a class="code" href="classGarnetNetwork__d.html#852338962a9b353f8f6ae899a8626d21">GarnetNetwork_d::regPowerStats</a>()
<a name="l00231"></a>00231 {
<a name="l00232"></a>00232     <a class="code" href="classGarnetNetwork__d.html#6d0f88597974da9bbfb3ee85f4aa990c">m_dynamic_link_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".link_dynamic_power"</span>);
<a name="l00233"></a>00233     <a class="code" href="classGarnetNetwork__d.html#f0be6174e6740beeedd51fb0d5b7713f">m_static_link_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".link_static_power"</span>);
<a name="l00234"></a>00234 
<a name="l00235"></a>00235     <a class="code" href="classGarnetNetwork__d.html#8743e531cb9b207c5646d0b3ac9801e1">m_total_link_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".link_total_power"</span>);
<a name="l00236"></a>00236     <a class="code" href="classGarnetNetwork__d.html#8743e531cb9b207c5646d0b3ac9801e1">m_total_link_power</a> = <a class="code" href="classGarnetNetwork__d.html#6d0f88597974da9bbfb3ee85f4aa990c">m_dynamic_link_power</a> + <a class="code" href="classGarnetNetwork__d.html#f0be6174e6740beeedd51fb0d5b7713f">m_static_link_power</a>;
<a name="l00237"></a>00237 
<a name="l00238"></a>00238     <a class="code" href="classGarnetNetwork__d.html#a285fe164bdca50a64543f6aeaddf9b1">m_dynamic_router_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".router_dynamic_power"</span>);
<a name="l00239"></a>00239     <a class="code" href="classGarnetNetwork__d.html#535cb3c0c68d7f0f10a215f013f36427">m_static_router_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".router_static_power"</span>);
<a name="l00240"></a>00240     <a class="code" href="classGarnetNetwork__d.html#148f8b7c9ce9440ea4141a36046a9f5e">m_clk_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".clk_power"</span>);
<a name="l00241"></a>00241 
<a name="l00242"></a>00242     <a class="code" href="classGarnetNetwork__d.html#fe5f4c5c5f915ce7efbb12d8fdedff6f">m_total_router_power</a>.<a class="code" href="classStats_1_1DataWrap.html#8f6effeadf113613c8e96c732bef7228">name</a>(<a class="code" href="classSimObject.html#96c36bff06d98deb79d09e93652667ae">name</a>() + <span class="stringliteral">".router_total_power"</span>);
<a name="l00243"></a>00243     <a class="code" href="classGarnetNetwork__d.html#fe5f4c5c5f915ce7efbb12d8fdedff6f">m_total_router_power</a> = <a class="code" href="classGarnetNetwork__d.html#a285fe164bdca50a64543f6aeaddf9b1">m_dynamic_router_power</a> +
<a name="l00244"></a>00244                            <a class="code" href="classGarnetNetwork__d.html#535cb3c0c68d7f0f10a215f013f36427">m_static_router_power</a> +
<a name="l00245"></a>00245                            <a class="code" href="classGarnetNetwork__d.html#148f8b7c9ce9440ea4141a36046a9f5e">m_clk_power</a>;
<a name="l00246"></a>00246 }
<a name="l00247"></a>00247 
<a name="l00248"></a>00248 <span class="keywordtype">void</span>
<a name="l00249"></a><a class="code" href="classGarnetNetwork__d.html#e6fc70d6ce2d857524c34975a605499f">00249</a> <a class="code" href="classGarnetNetwork__d.html#e6fc70d6ce2d857524c34975a605499f">GarnetNetwork_d::collateStats</a>()
<a name="l00250"></a>00250 {
<a name="l00251"></a>00251     <a class="code" href="classGarnetNetwork__d.html#88dcc27a222e4d7c82cd00657a1f890e">collateLinkStats</a>();
<a name="l00252"></a>00252     <a class="code" href="classGarnetNetwork__d.html#fc11a3bb4c9bf48aa9bbf1e69699be43">collatePowerStats</a>();
<a name="l00253"></a>00253 }
<a name="l00254"></a>00254 
<a name="l00255"></a>00255 <span class="keywordtype">void</span>
<a name="l00256"></a><a class="code" href="classGarnetNetwork__d.html#88dcc27a222e4d7c82cd00657a1f890e">00256</a> <a class="code" href="classGarnetNetwork__d.html#88dcc27a222e4d7c82cd00657a1f890e">GarnetNetwork_d::collateLinkStats</a>()
<a name="l00257"></a>00257 {
<a name="l00258"></a>00258     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>.size(); <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>++) {
<a name="l00259"></a>00259         <a class="code" href="classGarnetNetwork__d.html#468c39cb194a7f35e8d9160fff85050d">m_average_link_utilization</a> +=
<a name="l00260"></a>00260             (<span class="keywordtype">double</span>(<a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;getLinkUtilization())) /
<a name="l00261"></a>00261             (double(<a class="code" href="classClockedObject.html#2b4a36a0ae697fe2c7c1c493146d7626">curCycle</a>() - <a class="code" href="Global_8cc.html#a69be22cc9024a302f0883584fe87eea">g_ruby_start</a>));
<a name="l00262"></a>00262 
<a name="l00263"></a>00263         <a class="code" href="classstd_1_1vector.html">vector&lt;unsigned int&gt;</a> vc_load = <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;getVcLoad();
<a name="l00264"></a>00264         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#c843bf7761bca8cf5315375942a0c25b">j</a> = 0; <a class="code" href="namespaceArmISA.html#c843bf7761bca8cf5315375942a0c25b">j</a> &lt; vc_load.size(); <a class="code" href="namespaceArmISA.html#c843bf7761bca8cf5315375942a0c25b">j</a>++) {
<a name="l00265"></a>00265             <a class="code" href="classGarnetNetwork__d.html#012f50b8c78d0434a6d84245a07e34f3">m_average_vc_load</a>[<a class="code" href="namespaceArmISA.html#c843bf7761bca8cf5315375942a0c25b">j</a>] +=
<a name="l00266"></a>00266                 ((<span class="keywordtype">double</span>)vc_load[<a class="code" href="namespaceArmISA.html#c843bf7761bca8cf5315375942a0c25b">j</a>] / (<span class="keywordtype">double</span>)(<a class="code" href="classClockedObject.html#2b4a36a0ae697fe2c7c1c493146d7626">curCycle</a>() - <a class="code" href="Global_8cc.html#a69be22cc9024a302f0883584fe87eea">g_ruby_start</a>));
<a name="l00267"></a>00267         }
<a name="l00268"></a>00268     }
<a name="l00269"></a>00269 }
<a name="l00270"></a>00270 
<a name="l00271"></a>00271 <span class="keywordtype">void</span>
<a name="l00272"></a><a class="code" href="classGarnetNetwork__d.html#fc11a3bb4c9bf48aa9bbf1e69699be43">00272</a> <a class="code" href="classGarnetNetwork__d.html#fc11a3bb4c9bf48aa9bbf1e69699be43">GarnetNetwork_d::collatePowerStats</a>()
<a name="l00273"></a>00273 {
<a name="l00274"></a>00274     <span class="keywordtype">double</span> sim_cycles = (double)(<a class="code" href="classClockedObject.html#2b4a36a0ae697fe2c7c1c493146d7626">curCycle</a>() - <a class="code" href="Global_8cc.html#a69be22cc9024a302f0883584fe87eea">g_ruby_start</a>);
<a name="l00275"></a>00275     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>.size(); <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>++) {
<a name="l00276"></a>00276         <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;calculate_power(sim_cycles);
<a name="l00277"></a>00277         <a class="code" href="classGarnetNetwork__d.html#6d0f88597974da9bbfb3ee85f4aa990c">m_dynamic_link_power</a> += <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;get_dynamic_power();
<a name="l00278"></a>00278         <a class="code" href="classGarnetNetwork__d.html#f0be6174e6740beeedd51fb0d5b7713f">m_static_link_power</a> += <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;get_static_power();
<a name="l00279"></a>00279     }
<a name="l00280"></a>00280 
<a name="l00281"></a>00281     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>.size(); <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>++) {
<a name="l00282"></a>00282         <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;calculate_power();
<a name="l00283"></a>00283         <a class="code" href="classGarnetNetwork__d.html#a285fe164bdca50a64543f6aeaddf9b1">m_dynamic_router_power</a> += <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;get_dynamic_power();
<a name="l00284"></a>00284         <a class="code" href="classGarnetNetwork__d.html#535cb3c0c68d7f0f10a215f013f36427">m_static_router_power</a> += <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;get_static_power();
<a name="l00285"></a>00285         <a class="code" href="classGarnetNetwork__d.html#148f8b7c9ce9440ea4141a36046a9f5e">m_clk_power</a> += <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;get_clk_power();
<a name="l00286"></a>00286     }
<a name="l00287"></a>00287 }
<a name="l00288"></a>00288 
<a name="l00289"></a>00289 <span class="keywordtype">void</span>
<a name="l00290"></a>00290 <a class="code" href="classGarnetNetwork__d.html#f37530733c117e89ff4817c77570d7d7">GarnetNetwork_d::print</a>(ostream&amp; out)<span class="keyword"> const</span>
<a name="l00291"></a>00291 <span class="keyword"></span>{
<a name="l00292"></a>00292     out &lt;&lt; <span class="stringliteral">"[GarnetNetwork_d]"</span>;
<a name="l00293"></a>00293 }
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 <a class="code" href="classGarnetNetwork__d.html">GarnetNetwork_d</a> *
<a name="l00296"></a>00296 <a class="code" href="classSerializable.html#68726f5d7b8d0ed986338a2d09cdf720">GarnetNetwork_dParams::create</a>()
<a name="l00297"></a>00297 {
<a name="l00298"></a>00298     <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classGarnetNetwork__d.html#7b0b8a98ebe6fe5f5a7cc0e56559b4b8">GarnetNetwork_d</a>(<span class="keyword">this</span>);
<a name="l00299"></a>00299 }
<a name="l00300"></a>00300 
<a name="l00301"></a>00301 <a class="code" href="Type_8hh.html#435d1572bf3f880d55459d9805097f62">uint32_t</a>
<a name="l00302"></a><a class="code" href="classGarnetNetwork__d.html#4753f1a020a3a0cadc934c2d34f9d396">00302</a> <a class="code" href="classGarnetNetwork__d.html#4753f1a020a3a0cadc934c2d34f9d396">GarnetNetwork_d::functionalWrite</a>(<a class="code" href="classPacket.html">Packet</a> *pkt)
<a name="l00303"></a>00303 {
<a name="l00304"></a>00304     <a class="code" href="Type_8hh.html#435d1572bf3f880d55459d9805097f62">uint32_t</a> num_functional_writes = 0;
<a name="l00305"></a>00305 
<a name="l00306"></a>00306     <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>.size(); <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>++) {
<a name="l00307"></a>00307         num_functional_writes += <a class="code" href="classGarnetNetwork__d.html#f93f3698efcfd2a442aeeadce3c56697">m_routers</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;<a class="code" href="classGarnetNetwork__d.html#4753f1a020a3a0cadc934c2d34f9d396">functionalWrite</a>(pkt);
<a name="l00308"></a>00308     }
<a name="l00309"></a>00309 
<a name="l00310"></a>00310     <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>.size(); ++<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>) {
<a name="l00311"></a>00311         num_functional_writes += <a class="code" href="classGarnetNetwork__d.html#c557c95b3cdf5137cee5c9de8cff6a6b">m_nis</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;<a class="code" href="classGarnetNetwork__d.html#4753f1a020a3a0cadc934c2d34f9d396">functionalWrite</a>(pkt);
<a name="l00312"></a>00312     }
<a name="l00313"></a>00313 
<a name="l00314"></a>00314     <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> = 0; <a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a> &lt; <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>.size(); ++<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>) {
<a name="l00315"></a>00315         num_functional_writes += <a class="code" href="classGarnetNetwork__d.html#53edcfcc155afc54939199efe32462cf">m_links</a>[<a class="code" href="namespaceArmISA.html#718defda84c16589694d68fe7689a803">i</a>]-&gt;<a class="code" href="classGarnetNetwork__d.html#4753f1a020a3a0cadc934c2d34f9d396">functionalWrite</a>(pkt);
<a name="l00316"></a>00316     }
<a name="l00317"></a>00317 
<a name="l00318"></a>00318     <span class="keywordflow">return</span> num_functional_writes;
<a name="l00319"></a>00319 }
</pre></div><hr size="1"><address style="align: right;"><small>
Generated on Fri Apr 17 12:38:53 2015 for gem5 by <a href="http://www.doxygen.org/index.html"> doxygen</a> 1.4.7</small></address>

</body>
</html>
