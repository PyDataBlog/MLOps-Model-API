<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    

<html lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
    <head>
	 <!-- Taken from from http://easy-code.ru/lesson/formatting-numeric-output-java -->
	 <!-- Edited by Dushen Alexey on 05.08.2014 https://github.com/blacky0x0/java-docs-ru -->
     <title>Formatting Numeric Print Output (The Java&trade; Tutorials &gt;        
          Learning the Java Language &gt; Numbers and Strings)
	 </title>
	 <meta content="text/html; charset=UTF-8" http-equiv="content-type">
     <meta name="description" content="This beginner Java tutorial describes fundamentals of programming in the Java programming language" />
     <meta name="keywords" content="java programming, learn java, java sample code, java objects, java classes, java inheritance, interfaces, variables, arrays, data types, operators, control flow, number, string" />
        
<style type="text/css">
    .FigureCaption   { 
        margin-left: 1in; 
        margin-right: 1in; 
        font-family: sans-serif; 
        font-size: smaller; 
        text-align: justify;
    }
    #TopBar_bl {
        background: url(../../images/java_bar_bl.gif) 0 100% no-repeat;
        width: 100%;
        height: 60px;
    }
    #TopBar_br {
        background: url(../../images/java_bar_br.gif) 100% 100% no-repeat;
        width: 100%;
        height: 60px;
    }
    #TopBar_tl {
        background: url(../../images/java_bar_tl.gif) 0 0 no-repeat;
        width: 100%;
        height: 60px;
    }
    #TopBar_tr {
        background: url(../../images/java_bar_tr.gif) 100% 0 no-repeat;
        width: 100%;
        height: 60px;
    }
    #TopBar {
        background: #35556B url(../../images/java_bar.gif);
        margin: 10px 10px 0 10px;
        height:60px;
        min-width:700px;
        color: white;
        font-family: sans-serif; 
        font-weight: bold;
    }
    @media print {
        #BreadCrumbs, #Download {
            display: none;
        }
    }
    #TopBar_right {
        line-height: 14px;
        float: right;
        padding-top: 2px;
        padding-right: 30px;
        text-align: left;
    }
    @media print {
        #TopBar_right {
            display: none;
        }
    }
    #TopBar_right a {
        font-size: 12px;
        margin: 3px;
        padding: 0;
    }
    #TopBar a:visited, #TopBar a:link {
        color: white;
        text-decoration: none;
    }
    #TopBar a:hover, #TopBar a:active  {
        background-color: white;
        color: #35556B;
    }
    #BreadCrumbs {
        padding: 4px 5px 0.5em 0;
        font-family: sans-serif; 
        float: right;
    }
    #BreadCrumbs a {
        color: blue;
    }
    #BreadCrumbs a:visited, #BreadCrumbs a:link {
        text-decoration: none;
    }
    #BreadCrumbs a:hover, #BreadCrumbs a:active {
        text-decoration: underline;
    }
    #PageTitle {
        margin: 0 5px 0.5em 0;
        color: #F90000;
    }    
    #PageContent{
        margin: 0 5px 0 20px;
    }
    .LeftBar_shown {
        width: 13em;
        float: left;
        margin-left: 10px;
        margin-top: 4px;
        margin-bottom: 2em;
        margin-right: 10px;
    }
    @media print {
        .LeftBar_shown {
            display: none;
        }
    }
    .LeftBar_hidden {
        display: none;
    }
    #Footer {
        padding-top: 10px;
        padding-left: 10px;
        margin-right: 10px;
    }
    
    .footertext {
        font-size: 10px;
        font-family: sans-serif; 
        margin-top: 1px;
    }
    
    #Footer2 {
        padding-top: 10px;
        padding-left: 10px;
        margin-right: 10px;
    }
    .NavBit  {
        padding: 4px 5px 0.5em 0;
        font-family: sans-serif; 
    }
    @media print {
        .NavBit {
            display: none;
        }
    }
    #TagNotes {
        text-align: right;        
    }
    
    @media print {
        #TagNotes a:visited, #TagNotes a:link {
            color: #35556B;
            text-decoration: none;
        }
    }
    #Contents a, .NavBit a, #TagNotes a {
        color: blue
    }
    #TagNotes a:visited, #TagNotes a:link,
    #Contents a:visited, #Contents a:link,
    .NavBit a:visited, .NavBit a:link {
        text-decoration: none;
    }
    #TagNotes a:hover, #TagNotes a:active,   
    #Contents a:hover, #Contents a:active,   
    .NavBit a:hover, .NavBit a:active {  
        text-decoration: underline;
    }
    #Contents {
        float: left;
        font-family: sans-serif; 
    }
    @media print {
        #Contents {
            display: none;
        }
    }
    @media screen {
        div.PrintHeaders {
            display: none;
        }
    }
    .linkLESSON, .nolinkLESSON {
        margin-left: 0.5em;
        text-indent: -0.5em
    }
    .linkAHEAD, .nolinkAHEAD, .linkQUESTIONS, .nolinkQUESTIONS   {
        margin-left: 1.5em; 
        text-indent: -0.5em
    }
    .linkBHEAD, .nolinkBHEAD   {
        margin-left: 2.5em;
        text-indent: -0.5em
    }
    .linkCHEAD, .nolinkCHEAD   {
        margin-left: 3.5em;
        text-indent: -0.5em
    }
    .nolinkLESSON, .nolinkAHEAD, .nolinkBHEAD, .nolinkCHEAD,
    .nolinkQUESTIONS {
        font-weight: bold;
        color: #F90000;
    }
    .MainFlow_indented {
        margin-right: 10px;
        margin-left: 15em;
        margin-bottom: 2em;

    }
    .MainFlow_wide {
        margin-right: 10px;
        margin-left: 10px;
        margin-bottom: 2em;

    }
    @media print {
        .MainFlow_indented, .MainFlow_wide {
            padding-top: 0;
            margin-top: 10px;
            margin-right: 10px;
            margin-left: 0;
        }
    }
    h1, h2, h3, h4, h5 {
        color: #F90000;
        font-family: sans-serif;
    }

    h1 {
        font-weight: bold;
        font-size: 20px;
    }

    h2 {
        font-weight: bold;
        font-size: 17px;
    }

    h3 {
        font-weight: bold;
        font-size: 14px;
    }

    h4 {
        font-size: 15px;
    }

    h5 {
        font-size: 12px;
    }


    #ToggleLeft {
        display: none;
    }
    
    .note {
        margin: 0 30px 0px 30px;
    }
    
    .codeblock {
        margin: 0 30px 0px 30px;
    }
    
    .tocli {
        list-style-type:none;
    }

</style>
<script type="text/javascript">
/* <![CDATA[ */
    function leftBar() {
        var nameq = 'tutorial_showLeftBar='
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookieString = cookies[i];
            while (cookieString.charAt(0) == ' ') {
                cookieString = cookieString.substring(1, cookieString.length);
            }
            if (cookieString.indexOf(nameq) == 0) {
                cookieValue =  cookieString.substring(nameq.length,
                        cookieString.length);
                return cookieValue == 'yes';
            }
        }
        return true;
    }

    function showLeft(b) {
        var contents = document.getElementById("LeftBar");
        var main = document.getElementById("MainFlow");
        var toggle = document.getElementById("ToggleLeft");
        if (b) {
            contents.className = "LeftBar_shown";
            main.className = "MainFlow_indented";
            toggle.innerHTML = "Hide TOC";
            document.cookie = 'tutorial_showLeftBar=yes; path=/';
        } else {
            contents.className = "LeftBar_hidden";
            main.className = "MainFlow_wide";
            toggle.innerHTML = "Show the TOC";
            document.cookie = 'tutorial_showLeftBar=no; path=/';
        }
    }

    function toggleLeft() {
        showLeft(document.getElementById("LeftBar").className ==
                "LeftBar_hidden");
        document.getElementById("ToggleLeft").blur();
    }

    function load() {
        showLeft(leftBar());
        document.getElementById("ToggleLeft").style.display="inline";
    }

    function showCode(displayCodePage, codePath) {
        var codePathEls = codePath.split("/");
        var currDocPathEls = location.href.split("/");
        //alert ("codePathEls = " + codePathEls + "\n" + "currDocPathEls = " + currDocPathEls);
        currDocPathEls.pop(); // remove file name at the end
        while (codePathEls.length > 0) {
            if (codePathEls[0] == "..") {
                codePathEls.shift();
                currDocPathEls.pop();
            } else {
                break;
            }
        }
        var fullCodePath = currDocPathEls.join("/") + "/" + codePathEls.join("/");
        //alert ("fullCodePath = " + fullCodePath );
        if (codePath.indexOf(".java") != -1 || codePath.indexOf(".jnlp") != -1) {
            window.location.href = displayCodePage + "?code=" + encodeURI(fullCodePath);
        } else {
            window.location.href = fullCodePath;
        }
    }
/* ]]> */    
</script>


    </head>
<body onload="load()">
    <noscript>
        A browser with JavaScript enabled is required for this page to operate properly.
    </noscript>

    <div id="TopBar"> <div id="TopBar_tr"> <div id="TopBar_tl"> <div id="TopBar_br"> <div id="TopBar_bl"> 
                        <div id="TopBar_right"> 
                            <a target="_blank"
				href="http://www.oracle.com/technetwork/java/javase/downloads/java-se-7-tutorial-2012-02-28-1536013.html">Download Ebooks</a><br />
                            <a target="_blank"
                                href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Download JDK</a>
                            <br />
                            <a href="../../search.html" target="_blank">Search Java Tutorials</a>
                            <br />
                            <a href="javascript:toggleLeft()"
                                id="ToggleLeft">Hide TOC</a>
                        </div>
                    </div> </div> </div> </div> </div>
    <div class="PrintHeaders">
        <b>Курс:</b> Изучение языка Java
        <br /><b>Урок:</b> Числа и строки
        <br /><b>Section:</b> Numbers
    </div>

    <div id="LeftBar" class="LeftBar_shown">
        <div id="Contents">
            <div class="linkLESSON"><a href="index.html">Числа и строки</a></div>
<div class="linkAHEAD"><a href="numbers.html">Числа</a></div>
<div class="linkBHEAD"><a href="numberclasses.html">Классы чисел</a></div>
<div class="nolinkBHEAD">Форматирование вывода</div>
<div class="linkBHEAD"><a href="beyondmath.html">Beyond Basic Arithmetic</a></div>
<div class="linkBHEAD"><a href="numbersummary.html">Summary of Numbers</a></div>
<div class="linkQUESTIONS"><a href="QandE/numbers-questions.html">Вопросы и упражнения</a></div>
<div class="linkAHEAD"><a href="characters.html">Characters</a></div>
<div class="linkAHEAD"><a href="strings.html">Строки</a></div>
<div class="linkBHEAD"><a href="converting.html">Converting Between Numbers and Strings</a></div>
<div class="linkBHEAD"><a href="manipstrings.html">Работа со строками</a></div>
<div class="linkBHEAD"><a href="comparestrings.html">Сравнение строк и частей строк</a></div>
<div class="linkBHEAD"><a href="buffers.html">Класс StringBuilder</a></div>
<div class="linkBHEAD"><a href="stringsummary.html">Summary of Characters and Strings</a></div>
<div class="linkAHEAD"><a href="autoboxing.html">Autoboxing and Unboxing</a></div>
<div class="linkQUESTIONS"><a href="QandE/characters-questions.html">Вопросы и упражнения</a></div>
</div>
    </div>
    <div id="MainFlow" class="MainFlow_indented">
            <span id="BreadCrumbs">
                <a href="../../index.html" target="_top">Home Page</a>
                &gt;
                <a href="../index.html" target="_top">Изучение языка Java</a>
                &gt;
                <a href="index.html" target="_top">Числа и строки</a>
            </span>
            <div class="NavBit">
                <a target="_top" href="numberclasses.html">&laquo;&nbsp;Previous</a>&nbsp;&bull;&nbsp;<a target="_top" href="../TOC.html">Trail</a>&nbsp;&bull;&nbsp;<a target="_top" href="beyondmath.html">Next&nbsp;&raquo;</a>
            </div>
            <div id="PageTitle"><h1>Форматирование вывода</h1></div>
            <div id="PageContent">

<!-- Formatting Numeric Print Output -->

<p>

Earlier you saw the use of the <code>print</code> and <code>println</code> methods for printing strings to standard output (<code>System.out</code>). 
Since all numbers can be converted to strings (as you will see later in this 
lesson), 
you can use these methods to print out an arbitrary mixture of strings and numbers. 
The Java programming language has other methods, however, that allow you to exercise much more control over your print output when numbers are included.</p>
<h2>Методы printf и format</h2>

<p>
Пакет <code>java.io</code> содержит 
класс 
<code>PrintStream</code>, у которого есть специальные методы <code>format</code> и <code>printf</code> для форматирования. 
Эти методы эквивалентны друг другу и 
их можно использовать вместо <code>print</code> и <code>println</code>.
Хорошо знакомая конструкция <code>System.out</code> является объектом класса <code>PrintStream</code>, 
поэтому в любом участке кода можно спокойно заменить методы <code>print</code> и <code>println</code> на 
<code>format</code> или <code>printf</code>.
Например:
</p>
<div class="codeblock"><pre>
System.out.format(.....);
</pre></div>

<p>
Синтаксис этих методов класса 
<a class="APILink" target="_blank" href="http://docs.oracle.com/javase/7/docs/api/java/io/PrintStream.html"><code>java.io.PrintStream</code> </a>
одинаков:
</p>
<div class="codeblock"><pre>
public PrintStream format(String format, Object... args)
</pre></div>

<p>
где <code>format</code> - это строка, определяющая шаблон, согласно которому будет происходить форматирование, а 
<code>args</code> - это список переменных для печати по заданному шаблону 
(запись <code>Object... args</code> определяет переменное количество аргументов). Простой пример:
</p>
<div class="codeblock"><pre>
System.out.format("The value of " + "the float variable is " +
     "%f, while the value of the " + "integer variable is %d, " +
     "and the string is %s", floatVar, intVar, stringVar); 
</pre></div>

<p>
Строка <code>format</code> содержит простой текст и специальные <em>форматирующие символы</em>, 
используемые при форматировании списка объектов второго параметра <code>args</code>. 

Эти символы начинаются со знака процента (%) и заканчиваются <i>конвертором</i> - символом, 
который определяет тип переменной для форматирования. 
Между знаком процента (%) и конвертером можно указать дополнительные флаги и спецификаторы.
Полное описание конвертеров, флагов и спецификаторов можно посмотреть по ссылке 
<a class="APILink" target="_blank" href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html">
<code>java.util.Formatter</code></a>.
Пример:
</p>
<p>
Простенький пример:
</p>
<div class="codeblock"><pre>
int i = 461012;
System.out.format("The value of i is: %d%n", i);
</pre></div>

<p>
Спецификатор <code>%d</code> указывает на то, что переменная должна быть целым числом.
<code>%n</code> - платформенно-независимый символ перевода строки. 
Вывод будет следующим:</p>
<div class="codeblock"><pre>
The value of i is: 461012
</pre></div>
<p>
Чтобы вывод соответствовал <s>региональным стандартам определенного языка</s> следует использовать 
перегруженные версии методов <code>printf</code> и <code>format</code>, которые имеют следующий синтаксис:
</p>
<div class="codeblock"><pre>
public PrintStream printf(Locale l, String format, Object... args)
public PrintStream format(Locale l, String format, Object... args)
</pre></div>

<p>
Например, в качестве разделителя целой и дробной частей числа с плавающей точкой во Французской системе используется запятая, 
в то время как в Английской используется точка:</p>
<div class="codeblock"><pre>
System.out.format(Locale.FRANCE,
    "The value of the float " + "variable is %f, while the " +
    "value of the integer variable " + "is %d, and the string is %s%n", 
    floatVar, intVar, stringVar); 
</pre></div>
<h2>Пример</h2>

<p>
В таблице перечислены некоторые конвертеры и флаги, которые были использованы в программе <code>TestFormat.java</code>
</p>
<table width="70%" border="1" cellpadding="4" cellspacing="3" 
summary="Converters and flags that are used in the sample program TestFormat.java">
<caption style="font-weight: bold">Конвертеры и флаги, использованные в <code>TestFormat.java</code></caption>
<tr>
<th id="h1" width="10%">Конвертер</th>
<th id="h2" width="10%">Флаг</th>
<th id="h3" width="50%">Описание</th>
</tr>
<tr>
<td headers="h1">d</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Десятичное целое
</td>
</tr>
<tr>
<td headers="h1">f</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Число с плавающей точкой (float)
</td>
</tr>
<tr>
<td headers="h1">n</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Символ новой строки в зависимости от платформы, на которой запущена программа.
Старайтесь всегда использовать <code>%n</code>, а не <code>\n</code>
</td>
</tr>
<tr>
<td headers="h1">tB</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время&#151;полное название месяца в зависимости от языка
</td>
</tr>
<tr>
<td headers="h1">td, te</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время &#151; 2 цифры дня месяца. td - с ведущими нулями, te - без
</td>
</tr>
<tr>
<td headers="h1">ty, tY</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время &#151;ty = год из 2-х цифр, tY = год из 4-х цифр
</td>
</tr>
<tr>
<td headers="h1">tl</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время&#151; часы в 12-ти часовом формате
</td>
</tr>
<tr>
<td headers="h1">tM</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время&#151; минуты из 2-х цифр с ведущими нулями
</td>
</tr>
<tr>
<td headers="h1">tp</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время &#151; am/pm в зависимости от языка (в нижнем регистре)
</td>
</tr>
<tr>
<td headers="h1">tm</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время &#151; месяц из 2-х цифр с ведущими нулями
</td>
</tr>
<tr>
<td headers="h1">tD</td>
<td headers="h2">&nbsp;</td>
<td headers="h3">
Дата и время &#151; дата в формате %tm%td%ty
</td>
</tr>
<tr>
<td headers="h1">&nbsp;</td>
<td headers="h2">08</td>
<td headers="h3">
Восемь символов в ширину, дозаполняя ведущими нулями по необходимости
</td>
</tr>
<tr>
<td headers="h1">&nbsp;</td>
<td headers="h2">+</td>
<td headers="h3">
Включить знак (положительный или отрицательный)
</td>
</tr>
<tr>
<td headers="h1">&nbsp;</td>
<td headers="h2">,</td>
<td headers="h3">
Включить специфичную для каждой локали группировку символов
</td>
</tr>
<tr>
<td headers="h1">&nbsp;</td>
<td headers="h2">-</td>
<td headers="h3">
Выравнивание по левому краю
</td>
</tr>
<tr>
<td headers="h1">&nbsp;</td>
<td headers="h2">.3</td>
<td headers="h3">
Три символа после десятичного разделителя
</td>
</tr>
<tr>
<td headers="h1">&nbsp;</td>
<td headers="h2">10.3</td>
<td headers="h3">
Десять символов в ширину, выравнивание по правому краю, три символа после десятичного разделителя
</td>
</tr>
</table>

<p>
В программе показаны несколько примеров форматирования с использованием метода <code>format</code>. 
Вывод показан в комментариях:</p>
<div class="codeblock"><pre>
import java.util.Calendar;
import java.util.Locale;

public class TestFormat {
    
    public static void main(String[] args) {
      long n = 461012;
      System.out.format("%d%n", n);      //  -->  "461012"
      System.out.format("%08d%n", n);    //  -->  "00461012"
      System.out.format("%+8d%n", n);    //  -->  " +461012"
      System.out.format("%,8d%n", n);    // -->  " 461,012"
      System.out.format("%+,8d%n%n", n); //  -->  "+461,012"
      
      double pi = Math.PI;

      System.out.format("%f%n", pi);       // -->  "3.141593"
      System.out.format("%.3f%n", pi);     // -->  "3.142"
      System.out.format("%10.3f%n", pi);   // -->  "     3.142"
      System.out.format("%-10.3f%n", pi);  // -->  "3.142"
      System.out.format(Locale.FRANCE,
                        "%-10.4f%n%n", pi); // -->  "3,1416"

      Calendar c = Calendar.getInstance();
      System.out.format("%tB %te, %tY%n", c, c, c); // -->  "May 29, 2006"

      System.out.format("%tl:%tM %tp%n", c, c, c);  // -->  "2:34 am"

      System.out.format("%tD%n", c);    // -->  "05/29/06"
    }
}
</pre></div>
<div class="note"><hr /><strong>Примечание:</strong>&nbsp;
в этой главе показаны основы работы с методами <code>format</code> и <code>printf</code>.
Более подробно о форматировании рассказано в главе, посвященной 
<a class="TutorialLink" target="_top" href="../../essential/io/formatting.html"><code>основам ввода/вывода</code></a>.<br />

О создании строк при помощи метода <code>String.format</code> рассказано в главе, посвященной 
<a class="TutorialLink" target="_top" href="strings.html">строкам</a>.
<hr /></div>
<h2>Класс DecimalFormat</h2>

<p>

You can use the 
<a class="APILink" target="_blank" href="http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html"><code>java.text.DecimalFormat</code> </a> class to control the display of leading and trailing zeros, prefixes and suffixes, grouping (thousands) separators, and the decimal separator. 
<code>DecimalFormat</code> offers a great deal of flexibility in the formatting of numbers, but it can make your code more complex.</p>

<p>

The example that follows creates a <code>DecimalFormat</code> object, <code>myFormatter</code>, by passing a pattern string to the <code>DecimalFormat</code> constructor. 
The <code>format()</code> method, which <code>DecimalFormat</code> inherits from <code>NumberFormat</code>, is then invoked by <code>myFormatter</code>&#151;it accepts a <code>double</code> value as an argument and returns the formatted number in a string:</p>

<p>

Here is a sample program that illustrates the use of <code>DecimalFormat</code>:</p>
<div class="codeblock"><pre>

import java.text.*;

public class DecimalFormatDemo {

   static public void customFormat(String pattern, double value ) {
      DecimalFormat myFormatter = new DecimalFormat(pattern);
      String output = myFormatter.format(value);
      System.out.println(value + &quot;  &quot; + pattern + &quot;  &quot; + output);
   }

   static public void main(String[] args) {

      customFormat(&quot;###,###.###&quot;, 123456.789);
      customFormat(&quot;###.##&quot;, 123456.789);
      customFormat(&quot;000000.000&quot;, 123.78);
      customFormat(&quot;$###,###.###&quot;, 12345.67);  
   }
}

</pre></div>

<p>

Вывод будет следующим:</p>
<div class="codeblock"><pre>
123456.789  ###,###.###  123,456.789
123456.789  ###.##  123456.79
123.78  000000.000  000123.780
12345.67  $###,###.###  &#36;12,345.67
</pre></div>

<p>
В таблице даны пояснения к каждой выведенной строке:
</p>
<table width="100%" border="1" cellpadding="4" cellspacing="3" summary="DecimalFormatDemo.java output">
<caption style="font-weight: normal">Вывод <code>DecimalFormat.java</code></caption>
<tr>
<th id="h101">Значение</th>
<th id="h102">Шаблон</th>
<th id="h103">Вывод</th>
<th id="h104">Пояснение</th>
</tr>
<tr>
<td headers="h101">123456.789</td>
<td headers="h102">###,###.###</td>
<td headers="h103">123,456.789</td>
<td headers="h104">Знак решетки (в Англии # является знаком фунта - 'pound sign') обозначает цифру, 
а точка и запятая являются символами-заполнителями. Первый из которых - это десятичный разделитель, 
а второй служит для группировки чисел.
</td>
</tr>
<tr>
<td headers="h101">123456.789</td>
<td headers="h102">###.##</td>
<td headers="h103">123456.79</td>
<td headers="h104">
В дробной части используемого значения указаны три цифры, а в шаблоне для дробной части используется только два разряда.
В этому случает метод <code>format</code> сделает необходимое округление.
</td>
</tr>
<tr>
<td headers="h101">123.78</td>
<td headers="h102">000000.000</td>
<td headers="h103">000123.780</td>
<td headers="h104">
Символ 0 можно использовать вместо знака решетки (или знак фунта - #), тогда форматируемое число будет дополнено нулями в начале и конце.
</td>
</tr>
<tr>
<td headers="h101">12345.67</td>
<td headers="h102">$###,###.###</td>
<td headers="h103">&#36;12,345.67</td>
<td headers="h104">Первым знаком в шаблоне идет знак доллара ($).
Обратите внимание на то, что он выводится перед цифрами.
</td>
</tr>
</table>


        </div>
        <div class="NavBit">
            <a target="_top" href="numberclasses.html">&laquo; Previous</a>
            &bull;
            <a target="_top" href="../TOC.html">Trail</a>
            &bull;
            <a target="_top" href="beyondmath.html">Next &raquo;</a>
        </div>
    </div>
    <div id="Footer2">
<hr />
<div id="TagNotes">
    <p class="footertext">Problems with the examples? Try <a target="_blank"
        href="../../information/run-examples.html">Compiling and Running
        the Examples: FAQs</a>.
    <br />
    Complaints? Compliments? Suggestions? <a target="_blank"
        href="http://docs.oracle.com/javase/feedback.html">Give
    us your feedback</a>.
    </p>
</div> 

<div id="Footer">
<p class="footertext"><a name="license_info">Your use of this</a> page and all the material on pages under &quot;The Java Tutorials&quot; banner 
 is subject to these <a href="../../information/cpyr.html">legal notices</a>.
</p>
<table border="0" cellspacing="0" cellpadding="5" summary="">
    <tr>
         <td width="20%">
	 <table width="100%" border="0" cellspacing="0" cellpadding="5">
            <tr>
              <td headers="h201" align="center"><img id="duke" src="../../images/DukeWave.gif" width="55" height="55" alt="duke image" /></td>
              <td headers="h202" align="left" valign="middle"><img id="oracle" src="../../images/logo_oracle_footer.gif" width="100" height="29" alt="Oracle logo" /></td>
           </tr>
          </table>
          </td>

          <td width="55%" valign="middle" align="center">
		<p class="footertext"><a href="http://www.oracle.com/us/corporate/index.html">About Oracle</a> | <a href="http://www.oracle.com/technology/index.html">Oracle Technology Network</a> | <a href="http://www.oracle.com/us/legal/terms/index.html">Terms of Use</a></p> 
	 </td>
          <td width="25%" valign="middle" align="right">
      		<p class="footertext">Copyright &copy; 1995, 2012 Oracle and/or its affiliates. 
All rights reserved.</p>
	 </td>
     </tr>     
</table>
</div>
    </div>
    <div class="PrintHeaders">
        <b>Previous page:</b> The Numbers Classes
        <br /><b>Next page:</b> Beyond Basic Arithmetic
    </div>
</body>
</html> 
