<div class="filter">
	<div class="container">
		<div class="row">
			<div class="col-md-4 m">
				<div data-component="textbox" data-component-path="users.filter.search" data-icon="fa-search" data-placeholder="@(Search users)">@(Search)</div>
			</div>
			<div class="col-md-4 m">
				<div data-component="dropdowncheckbox" data-component-path="users.filter.groups" data-placeholder="@(All groups)" data-source="users.groups" data-icon="fa-folder" data-empty="@(No groups)">@(Groups)</div>
			</div>
			<div class="col-md-4 m">
				<div data-component="dropdowncheckbox" data-component-path="users.filter.companies" data-placeholder="@(All companies)" data-source="users.companies" data-icon="fa-building" data-empty="@(No companies)">@(Companies)</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-4 m">
				<div data-component="dropdowncheckbox" data-component-path="users.filter.applications" data-placeholder="All applications" data-source="users.applications" data-source-text="title" data-source-value="internal" data-component-type="number" data-icon="fa-th" data-empty="@(No applications)">@(Applications)</div>
			</div>
			<div class="col-md-4 m">
				<div data-component="dropdown" data-component-path="users.filter.type" data-options="@(All users)|0;@(Activated users)|1;@(Blocked users)|2;@(Online users)|3" data-icon="fa-users" data-component-type="number" data-component-value="0">@(State)</div>
			</div>
		</div>
		<div class="relative">
			<div class="buttons">
				<button title="@(Notify users)" data-component="click" data-component-path="common.form" data-value="notify"><i class="fa fa-bell"></i></button>
				<button title="@(Send email)" data-component="click" data-component-path="common.form" data-value="email"><i class="fa fa-envelope"></i></button>
				<button title="@(Change permissions)" data-component="click" data-component-path="common.form" data-value="permissions"><i class="fa fa-th"></i></button>
				<button title="@(Rename company)" data-component="click" data-component-path="common.form" data-value="renamecompany"><i class="fa fa-building"></i></button>
				<button title="@(Rename group)" data-component="click" data-component-path="common.form" data-value="renamegroup"><i class="fa fa-folder"></i></button>
				<button title="@(Create new user)" data-component="click" data-component-path="users_create"><i class="fa fa-plus"></i></button>
			</div>
		</div>
	</div>
</div>

<div class="container">
	<div class="row">
		<div class="col-md-12">
			<div data-component="grid" data-component-id="users" data-component-path="users.datasource" data-pagination-path="users.filter.page" data-max="auto" data-page="@(Page: #)" data-pages="@(# pages,# page,# pages,# pages)" data-items="@(# items,# item,# items,# items)" data-empty="@(Database does not have any data.)">
				<script type="text/html">
				<tr>
					<td style="width:25px"><img src="{{ email | photo }}" alt="{{ alias }}" border="0" height="14" /></td>
					<td style="width:250px"><i class="fa fa-circle {{ if online }}green{{ else }}red{{ fi }}"></i>{{ lastname }} {{ firstname }}{{ if blocked }}<span class="badge badge-red ml5">@(blocked)</span>{{ fi }}{{ if superadmin }}<span class="badge badge-green ml5">@(superadmin)</span>{{ fi }}</td>
					<td><span class="fs11 silver">{{ group }}</span></td>
					<td class="hidden-xs hidden-sm" style="width:180px">{{ if company }}<span class="fs11 silver"><i class="fa fa-building mr5"></i>{{ company }}</span>{{ fi }}</td>
					<td class="hidden-xs hidden-sm" style="width:60px">{{ if language }}<i class="fa fa-language mr5"></i><span class="badge badge-blue">{{ language }}</span>{{ fi }}</td>
					<td class="hidden-xs hidden-sm" style="width:150px">{{ if datelogged }}<i class="fa fa-clock-o silver mr3"></i>{{ datelogged | time }}{{ else }}@(not logged){{ fi }}</td>
					<td style="width:80px" class="ui-right">
						<button name="edit" title="@(Edit)"><span class="fa fa-cog"></span></button>
						<button name="remove" title="@(Remove)"><span class="fa fa-times-circle"></span></button>
					</td>
				</tr>
				</script>
			</div>
		</div>
	</div>
</div>

<div data-component="form" data-component-path="common.form" data-if="users" data-title="@(User's details)" data-width="900px" data-component-id="users.form">
	<div class="padding">
		<div class="row">
			<div class="col-md-3">
				<br />
				<div data-component="photoupload" data-component-path="users.form.email" data-url="/internal/upload/photo/" data-upload-error="@(The file is too large.)"></div>
				<br />
				<div class="help center"><i class="fa fa-camera"></i>@(Photo is created according to the email address.)</div>
				<hr />
				<div data-component="template" data-component-path="users.form" data-properties="datecreated, dateupdated, datelogged, online">
					<script type="text/html">
						{{ if datelogged }}
						<div class="keyvalue">
							<div class="key">@(Logged)</div>
							<div class="value">{{ if online }}<span class="badge badge-green mr5">@(online)</span>{{ fi }}{{ datelogged | format('@(yyyy-MM-dd HH:mm)') }}</div>
						</div>
						{{ fi }}
						{{ if datecreated }}
						<div class="keyvalue">
							<div class="key">@(Created)</div>
							<div class="value">{{ datecreated | format('@(yyyy-MM-dd HH:mm)') }}</div>
						</div>
						{{ fi }}
						{{ if dateupdated }}
						<div class="keyvalue">
							<div class="key">@(Updated)</div>
							<div class="value">{{ dateupdated | format('@(yyyy-MM-dd HH:mm)') }}</div>
						</div>
						{{ fi }}
						{{ if datepassword }}
						<div class="keyvalue">
							<div class="key">@(Password changed)</div>
							<div class="value">{{ datepassword | format('@(yyyy-MM-dd HH:mm)') }}</div>
						</div>
						{{ fi }}
					</script>
				</div>
			</div>
			<div class="col-md-9" style="border-left: 1px solid #F0F0F0">
				<div class="padding npb">
					<div class="row">
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.firstname" data-maxlength="50" data-required="true">@(First name)</div>
						</div>
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.lastname" data-maxlength="50" data-required="true">@(Last name)</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.email" data-maxlength="120" data-required="true" data-component-type="email" data-control-icon="fa-envelope">@(Email address)</div>
						</div>
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.phone" data-maxlength="30" data-component-type="phone" data-control-icon="fa-phone">@(Phone number)</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-3 m">
							<div data-component="dropdown" data-component-path="users.form.language" data-source="common.languages" data-empty="" data-icon="fa-language">@(Language)</div>
						</div>
					</div>
					<hr />
					<div class="row">
						<div class="col-md-6 m">
							<div data-component="dropdown" data-component-path="users.form.group" data-source="users.groups" data-empty="">@(Select existing group)</div>
						</div>
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.group" data-maxlength="60">@(Group)</div>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 m">
							<div data-component="dropdown" data-component-path="users.form.company" data-source="users.companies" data-empty="">@(Select existing company)</div>
						</div>
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.company" data-maxlength="60">@(Company)</div>
						</div>
					</div>
					<hr />
					<div class="row">
						<div class="col-md-6">
							<div class="help">@(User can change these settings)</div>
							<div class="mt10" data-component="checkbox" data-component-path="users.form.sounds">@(Enable sounds)</div>
							<div data-component="checkbox" data-component-path="users.form.notifications">@(Enable flying notifications)</div>
						</div>
						<div class="col-md-6">
							<div class="help">@(Internal settings)</div>
							<div class="mt10 b red" data-component="checkbox" data-component-path="users.form.blocked">@(User is blocked)</div>
							<div data-component="checkbox" data-component-path="users.form.superadmin">@(Super administrator)</div>
							<div data-component="checkbox" data-component-path="users.form.welcome">@(Send sign in email)</div>
						</div>
					</div>
					<hr />
					<div class="help" style="margin-top:30px"><i class="fa fa-info-circle"></i>@(User can change the password when is logged.)</div>
					<br />
					<div class="row">
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.login" data-maxlength="120" data-required="true" data-control-icon="fa-user">@(Login name)</div>
							<div class="help"><i class="fa fa-envelope"></i>@(Login name can be an email address.)</div>
						</div>
						<div class="col-md-6 m">
							<div data-component="textbox" data-component-path="users.form.password" data-maxlength="30" data-required="true" data-control-icon="fa-lock">@(Password)</div>
							<div class="help"><a href="javascript:void(0)" data-component="click" data-component-path="userform_generatepassword">@(Generate password)</a></div>
						</div>
					</div>
					<hr />
					<h2 class="nmb"><i class="fa fa-th"></i>@(Applications)</h2>
					<div class="help">@(Enable access into the applications below for this user. Each application can have a specific permissions and the permissions are visibled when you allow the application.)</div>
					<br />
					<div data-component="applications-management" data-component-path="users.form.applications" data-source="users.applications" class="mt10">
						<script type="text/html">
							<div class="userapp-container userapp-container-disabled" data-id="{{ internal }}">
								<div class="userapp-header">
									<div class="userapp-checkbox"><i class="fa fa-check"></i></div>
									<div class="userapp-icon"><img src="{{ icon }}" class="img-rounded" width="30" border="0" onerror="onImageError(this)" alt="{{ title }}" /></div>
									<b>{{ title }}</b>
									<div class="fs11">v{{ version }}</div>
								</div>
								{{ if roles && roles.length }}
								<div class="userapp-roles">
									{{ foreach m in roles }}
										<div><label><input type="checkbox" value="{{ m }}" />{{ m }}</label></div>
									{{ end }}
								</div>
								{{ fi }}
								<div class="userapp-settings">
									<input type="text" maxlength="100" class="userapp-settings-input" data-id="{{ internal }}" placeholder="@(Custom application's settings for the app)" />
								</div>
							</div>
						</script>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="ui-form-buttons">
		<div class="row">
			<div class="col-md-9 col-md-offset-3">
				<div class="padding npt npb">
					<div data-component="validation" data-component-path="users.form" class="inline">
						<button name="submit">@(SAVE)</button>
					</div>
					<button name="cancel">@(Cancel)</button>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	var users = {};
	users.datasource = {};
	users.filter = { page: 1 };
	users.roles = [];

	// Prevents downloading form as template
	common.forms.users = true;

	function users_refresh() {

		AJAX('GET /internal/users/', function(response, err) {

			if (isError(err))
				return;

			var groups = {};
			var companies = {};

			users.datasource.raw = response;
			response.forEach(function(item) {
				if (item.group)
					groups[item.group] = true;
				if (item.company)
					companies[item.company] = true;
			});

			SET('users.groups', Object.keys(groups));
			SET('users.companies', Object.keys(companies));
			users_filter();
		});

		users_refresh_applications();
	}

	function users_refresh_applications() {
		if (common.form !== 'users')
			AJAX('GET /internal/applications/', 'users.applications');
	}

	function users_filter() {
		var max = FIND('#users').max;
		var pagination = users.datasource.raw.pagination(max);
		users.datasource.pages = pagination.pages;
		users.datasource.count = pagination.count;
		users.datasource.page = users.filter.page;
	 	SET('users.datasource.items', users.datasource.raw.paginate((users.filter.page - 1) * max, max));
	}

	function users_create() {
		SET('users.form', { sounds: true, notifications: true, email: '@', applications: {} }, true);
		SET('common.form', 'users');
	}

	ON('#users.form', function(component) {
		component.submit = function(hide) {

			var customsettings = {};

			// Collects app settings
			$('.userapp-settings-input').each(function() {
				if (!this.value)
					return;
				customsettings[this.getAttribute('data-id').parseInt()] = this.value;
			});

			users.form.settings = customsettings;

			AJAX('POST /internal/users/', users.form, function(response, err) {
				if (isError(err))
					return;
				SET('users.form.response', response);
				if (!response.success)
					return;

				if (users.form.id === user.id && window.dashboard_refresh)
					window.dashboard_refresh();

				success();
				users_refresh();
				hide();
			});
		};
	});

	ON('#users', function(component) {
		component.click = function(index, item, button) {

			if (button.name === 'remove') {
				SETTER('confirm', 'confirm', '@(Are you sure you want to remove the user <b>{0} {1}</b>?)'.format(item.firstname, item.lastname), ['@(Yes)', '@(No)'], function(index) {
					if (index)
						return;
					AJAX('DELETE /internal/users/', { id: item.id }, users_refresh);
				});
				return;
			}

			var tmp = $.extend({}, item);
			tmp.password = '**********';
			SET('users.form', tmp, true);
			SET('common.form', 'users');
		};
	});

	WATCH('users.form.welcome', function(path, value) {
		if (value && users.form.password.substring(0, 3) === '***')
			userform_generatepassword();
	});

	SCHEDULE('#users', 'manually', '5 minutes', users_refresh);

	function userform_generatepassword() {
		SET('users.form.password', (Math.random() * 10000).toString(16).replace(/[^\w\d]/g, '').substring(0, 8));
	}

	COMPONENT('applications-management', function() {
		var self = this;

		self.make = function() {

			var el = self.find('script');
			self.template = Tangular.compile(el.html());
			el.remove();

			self.element.on('click', '.userapp-checkbox', function() {
				var el = $(this).closest('.userapp-container');
				var cls = 'userapp-container-disabled';
				var id = el.attr('data-id').parseInt();
				el.toggleClass(cls);

				var apps = self.get();

				if (el.hasClass(cls))
					delete apps[id];
				else
					apps[id] = [];

				self.change(true);
			});

			self.element.on('change', 'input', function() {

				self.change(true);

				if (this.type === 'text')
					return;

				var el = $(this).closest('.userapp-container');
				var id = el.attr('data-id').parseInt();
				var apps = self.get();
				var app = apps[id];
				var index = app.indexOf(this.value);

				if (this.checked) {
					if (index === -1)
						app.push(this.value);
					return;
				}

				if (index !== -1)
					app.splice(index, 1);
			});

			self.watch(self.attr('data-source'), function(path, value) {
				if (!value)
					return;
				var builder = [];
				for (var i = 0, length = value.length; i < length; i++)
					builder.push(self.template(value[i]));
				self.html(builder.join(''));
				self.update();
			}, true);
		};

		self.setter = function(value) {

			var cls = 'userapp-container-disabled';
			self.find('.userapp-container').each(function() {
				var el = $(this);
				var id = el.attr('data-id').parseInt();
				if (value && value[id]) {
					el.removeClass(cls);
					el.find('input').each(function() {
						this.checked = value[id].indexOf(this.value) !== -1;
					});
				} else {
					el.addClass(cls);
					el.find('input').prop('checked', false);
				}

				// HACK
				el.find('.userapp-settings-input').val(users.form && users.form.settings ? users.form.settings[id] || '' : '');
			});
		};
	});

	WATCH('users.filter', function(path, value) {
		KEYPRESS(function() {
			var items = users.datasource.raw;
			var filtered = [];
			var search = (value.search || '').toLowerCase().removeDiacritics().replace(/y/g, 'i');
			var skip = false;

			for (var i = 0, length = items.length; i < length; i++) {
				var item = items[i];

				if (search && item.search.indexOf(search) === -1)
					continue;

				if ((value.type === 3 && !item.online) || (value.type === 1 && item.blocked) || (value.type === 2 && !item.blocked))
					continue;

				if (value.groups && value.groups.length && value.groups.indexOf(item.group) === -1)
					continue;

				if (value.companies && value.companies.length && value.companies.indexOf(item.company) === -1)
					continue;

				if (value.applications && value.applications.length) {
					skip = true;
					for (var j = 0, jl = value.applications.length; j < jl; j++) {
						if (item.applications[value.applications[j]]) {
							skip = false;
							break;
						}
					}
					if (skip)
						continue;
				}

				filtered.push(item);
			}
			SET('users.datasource.items', filtered);
		}, 500, 'users.datasource.items');
	});

	users_refresh();

</script>