<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="fr">
<head>
<!-- Generated by javadoc (1.8.0_152) on Fri Mar 30 13:31:47 CEST 2018 -->
<title>CoeurAStockage</title>
<meta name="date" content="2018-03-30">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="CoeurAStockage";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6,"i12":6,"i13":6,"i14":6,"i15":6,"i16":6,"i17":6,"i18":6,"i19":6,"i20":6,"i21":6,"i22":6,"i23":6,"i24":6,"i25":6,"i26":6,"i27":6,"i28":6,"i29":6,"i30":6,"i31":6,"i32":6,"i33":6,"i34":6,"i35":6,"i36":6,"i37":6,"i38":6,"i39":6,"i40":6,"i41":6,"i42":6,"i43":6,"i44":6,"i45":6,"i46":6,"i47":6,"i48":6,"i49":6,"i50":6,"i51":6,"i52":6,"i53":6,"i54":6,"i55":6,"i56":6,"i57":6,"i58":6,"i59":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/CoeurAStockage.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../stockage/Carte.html" title="class in stockage"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../stockage/CoeurAStockageImpl.html" title="class in stockage"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?stockage/CoeurAStockage.html" target="_top">Frames</a></li>
<li><a href="CoeurAStockage.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">stockage</div>
<h2 title="Interface CoeurAStockage" class="title">Interface CoeurAStockage</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><a href="../stockage/CoeurAStockageImpl.html" title="class in stockage">CoeurAStockageImpl</a></dd>
</dl>
<hr>
<br>
<pre>public interface <span class="typeNameLabel">CoeurAStockage</span></pre>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#actualiserPanne-stockage.Composant-">actualiserPanne</a></span>(<a href="../stockage/Composant.html" title="enum in stockage">Composant</a>&nbsp;composant)</code>
<div class="block">Permet d'actualiser la panne d'un composant</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#actualiserSolde--">actualiserSolde</a></span>()</code>
<div class="block">Permet d'actualiser le solde associee a la carte utilisee dans la base de donnees 
        apres un paiement par carte</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#ajoutMonnaie-int-">ajoutMonnaie</a></span>(int&nbsp;i)</code>
<div class="block">Permet d'ajouter de la monnaie, d'incrementer le montant intoduit</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#carteEnlevee--">carteEnlevee</a></span>()</code>
<div class="block">Permet d'enlever la carte du distributeur</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#carteInseree--">carteInseree</a></span>()</code>
<div class="block">Permet de voir si une carte est inseree ou non</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code><a href="../stockage/imprimable/Classe.html" title="enum in stockage.imprimable">Classe</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#conversionClasse-int-">conversionClasse</a></span>(int&nbsp;classe)</code>
<div class="block">Permet de reconvertir une classe (chaine de caractere) en une classe Classe</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="../stockage/imprimable/Reduction.html" title="enum in stockage.imprimable">Reduction</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#conversionReduction-java.lang.String-">conversionReduction</a></span>(java.lang.String&nbsp;reduction)</code>
<div class="block">Permet de reconvertir une reduction (chaine de caractere) en une reduction Reduction</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="../stockage/imprimable/TypeTitre.html" title="enum in stockage.imprimable">TypeTitre</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#conversionType-java.lang.String-">conversionType</a></span>(java.lang.String&nbsp;type)</code>
<div class="block">Permet de reconvertir un type (chaine de caractere) en un type TypeTitre</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="../stockage/imprimable/TypePass.html" title="enum in stockage.imprimable">TypePass</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#conversionTypePass-java.lang.String-">conversionTypePass</a></span>(java.lang.String&nbsp;typePassStr)</code>
<div class="block">Permet de reconvertir un type (chaine de caractere) en un type TypePass</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#creerAbonnement-int-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-java.lang.String-">creerAbonnement</a></span>(int&nbsp;validite,
               java.lang.String&nbsp;gareDepart,
               java.lang.String&nbsp;gareArrivee,
               int&nbsp;classe,
               java.lang.String&nbsp;reduction,
               java.lang.String&nbsp;type,
               java.lang.String&nbsp;nom,
               java.lang.String&nbsp;registreNational)</code>
<div class="block">Permet de faire passer les informations d'un achat d'un abonnement et de le creer</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#creerBillet-java.time.LocalDate-int-int-java.lang.String-java.lang.String-java.lang.String-java.lang.String-boolean-">creerBillet</a></span>(java.time.LocalDate&nbsp;dateValidite,
           int&nbsp;nbrBillet,
           int&nbsp;classe,
           java.lang.String&nbsp;gareDepart,
           java.lang.String&nbsp;gareArrivee,
           java.lang.String&nbsp;typeBillet,
           java.lang.String&nbsp;reduction,
           boolean&nbsp;allerRetour)</code>
<div class="block">Permet de faire passer les informations d'un achat d'un billet et de le creer</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#creerCarte-java.lang.String-">creerCarte</a></span>(java.lang.String&nbsp;id)</code>
<div class="block">Permet de recuperer les informations d'une carte a l'aide de son identifiant et 
        creer un objet carte</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#creerPass10Trajets-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-">creerPass10Trajets</a></span>(java.lang.String&nbsp;nom,
                  int&nbsp;classe,
                  java.lang.String&nbsp;reduction,
                  java.lang.String&nbsp;type,
                  java.lang.String&nbsp;typePass)</code>
<div class="block">Permet de faire passer les informations d'un achat d'un pass dix trajets et de le creer</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#creerPass10Trajets2Gares-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-">creerPass10Trajets2Gares</a></span>(java.lang.String&nbsp;nom,
                        java.lang.String&nbsp;gareDepart,
                        java.lang.String&nbsp;gareArrivee,
                        int&nbsp;classe,
                        java.lang.String&nbsp;reduction,
                        java.lang.String&nbsp;type,
                        java.lang.String&nbsp;typePass)</code>
<div class="block">Permet de faire passer les informations d'un achat d'un pass dix trajets entre deux gares</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#creerPassIllimite-java.lang.String-int-java.lang.String-java.lang.String-int-java.lang.String-">creerPassIllimite</a></span>(java.lang.String&nbsp;nom,
                 int&nbsp;classe,
                 java.lang.String&nbsp;reduction,
                 java.lang.String&nbsp;type,
                 int&nbsp;nbrJours,
                 java.lang.String&nbsp;typePass)</code>
<div class="block">Permet de faire passer les informations d'un achat d'un pass illimite et de le creer</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#depassementMontantAPayer--">depassementMontantAPayer</a></span>()</code>
<div class="block">Permet de savoir si l'utilisateur a rentre assez de monnaie lors de son paiement</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#estEnMarche-stockage.Composant-">estEnMarche</a></span>(<a href="../stockage/Composant.html" title="enum in stockage">Composant</a>&nbsp;composant)</code>
<div class="block">Permet de savoir si un composant est en panne ou non</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#existenceAbo-java.lang.String-">existenceAbo</a></span>(java.lang.String&nbsp;numAbo)</code>
<div class="block">Permet de savoir si un abonnement existe (grace a son numero)</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#existenceCarte-java.lang.String-">existenceCarte</a></span>(java.lang.String&nbsp;numero)</code>
<div class="block">Permet de savoir si la carte associee au numero en parametre</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#existenceGare-java.lang.String-">existenceGare</a></span>(java.lang.String&nbsp;gare)</code>
<div class="block">Permet de savoir si une gare existe</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#existenceTrajet-java.lang.String-java.lang.String-">existenceTrajet</a></span>(java.lang.String&nbsp;gareDepart,
               java.lang.String&nbsp;gareArrivee)</code>
<div class="block">Permet de savoir si un trajet existe entre deux gares</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#fentePresente--">fentePresente</a></span>()</code>
<div class="block">Permet de savoir si au moins une fente est presente sur le distributeur</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code><a href="../stockage/Carte.html" title="class in stockage">Carte</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getCarte--">getCarte</a></span>()</code>
<div class="block">Permet de recuperer la carte que l'on utilise actuellement</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getHoraire--">getHoraire</a></span>()</code>
<div class="block">Permet de recupere le tableau contenant l'horaire recherche prealablement</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>java.util.ArrayList&lt;java.lang.String&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getListeAbonnement--">getListeAbonnement</a></span>()</code>
<div class="block">Permet de recuperer une liste de tout les abonnements deja existants dans la base 
        de donnees</div>
</td>
</tr>
<tr id="i25" class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getListeReduction--">getListeReduction</a></span>()</code>
<div class="block">Permet de recuperer une liste de toutes les reductions existantes</div>
</td>
</tr>
<tr id="i26" class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getListeType--">getListeType</a></span>()</code>
<div class="block">Permet de recuperer une liste de tous les types existants</div>
</td>
</tr>
<tr id="i27" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getNbrTitre--">getNbrTitre</a></span>()</code>
<div class="block">Permet de recuperer le nombre de titre(s) commande(s)</div>
</td>
</tr>
<tr id="i28" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getPrix--">getPrix</a></span>()</code>
<div class="block">Permet de recuperer le prix de la commande (en cents)</div>
</td>
</tr>
<tr id="i29" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getTactile--">getTactile</a></span>()</code>
<div class="block">Permet de savoir si l'ecran est tactile ou non</div>
</td>
</tr>
<tr id="i30" class="altColor">
<td class="colFirst"><code><a href="../stockage/imprimable/TitreDeTransport.html" title="class in stockage.imprimable">TitreDeTransport</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#getTitre--">getTitre</a></span>()</code>
<div class="block">Permet de recuperer l'instance de TitreDeTransport</div>
</td>
</tr>
<tr id="i31" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#impression--">impression</a></span>()</code>
<div class="block">Permet de decrementer le nombre de papier pour l'impression</div>
</td>
</tr>
<tr id="i32" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#insertionAbonnement--">insertionAbonnement</a></span>()</code>
<div class="block">Permet d'inserer le nouvel abonnement achete dans la base de donnees</div>
</td>
</tr>
<tr id="i33" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#mauvaisPin--">mauvaisPin</a></span>()</code>
<div class="block">Action executee si le PIN entre est mauvais</div>
</td>
</tr>
<tr id="i34" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#miseAJourValiditeAbonnement--">miseAJourValiditeAbonnement</a></span>()</code>
<div class="block">Permet de mettre a jour la validite de l'abonnement renouvele dans la base de
        donnees</div>
</td>
</tr>
<tr id="i35" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#modifierAbo-int-java.lang.String-">modifierAbo</a></span>(int&nbsp;validite,
           java.lang.String&nbsp;numAbo)</code>
<div class="block">Permet de faire passer les informations d'un renouvellement d'un abonnement</div>
</td>
</tr>
<tr id="i36" class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#montantAPayerAffichable--">montantAPayerAffichable</a></span>()</code>
<div class="block">Permet de recuperer le prix affichable (en euros)</div>
</td>
</tr>
<tr id="i37" class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#montantRecuAffichable--">montantRecuAffichable</a></span>()</code>
<div class="block">Permet de recuperer le montant introduit (en euros)</div>
</td>
</tr>
<tr id="i38" class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#prixTicketAffichable--">prixTicketAffichable</a></span>()</code>
<div class="block">Permet de recuperer le prix d'un titre de transport commande (s'il y en a plusieurs)</div>
</td>
</tr>
<tr id="i39" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechargerCaisse--">rechargerCaisse</a></span>()</code>
<div class="block">Permet de recharger la caisse du distributeur</div>
</td>
</tr>
<tr id="i40" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechargerEncreEtPapier--">rechargerEncreEtPapier</a></span>()</code>
<div class="block">Permet recharger le stock d'encre et de papier du distributeur</div>
</td>
</tr>
<tr id="i41" class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechercherHoraireArrivee-java.lang.String-int-int-">rechercherHoraireArrivee</a></span>(java.lang.String&nbsp;gareArrivee,
                        int&nbsp;heure,
                        int&nbsp;minute)</code>
<div class="block">Permet de rechercher un horaire d'arrivees d'une gare</div>
</td>
</tr>
<tr id="i42" class="altColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechercherHoraireDepart-java.lang.String-int-int-">rechercherHoraireDepart</a></span>(java.lang.String&nbsp;gareDepart,
                       int&nbsp;heure,
                       int&nbsp;minute)</code>
<div class="block">Permet de rechercher un horaire a patir d'une gare de depart</div>
</td>
</tr>
<tr id="i43" class="rowColor">
<td class="colFirst"><code>java.lang.String[]</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechercherHoraireItineraire-java.lang.String-java.lang.String-int-int-">rechercherHoraireItineraire</a></span>(java.lang.String&nbsp;gareDepart,
                           java.lang.String&nbsp;gareArrivee,
                           int&nbsp;heure,
                           int&nbsp;minute)</code>
<div class="block">Permet de rechercher l'horaire d'un itineraire entre une gare de depart et une
        gare d'arrivee</div>
</td>
</tr>
<tr id="i44" class="altColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechercherPrix-coeur.Commande-java.lang.String-java.lang.String-">rechercherPrix</a></span>(<a href="../coeur/Commande.html" title="enum in coeur">Commande</a>&nbsp;commande,
              java.lang.String&nbsp;gareDepart,
              java.lang.String&nbsp;gareArrivee)</code>
<div class="block">Permet de rechercher le prix d'un titre de transport</div>
</td>
</tr>
<tr id="i45" class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rechercherPrix-stockage.imprimable.TypePass-">rechercherPrix</a></span>(<a href="../stockage/imprimable/TypePass.html" title="enum in stockage.imprimable">TypePass</a>&nbsp;typePass)</code>
<div class="block">Permet de rechercher le prix d'un type de pass</div>
</td>
</tr>
<tr id="i46" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#reinitialisation--">reinitialisation</a></span>()</code>
<div class="block">Permet de mettre le compteur "introduit" (monnaie introduite) a zero</div>
</td>
</tr>
<tr id="i47" class="rowColor">
<td class="colFirst"><code><a href="../stockage/Rendu.html" title="class in stockage">Rendu</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rendreMonnaie--">rendreMonnaie</a></span>()</code>
<div class="block">Permet d'avoir un detail de la monnaie qui sera rendue</div>
</td>
</tr>
<tr id="i48" class="altColor">
<td class="colFirst"><code><a href="../stockage/Rendu.html" title="class in stockage">Rendu</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#rendreMontantRecu--">rendreMontantRecu</a></span>()</code>
<div class="block">Permet d'avoir le detail de la monnaie qui a ete inseree a rendre</div>
</td>
</tr>
<tr id="i49" class="rowColor">
<td class="colFirst"><code>double</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#renduAffichable--">renduAffichable</a></span>()</code>
<div class="block">Permet de recuperer le montant rendu (en euros)</div>
</td>
</tr>
<tr id="i50" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#scanneurPresent--">scanneurPresent</a></span>()</code>
<div class="block">Permet de savoir si le scanneur de codes est present sur le distributeur ou non</div>
</td>
</tr>
<tr id="i51" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#setFentes-boolean-boolean-">setFentes</a></span>(boolean&nbsp;fenteBillet,
         boolean&nbsp;fentePiece)</code>
<div class="block">Permet de mettre a jour les fentes du distributeur (les ajoutes si elles ne sont pas 
        presentes ou les enleve)</div>
</td>
</tr>
<tr id="i52" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#setPrix-int-">setPrix</a></span>(int&nbsp;prix)</code>
<div class="block">Permet d'initialiser le prix d'un titre de transport</div>
</td>
</tr>
<tr id="i53" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#setScanneur-boolean-">setScanneur</a></span>(boolean&nbsp;present)</code>
<div class="block">Permet de mettre a jour le scanneur du distributeur (l'ajoute s'il n'est pas present,
        l'enleve s'il l'est)</div>
</td>
</tr>
<tr id="i54" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#setTactile-boolean-">setTactile</a></span>(boolean&nbsp;tactile)</code>
<div class="block">Permet de mettre a jour la configuration de l'ecran du distributeur</div>
</td>
</tr>
<tr id="i55" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#tropDErreur--">tropDErreur</a></span>()</code>
<div class="block">Permet de regarder si l'utilisateur n'a pas entre trop de fois un mauvais code PIN</div>
</td>
</tr>
<tr id="i56" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#verifCode-int-">verifCode</a></span>(int&nbsp;codePIN)</code>
<div class="block">Permet de verifier le code PIN de la carte que l'on utilise actuellement</div>
</td>
</tr>
<tr id="i57" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#verifSolde--">verifSolde</a></span>()</code>
<div class="block">Permet de verifier si le solde de la carte utilisee est suffisant</div>
</td>
</tr>
<tr id="i58" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#viderCaisse--">viderCaisse</a></span>()</code>
<div class="block">Pemet de vider la caisse du distributeur</div>
</td>
</tr>
<tr id="i59" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../stockage/CoeurAStockage.html#viderEncreEtPapier--">viderEncreEtPapier</a></span>()</code>
<div class="block">Permet de vider le stock d'encre et de papier du distributeur</div>
</td>
</tr>
</table>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="creerCarte-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerCarte</h4>
<pre>void&nbsp;creerCarte(java.lang.String&nbsp;id)</pre>
<div class="block">Permet de recuperer les informations d'une carte a l'aide de son identifiant et 
        creer un objet carte</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>id</code> - le numero de la carte</dd>
</dl>
</li>
</ul>
<a name="creerBillet-java.time.LocalDate-int-int-java.lang.String-java.lang.String-java.lang.String-java.lang.String-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerBillet</h4>
<pre>void&nbsp;creerBillet(java.time.LocalDate&nbsp;dateValidite,
                 int&nbsp;nbrBillet,
                 int&nbsp;classe,
                 java.lang.String&nbsp;gareDepart,
                 java.lang.String&nbsp;gareArrivee,
                 java.lang.String&nbsp;typeBillet,
                 java.lang.String&nbsp;reduction,
                 boolean&nbsp;allerRetour)
          throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de faire passer les informations d'un achat d'un billet et de le creer</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>dateValidite</code> - la date de depart du billet</dd>
<dd><code>nbrBillet</code> - le nombre de billet</dd>
<dd><code>classe</code> - la classe du billet</dd>
<dd><code>gareDepart</code> - la gare de depart</dd>
<dd><code>gareArrivee</code> - la gare d'arrivee</dd>
<dd><code>typeBillet</code> - le type de billet</dd>
<dd><code>reduction</code> - la reduction du billet</dd>
<dd><code>allerRetour</code> - le booleen qui indique s'il s'agit d'un aller simple (faux)
        ou d'un aller retour (vrai)</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="creerAbonnement-int-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerAbonnement</h4>
<pre>void&nbsp;creerAbonnement(int&nbsp;validite,
                     java.lang.String&nbsp;gareDepart,
                     java.lang.String&nbsp;gareArrivee,
                     int&nbsp;classe,
                     java.lang.String&nbsp;reduction,
                     java.lang.String&nbsp;type,
                     java.lang.String&nbsp;nom,
                     java.lang.String&nbsp;registreNational)
              throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de faire passer les informations d'un achat d'un abonnement et de le creer</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>validite</code> - la periode de validite de l'abonnement</dd>
<dd><code>gareDepart</code> - la gare source de l'abonnement</dd>
<dd><code>gareArrivee</code> - la gare de destination de l'abonnement</dd>
<dd><code>classe</code> - la classe de l'abonnement</dd>
<dd><code>reduction</code> - la reduction de l'abonnement</dd>
<dd><code>type</code> - le type de l'abonnement</dd>
<dd><code>nom</code> - le nom auquel est enregistre l'abonnement</dd>
<dd><code>registreNational</code> - le registre national de l'utilisateur</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="modifierAbo-int-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>modifierAbo</h4>
<pre>void&nbsp;modifierAbo(int&nbsp;validite,
                 java.lang.String&nbsp;numAbo)
          throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de faire passer les informations d'un renouvellement d'un abonnement</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>validite</code> - la nouvelle validite de l'abonnement</dd>
<dd><code>numAbo</code> - le numero de l'abonnement a renouveler</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="existenceAbo-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>existenceAbo</h4>
<pre>boolean&nbsp;existenceAbo(java.lang.String&nbsp;numAbo)</pre>
<div class="block">Permet de savoir si un abonnement existe (grace a son numero)</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>numAbo</code> - un numero d'abonnement</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>existe un booleen vrai si le numero d'abonnement existe dans la base de donnees, faux sinon</dd>
</dl>
</li>
</ul>
<a name="creerPassIllimite-java.lang.String-int-java.lang.String-java.lang.String-int-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerPassIllimite</h4>
<pre>void&nbsp;creerPassIllimite(java.lang.String&nbsp;nom,
                       int&nbsp;classe,
                       java.lang.String&nbsp;reduction,
                       java.lang.String&nbsp;type,
                       int&nbsp;nbrJours,
                       java.lang.String&nbsp;typePass)
                throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de faire passer les informations d'un achat d'un pass illimite et de le creer</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nom</code> - le nom auquel sera enregistre le pass</dd>
<dd><code>classe</code> - la classe du pass</dd>
<dd><code>reduction</code> - la reduction du pass</dd>
<dd><code>type</code> - le type de titre du pass</dd>
<dd><code>nbrJours</code> - le nombre de jour de la validite</dd>
<dd><code>typePass</code> - le type du pass (illimite, dix trajets, dix trajets entre deux gares)</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="creerPass10Trajets-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerPass10Trajets</h4>
<pre>void&nbsp;creerPass10Trajets(java.lang.String&nbsp;nom,
                        int&nbsp;classe,
                        java.lang.String&nbsp;reduction,
                        java.lang.String&nbsp;type,
                        java.lang.String&nbsp;typePass)
                 throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de faire passer les informations d'un achat d'un pass dix trajets et de le creer</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nom</code> - le nom auquel sera enregistre le pass</dd>
<dd><code>classe</code> - la classe du pass</dd>
<dd><code>reduction</code> - la reduction du pass</dd>
<dd><code>type</code> - le type de titre du pass</dd>
<dd><code>typePass</code> - le type du pass (illimite, dix trajets, dix trajets entre deux gares)</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="creerPass10Trajets2Gares-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>creerPass10Trajets2Gares</h4>
<pre>void&nbsp;creerPass10Trajets2Gares(java.lang.String&nbsp;nom,
                              java.lang.String&nbsp;gareDepart,
                              java.lang.String&nbsp;gareArrivee,
                              int&nbsp;classe,
                              java.lang.String&nbsp;reduction,
                              java.lang.String&nbsp;type,
                              java.lang.String&nbsp;typePass)
                       throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de faire passer les informations d'un achat d'un pass dix trajets entre deux gares</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nom</code> - le nom auquel sera enregistre le pass</dd>
<dd><code>gareDepart</code> - la gare de depart du pass</dd>
<dd><code>gareArrivee</code> - la gare d'arrivee du pass</dd>
<dd><code>classe</code> - la classe du pass</dd>
<dd><code>reduction</code> - la reduction du pass</dd>
<dd><code>type</code> - le type de titre du pass</dd>
<dd><code>typePass</code> - le type du pass (illimite, dix trajets, dix trajets entre deux gares)</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="rechercherPrix-coeur.Commande-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechercherPrix</h4>
<pre>double&nbsp;rechercherPrix(<a href="../coeur/Commande.html" title="enum in coeur">Commande</a>&nbsp;commande,
                      java.lang.String&nbsp;gareDepart,
                      java.lang.String&nbsp;gareArrivee)</pre>
<div class="block">Permet de rechercher le prix d'un titre de transport</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>commande</code> - la commande d'un titre de transport</dd>
<dd><code>gareDepart</code> - la gare de depart de la commande</dd>
<dd><code>gareArrivee</code> - la gare d'arrivee de la commande</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>prix le prix de la commande</dd>
</dl>
</li>
</ul>
<a name="rechercherPrix-stockage.imprimable.TypePass-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechercherPrix</h4>
<pre>double&nbsp;rechercherPrix(<a href="../stockage/imprimable/TypePass.html" title="enum in stockage.imprimable">TypePass</a>&nbsp;typePass)</pre>
<div class="block">Permet de rechercher le prix d'un type de pass</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>typePass</code> - le type du pass (illimite, dix trajets, dix trajets entre deux gares)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>prix le prix du pass</dd>
</dl>
</li>
</ul>
<a name="conversionTypePass-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>conversionTypePass</h4>
<pre><a href="../stockage/imprimable/TypePass.html" title="enum in stockage.imprimable">TypePass</a>&nbsp;conversionTypePass(java.lang.String&nbsp;typePassStr)
                     throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de reconvertir un type (chaine de caractere) en un type TypePass</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>typePassStr</code> - un type de pass (illimite, dix trajets, dix trajets entre deux gares)</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>typePass un type de pass (TypePass)</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="conversionType-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>conversionType</h4>
<pre><a href="../stockage/imprimable/TypeTitre.html" title="enum in stockage.imprimable">TypeTitre</a>&nbsp;conversionType(java.lang.String&nbsp;type)
                  throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de reconvertir un type (chaine de caractere) en un type TypeTitre</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>type</code> - un type de titre de transport</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>type le type associe au type en parametre</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="conversionClasse-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>conversionClasse</h4>
<pre><a href="../stockage/imprimable/Classe.html" title="enum in stockage.imprimable">Classe</a>&nbsp;conversionClasse(int&nbsp;classe)
                 throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de reconvertir une classe (chaine de caractere) en une classe Classe</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>classe</code> - une classe du titre de tranport</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>classe la classe associee a la classe en parametre</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="conversionReduction-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>conversionReduction</h4>
<pre><a href="../stockage/imprimable/Reduction.html" title="enum in stockage.imprimable">Reduction</a>&nbsp;conversionReduction(java.lang.String&nbsp;reduction)
                       throws <a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></pre>
<div class="block">Permet de reconvertir une reduction (chaine de caractere) en une reduction Reduction</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>reduction</code> - une reduction de titre de transport</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>reduction la reduction associee a la reduction en parametre</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ErreurDEncodage.html" title="class in stockage">ErreurDEncodage</a></code> - (peut generer une exception s'il y a une erreur d'encodage)</dd>
</dl>
</li>
</ul>
<a name="getListeReduction--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getListeReduction</h4>
<pre>java.lang.String[]&nbsp;getListeReduction()</pre>
<div class="block">Permet de recuperer une liste de toutes les reductions existantes</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>reductions un tableau contenant toutes les reductions existantes</dd>
</dl>
</li>
</ul>
<a name="getListeType--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getListeType</h4>
<pre>java.lang.String[]&nbsp;getListeType()</pre>
<div class="block">Permet de recuperer une liste de tous les types existants</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>types un tableau contenant tous les types existants</dd>
</dl>
</li>
</ul>
<a name="existenceTrajet-java.lang.String-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>existenceTrajet</h4>
<pre>boolean&nbsp;existenceTrajet(java.lang.String&nbsp;gareDepart,
                        java.lang.String&nbsp;gareArrivee)</pre>
<div class="block">Permet de savoir si un trajet existe entre deux gares</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gareDepart</code> - la gare source du trajet</dd>
<dd><code>gareArrivee</code> - la gare d'arrivee du trajet</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>existe un booleen vrai si le trajet existe entre les deux gares dans la base de donnees, faux sinon</dd>
</dl>
</li>
</ul>
<a name="existenceGare-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>existenceGare</h4>
<pre>boolean&nbsp;existenceGare(java.lang.String&nbsp;gare)</pre>
<div class="block">Permet de savoir si une gare existe</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gare</code> - une gare</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>existe un booleen qui est vrai si la gare existe dans la base de donnees, faux sinon</dd>
</dl>
</li>
</ul>
<a name="rechercherHoraireDepart-java.lang.String-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechercherHoraireDepart</h4>
<pre>java.lang.String[]&nbsp;rechercherHoraireDepart(java.lang.String&nbsp;gareDepart,
                                           int&nbsp;heure,
                                           int&nbsp;minute)
                                    throws java.sql.SQLException</pre>
<div class="block">Permet de rechercher un horaire a patir d'une gare de depart</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gareDepart</code> - une gare de depart</dd>
<dd><code>heure</code> - l'heure du depart</dd>
<dd><code>minute</code> - la minute de l'heure du depart</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>horaire un tableau contenant les cinq premiers horaires au depart d'une gare</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.sql.SQLException</code> - (peut generer une exception SQL)</dd>
</dl>
</li>
</ul>
<a name="rechercherHoraireItineraire-java.lang.String-java.lang.String-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechercherHoraireItineraire</h4>
<pre>java.lang.String[]&nbsp;rechercherHoraireItineraire(java.lang.String&nbsp;gareDepart,
                                               java.lang.String&nbsp;gareArrivee,
                                               int&nbsp;heure,
                                               int&nbsp;minute)
                                        throws java.sql.SQLException</pre>
<div class="block">Permet de rechercher l'horaire d'un itineraire entre une gare de depart et une
        gare d'arrivee</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gareDepart</code> - une gare de depart</dd>
<dd><code>gareArrivee</code> - une gare d'arrivee</dd>
<dd><code>heure</code> - l'heure du depart</dd>
<dd><code>minute</code> - la minute de l'heure du depart</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>horaire le tableau contenant l'horaire des cinq premiers horaires de
        l'itineraire</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.sql.SQLException</code> - (peut generer une exception SQL)</dd>
</dl>
</li>
</ul>
<a name="rechercherHoraireArrivee-java.lang.String-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechercherHoraireArrivee</h4>
<pre>java.lang.String[]&nbsp;rechercherHoraireArrivee(java.lang.String&nbsp;gareArrivee,
                                            int&nbsp;heure,
                                            int&nbsp;minute)
                                     throws java.sql.SQLException</pre>
<div class="block">Permet de rechercher un horaire d'arrivees d'une gare</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>gareArrivee</code> - une gare d'arrivee</dd>
<dd><code>heure</code> - l'heure de l'arrivee</dd>
<dd><code>minute</code> - la minute de l'heure de l'arrivee</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>horaire un tableau contenant les cinq premiers horaires des arrivees dans une gare</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.sql.SQLException</code> - (peut generer une exception SQL)</dd>
</dl>
</li>
</ul>
<a name="getHoraire--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getHoraire</h4>
<pre>java.lang.String[]&nbsp;getHoraire()</pre>
<div class="block">Permet de recupere le tableau contenant l'horaire recherche prealablement</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>horaire un tableau contenant l'horaire recherche prealablement</dd>
</dl>
</li>
</ul>
<a name="getTitre--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTitre</h4>
<pre><a href="../stockage/imprimable/TitreDeTransport.html" title="class in stockage.imprimable">TitreDeTransport</a>&nbsp;getTitre()</pre>
<div class="block">Permet de recuperer l'instance de TitreDeTransport</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>titre le titre de transport</dd>
</dl>
</li>
</ul>
<a name="getNbrTitre--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNbrTitre</h4>
<pre>int&nbsp;getNbrTitre()</pre>
<div class="block">Permet de recuperer le nombre de titre(s) commande(s)</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>nombre le nombre de titre commande</dd>
</dl>
</li>
</ul>
<a name="getPrix--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPrix</h4>
<pre>int&nbsp;getPrix()</pre>
<div class="block">Permet de recuperer le prix de la commande (en cents)</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>prix le prix de la commande</dd>
</dl>
</li>
</ul>
<a name="setPrix-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPrix</h4>
<pre>void&nbsp;setPrix(int&nbsp;prix)</pre>
<div class="block">Permet d'initialiser le prix d'un titre de transport</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>prix</code> - le prix du titre de transport (en cents)</dd>
</dl>
</li>
</ul>
<a name="ajoutMonnaie-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ajoutMonnaie</h4>
<pre>void&nbsp;ajoutMonnaie(int&nbsp;i)
           throws <a href="../stockage/ComposantHorsService.html" title="class in stockage">ComposantHorsService</a></pre>
<div class="block">Permet d'ajouter de la monnaie, d'incrementer le montant intoduit</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>i</code> - le montant (en cents) a ajouter</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ComposantHorsService.html" title="class in stockage">ComposantHorsService</a></code> - (peut generer une exceptions si une des fentes est en panne)</dd>
</dl>
</li>
</ul>
<a name="rendreMonnaie--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rendreMonnaie</h4>
<pre><a href="../stockage/Rendu.html" title="class in stockage">Rendu</a>&nbsp;rendreMonnaie()
             throws <a href="../stockage/PasAssezDeMonnaie.html" title="class in stockage">PasAssezDeMonnaie</a></pre>
<div class="block">Permet d'avoir un detail de la monnaie qui sera rendue</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>rendu le detail de ce qui sera rendu</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/PasAssezDeMonnaie.html" title="class in stockage">PasAssezDeMonnaie</a></code> - (peut generer une exception s'il n'y a pas assez de monnaie)</dd>
</dl>
</li>
</ul>
<a name="rendreMontantRecu--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rendreMontantRecu</h4>
<pre><a href="../stockage/Rendu.html" title="class in stockage">Rendu</a>&nbsp;rendreMontantRecu()</pre>
<div class="block">Permet d'avoir le detail de la monnaie qui a ete inseree a rendre</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>rendu le detail de ce qui sera rendu</dd>
</dl>
</li>
</ul>
<a name="reinitialisation--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reinitialisation</h4>
<pre>void&nbsp;reinitialisation()</pre>
<div class="block">Permet de mettre le compteur "introduit" (monnaie introduite) a zero</div>
</li>
</ul>
<a name="getListeAbonnement--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getListeAbonnement</h4>
<pre>java.util.ArrayList&lt;java.lang.String&gt;&nbsp;getListeAbonnement()</pre>
<div class="block">Permet de recuperer une liste de tout les abonnements deja existants dans la base 
        de donnees</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>liste une liste de tout les abonnements existants dans la base de donnees</dd>
</dl>
</li>
</ul>
<a name="miseAJourValiditeAbonnement--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>miseAJourValiditeAbonnement</h4>
<pre>void&nbsp;miseAJourValiditeAbonnement()</pre>
<div class="block">Permet de mettre a jour la validite de l'abonnement renouvele dans la base de
        donnees</div>
</li>
</ul>
<a name="insertionAbonnement--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>insertionAbonnement</h4>
<pre>void&nbsp;insertionAbonnement()</pre>
<div class="block">Permet d'inserer le nouvel abonnement achete dans la base de donnees</div>
</li>
</ul>
<a name="depassementMontantAPayer--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>depassementMontantAPayer</h4>
<pre>boolean&nbsp;depassementMontantAPayer()</pre>
<div class="block">Permet de savoir si l'utilisateur a rentre assez de monnaie lors de son paiement</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>depasse un booleen vrai si l'utilisateur a depasse le prix a payer, faux
        sinon</dd>
</dl>
</li>
</ul>
<a name="montantAPayerAffichable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>montantAPayerAffichable</h4>
<pre>double&nbsp;montantAPayerAffichable()</pre>
<div class="block">Permet de recuperer le prix affichable (en euros)</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>montantAPayer le prix de la commande (en euros)</dd>
</dl>
</li>
</ul>
<a name="prixTicketAffichable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>prixTicketAffichable</h4>
<pre>double&nbsp;prixTicketAffichable()</pre>
<div class="block">Permet de recuperer le prix d'un titre de transport commande (s'il y en a plusieurs)</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>prix le prix (en euros) d'un titre de transport commande</dd>
</dl>
</li>
</ul>
<a name="renduAffichable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>renduAffichable</h4>
<pre>double&nbsp;renduAffichable()</pre>
<div class="block">Permet de recuperer le montant rendu (en euros)</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>rendu le montant rendu</dd>
</dl>
</li>
</ul>
<a name="montantRecuAffichable--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>montantRecuAffichable</h4>
<pre>double&nbsp;montantRecuAffichable()</pre>
<div class="block">Permet de recuperer le montant introduit (en euros)</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>introduit le montant introduit (en euros)</dd>
</dl>
</li>
</ul>
<a name="existenceCarte-java.lang.String-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>existenceCarte</h4>
<pre>boolean&nbsp;existenceCarte(java.lang.String&nbsp;numero)</pre>
<div class="block">Permet de savoir si la carte associee au numero en parametre</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>numero</code> - le numero d'une carte bancaire</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>existe un booleen vrai si le numero de carte existe dans la base de donnees</dd>
</dl>
</li>
</ul>
<a name="getCarte--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCarte</h4>
<pre><a href="../stockage/Carte.html" title="class in stockage">Carte</a>&nbsp;getCarte()</pre>
<div class="block">Permet de recuperer la carte que l'on utilise actuellement</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>carte la carte que l'on utilise (qui a ete inseree)</dd>
</dl>
</li>
</ul>
<a name="verifCode-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifCode</h4>
<pre>boolean&nbsp;verifCode(int&nbsp;codePIN)</pre>
<div class="block">Permet de verifier le code PIN de la carte que l'on utilise actuellement</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>codePIN</code> - le code PIN entre par l'utilisateur</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>verif un booleen vrai si le code PIN entre est correct, si c'est le meme
        que celui de la carte que l'on utilise</dd>
</dl>
</li>
</ul>
<a name="verifSolde--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifSolde</h4>
<pre>boolean&nbsp;verifSolde()</pre>
<div class="block">Permet de verifier si le solde de la carte utilisee est suffisant</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>verif un booleen vrai si le solde de la carte est suffisant, faux sinon</dd>
</dl>
</li>
</ul>
<a name="mauvaisPin--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>mauvaisPin</h4>
<pre>void&nbsp;mauvaisPin()</pre>
<div class="block">Action executee si le PIN entre est mauvais</div>
</li>
</ul>
<a name="tropDErreur--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tropDErreur</h4>
<pre>boolean&nbsp;tropDErreur()</pre>
<div class="block">Permet de regarder si l'utilisateur n'a pas entre trop de fois un mauvais code PIN</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>tropDErreur un booleen vrai si l'utilisateur a deja saisi trois fois un 
        code PIN incorrect, faux sinon</dd>
</dl>
</li>
</ul>
<a name="actualiserSolde--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>actualiserSolde</h4>
<pre>void&nbsp;actualiserSolde()</pre>
<div class="block">Permet d'actualiser le solde associee a la carte utilisee dans la base de donnees 
        apres un paiement par carte</div>
</li>
</ul>
<a name="estEnMarche-stockage.Composant-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>estEnMarche</h4>
<pre>boolean&nbsp;estEnMarche(<a href="../stockage/Composant.html" title="enum in stockage">Composant</a>&nbsp;composant)</pre>
<div class="block">Permet de savoir si un composant est en panne ou non</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>composant</code> - un composant</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>enPanne vrai si le composant est fonctionnel, faux sinon</dd>
</dl>
</li>
</ul>
<a name="actualiserPanne-stockage.Composant-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>actualiserPanne</h4>
<pre>void&nbsp;actualiserPanne(<a href="../stockage/Composant.html" title="enum in stockage">Composant</a>&nbsp;composant)</pre>
<div class="block">Permet d'actualiser la panne d'un composant</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>composant</code> - un composant a mettre en panne ou a reparer</dd>
</dl>
</li>
</ul>
<a name="viderCaisse--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>viderCaisse</h4>
<pre>void&nbsp;viderCaisse()</pre>
<div class="block">Pemet de vider la caisse du distributeur</div>
</li>
</ul>
<a name="rechargerCaisse--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechargerCaisse</h4>
<pre>void&nbsp;rechargerCaisse()</pre>
<div class="block">Permet de recharger la caisse du distributeur</div>
</li>
</ul>
<a name="rechargerEncreEtPapier--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>rechargerEncreEtPapier</h4>
<pre>void&nbsp;rechargerEncreEtPapier()</pre>
<div class="block">Permet recharger le stock d'encre et de papier du distributeur</div>
</li>
</ul>
<a name="viderEncreEtPapier--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>viderEncreEtPapier</h4>
<pre>void&nbsp;viderEncreEtPapier()</pre>
<div class="block">Permet de vider le stock d'encre et de papier du distributeur</div>
</li>
</ul>
<a name="carteEnlevee--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>carteEnlevee</h4>
<pre>void&nbsp;carteEnlevee()</pre>
<div class="block">Permet d'enlever la carte du distributeur</div>
</li>
</ul>
<a name="carteInseree--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>carteInseree</h4>
<pre>boolean&nbsp;carteInseree()</pre>
<div class="block">Permet de voir si une carte est inseree ou non</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>inseree un booleen vrai s'il y a une carte dans le lecteur, faux sinon</dd>
</dl>
</li>
</ul>
<a name="impression--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>impression</h4>
<pre>void&nbsp;impression()
         throws <a href="../stockage/ComposantHorsService.html" title="class in stockage">ComposantHorsService</a>,
                <a href="../stockage/PlusDePapier.html" title="class in stockage">PlusDePapier</a></pre>
<div class="block">Permet de decrementer le nombre de papier pour l'impression</div>
<dl>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code><a href="../stockage/ComposantHorsService.html" title="class in stockage">ComposantHorsService</a></code> - (peut generer une exception si l'imprimante 
 est en panne)</dd>
<dd><code><a href="../stockage/PlusDePapier.html" title="class in stockage">PlusDePapier</a></code> - (peut generer une exception s'il n'y a plus de papier)</dd>
</dl>
</li>
</ul>
<a name="setTactile-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTactile</h4>
<pre>void&nbsp;setTactile(boolean&nbsp;tactile)</pre>
<div class="block">Permet de mettre a jour la configuration de l'ecran du distributeur</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tactile</code> - vrai si l'ecran choisi est tactile, faux sinon</dd>
</dl>
</li>
</ul>
<a name="getTactile--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getTactile</h4>
<pre>boolean&nbsp;getTactile()</pre>
<div class="block">Permet de savoir si l'ecran est tactile ou non</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>ecranTactile qui est vrai si l'ecran est tactile, faux sinon</dd>
</dl>
</li>
</ul>
<a name="setScanneur-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setScanneur</h4>
<pre>void&nbsp;setScanneur(boolean&nbsp;present)</pre>
<div class="block">Permet de mettre a jour le scanneur du distributeur (l'ajoute s'il n'est pas present,
        l'enleve s'il l'est)</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>present</code> - vrai si le distributeur est equipe d'un scanneur, faux sinon</dd>
</dl>
</li>
</ul>
<a name="scanneurPresent--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>scanneurPresent</h4>
<pre>boolean&nbsp;scanneurPresent()</pre>
<div class="block">Permet de savoir si le scanneur de codes est present sur le distributeur ou non</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>scanneurPresent qui est vrai si le distributeur est equipe d'un scanneur, faux
        sinon</dd>
</dl>
</li>
</ul>
<a name="setFentes-boolean-boolean-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setFentes</h4>
<pre>void&nbsp;setFentes(boolean&nbsp;fenteBillet,
               boolean&nbsp;fentePiece)</pre>
<div class="block">Permet de mettre a jour les fentes du distributeur (les ajoutes si elles ne sont pas 
        presentes ou les enleve)</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>fenteBillet</code> - vrai si la fente a billet veut etre mise, faux si elle doit etre 
        enlevee</dd>
<dd><code>fentePiece</code> - vrai si la fente a piece veut etre mise, faux si elle doit etre 
        enlevee</dd>
</dl>
</li>
</ul>
<a name="fentePresente--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>fentePresente</h4>
<pre>boolean&nbsp;fentePresente()</pre>
<div class="block">Permet de savoir si au moins une fente est presente sur le distributeur</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>fente vrai si on a au moins une fente (fenteBillet ou fentePiece), faux sinon</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/CoeurAStockage.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../stockage/Carte.html" title="class in stockage"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li><a href="../stockage/CoeurAStockageImpl.html" title="class in stockage"><span class="typeNameLink">Next&nbsp;Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?stockage/CoeurAStockage.html" target="_top">Frames</a></li>
<li><a href="CoeurAStockage.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li>Constr&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
