<html lang="en">
<head>
<title>Menu Location - GNU Texinfo 4.8</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="GNU Texinfo 4.8">
<meta name="generator" content="makeinfo 4.8">
<link title="Top" rel="start" href="index.html#Top">
<link rel="up" href="Menus.html#Menus" title="Menus">
<link rel="next" href="Writing-a-Menu.html#Writing-a-Menu" title="Writing a Menu">
<link href="http://www.gnu.org/software/texinfo/" rel="generator-home" title="Texinfo Homepage">
<!--
This manual is for GNU Texinfo (version 4.8, 29 December 2004),
a documentation system that can produce both online information and a
printed manual from a single source.

Copyright (C) 1988, 1990, 1991, 1992, 1993, 1995, 1996, 1997, 1998,
1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.1 or any later version published by the Free Software
     Foundation; with no Invariant Sections, with the Front-Cover texts
     being ``A GNU Manual,'' and with the Back-Cover Texts as in (a)
     below.  A copy of the license is included in the section entitled
     ``GNU Free Documentation License.''

     (a) The FSF's Back-Cover Text is: ``You have freedom to copy and
     modify this GNU Manual, like GNU software.  Copies published by
     the Free Software Foundation raise funds for GNU development.''
  -->
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css"><!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
--></style>
</head>
<body>
<div class="node">
<p>
<a name="Menu-Location"></a>
Next:&nbsp;<a rel="next" accesskey="n" href="Writing-a-Menu.html#Writing-a-Menu">Writing a Menu</a>,
Up:&nbsp;<a rel="up" accesskey="u" href="Menus.html#Menus">Menus</a>
<hr>
</div>

<h3 class="section">7.1 Menu Location</h3>

<p><a name="index-Menu-location-339"></a><a name="index-Location-of-menus-340"></a>
A menu must be located at the end of a node, without any regular text
or additional commands between the <code>@end menu</code> and the beginning
of the next node.  (As a consequence, there may be at most one menu in
a node.)

  <p><a name="index-Info-format_002c-and-menus-341"></a>This is actually a useful restriction, since a reader who uses the
menu could easily miss any such text.  Technically, it is necessary
because in Info format, there is no marker for the end of a menu, so
Info-reading programs would have no way to know when the menu ends and
normal text resumes.

  <p><a name="index-Hierarchical-documents_002c-and-menus-342"></a>Technically, menus can carry you to any node, regardless of the
structure of the document; even to nodes in a different Info file. 
However, we do not recommend ever making use of this, because the
<samp><span class="command">makeinfo</span></samp> implicit pointer creation feature (see <a href="makeinfo-Pointer-Creation.html#makeinfo-Pointer-Creation">makeinfo Pointer Creation</a>) and GNU Emacs Texinfo mode updating commands work
only to create menus of subordinate nodes in a hierarchically
structured document.  Instead, use cross references to refer to
arbitrary nodes.

  <p>In the past, we recommended using a `<samp><span class="samp">@heading</span></samp>' command within an
<code>@ifinfo</code> conditional instead of the normal sectioning commands
after a very short node with a menu.  This had the advantage of making
the printed output look better, because there was no very short text
between two headings on the page.  But aside from not working with
<samp><span class="command">makeinfo</span></samp>'s implicit pointer creation, it also makes the XML
output incorrect, since it does not reflect the true document
structure.  So, unfortunately we can no longer recommend this.

  </body></html>

