# To deploy this container directly from Docker Hub, use:
#
#        docker run --cap-drop=all --name nginx -p 80:8080 -d ajhaydock/alexhaydock.co.uk
#
# To build and run this container locally, try a command like:
#
#        docker build -t alexhaydock.co.uk .
#        docker run --cap-drop=all --name nginx -p 80:8080 -d alexhaydock.co.uk
#

FROM fedora
MAINTAINER Alex Haydock <alex@alexhaydock.co.uk>

ENV SITETODEPLOY https://github.com/ajhaydock/alexhaydock.co.uk

# Build container as root
USER root
WORKDIR /root

# Add my custom nginx config, and the script to generate a list of Tor exits then start nginx.
##ADD nginx.conf /etc/nginx/nginx.conf
ADD start.sh /usr/share/nginx/start

# Empty default HTML dir and deploy site into it
RUN git clone $SITETODEPLOY /usr/share/nginx/html/live

# Install Ruby and Jekyll
RUN dnf install -y gcc redhat-rpm-config ruby-devel rubygem-bundler && \
    dnf install -y rubygem-ffi rubygem-nokogiri jekyll && \
    dnf clean all

# Build site from Jekyll source
WORKDIR /usr/share/nginx/html/live
RUN bundle install && \
    bundle exec jekyll build

# Make sure the permissions are set correctly on our webroot, logdir, pidfile and config so that we can run the webserver as non-root.
#RUN chown -R nginx:nginx /usr/share/nginx && \

# Launch Nginx in container as non-root
USER nginx
WORKDIR /usr/share/nginx

# Launch command
CMD ["/usr/share/nginx/start"]
