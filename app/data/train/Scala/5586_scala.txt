package org.smitt

import akka.actor.{ActorSystem, Props}
import akka.testkit.{ImplicitSender, TestKit, TestProbe}
import org.smitt.Receptionist.Join
import org.smitt.mocks.MockReceptionist
import org.scalatest.{BeforeAndAfterAll, Matchers, WordSpecLike}


class ReceptionistSpec extends TestKit(ActorSystem())
with ImplicitSender
with WordSpecLike
with Matchers
with BeforeAndAfterAll {

  override def afterAll(): Unit = {
    system.shutdown()
  }

  val dispatcherMock = TestProbe()

  "When Receptionist is created it" must {
    "register with the Dispatcher" in {

      system.actorOf(Props(classOf[MockReceptionist], dispatcherMock.ref))

      dispatcherMock.expectMsg(Join)
    }
  }
}

