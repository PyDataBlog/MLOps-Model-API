import sys.process._

object TextAnalyzer extends App {

  if (args.length != 2) {
    System.err.println( "Usage: TextAnalyzer" +
      " <VectorizationModelFolder>" +
      " <ClassificationModelFolder>"
    )
    System.exit(1)
  }
  val vectorizationModelFolder = args(0)
  val classificationModelFolder = args(1)

  val runningJavaProcesses = "jps -lm" !!
  val runningSystemProcesses = "ps -aux" !!

  if (!runningJavaProcesses.contains("org.apache.spark")) {
    println("Spark is not running. Start spark before continue!")
    System.exit(1)
  }
  println("Spark process was found\n")

  if (!runningSystemProcesses.contains("kafka")) {
    printf("Kafka is not running. Start kafka before continue!\n")
    System.exit(2)
  }

  printf("Start listening analyzer\n")
  val result: Int = StreamAnalyzer.startListening(vectorizationModelFolder, classificationModelFolder)
  if(result != 0) {
    printf("ERROR! %d when listening the analyzer\n", result)
    System.exit(result)
  }
}
