package sms.quotes.metrics

import org.scalatest.FunSuite
import sms.core.stock.StockTickers
import org.joda.time.DateTime
import sms.quotes.YahooQuotes
import scala.concurrent.Await
import scala.concurrent.duration._
import sms.quotes.model.YahooData
import sms.core.model.QueryDSL._
import sms.core.model.Conversions._
import sms.quotes.metrics.SharpeRatio
import scala.concurrent.ExecutionContext.Implicits.global

class SharpeRatioTest extends FunSuite {
  test("ąęą") {
    println(StockTickers.default.tickerSymbolString("SPY").get)
  }
  test("sharpe ratio") {
    val ticker = StockTickers.default.head

    val from = new DateTime().minusDays(30)
    val to = new DateTime()

    //fetch data
    Await.result(YahooQuotes.fetchHistorical(ticker, from, to), 100 seconds)

    val ratio = SharpeRatio(
      tickerData = Await.result(YahooData.filter(
        YahooData.date >= from and YahooData.date <= to and YahooData.ticker === ticker
      ).sort(asc -> YahooData.date).collect[List](), 100 seconds),
      riskFreeTickerData = Await.result(YahooData.filter(
        YahooData.date >= from and YahooData.date <= to and
          YahooData.ticker === StockTickers.default.tickerSymbolString("SPY").get
      ).sort(asc -> YahooData.date).collect[List](), 100 seconds)
    )

    println(ratio)

    assert(!ratio.isNaN)
  }
}
