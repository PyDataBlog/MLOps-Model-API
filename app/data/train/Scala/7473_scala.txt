
import akka.actor.ActorSystem
import javax.inject.Singleton
import play.Logger
import play.api.Application
import play.api.GlobalSettings
import play.api.Play.current
import play.api.libs.ws.WS
import play.api.libs.ws.WSRequest
import utils.Shared

/* 
* @author timon
 */

object Global extends GlobalSettings {

  override def onStart(app: Application) = {

    implicit val context = play.api.libs.concurrent.Execution.Implicits.defaultContext

    val telegramListener: String = Shared.getConfigUrl("telegram.api.webHook.listener")
    val request: WSRequest = WS.url(Shared.telegramApiUrlSetWebHook).withQueryString("url" -> telegramListener) 
    
    Logger.info("requesting webHook, url: %s".format(request.uri))
    
    request.get().map {response =>
      if (response.status == 200) 
        Logger.info("successfuly established webHook")
      else 
        Logger.error("error establishing webHook, response status: %d, response body: %s".format(response.status, response.body))
    }
    
    super.onStart(app)
  }
  
  override def onStop(app: Application) = {
    
    ActorSystem().shutdown()
    
    super.onStop(app)
  }
}
