package core.crawler

import com.typesafe.scalalogging.LazyLogging
import org.jsoup.nodes.Element
import org.jsoup.select.Elements

abstract class AbstractCrawler extends LazyLogging {

  protected def imageElement(elements: Elements, count: Int): Option[Element] = {
    val children = elements.select(".chamada-thumb > a > img")

    children.size() match {
      case n if n >= 1 =>
        Some(children.get(if (count < children.size()) count else (children.size() - 1)))
      case _ => None
    }
  }

  protected def sharesCount(elements: Elements) = {
    val sharesCountText = elements
      .select(".chamada-contents .social-meta .social-count").text().trim

    if (sharesCountText.isEmpty) 0 else sharesCountText.toInt
  }

  protected def commentsCount(elements: Elements): Int = {
    val commentsCountText = elements
      .select(".chamada-contents .social-meta .social-comments > a > span").text().trim

    if (commentsCountText.isEmpty) 0 else commentsCountText.toInt
  }

  protected def postedAt(info: String, authorName: String) = {
    val index = info.indexOf(authorName) + authorName.length
    info.substring(index + 1, info.length)
  }
}