package zzz.akka.avionics

import akka.actor.{ActorSelection, Actor, ActorRef}
import akka.util.Timeout

import scala.concurrent.Future
import scala.concurrent.Await
import scala.concurrent.duration._

object Pilots {
  case object ReadyToGo
  case object RelinquishControl
}

trait PilotProvider {
  def pilot: Actor = new Pilot
  def copilot: Actor = new CoPilot
  def autopilot: Actor = new AutoPilot
}

class Pilot extends Actor {
  import Pilots._
  import Plane._
  var controls: ActorRef = context.system.deadLetters
  var copilot: ActorRef = context.system.deadLetters
  var autopilot: ActorRef = context.system.deadLetters
  val copilotName = context.system.settings.config.getString("zzz.akka.avionics.flightcrew.copilotName")
  implicit val timeout = Timeout(5 seconds)

  def receive = {

    case ReadyToGo => {

      context.parent ! Plane.GiveMeControl

      val futurecopilot: ActorRef = Await.result(context.actorSelection("../" + copilotName).resolveOne(), Duration.Inf)

      val futureautopilot: ActorRef = Await.result(context.actorSelection("../AutoPilot").resolveOne(), Duration.Inf)
    }

    //case Controls(controlSurfaces) =>
    //  controls = controlSurfaces
  }

}

