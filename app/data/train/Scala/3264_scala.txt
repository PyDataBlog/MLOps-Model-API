package sms.news.corpus.misc

import sms.news.sentiment.SentimentDictionary
import sms.news.sentiment.analysis.{HTMLArticleTextExtractor, EnglishTokenizer, NegationExtractor, FeatureExtractor}

case class NewsSentimentCount(positives: Int = 0, negatives: Int = 0) {
  def +(i: Int): NewsSentimentCount =
    if (i > 0) copy(positives = positives + i)
    else if (i < 0) copy(negatives = negatives + i)
    else this

  def +(other: NewsSentimentCount) = copy(positives = positives + other.positives, negatives = negatives + other.negatives)

  override def toString: String = s"Sentiment count for news: \npositives: $positives\nnegatives: $negatives\ntotal: ${positives + negatives}"
}

trait NewsSentimentCounter extends FeatureExtractor with NegationExtractor with EnglishTokenizer {
  def count(doc: String)(implicit dict: SentimentDictionary): NewsSentimentCount = {
     featurize(tokenize(doc)).foldLeft(NewsSentimentCount()) {
       case (acc, (word, features)) =>
         acc + features.foldLeft(dict.classify(word))((acc, feature) => feature(word, acc)).map(_.toInt).getOrElse(0)
     }
  }
}
