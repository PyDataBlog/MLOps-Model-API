package one.lockstep.vault.spi.impl.android

import java.io.InputStream
import java.lang.reflect.InvocationTargetException

import one.lockstep.util.Logging
import android.content.Context
import android.content.res.AssetManager

object AndroidUtil extends Logging {

  def currentApplication: Context =
    try {
      val activityThreadClass = Class.forName("android.app.ActivityThread")
      val currentApplicationMethod = activityThreadClass.getMethod("currentApplication")
      val currentApplication = currentApplicationMethod.invoke(null).asInstanceOf[Context]
      currentApplication
    } catch {
      case cause@(_: ClassNotFoundException | _: NoSuchMethodException |
                  _: IllegalAccessException | _: InvocationTargetException) =>
        throw new RuntimeException("failed to determine current application context", cause)
    }

  def openAsset(context: Context, assetName: String): InputStream =
    context.getAssets.open(assetName, AssetManager.ACCESS_BUFFER)

  def assetExists(context: Context, assetName: String): Boolean = {
    val segments = assetName.split("/")
    val (path, name) = (segments.init.mkString("/"), segments.last)
    context.getAssets.list(path).contains(name)
  }

}
