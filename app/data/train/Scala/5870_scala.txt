package info.mornlight.oneopus.input

import javafx.scene.input.{DataFormat, TransferMode, Clipboard}
import java.nio.{ByteOrder, ByteBuffer}
import scala.collection.JavaConversions._
import scala.collection.mutable

/**
 * Created by alfred on 11/8/13.
 */
object ClipboardUtils {
  private val modeNone = 0
  private val modeCopy = 1
  private val modeMove = 2
  private val modeLink = 4

  private val mimeTypeDropEffect = "ms-stuff/preferred-drop-effect"

  def getTransferModes(clipboard: Clipboard): Array[TransferMode] = {
    val modes = new mutable.ArrayBuffer[TransferMode]()
    val format = DataFormat.lookupMimeType(mimeTypeDropEffect)
    val buf: ByteBuffer = clipboard.getContent(format).asInstanceOf[ByteBuffer]
    val value = buf.order(ByteOrder.LITTLE_ENDIAN).getInt
    if ((value & modeCopy) != 0) modes += TransferMode.COPY
    if ((value & modeMove) != 0) modes += TransferMode.MOVE
    if ((value & modeLink) != 0) modes += TransferMode.LINK

    modes.toArray
  }

  def setTransferModes(clipboard: Clipboard, modes: Array[TransferMode]) {
    var value = 0
    for (mode <- modes) {
      mode match {
        case TransferMode.COPY => value = value | modeCopy
        case TransferMode.MOVE => value = value | modeMove
        case TransferMode.LINK => value = value | modeLink
      }
    }

    val buf = ByteBuffer.allocate(4)
    buf.order(ByteOrder.LITTLE_ENDIAN).putInt(value)
    clipboard.setContent(Map(DataFormat.lookupMimeType(mimeTypeDropEffect) -> buf.asInstanceOf[AnyRef]))
  }
}
