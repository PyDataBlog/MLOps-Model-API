/*
 *   Copyright 2014 Ralf Steuerwald
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package ifmaps.properties

import org.scalacheck.Properties
import ifmaps.transformation.Converter._
import ifmaps.transformation.Extractor._
import org.scalacheck._
import org.scalacheck.Prop._
import ifmaps.generator.IdentifierGenerator._
import ifmaps.IPType
import ifmaps._

object TransformationProps extends Properties("Transformation") {

  property("transformation of identifiers to ifmapj and back") = forAll { id: Identifier =>
    val converted = id.toIfmapj
    val extracted = converted match {
      case IdentifierExtractor(id) => id
    }
    extracted == id
  }
}