package shredzzz.kirkwood.junit.matchers

import org.hamcrest.{BaseMatcher, Description}

class EquivalentArrayMatcher[A](expected: Array[A]) extends BaseMatcher[Array[A]]
{
  def describeTo(description: Description) {
    description.appendValue(expected.mkString("[", ", ", "]"))
  }

  def matches(item: AnyRef) = {
    val actual = item.asInstanceOf[Array[A]]
    if (actual == null && expected == null) {
      true
    } else if (actual == null || expected == null) {
      false
    } else if (actual.length != expected.length) {
      false
    } else {
      var mismatch = false
      for (
        i <- 0 until actual.length
        if !mismatch
      ) {
        actual(i) == expected(i)
      }
      !mismatch
    }
  }
}

