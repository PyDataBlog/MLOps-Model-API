
#ifndef __DRV_MAILBOX_IFC_H__
#define __DRV_MAILBOX_IFC_H__


/*****************************************************************************
  1 Í·ÎÄ¼þ°üº¬
*****************************************************************************/

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif

/*****************************************************************************
Ô¶³Ìº¯Êýµ÷ÓÃ¹æÔòÓëÔ¼Êø:
*****************************************************************************/
/*
  Ô¶³Ìµ÷ÓÃ½Ó¿ÚÐÎÊ½²»¹Ì¶¨£¬½Ó¿Ú¶¨Òå¿ª·Å¸øÓÃ»§£¬±¾Ä£¿éÌá¹©Ò»ÖÖ»úÖÆ:
    ÓÃ»§¿ÉÒÔ°´×Ô¼ºµÄÊµ¼ÊÐèÒªÖ±½Ó¶¨Òå²¢Éú³ÉÈÎÒâÒ»¸öÔ¶³Ìº¯Êý£¬ÇÒ´ËÔ¶³Ìº¯ÊýÓÐÒÔÏÂÔ¼Êø£º
    1.  º¯ÊýµÄ·µ»ØÖµÖ»ÄÜÎªlongÐÍ£¬²»ÄÜ·µ»Ø°üº¬ÆäËûÊý¾Ý³¤¶ÈµÄÖ¸Õë¡£
        º¯Êýµ÷ÓÃ³¬Ê±·µ»Ø´íÎóºÅ: MAILBOX_TIME_OUT
    2.  º¯ÊýµÄ²ÎÊýÄ¿Ç°×î¶àÖ§³Ö6¸ö¡£
    3.  º¯ÊýµÄ²ÎÊýÊµ¼ÊÉÏ¶¼±»¿´³ÉÖ¸Õë´¦Àí£¬Ö»ÄÜÓÐÈçÏÂ7ÖÖÀàÐÍµÄ²ÎÊý£º
        1>  IFC_INFIX:  ¶¨³¤Ö¸ÕëÈë²Î£¬Æä´óÐ¡ÔÚº¯ÊýÉú³ÉµÄÊ±ºò±»¶¨Òå²¢ÉúÐ§¡£
        2>  IFC_OUTFIX: ¶¨³¤Ö¸Õë³ö²Î£¬Æä´óÐ¡ÔÚº¯ÊýÉú³ÉµÄÊ±ºò±»¶¨Òå²¢ÉúÐ§¡£
        3>  IFC_BIFIX:  ¶¨³¤Ö¸ÕëË«²Î£¬Æä´óÐ¡ÔÚº¯ÊýÉú³ÉµÄÊ±ºò±»¶¨Òå²¢ÉúÐ§¡£
        4>  IFC_INVAR:  ±ä³¤Ö¸ÕëÈë²Î£¬Æä´óÐ¡ÓÉÏÂÒ»¸ö¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý¶¨Òå£¬ÔÚº¯Êý±»µ÷ÓÃÊ±ÉúÐ§¡£
        5>  IFC_OUTVAR: ±ä³¤Ö¸Õë³ö²Î£¬Æä´óÐ¡ÓÉÏÂÒ»¸ö¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý¶¨Òå£¬ÔÚº¯Êý±»µ÷ÓÃÊ±ÉúÐ§¡£
        6>  IFC_BIVAR:  ±ä³¤Ö¸ÕëË«²Î£¬Æä´óÐ¡ÓÉÏÂÒ»¸ö¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý¶¨Òå£¬ÔÚº¯Êý±»µ÷ÓÃÊ±ÉúÐ§¡£
        7>  IFC_INCNT:  4×Ö½Ú³£Á¿Èë²Î£¬

    4.  Èç¹ûÄ³¸ö²ÎÊýÎª¿É±ä´óÐ¡²ÎÊý£¬ÄÇÃ´ËûµÄÏÂÒ»¸ö²ÎÊý±ØÐèÊÇ¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý£¬²¢ÇÒºóÕßÔÚº¯Êýµ÷ÓÃ¹ý³ÌÖÐ½«ÃèÊöÇ°ÕßµÄ´óÐ¡¡£
    5.  º¯Êýµ÷ÓÃ¿ÉÅäÖÃÎªµÈ´ýºË¼ä·µ»ØµÄµ÷ÓÃºÍ²»µÈ´ýºË¼ä·µ»ØµÄµ÷ÓÃ£¨¶ªÆúÊ½µ÷ÓÃ£©¡£
    6.  ×¢Òâ(Èë²Î+Ë«²Î)µÄ´óÐ¡»òÕß(³ö²Î+Ë«²Î)µÄ´óÐ¡²»ÄÜ³¬¹ýÓÊÏäµ¥¸öÓÊ¼þµÄ×î´ó´óÐ¡¡£
*/
/*****************************************************************************
  1 ºê¶¨Òå
*****************************************************************************/
#define IFC_IN      0x1     /*Èë²Î*/
#define IFC_OUT     0x2     /*³ö²Î*/
#define IFC_BI      0x4     /*Ë«²Î*/

#define IFC_CNT         (0x1 << 8)   /*ËÄ×Ö½Ú³£Á¿*/
#define IFC_FIX         (0x2 << 8)   /*¹Ì¶¨´óÐ¡Ö¸Õë*/
#define IFC_VAR         (0x4 << 8)   /*¿É±ä´óÐ¡Ö¸Õë*/

#define IFC_INCNT       (IFC_IN  | IFC_CNT)  /*4×Ö½Ú³£Á¿Èë²Î*/
#define IFC_INFIX       (IFC_IN  | IFC_FIX)  /*¶¨³¤Ö¸ÕëÈë²Î£¬Æä´óÐ¡ÔÚº¯ÊýÉú³ÉµÄÊ±ºò±»¶¨Òå²¢ÉúÐ§¡£*/
#define IFC_OUTFIX      (IFC_OUT | IFC_FIX)  /*¶¨³¤Ö¸Õë³ö²Î£¬Æä´óÐ¡ÔÚº¯ÊýÉú³ÉµÄÊ±ºò±»¶¨Òå²¢ÉúÐ§¡£*/
#define IFC_BIFIX       (IFC_BI  | IFC_FIX)  /*¶¨³¤Ö¸ÕëË«²Î£¬Æä´óÐ¡ÔÚº¯ÊýÉú³ÉµÄÊ±ºò±»¶¨Òå²¢ÉúÐ§¡£*/
#define IFC_INVAR       (IFC_IN  | IFC_VAR)  /*±ä³¤Ö¸ÕëÈë²Î£¬Æä´óÐ¡ÓÉÏÂÒ»¸ö¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý¶¨Òå£¬ÔÚº¯Êý±»µ÷ÓÃÊ±ÉúÐ§¡£*/
#define IFC_OUTVAR      (IFC_OUT | IFC_VAR)  /*±ä³¤Ö¸Õë³ö²Î£¬Æä´óÐ¡ÓÉÏÂÒ»¸ö¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý¶¨Òå£¬ÔÚº¯Êý±»µ÷ÓÃÊ±ÉúÐ§¡£*/
#define IFC_BIVAR       (IFC_BI  | IFC_VAR)  /*±ä³¤Ö¸ÕëË«²Î£¬Æä´óÐ¡ÓÉÏÂÒ»¸ö¹Ì¶¨´óÐ¡µÄ±äÁ¿²ÎÊý¶¨Òå£¬ÔÚº¯Êý±»µ÷ÓÃÊ±ÉúÐ§¡£*/

/*Ô¶³Ìµ÷ÓÃº¯ÊýµÄ×î´ó²ÎÊý¸öÊý*/
#define IFC_MAX_ARG      (6)

#define IFC_LAUNCH        0
#define IFC_RESPONSE      1

#define IFC_INLINE  static __inline

#define IFC_WAIT_FOREVER            (0xffffffff)

#ifdef _DRV_LLT_
#define IFC_DEBUG_PARAM
#endif

#ifdef IFC_DEBUG_PARAM
#define _ifc_chk_arg(ph, db, sb)       __ifc_chk_arg(ph, db, sb)
#define _ifc_dbg_arg(ph, db, sb, df)   __ifc_dbg_arg(ph, db, sb, df)
#else
#define _ifc_chk_arg(ph, db, sb)
#define _ifc_dbg_arg(ph, db, sb, df)
#endif

#define IFC_ALIGN                   sizeof(unsigned int)
#define ifc_align_size(a,p)                     (((a)+((p)-1)) & ~((p)-1))

#ifdef _DRV_LLT_
#define C_CALL_ARG_R2L   /*CÓïÑÔµ÷ÓÃ²ÎÊý´ÓÓÒµ½×ó½âÎö*/
#endif
/*****************************************************************************
  2 ½á¹¹Ìå¶¨Òå
*****************************************************************************/
/*¶¨ÒåÔ¶³Ìº¯Êýµ÷ÓÃÏûÏ¢Í·Êý¾Ý½á¹¹Ìå*/

struct ifc_param
{
    unsigned int type;  /*¼ÇÂ¼²ÎÊýÀàÐÍ£¬³ö²Î£¬Èë²ÎµÈ£¬IFC_INVAL*/
    unsigned int size;  /*¼ÇÂ¼¶¨³¤²ÎÊý´óÐ¡*/
};
/*core share mem struct, don't use pointer or long*/
struct ifc_head
{
    unsigned int         scode;            /* ·¢ÆðÔ¶³Ìµ÷ÓÃÓÊ¼þ±àºÅ¡£*/
    unsigned int         rcode;            /* Ö´ÐÐ·½·µ»ØÊ±µÄÓÊ¼þºÅ¡£*/
    unsigned int         stamp;            /* Ê±¼ä´Á£¬ÓÃÓÚÉ¸Ñ¡³¬Ê±ÖÍºóÏìÓ¦¡£*/
    unsigned int         retval;           /* Ö´ÐÐ·½º¯Êýµ÷ÓÃ·µ»ØÖµ¡£*/
    unsigned int         needret;          /* Ö´ÐÐ·½º¯Êýµ÷ÓÃ·µ»ØÖµ¡£*/
    unsigned int         argv[IFC_MAX_ARG];/* Ö´ÐÐ·½º¯Êýµ÷ÓÃ·µ»ØÖµ,ÔÚout buffÖÐµÄ±£´æµØÖ·¡£*/
    unsigned int         data_phy_addr;             /* ÏûÏ¢Í·ºÍÌî³ä¿Õ¼äÖ®ºóµÄÓÃ»§Êý¾ÝÏßÐÔ¿Õ¼äÆðÊ¼µØÖ·,×¢¸Ã±äÁ¿Ö»±£´æÎïÀíµØÖ·*/

#ifdef IFC_DEBUG_PARAM      /*¶ÔIFCÖÐµÄºêÖÐ ²ÎÊý½øÐÐµ÷ÊÔ*/
    struct ifc_param      param_tbl[IFC_MAX_ARG];
    signed int           param_prob;
#endif
};

struct ifc_arg
{

    unsigned long         addr;      /* Êä³ö²ÎÊýµØÖ· */
    unsigned long         size;      /* Êä³ö²ÎÊý³¤¶È */    
};

/*¶¨ÒåÔ¶³Ìº¯Êýµ÷ÓÃÏûÏ¢Í·Êý¾Ý½á¹¹Ìå*/
struct ifc_mb
{
    void                 *mbuf;                 /* ÓÊÏäÓÊ¼þµÄ×ÜÃèÊö·ûºÅ*/
    struct ifc_arg        argo[IFC_MAX_ARG];    /* ´æ´¢Êä³ö²ÎÊý¿Õ¼äµÄÊý×é*/
    struct ifc_head       head;                 /* ´ýÐ´ÈëÓÊ¼þÖÐµÄifcÏûÏ¢Í·*/
    void                 *waitsem;              /* µÈ´ýµ÷ÓÃ·µ»ØµÄÐÅºÅÁ¿*/
    unsigned int         total_size;           /* ÓÊ¼þÊý¾Ý³¤¶È£¬°üÀ¨:ifcÏûÏ¢Í·+¿Õ°×Ìî³ä+¼ÓÊý¾ÝµÄ×Ü³¤¶È*/
    unsigned int         data_size;            /* ifcÊý¾Ý³¤¶È,²»°üÀ¨ifcÏûÏ¢Í·ºÍÌî³ä²¿·Ö*/
    unsigned long        data_vitrual_addr; /*64 Éý¼¶½« ifc_head  ½á¹¹ÌåÖÐdata³ÉÔ±ÖÐÉæ¼°µÄµ½µÄÐéÄâµØÖ·±£´æµ½¸Ã±äÁ¿*/
};

#ifdef C_CALL_ARG_R2L
/*vs pc¹¤³Ì º¯Êý²ÎÊý´ÓÓÒÍù×ó¼ÆËã*/
/*µ÷ÓÃºË:°ÑÊä³ö²ÎÊý±£´æÔÚÁÙÊ±Êý×éµÄºê*/

#define _IFC_ADD_ARG0(ary, p)
#define _IFC_ADD_ARG1(ary, d1, t1, a1, s1)                       __ifc_arg_out(ary, d1, (unsigned long)a1, s1, 0)
#define _IFC_ADD_ARG2(ary, d2, t2, a2, s2, d1, t1, a1, s1, ...)  _IFC_ADD_ARG1(ary, d1, t1, a1, s1); __ifc_arg_out(ary, d2, (unsigned long)a2 ,s2, (unsigned long)a1)
#define _IFC_ADD_ARG3(ary, d3, t3, a3, s3, d2, t2, a2, s2, ...)  _IFC_ADD_ARG2(ary, d2, t2, a2, s2, __VA_ARGS__); __ifc_arg_out(ary, d3, (unsigned long)a3 ,s3, (unsigned long)a2)
#define _IFC_ADD_ARG4(ary, d4, t4, a4, s4, d3, t3, a3, s3, ...)  _IFC_ADD_ARG3(ary, d3, t3, a3, s3, __VA_ARGS__); __ifc_arg_out(ary, d4, (unsigned long)a4 ,s4, (unsigned long)a3)
#define _IFC_ADD_ARG5(ary, d5, t5, a5, s5, d4, t4, a4, s4, ...)  _IFC_ADD_ARG4(ary, d4, t4, a4, s4, __VA_ARGS__); __ifc_arg_out(ary, d5, (unsigned long)a5 ,s5, (unsigned long)a4)
#define _IFC_ADD_ARG6(ary, d6, t6, a6, s6, d5, t5, a5, s5, ...)  _IFC_ADD_ARG5(ary, d5, t5, a5, s5, __VA_ARGS__); __ifc_arg_out(ary, d6, (unsigned long)a6 ,s6, (unsigned long)a5)


/*µ÷ÓÃºË: °ÑÊäÈë²ÎÊýÑ¹ÈëÓÊÏäÓÃ»§Êý¾Ý»º´æµÄºê*/ /*ÍùÓÊÏäbufÍÆÈëÊý¾Ý,Í¬Ê±°Ñ·µ»Ø²ÎÊýµØÖ·ÔÝ´æ*/
/*°´x86 cÓïÑÔµ÷ÓÃ¹æ·¶£¬´ÓÓÒÍù×óÑ¹²ÎÊý*/

#define _IFC_PUSHDATA0(d, av, p)
#define _IFC_PUSHDATA1(d, av, d1, t1, a1, s1)                     __ifc_push_arg(d, av, d1, (unsigned long)a1, s1, 0)
#define _IFC_PUSHDATA2(d, av, d2, t2, a2, s2, d1, t1, a1, s1)     _IFC_PUSHDATA1(d, av, d1, t1, a1, s1); __ifc_push_arg(d, av, d2, (unsigned long)a2 ,s2, (unsigned long)a1)
#define _IFC_PUSHDATA3(d, av, d3, t3, a3, s3, d2, t2, a2, s2,...) _IFC_PUSHDATA2(d, av, d2, t2, a2, s2, __VA_ARGS__); __ifc_push_arg(d, av, d3, (unsigned long)a3 ,s3, (unsigned long)a2)
#define _IFC_PUSHDATA4(d, av, d4, t4, a4, s4, d3, t3, a3, s3,...) _IFC_PUSHDATA3(d, av, d3, t3, a3, s3, __VA_ARGS__); __ifc_push_arg(d, av, d4, (unsigned long)a4 ,s4, (unsigned long)a3)
#define _IFC_PUSHDATA5(d, av, d5, t5, a5, s5, d4, t4, a4, s4,...) _IFC_PUSHDATA4(d, av, d4, t4, a4, s4, __VA_ARGS__); __ifc_push_arg(d, av, d5, (unsigned long)a5 ,s5, (unsigned long)a4)
#define _IFC_PUSHDATA6(d, av, d6, t6, a6, s6, d5, t5, a5, s5,...) _IFC_PUSHDATA5(d, av, d5, t5, a5, s5, __VA_ARGS__); __ifc_push_arg(d, av, d6, (unsigned long)a6 ,s6, (unsigned long)a5)


/*Ö´ÐÐºË: °ÑË«Ïò²ÎÊý´ÓÊäÈë»º´æ¿½±´µ½Êä³ö»º´æµÄºê*/
#define _IFC_PCOPY0(in, out, av, ao, p)
#define _IFC_PCOPY1(in, out, av, ao, d1, t1, a1, s1)                      __ifc_copy_arg(in, out, d1, s1, av, ao)
#define _IFC_PCOPY2(in, out, av, ao, d2, t2, a2, s2, d1, t1, a1, s1)      _IFC_PCOPY1(in, out, av, ao, d1, t1, a1, s1); __ifc_copy_arg(in, out, d2, s2, av, ao)
#define _IFC_PCOPY3(in, out, av, ao, d3, t3, a3, s3, d2, t2, a2, s2, ...) _IFC_PCOPY2(in, out, av, ao, d2, t2, a2, s2, __VA_ARGS__); __ifc_copy_arg(in, out, d3, s3, av, ao)
#define _IFC_PCOPY4(in, out, av, ao, d4, t4, a4, s4, d3, t3, a3, s3, ...) _IFC_PCOPY3(in, out, av, ao, d3, t3, a3, s3, __VA_ARGS__); __ifc_copy_arg(in, out, d4, s4, av, ao)
#define _IFC_PCOPY5(in, out, av, ao, d5, t5, a5, s5, d4, t4, a4, s4, ...) _IFC_PCOPY4(in, out, av, ao, d4, t4, a4, s4, __VA_ARGS__); __ifc_copy_arg(in, out, d5, s5, av, ao)
#define _IFC_PCOPY6(in, out, av, ao, d6, t6, a6, s6, d5, t5, a5, s5, ...) _IFC_PCOPY5(in, out, av, ao, d5, t5, a5, s5, __VA_ARGS__); __ifc_copy_arg(in, out, d6, s6, av, ao)

/*Ö´ÐÐºË:¼ÆËãº¯ÊýÊä³ö²ÎÊý×Ü´óÐ¡µÄºê*/
#define _IFC_OUTSIZE0(av, p)                                   0
#define _IFC_OUTSIZE1(av, d1, t1, a1, s1)                      __ifc_out_size(d1, s1, av)
#define _IFC_OUTSIZE2(av, d2, t2, a2, s2, d1, t1, a1, s1)      _IFC_OUTSIZE1(av, d1, t1, a1, s1) + __ifc_out_size(d2, s2, av)
#define _IFC_OUTSIZE3(av, d3, t3, a3, s3, d2, t2, a2, s2,...)  _IFC_OUTSIZE2(av, d2, t2, a2, s2, __VA_ARGS__) + __ifc_out_size(d3, s3, av)
#define _IFC_OUTSIZE4(av, d4, t4, a4, s4, d3, t3, a3, s3,...)  _IFC_OUTSIZE3(av, d3, t3, a3, s3, __VA_ARGS__) + __ifc_out_size(d4, s4, av)
#define _IFC_OUTSIZE5(av, d5, t5, a5, s5, d4, t4, a4, s4,...)  _IFC_OUTSIZE4(av, d4, t4, a4, s4, __VA_ARGS__) + __ifc_out_size(d5, s5, av)
#define _IFC_OUTSIZE6(av, d6, t6, a6, s6, d5, t5, a5, s5,...)  _IFC_OUTSIZE5(av, d5, t5, a5, s5, __VA_ARGS__) + __ifc_out_size(d6, s6, av)
#else
/*µ÷ÓÃºË:µ¥°ågcc±àÒëº¯Êý²ÎÊý´Ó×óÍùÓÒ¼ÆËã*/
/*°ÑÊä³ö²ÎÊý±£´æÔÚÁÙÊ±Êý×éµÄºê*/

#define _IFC_ADD_ARG0(ary, p)
#define _IFC_ADD_ARG1(ary, d1, t1, a1, s1)                       __ifc_arg_out(ary, d1, (unsigned long)a1, s1, 0)
#define _IFC_ADD_ARG2(ary, d2, t2, a2, s2, d1, t1, a1, s1, ...)  __ifc_arg_out(ary, d2, (unsigned long)a2 ,s2, (unsigned long)a1); _IFC_ADD_ARG1(ary, d1, t1, a1, s1)
#define _IFC_ADD_ARG3(ary, d3, t3, a3, s3, d2, t2, a2, s2, ...)  __ifc_arg_out(ary, d3, (unsigned long)a3 ,s3, (unsigned long)a2); _IFC_ADD_ARG2(ary, d2, t2, a2, s2, __VA_ARGS__)
#define _IFC_ADD_ARG4(ary, d4, t4, a4, s4, d3, t3, a3, s3, ...)  __ifc_arg_out(ary, d4, (unsigned long)a4 ,s4, (unsigned long)a3); _IFC_ADD_ARG3(ary, d3, t3, a3, s3, __VA_ARGS__)
#define _IFC_ADD_ARG5(ary, d5, t5, a5, s5, d4, t4, a4, s4, ...)  __ifc_arg_out(ary, d5, (unsigned long)a5 ,s5, (unsigned long)a4); _IFC_ADD_ARG4(ary, d4, t4, a4, s4, __VA_ARGS__)
#define _IFC_ADD_ARG6(ary, d6, t6, a6, s6, d5, t5, a5, s5, ...)  __ifc_arg_out(ary, d6, (unsigned long)a6 ,s6, (unsigned long)a5); _IFC_ADD_ARG5(ary, d5, t5, a5, s5, __VA_ARGS__)


/*µ÷ÓÃºË:°ÑÊäÈë²ÎÊýÑ¹ÈëÓÊÏäÓÃ»§Êý¾Ý»º´æµÄºê*/ /*ÍùÓÊÏäbufÍÆÈëÊý¾Ý,Í¬Ê±°Ñ·µ»Ø²ÎÊýµØÖ·ÔÝ´æ*/
/*°´arm cÓïÑÔµ÷ÓÃ¹æ·¶£¬´Ó×óÍùÓÒÑ¹²ÎÊý*/

#define _IFC_PUSHDATA0(d, av, p)
#define _IFC_PUSHDATA1(d, av, d1, t1, a1, s1)                     __ifc_push_arg(d, av, d1, (unsigned long)a1, s1, 0)
#define _IFC_PUSHDATA2(d, av, d2, t2, a2, s2, d1, t1, a1, s1)     __ifc_push_arg(d, av, d2, (unsigned long)a2 ,s2, (unsigned long)a1); _IFC_PUSHDATA1(d, av, d1, t1, a1, s1)
#define _IFC_PUSHDATA3(d, av, d3, t3, a3, s3, d2, t2, a2, s2,...) __ifc_push_arg(d, av, d3, (unsigned long)a3 ,s3, (unsigned long)a2); _IFC_PUSHDATA2(d, av, d2, t2, a2, s2, __VA_ARGS__)
#define _IFC_PUSHDATA4(d, av, d4, t4, a4, s4, d3, t3, a3, s3,...) __ifc_push_arg(d, av, d4, (unsigned long)a4 ,s4, (unsigned long)a3); _IFC_PUSHDATA3(d, av, d3, t3, a3, s3, __VA_ARGS__)
#define _IFC_PUSHDATA5(d, av, d5, t5, a5, s5, d4, t4, a4, s4,...) __ifc_push_arg(d, av, d5, (unsigned long)a5 ,s5, (unsigned long)a4); _IFC_PUSHDATA4(d, av, d4, t4, a4, s4, __VA_ARGS__)
#define _IFC_PUSHDATA6(d, av, d6, t6, a6, s6, d5, t5, a5, s5,...) __ifc_push_arg(d, av, d6, (unsigned long)a6 ,s6, (unsigned long)a5); _IFC_PUSHDATA5(d, av, d5, t5, a5, s5, __VA_ARGS__)


/*Ö´ÐÐºË:°ÑË«Ïò²ÎÊý´ÓÊäÈë»º´æ¿½±´µ½Êä³ö»º´æµÄºê*/
#define _IFC_PCOPY0(in, out, av, ao, p)
#define _IFC_PCOPY1(in, out, av, ao, d1, t1, a1, s1)                      __ifc_copy_arg(in, out, d1, s1, av, ao)
#define _IFC_PCOPY2(in, out, av, ao, d2, t2, a2, s2, d1, t1, a1, s1)      __ifc_copy_arg(in, out, d2, s2, av, ao); _IFC_PCOPY1(in, out, av, ao, d1, t1, a1, s1)
#define _IFC_PCOPY3(in, out, av, ao, d3, t3, a3, s3, d2, t2, a2, s2, ...) __ifc_copy_arg(in, out, d3, s3, av, ao); _IFC_PCOPY2(in, out, av, ao, d2, t2, a2, s2, __VA_ARGS__)
#define _IFC_PCOPY4(in, out, av, ao, d4, t4, a4, s4, d3, t3, a3, s3, ...) __ifc_copy_arg(in, out, d4, s4, av, ao); _IFC_PCOPY3(in, out, av, ao, d3, t3, a3, s3, __VA_ARGS__)
#define _IFC_PCOPY5(in, out, av, ao, d5, t5, a5, s5, d4, t4, a4, s4, ...) __ifc_copy_arg(in, out, d5, s5, av, ao); _IFC_PCOPY4(in, out, av, ao, d4, t4, a4, s4, __VA_ARGS__)
#define _IFC_PCOPY6(in, out, av, ao, d6, t6, a6, s6, d5, t5, a5, s5, ...) __ifc_copy_arg(in, out, d6, s6, av, ao); _IFC_PCOPY5(in, out, av, ao, d5, t5, a5, s5, __VA_ARGS__)

/*Ö´ÐÐºË:¼ÆËãº¯ÊýÊä³ö²ÎÊý×Ü´óÐ¡µÄºê*/
#define _IFC_OUTSIZE0(av, p)                                   0
#define _IFC_OUTSIZE1(av, d1, t1, a1, s1)                      __ifc_out_size(d1, s1, av)
#define _IFC_OUTSIZE2(av, d2, t2, a2, s2, d1, t1, a1, s1)      __ifc_out_size(d2, s2, av) + _IFC_OUTSIZE1(av, d1, t1, a1, s1)
#define _IFC_OUTSIZE3(av, d3, t3, a3, s3, d2, t2, a2, s2,...)  __ifc_out_size(d3, s3, av) + _IFC_OUTSIZE2(av, d2, t2, a2, s2, __VA_ARGS__)
#define _IFC_OUTSIZE4(av, d4, t4, a4, s4, d3, t3, a3, s3,...)  __ifc_out_size(d4, s4, av) + _IFC_OUTSIZE3(av, d3, t3, a3, s3, __VA_ARGS__)
#define _IFC_OUTSIZE5(av, d5, t5, a5, s5, d4, t4, a4, s4,...)  __ifc_out_size(d5, s5, av) + _IFC_OUTSIZE4(av, d4, t4, a4, s4, __VA_ARGS__)
#define _IFC_OUTSIZE6(av, d6, t6, a6, s6, d5, t5, a5, s5,...)  __ifc_out_size(d6, s6, av) + _IFC_OUTSIZE5(av, d5, t5, a5, s5, __VA_ARGS__)

#endif

 /*Ö´ÐÐºË:Éú³ÉÔ¶³ÌÖ´ÐÐº¯Êý²ÎÊýÖ¸ÕëµØÖ·µÄºê*/
#define _IFC_PARAM0(in, out, av, p)
#define _IFC_PARAM1(in, out, av, d1, t1, a1, s1)                      (t1)__ifc_gen_arg(in, out, d1, s1, av)
#define _IFC_PARAM2(in, out, av, d2, t2, a2, s2, d1, t1, a1, s1)      (t2)__ifc_gen_arg(in, out, d2, s2, av), _IFC_PARAM1(in, out, av, d1, t1, a1, s1)
#define _IFC_PARAM3(in, out, av, d3, t3, a3, s3, d2, t2, a2, s2, ...) (t3)__ifc_gen_arg(in, out, d3, s3, av), _IFC_PARAM2(in, out, av, d2, t2, a2, s2, __VA_ARGS__)
#define _IFC_PARAM4(in, out, av, d4, t4, a4, s4, d3, t3, a3, s3, ...) (t4)__ifc_gen_arg(in, out, d4, s4, av), _IFC_PARAM3(in, out, av, d3, t3, a3, s3, __VA_ARGS__)
#define _IFC_PARAM5(in, out, av, d5, t5, a5, s5, d4, t4, a4, s4, ...) (t5)__ifc_gen_arg(in, out, d5, s5, av), _IFC_PARAM4(in, out, av, d4, t4, a4, s4, __VA_ARGS__)
#define _IFC_PARAM6(in, out, av, d6, t6, a6, s6, d5, t5, a5, s5, ...) (t6)__ifc_gen_arg(in, out, d6, s6, av), _IFC_PARAM5(in, out, av, d5, t5, a5, s5, __VA_ARGS__)


/*µ÷ÓÃºË:Éú³Éº¯ÊýÉùÃ÷ÖÐµÄ²ÎÊýµÄºê*/
#define _IFC_DECL0(p)       /*void*/
#define _IFC_DECL1(d1, t1, a1, s1)       t1 a1,
#define _IFC_DECL2(d2, t2, a2, s2, ...)  t2 a2, _IFC_DECL1(__VA_ARGS__)
#define _IFC_DECL3(d3, t3, a3, s3, ...)  t3 a3, _IFC_DECL2(__VA_ARGS__)
#define _IFC_DECL4(d4, t4, a4, s4, ...)  t4 a4, _IFC_DECL3(__VA_ARGS__)
#define _IFC_DECL5(d5, t5, a5, s5, ...)  t5 a5, _IFC_DECL4(__VA_ARGS__)
#define _IFC_DECL6(d6, t6, a6, s6, ...)  t6 a6, _IFC_DECL5(__VA_ARGS__)

/*µ÷ÓÃºË:¼ÆËãÊäÈë²ÎÊý×Ü´óÐ¡µÄºê*/

#define _IFC_INSIZE0(p)                                   0
#define _IFC_INSIZE1(d1, t1, a1, s1)                      __ifc_in_size(d1, s1, 0)
#define _IFC_INSIZE2(d2, t2, a2, s2, d1, t1, a1, s1)     _IFC_INSIZE1(d1, t1, a1, s1) + __ifc_in_size(d2, s2, (unsigned long)a1)
#define _IFC_INSIZE3(d3, t3, a3, s3, d2, t2, a2, s2,...) _IFC_INSIZE2(d2, t2, a2, s2, __VA_ARGS__) + __ifc_in_size(d3, s3, (unsigned long)a2)
#define _IFC_INSIZE4(d4, t4, a4, s4, d3, t3, a3, s3,...) _IFC_INSIZE3(d3, t3, a3, s3, __VA_ARGS__) + __ifc_in_size(d4, s4, (unsigned long)a3)
#define _IFC_INSIZE5(d5, t5, a5, s5, d4, t4, a4, s4,...) _IFC_INSIZE4(d4, t4, a4, s4, __VA_ARGS__) + __ifc_in_size(d5, s5, (unsigned long)a4)
#define _IFC_INSIZE6(d6, t6, a6, s6, d5, t5, a5, s5,...) _IFC_INSIZE5(d5, t5, a5, s5, __VA_ARGS__) + __ifc_in_size(d6, s6, (unsigned long)a5)


/*µ÷ÓÃºË:±£´æ²¢¼ì²é²ÎÊý*/
#define _IFC_DBGPARAM0(p, a)
#define _IFC_DBGPARAM1(ph, d1, t1, a1, s1)                     _ifc_dbg_arg(ph, d1, s1, 0)
#define _IFC_DBGPARAM2(ph, d2, t2, a2, s2, d1, t1, a1, s1)     _IFC_DBGPARAM1(ph, d1, t1, a1, s1) ; _ifc_dbg_arg(ph, d2, s2, d1)
#define _IFC_DBGPARAM3(ph, d3, t3, a3, s3, d2, t2, a2, s2,...) _IFC_DBGPARAM2(ph, d2, t2, a2, s2, __VA_ARGS__); _ifc_dbg_arg(ph, d3, s3, d2)
#define _IFC_DBGPARAM4(ph, d4, t4, a4, s4, d3, t3, a3, s3,...) _IFC_DBGPARAM3(ph, d3, t3, a3, s3, __VA_ARGS__); _ifc_dbg_arg(ph, d4, s4, d3)
#define _IFC_DBGPARAM5(ph, d5, t5, a5, s5, d4, t4, a4, s4,...) _IFC_DBGPARAM4(ph, d4, t4, a4, s4, __VA_ARGS__); _ifc_dbg_arg(ph, d5, s5, d4)
#define _IFC_DBGPARAM6(ph, d6, t6, a6, s6, d5, t5, a5, s5,...) _IFC_DBGPARAM5(ph, d5, t5, a5, s5, __VA_ARGS__); _ifc_dbg_arg(ph, d6, s6, d5)

/*Ö´ÐÐºË:¼ì²é²ÎÊý*/
#define _IFC_CHKPARAM0(p, a)
#define _IFC_CHKPARAM1(ph, d1, t1, a1, s1)                     _ifc_chk_arg(ph, d1, s1)
#define _IFC_CHKPARAM2(ph, d2, t2, a2, s2, d1, t1, a1, s1)     _ifc_chk_arg(ph, d2, s2); _IFC_CHKPARAM1(ph, d1, t1, a1, s1)
#define _IFC_CHKPARAM3(ph, d3, t3, a3, s3, d2, t2, a2, s2,...) _ifc_chk_arg(ph, d3, s3); _IFC_CHKPARAM2(ph, d2, t2, a2, s2, __VA_ARGS__)
#define _IFC_CHKPARAM4(ph, d4, t4, a4, s4, d3, t3, a3, s3,...) _ifc_chk_arg(ph, d4, s4); _IFC_CHKPARAM3(ph, d3, t3, a3, s3, __VA_ARGS__)
#define _IFC_CHKPARAM5(ph, d5, t5, a5, s5, d4, t4, a4, s4,...) _ifc_chk_arg(ph, d5, s5); _IFC_CHKPARAM4(ph, d4, t4, a4, s4, __VA_ARGS__)
#define _IFC_CHKPARAM6(ph, d6, t6, a6, s6, d5, t5, a5, s5,...) _ifc_chk_arg(ph, d6, s6); _IFC_CHKPARAM5(ph, d5, t5, a5, s5, __VA_ARGS__)


/*Ö´ÐÐºË:Éú³ÉÔ¶³Ìµ÷ÓÃÖ´ÐÐº¯ÊýÃû*/
#define IFC_GEN_EXEC_NAME(name) ife_##name

#ifdef _DRV_LLT_

#define _IFC_GEN_CALLx(x, id, name,  ...)		\
int name(_IFC_DECL##x(__VA_ARGS__) unsigned int timeout ){return 0;}

#define __IFC_GEN_EXECx(x, name, ...)		  \
int IFC_GEN_EXEC_NAME(name)(struct ifc_head * ifc_h) {return 0;}

#else
/*µ÷ÓÃºË:Éú³ÉÔ¶³Ìº¯Êýµ÷ÓÃÕßµÄºê*/
#define _IFC_GEN_CALLx(x, id, name,  ...)			                                                                                \
int name(_IFC_DECL##x(__VA_ARGS__) unsigned int timeout )                                                                         \
{                                                                                                                                   \
    struct ifc_mb ifc_b;                                                                                                            \
    struct ifc_arg *argo = ifc_b.argo;                                                                                              \
    unsigned long in_buf;                                                                                                           \
    int ret_val;                                                                                                                   \
    unsigned int *argv = ifc_b.head.argv;  /*´Ë·½·¨ÐèÒª¿¼ÂÇ±àÒëÆ÷Ö´ÐÐË³Ðò²îÒì*/                                                    \
    unsigned int in_size = (unsigned int)(_IFC_INSIZE##x(__VA_ARGS__));                                                           \
    argo=argo; argv=argv;                                                                                                           \
    ret_val = mailbox_ifc_init_buf(&ifc_b, id, IFC_LAUNCH, in_size, timeout);                                                       \
    if (ret_val) return ret_val;                                                                                                    \
    in_buf = ifc_b.data_vitrual_addr;                                                                                                       \
    _IFC_DBGPARAM##x(&ifc_b.head, __VA_ARGS__);  /*²ÎÊýµ÷ÊÔÈë¿Ú*/                                                                   \
    _IFC_PUSHDATA##x(&in_buf, &argv, __VA_ARGS__);  /*ÍùÓÊÏäbufÍÆÈëÊý¾Ý,Í¬Ê±°Ñ·µ»Ø²ÎÊýµØÖ·ÔÝ´æ*/                                     \
    if (timeout) {                 /*ÐèÒªµÈ´ý·µ»Ø*/                                                                                 \
        _IFC_ADD_ARG##x(&argo, __VA_ARGS__); /* °Ñ·µ»ØÖµºÍ³ö²ÎµÄµØÖ·¼ÓÈë±¾Í¨µÀµÄ»ØÊÕÓÊ¼þÏûÏ¢Á´±í£¬ÓÃÓÚ»ñÈ¡·µ»ØÏûÏ¢ÖÐµÄ³ö²ÎÖµ*/       \
        return mailbox_ifc_send_wait(&ifc_b, timeout); /*µÈ´ý»ØÊÕµ÷ÓÃ·µ»ØÏûÏ¢Íê³É£¬*/                                               \
    }                                                                                                                               \
    else                                                                                                                            \
       return mailbox_ifc_send_no_wait(&ifc_b); /*²»ÐèÒªµÈ´ý·µ»Ø*/                                                                  \
}

/*Ö´ÐÐºË:Éú³ÉÔ¶³Ìµ÷ÓÃÖ´ÐÐº¯ÊýÌå,×¢ÒâÖ´ÐÐº¯Êýname±ØÐëÊÇÓÐ·µ»ØÖµµÄ(²»ÄÜÊÇvoidÐÍ£¬·ñÔò±àÒë²»¹ý)*/
#define __IFC_GEN_EXECx(x, name, ...)			                                                                                     \
int IFC_GEN_EXEC_NAME(name)(struct ifc_head * ifc_h)                                                                                \
{                                                                                                                                    \
    struct ifc_mb ifc_b;                                                                                                             \
    unsigned long in_b, out_b;                                                                                                       \
    unsigned int *argv = ifc_h->argv;  /*ÐèÒª¿¼ÂÇ±àÒëÆ÷Ö´ÐÐË³Ðò²îÒì*/                                                               \
    unsigned int *argo;                                                                                                             \
    unsigned int out_size = (unsigned int)(_IFC_OUTSIZE##x(&argv,__VA_ARGS__));                                                                   \
    if (mailbox_ifc_init_buf(&ifc_b, ifc_h->rcode, IFC_RESPONSE, out_size , 0)) return (int)MAILBOX_ERRO;                                 \
    out_b = ifc_b.data_vitrual_addr;  argv = ifc_h->argv;                                                                \
    in_b = (unsigned long)mailbox_phy_to_virt((unsigned long)(ifc_h->data_phy_addr));                    \
    _IFC_CHKPARAM##x(ifc_h, __VA_ARGS__);  /*¼ì²éµ÷ÓÃ·½µÄ²ÎÊýÅäÖÃÊÇ·ñºÍÖ´ÐÐ·½Ò»ÖÂ£¬²¢ÇÒ¼ì²é²ÎÊýÊÇ·ñ·ûºÏ¹æ·¶*/                        \
    ifc_b.head.retval = (unsigned int)name(_IFC_PARAM##x(&in_b, &out_b, &argv, __VA_ARGS__));                                       \
    if (ifc_h->needret) {                /*ÐèÒªµÈ´ý·µ»Ø*/                                                                            \
        out_b = ifc_b.data_vitrual_addr; ifc_b.head.stamp = ifc_h->stamp; /*·µ»ØÊ±¼ä´ÁÓÃÓÚÐ£Ñé*/                          \
        in_b = (unsigned long)mailbox_phy_to_virt((unsigned long)(ifc_h->data_phy_addr));        \
        argv = ifc_h->argv;  /*ÊäÈë²ÎÊý*/ argo = ifc_b.head.argv; /*Êä³ö²ÎÊý*/                                                       \
        _IFC_PCOPY##x(&in_b, &out_b, &argv, &argo, __VA_ARGS__);  /*°ÑË«²Î´Óinbuf¿½±´µ½outbuf*/                                      \
       return mailbox_ifc_send_no_wait(&ifc_b);    /*ÏûÏ¢×Ü´óÐ¡Ð´»ØÓÊ¼þÍ·£¬½âËø²¢ÇÒ·¢ËÍÊý¾Ý*/                                        \
    }                                                                                                                                \
    else                                                                                                                             \
       return mailbox_ifc_discard_buf(&ifc_b); /*È¡ÏûÓÊÏäbuff£¬½âËø²¢¶ªÆú´Ë´Î·¢ËÍ*/                                                  \
}
#endif


extern int mailbox_ifc_init_buf(
                struct ifc_mb *ifc_b, 
                unsigned int mailcode, 
                unsigned int direct, 
                unsigned int inlen,
                unsigned int timeout);

extern int mailbox_ifc_send_no_wait(struct ifc_mb *ifc_b);

extern int mailbox_ifc_wait_resp(struct ifc_mb *ifc_b);

extern int mailbox_ifc_discard_buf(struct ifc_mb *ifc_b);

extern int mailbox_ifc_send_wait(struct ifc_mb *ifc_b, unsigned int timeout);


extern int mailbox_ifc_register_exec( 
                unsigned int mailcode,
                int (*ife_cb)(struct ifc_head * ifc_h)
                );

extern void __ifc_arg_out(struct ifc_arg ** p_ary, unsigned int db, unsigned long ab, unsigned int sb, unsigned int af);

extern void __ifc_push_arg(unsigned long * in, unsigned int ** p_av, unsigned int db, unsigned long ab, unsigned int sb, unsigned int af);

extern int __ifc_in_size(unsigned int db, unsigned int sb, unsigned int af);

extern void __ifc_dbg_arg(struct ifc_head *head, unsigned int db, unsigned int sb, unsigned int df);

extern int __ifc_out_size(unsigned int db, unsigned int sb, unsigned int **pp_af);

extern long __ifc_gen_arg(unsigned long *in, unsigned long *out, unsigned int db, unsigned int sb, unsigned int **pp_a);

extern void __ifc_copy_arg(unsigned long *in, unsigned long *out, unsigned int db, unsigned int sb, unsigned int **p_av , unsigned int **p_ao);

extern void __ifc_chk_arg(struct ifc_head *head, unsigned int db, unsigned int sb);

extern long mailbox_phy_to_virt(unsigned long  phy_addr);

#ifdef __cplusplus
#if __cplusplus
}
#endif
#endif

#endif /*end of __DRV_MAILBOX_IFC_H__*/

