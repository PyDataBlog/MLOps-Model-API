#pragma once
#include <vector>
#include <algorithm>

using namespace std;

class Solution {
public:
	int maxProfit(vector<int>& prices) {
		int states[2][4] = { INT_MIN, 0, INT_MIN, 0 }; // 0: 1 buy, 1: one buy/sell, 2: 2 buys/1 sell, 3, 2 buys/sells
		int cur = 0, next = 1;
		for (int i = 0; i < prices.size(); i++)
		{
			states[next][0] = max(states[cur][0], -prices[i]);
			states[next][1] = max(states[cur][1], states[cur][0] + prices[i]);
			states[next][2] = max(states[cur][2], states[cur][1] - prices[i]);
			states[next][3] = max(states[cur][3], states[cur][2] + prices[i]);
			int temp = next; 
			next = cur, cur = temp;
		}
		return max(states[cur][1], states[cur][3]);
	}

	void call() {
		vector<int> prices{ 7, 1, 5, 3, 6, 4, 100 };
		auto result = maxProfit(prices);
	}
};
