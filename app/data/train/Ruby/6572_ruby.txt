class BannerController < ApplicationController
	before_filter :get_user
	before_filter :get_banner, :except => [:index, :new, :create]
	
	# GET /account/banners
  def index
		@banners = @user.banners
		respond_to do |wants|
			wants.html
		end
  end

	# GET /account/banners/:id
  def show
	
  end

	# GET /account/banners/new
  def new
		@banner = Banner.new(:banner_type => "local")
		
		respond_to do |wants|
			wants.html
		end
  end

	# POST /account/banners
	def create
		@banner = @user.banners.build params[:banner]

		respond_to do |wants|			
			if @banner.save
				flash[:notice] = t('banner.flash.banner_added').titleize
				wants.html { redirect_to account_banners_path }
			else
				wants.html { render :new }
			end
		end
	end
	
	# GET /account/banners/:id/edit
  def edit
	
  end

	# PUT /account/banners/:id
	def update
		respond_to do |wants|			
			if @banner.update_attributes params[:banner]
				flash[:notice] = t('banner.flash.banner_updated').titleize
				wants.html { redirect_to account_banners_path }
			else
				wants.html { render :edit }
			end
		end
	end
	
	# DELETE /account/banners/:id
	def destroy
		respond_to do |wants|
			@banner.destroy
			flash[:notice] = t('banner.flash.banner_deleted').titleize
			wants.html { redirect_to account_banners_path }
		end
	end
	
	# PUT /account/banners/:id/start
	def start
		respond_to do |wants|
			if @user.live? && @banner.update_attribute(:active, true)
				flash[:warning] = t('banner.flash.banner_started').titleize
			else
				flash[:error] = t('banner.flash.failed_to_start').titleize
			end
			wants.html { redirect_to account_banners_path }
		end			
	end
	
	# PUT /account/banners/:id/stop
	def stop
		respond_to do |wants|
			if @user.live? && @banner.update_attribute(:active, false)
				flash[:warning] = t('banner.flash.banner_stopped').titleize
			else
				flash[:error] = t('banner.flash.failed_to_stop').titleize
			end
			wants.html { redirect_to account_banners_path }
		end
	end
	
	# GET /account/banners/:id/performance
	# performance_account_banner_url(:id)
	#
	# Display banner stats
	def performance
		
	end
	
	private
	
	def get_user
		@user = current_user
		redirect_to_login unless @user
	end	

	def get_banner
		@banner = Banner.find params[:id]
		raise User::AuthorizationError if @banner.user != current_user
	end
		
end
