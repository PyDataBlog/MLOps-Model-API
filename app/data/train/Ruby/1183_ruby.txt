module Transmat
  class Money
    module Arithmetic
      def -@
        Money.new currency, -amount
      end

      def == other
        amount == other.amount && currencies_match?(other)
      end

      def eql? other
        self == other
      end

      def <=> other
        assert_matching_currencies other
        amount <=> other.amount
      end

      def + other
        assert_matching_currencies other
        Money.new currency, amount + other.amount
      end

      def - other
        assert_matching_currencies other
        Money.new currency, amount - other.amount
      end

      def * exchange_rate
        return self * exchange_rate.swap unless exchange_rate.currencies_match? self

        exchange_rate.assert_matching_currencies self
        Money(exchange_rate.counter_currency, amount.to_r * exchange_rate.rate)
      end
    end
  end
end
