require 'rubygems'
require 'sinatra'
require 'openvz'
require 'logger'
require 'json'

class OpeVZAgent < Sinatra::Base

  @@logger = Logger.new(STDOUT)

  set :bind, '0.0.0.0'

  post '/container/:id/configuration' do |container_id|
    payload = request.body.read
    @@logger.debug "Requested processing of #{container_id} using #{payload}"

    begin
      configuration = JSON.parse(payload)
    rescue JSON::ParserError => e
      @@logger.error "Got invalid payload: #{payload}"
      @@logger.error e
      error 400
    end

    container = OpenVZ::Container.new(container_id)
    container.set configuration

    @@logger.debug "Successfully set configuration of #{container_id}"

    "ok"
  end

end

OpeVZAgent.run!