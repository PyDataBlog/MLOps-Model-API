require 'test_helper'

module Unicore
	class ProfileTest < ActiveSupport::TestCase
		self.fixture_path = Rails.root.parent + "./fixtures/unicore"
		self.set_fixture_class profiles: Unicore::Profile
		self.fixtures :profiles

		setup do
			@simple_profile = profiles(:simple)
			@full_profile = profiles(:full)
			@invalid_profile = profiles(:invalid)
		end

		test "should save simple user" do
			assert @simple_profile.save, "Do not save the simple user"
		end

		test "should save full user" do
			assert @full_profile.save, "Do not full the simple user"
		end

		test "should not save profile without user" do
			assert_not_nil @invalid_profile.user
		end

		test "should not save profile with an invalid firstname" do
			profile = @simple_profile
			profile.firstname = @invalid_profile.firstname
			assert_not profile.save, "Save the user with an invalid firstname"
		end

		test "should not save profile with an invalid secondname" do
			profile = @simple_profile
			profile.secondname = @invalid_profile.secondname
			assert_not profile.save, "Save the user with an invalid secondname"
		end

		test "should not save profile with an invalid patronymic" do
			profile = @simple_profile
			profile.patronymic = @invalid_profile.patronymic
			assert_not profile.save, "Save the user with an invalid patronymic"
		end

		test "should not save profile with an invalid email" do
			profile = @simple_profile
			profile.email = @invalid_profile.email
			assert_not profile.save, "Save the user with an invalid email"
		end

		test "should not save profile with an invalid phone" do
			profile = @simple_profile
			profile.phone = @invalid_profile.phone
			assert_not profile.save, "Save the user with an invalid phone"
		end

		test "should not save profile with an invalid sublink" do
			profile = @simple_profile
			profile.sublink = @invalid_profile.sublink
			assert_not profile.save, "Save the user with an invalid sublink"
		end

		test "should not save profile with a long sublink" do
			profile = @simple_profile
			profile.sublink = "a"*20
			assert_not profile.save, "Save the user with a long sublink"
		end
	end
end
