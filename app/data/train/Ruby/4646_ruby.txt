require "ruby-extensions/version"
require "ruby-extensions/rails"

class Module
  def define_constants(constants_array_name, constants_array, options = {})
    constants_array = constants_array.map(&:to_s)
    # define array of constants
    class_eval "#{constants_array_name.upcase} = [#{constants_array.map{ |constant| (options[:to_string] ? "'#{constant}'" : ":#{constant}")}.join(', ')}]"

    constants_array.each do |constant|
      val = options[:to_string] ? "'#{constant}'" : ":#{constant}"
      prefix = options[:prefix] ? "#{options[:prefix]}_" : ""
      postfix = options[:postfix] ? "_#{options[:postfix]}" : ""

      # define constants
      class_eval "#{prefix.upcase}#{constant.to_s.upcase}#{postfix.upcase} = #{val}"

      # add constant? method
      if options[:attribute]
        class_eval <<-EOS
          def #{prefix.downcase}#{constant.to_s.downcase}#{postfix.downcase}?
            #{options[:attribute]} == #{val}
          end
        EOS
      end
    end
  end
end