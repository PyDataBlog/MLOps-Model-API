require 'spec_helper'

feature 'Imprintable Trains' do
  # TODO
  context 'As a logged in user' do
    include_context 'logged_in_as_user'

    context 'when there are users with the "receiving" role' do
      given!(:order) { create(:order) }
      given!(:train) { create(:imprintable_train, state: 'ordered', job: order.jobs.first ) }
      background :each do
        allow(User).to receive(:of_role) { [user] } 
      end

      scenario 'I can assign inventoried by to train', js: true do
        expect(train.inventoried_by).to be_nil

        visit show_train_path('imprintable_train', train)
        sleep 2.5
        # user is already selected
        success_transition :inventoried

        expect(train.reload.state).to eq("inventoried")
        expect(train.inventoried_by_id).to eq(user.id)
      end

      scenario 'I can assign staged by to a train when inventorying', js: true do
        expect(train.staged_by).to be_nil
        
        visit show_train_path('imprintable_train', train)
        sleep 2.5

        fill_in "imprintable_train_location", with: "New Location"
        success_transition :staged

        expect(train.reload.staged_by_id).to eq(user.id)
      end
    end
  end
end
