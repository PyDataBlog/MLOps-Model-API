# User Model
# This corresponds to a database entry that represents a User (aka a Member)

class User < ActiveRecord::Base
    before_save { self.email = email.downcase }                 # Before saving, convert the email to lowercase
    validates :name,  presence: true, length: { maximum: 50 }   # Require the user has a name and it is no more than 50 characters long
    VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i    # A pattern to check an email address against to make sure it's valid
    validates :email, presence: true, length: { maximum: 255 }, # Require the user has an email, less than 255 characters,
        format: { with: VALID_EMAIL_REGEX },                    # and check its validity against the pattern above.
        uniqueness: { case_sensitive: false }                   # Also require that email addresses be unique.
    has_secure_password                                         # Create a secure login using bcrypt (in one command! magic!)
    validates :password, length: { minimum: 6 }                 # Require the password is at least 6 characters long.
end 
