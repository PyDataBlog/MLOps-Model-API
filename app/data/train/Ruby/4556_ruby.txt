require_dependency "epm_catalog/application_controller"

module EpmCatalog
  class BaselineMeasuresController < ApplicationController
    before_filter :authenticate_user!
    # GET /baseline_measures
    # GET /baseline_measures.json
    def index
      # if called as nested resource get measures for project_type_id
      if params[:project_type_id]
        @baseline_measures = BaselineMeasure.where(:project_type_id => params[:project_type_id])
      else
        @baseline_measures = BaselineMeasure.all
      end

      respond_to do |format|
        format.html # index.html.erb
        format.json { render json: @baseline_measures.as_json(:methods => [:code, :measure_text, :implementation_notes] ) }
      end
    end

    def show
    end

    def new
    end

    def edit
    end

    # POST /baseline_measures
    # POST /baseline_measures.json
    def create
      @baseline_measure = BaselineMeasure.new(params[:baseline_measure])

      respond_to do |format|
        if @baseline_measure.save
          format.html { redirect_to @baseline_measure, notice: 'Baseline measure was successfully created.' }
          format.json { render json: @baseline_measure.as_json(:methods => [:code, :measure_text, :implementation_notes] ), status: :created, location: project_type_baseline_measure_url(@baseline_measure.project_type_id, @baseline_measure) }
        else
          format.html { render action: "new" }
          format.json { render json: @baseline_measure.errors, status: :unprocessable_entity }
        end
      end
    end

    def update
    end

    # DELETE /baseline_measures/1
    # DELETE /baseline_measures/1.json
    def destroy
      @baseline_measure = BaselineMeasure.find(params[:id])
      # acts_as_paranoid - Sets the deleted_at field to the current time.
      @baseline_measure.delete

      respond_to do |format|
        format.html { redirect_to projects_url }
        format.json { head :no_content }
      end
    end
  end
end
