module MailSubscriptionNotifications
  class Subscribed < ServiceObject
    attribute :subscription_id

    def call
      subscription = MailSubscriptionNotifications.subscription(subscription_id)
      if subscription
        IssuesMailer.subscribed(subscription).deliver_now
      end
    end
  end

  class ProgressChanged < ServiceObject
    attribute :subscription_id
    attribute :old_progress_key

    def call
      subscription = MailSubscriptionNotifications.subscription(subscription_id)
      if subscription
        IssuesMailer.
          progress_changed(subscription, old_progress_key).
          deliver_now
      end
    end
  end

  class NewNote < ServiceObject
    attribute :subscription_id
    attribute :note_id

    def call
      subscription = MailSubscriptionNotifications.subscription(subscription_id)
      if subscription
        IssuesMailer.new_note(subscription, note_id).deliver_now
      end
    end
  end

  private

  def self.subscription(subscription_id)
    @subscription = IssueSubscription.find(subscription_id)
    if !(
      @subscription.subscriber.active? &&
        @subscription.subscriber.admin_or_super?
    )
      @subscription = nil
    end
    @subscription
  end
end
