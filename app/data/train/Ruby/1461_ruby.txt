#
# Cookbook Name:: chef-solo
# Recipe:: default
#
# Copyright 2014,  TENSOR
#
# All rights reserved - Do Not Redistribute
#

include_recipe 'logrotate'
include_recipe 'chef-solo.redis::redis'

cookbook_file "/etc/chef/solo.rb" do
  source "solo.rb"
  owner 'root'
  group 'root'
  action :create
end

%w[ node["coockbookdir"]/recipes   node["coockbookdir"]/attributes/ ].each do |path|
  directory path do
    recursive true
    owner "root"
    group "root"
  end
end


[node["packdir"]["client"]].each do |path|
  directory path do
    recursive true
   owner "root"
   group "root"
 end
end


cookbook_file "/etc/chef/node.json" do 
  source "node.json"
  owner 'root'
  group 'root'
end


cookbook_file  "#{node["coockbookdir"]}metadata.rb" do
   owner 'root'
   group 'root'
   mode 0755
   source "metadata.rb"
   action :create
end

cookbook_file  "#{node["coockbookdir"]}CHANGELOG.md" do
   owner 'root'
   group 'root'
   mode 0755
   source "CHANGELOG.md"
   action :create
end

cookbook_file "#{node["coockbookdir"]}recipes/default.rb" do
  source "default.rb"
  owner 'root'
  group 'root'
end
  
cookbook_file "#{node["coockbookdir"]}README.md" do
  source "README.md"
  action :create
  owner 'root'
  group 'root'
end
 
logrotate_app 'chef-solo' do
 cookbook  'logrotate'
 path      '/var/log/chef/solo.log'
 frequency 'daily'
 rotate    7
 options   ['missingok', 'copytruncate', 'compress', 'delaycompress', 'notifempty']
end

execute  "copy attributes on client" do
     command  "scp #{node.default["server"]}:/#{node.default["dirpro"]["server"]}attributes/default.rb #{node.default["dirpro"]["client"]}/attributes/"
     action :run
     user "root"
end

#src_filepath = "#{node.pakdir_client}"
#bash "scp packages" do
# user "root"
# cwd   ::File.dirname(src_filepath)
# code <<-EOH
#   #rm -rf ./* 
#   scp  test-exploitation1.unix.tensor.ru:/root/chef-repo/cookbooks/chef-solo.test/files/packages/* ./
# EOH
#end
