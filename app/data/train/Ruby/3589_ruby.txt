class Birt::Core::Mysql

  def self.client(data_source = nil)
    create_client(choose_data_source(data_source))
  end

  def self.query(data_source, query_text)
    client = client(data_source)
    results = client.query(query_text)
    yield(results) if block_given?
    results
  end
  def self.create_client(data_source)
    Mysql2::Client.new(
        host: data_source.host,
        port: data_source.port,
        username: data_source.username,
        password: data_source.password,
        database: data_source.database
    )
  end
  def self.rails_data_source
    config_path = Rails.root ? File.join(Rails.root, "config", "database.yml") : './config/database.yml'
    database_yml = File.open(config_path)
    dbconfig = YAML::load(database_yml)
    dbconfig = dbconfig[Rails.env] if defined? Rails
    data_source = Birt::Core::DataSource.new do |item|
      item.set_host dbconfig['host']
      item.port = dbconfig['port'] ||= 3306
      item.username = dbconfig['username']
      item.password = dbconfig['password']
      item.database = dbconfig['database']
    end
    data_source
  end
  def self.choose_data_source(data_source = nil)
    return rails_data_source if data_source.nil?
    config_path = Rails.root ? File.join(Rails.root, "config", "birt.yml") : './config/birt.yml'
    config = nil
    if (File.exist?(config_path))
      config = YAML.load(ERB.new(File.new(config_path).read).result)
      config = config[Rails.env] if defined? Rails
    end
    if config && "rptdesign" == config["datasource"]
      data_source
    else
      rails_data_source
    end
  end
end
