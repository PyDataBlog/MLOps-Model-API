// Decompiled with JetBrains decompiler
// Type: System.Security.Policy.IMembershipCondition
// Assembly: mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: 255ABCDF-D9D6-4E3D-BAD4-F74D4CE3D7A8
// Assembly location: C:\Windows\Microsoft.NET\Framework\v4.0.30319\mscorlib.dll

using System.Runtime.InteropServices;
using System.Security;

namespace System.Security.Policy
{
  /// <summary>
  /// Defines the test to determine whether a code assembly is a member of a code group.
  /// </summary>
  [ComVisible(true)]
  public interface IMembershipCondition : ISecurityEncodable, ISecurityPolicyEncodable
  {
    /// <summary>
    /// Determines whether the specified evidence satisfies the membership condition.
    /// </summary>
    /// 
    /// <returns>
    /// true if the specified evidence satisfies the membership condition; otherwise, false.
    /// </returns>
    /// <param name="evidence">The evidence set against which to make the test. </param>
    bool Check(Evidence evidence);

    /// <summary>
    /// Creates an equivalent copy of the membership condition.
    /// </summary>
    /// 
    /// <returns>
    /// A new, identical copy of the current membership condition.
    /// </returns>
    IMembershipCondition Copy();

    /// <summary>
    /// Creates and returns a string representation of the membership condition.
    /// </summary>
    /// 
    /// <returns>
    /// A string representation of the state of the current membership condition.
    /// </returns>
    string ToString();

    /// <summary>
    /// Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
    /// </summary>
    /// 
    /// <returns>
    /// true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
    /// </returns>
    /// <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param>
    bool Equals(object obj);
  }
}
