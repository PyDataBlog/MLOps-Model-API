// Decompiled with JetBrains decompiler
// Type: System.Data.Common.DbParameter
// Assembly: System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
// MVID: A0A8E655-5215-4802-816D-C9E5EBD7DA5D
// Assembly location: C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Data.dll

using System;
using System.ComponentModel;
using System.Data;

namespace System.Data.Common
{
  /// <summary>
  /// Represents a parameter to a <see cref="T:System.Data.Common.DbCommand"/> and optionally, its mapping to a <see cref="T:System.Data.DataSet"/> column. For more information on parameters, see Configuring Parameters and Parameter Data Types (ADO.NET).
  /// </summary>
  /// <filterpriority>1</filterpriority>
  public abstract class DbParameter : MarshalByRefObject, IDbDataParameter, IDataParameter
  {
    /// <summary>
    /// Gets or sets the <see cref="T:System.Data.DbType"/> of the parameter.
    /// </summary>
    /// 
    /// <returns>
    /// One of the <see cref="T:System.Data.DbType"/> values. The default is <see cref="F:System.Data.DbType.String"/>.
    /// </returns>
    /// <exception cref="T:System.ArgumentException">The property is not set to a valid <see cref="T:System.Data.DbType"/>.</exception><filterpriority>1</filterpriority>
    [ResDescription("DbParameter_DbType")]
    [Browsable(false)]
    [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
    [RefreshProperties(RefreshProperties.All)]
    [ResCategory("DataCategory_Data")]
    public abstract DbType DbType { get; set; }

    /// <summary>
    /// Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.
    /// </summary>
    /// 
    /// <returns>
    /// One of the <see cref="T:System.Data.ParameterDirection"/> values. The default is Input.
    /// </returns>
    /// <exception cref="T:System.ArgumentException">The property is not set to one of the valid <see cref="T:System.Data.ParameterDirection"/> values.</exception><filterpriority>1</filterpriority>
    [ResCategory("DataCategory_Data")]
    [DefaultValue(ParameterDirection.Input)]
    [RefreshProperties(RefreshProperties.All)]
    [ResDescription("DbParameter_Direction")]
    public abstract ParameterDirection Direction { get; set; }

    /// <summary>
    /// Gets or sets a value that indicates whether the parameter accepts null values.
    /// </summary>
    /// 
    /// <returns>
    /// true if null values are accepted; otherwise false. The default is false.
    /// </returns>
    /// <filterpriority>1</filterpriority>
    [EditorBrowsable(EditorBrowsableState.Never)]
    [Browsable(false)]
    [DesignOnly(true)]
    public abstract bool IsNullable { get; set; }

    /// <summary>
    /// Gets or sets the name of the <see cref="T:System.Data.Common.DbParameter"/>.
    /// </summary>
    /// 
    /// <returns>
    /// The name of the <see cref="T:System.Data.Common.DbParameter"/>. The default is an empty string ("").
    /// </returns>
    /// <filterpriority>1</filterpriority>
    [DefaultValue("")]
    [ResCategory("DataCategory_Data")]
    [ResDescription("DbParameter_ParameterName")]
    public abstract string ParameterName { get; set; }

    byte IDbDataParameter.Precision
    {
      get
      {
        return (byte) 0;
      }
      set
      {
      }
    }

    byte IDbDataParameter.Scale
    {
      get
      {
        return (byte) 0;
      }
      set
      {
      }
    }

    public virtual byte Precision
    {
      get
      {
        return ((IDbDataParameter) this).Precision;
      }
      set
      {
        ((IDbDataParameter) this).Precision = value;
      }
    }

    public virtual byte Scale
    {
      get
      {
        return ((IDbDataParameter) this).Scale;
      }
      set
      {
        ((IDbDataParameter) this).Scale = value;
      }
    }

    /// <summary>
    /// Gets or sets the maximum size, in bytes, of the data within the column.
    /// </summary>
    /// 
    /// <returns>
    /// The maximum size, in bytes, of the data within the column. The default value is inferred from the parameter value.
    /// </returns>
    /// <filterpriority>1</filterpriority>
    [ResDescription("DbParameter_Size")]
    [ResCategory("DataCategory_Data")]
    public abstract int Size { get; set; }

    /// <summary>
    /// Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet"/> and used for loading or returning the <see cref="P:System.Data.Common.DbParameter.Value"/>.
    /// </summary>
    /// 
    /// <returns>
    /// The name of the source column mapped to the <see cref="T:System.Data.DataSet"/>. The default is an empty string.
    /// </returns>
    /// <filterpriority>1</filterpriority>
    [DefaultValue("")]
    [ResCategory("DataCategory_Update")]
    [ResDescription("DbParameter_SourceColumn")]
    public abstract string SourceColumn { get; set; }

    /// <summary>
    /// Sets or gets a value which indicates whether the source column is nullable. This allows <see cref="T:System.Data.Common.DbCommandBuilder"/> to correctly generate Update statements for nullable columns.
    /// </summary>
    /// 
    /// <returns>
    /// true if the source column is nullable; false if it is not.
    /// </returns>
    /// <filterpriority>1</filterpriority>
    [ResCategory("DataCategory_Update")]
    [DefaultValue(false)]
    [RefreshProperties(RefreshProperties.All)]
    [ResDescription("DbParameter_SourceColumnNullMapping")]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public abstract bool SourceColumnNullMapping { get; set; }

    /// <summary>
    /// Gets or sets the <see cref="T:System.Data.DataRowVersion"/> to use when you load <see cref="P:System.Data.Common.DbParameter.Value"/>.
    /// </summary>
    /// 
    /// <returns>
    /// One of the <see cref="T:System.Data.DataRowVersion"/> values. The default is Current.
    /// </returns>
    /// <exception cref="T:System.ArgumentException">The property is not set to one of the <see cref="T:System.Data.DataRowVersion"/> values.</exception><filterpriority>1</filterpriority>
    [ResCategory("DataCategory_Update")]
    [ResDescription("DbParameter_SourceVersion")]
    [DefaultValue(DataRowVersion.Current)]
    public virtual DataRowVersion SourceVersion
    {
      get
      {
        return DataRowVersion.Default;
      }
      set
      {
      }
    }

    /// <summary>
    /// Gets or sets the value of the parameter.
    /// </summary>
    /// 
    /// <returns>
    /// An <see cref="T:System.Object"/> that is the value of the parameter. The default value is null.
    /// </returns>
    /// <filterpriority>1</filterpriority>
    [ResCategory("DataCategory_Data")]
    [ResDescription("DbParameter_Value")]
    [RefreshProperties(RefreshProperties.All)]
    [DefaultValue(null)]
    public abstract object Value { get; set; }

    /// <summary>
    /// Resets the DbType property to its original settings.
    /// </summary>
    /// <filterpriority>2</filterpriority>
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public abstract void ResetDbType();
  }
}
