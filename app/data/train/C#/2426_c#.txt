// MIT License. Copyright (c) 2016 Maxim Kuzmin. Contacts: https://github.com/maxim-kuzmin

// Author: Maxim Kuzmin

using Makc2017.Core.Caching;
using Makc2017.Core.Caching.Clients;
using Makc2017.Core.Caching.Resources.Errors;
using Makc2017.Core.Execution.Operations.Async;
using Makc2017.Core.Resources.Errors;
using Makc2017.Data.Objects;
using Makc2017.Modules.Dummy.Filters;
using Makc2017.Modules.Dummy.Models;
using Makc2017.Modules.Dummy.Operations.Item;
using System;
using System.Threading.Tasks;

namespace Makc2017.Modules.Dummy.Caching.Operations.Item
{
    /// <summary>
    /// Модули. Модуль "Dummy". Кэширование. Операции. Операция, выполняющая функцию получения элемента.
    /// </summary>
    public class ModuleDummyCachingOperationItemGet : CoreExecutionOperationAsyncWithInputAndOutputData
        <
            ModuleDummyFilterItem,
            ModuleDummyModelItem
        >
    {
        #region Constructors

        /// <summary>
        /// Конструктор.
        /// </summary>
        /// <param name="operation">Операция, содержащая выполняемую функцию.</param>   
        /// <param name="config">Конфигурация.</param>        
        /// <param name="cache">Кэш.</param>   
        /// <param name="coreResourceErrors">Ресурсы ошибок ядра.</param>
        /// <param name="coreCachingResourceErrors">Ресурсы ошибок ядра кэширования.</param>
        public ModuleDummyCachingOperationItemGet(
            ModuleDummyOperationItemGet operation,
            ICoreCachingClientConfig config,
            ICoreCachingCache cache,
            CoreResourceErrors coreResourceErrors,
            CoreCachingResourceErrors coreCachingResourceErrors
            ) : base(
                CreateExecutableFunction(operation, config, cache, coreCachingResourceErrors),
                operation.FuncErrorMessagesGetting,
                operation.FuncInputDataTransform,
                operation.FuncSuccessMessagesGetting,
                operation.FuncWarningMessagesGetting,
                coreResourceErrors
                )
        {
        }

        #endregion Constructors

        #region Private methods

        private static Func<ModuleDummyFilterItem, Task<ModuleDummyModelItem>> CreateExecutableFunction(
            ModuleDummyOperationItemGet operation,
            ICoreCachingClientConfig config,
            ICoreCachingCache cache,
            CoreCachingResourceErrors coreCachingResourceErrors
            )
        {
            if (config.IsCachingEnabled)
            {
                var client = new CoreCachingClientWithChangeAndRead<ModuleDummyModelItem>(
                    "Item.Get",
                    config,
                    cache,
                    coreCachingResourceErrors
                    );

                return inputData =>
                {
                    var keys = new object[]
                    {
                        inputData.Id
                    };

                    var tags = new[]
                    {
                        DataObjectDummy.DB_TABLE_NAME_WITH_SCHEMA,
                        DataObjectDummyManyToMany.DB_TABLE_NAME_WITH_SCHEMA,
                        DataObjectDummyManyToManyLink.DB_TABLE_NAME_WITH_SCHEMA,
                        DataObjectDummyOneToMany.DB_TABLE_NAME_WITH_SCHEMA
                    };

                    return client.Read(() => operation.ExecutableFunction(inputData), keys, tags);
                };
            }
            else
            {
                return operation.ExecutableFunction;
            }
        }

        #endregion Private methods
    }
}
