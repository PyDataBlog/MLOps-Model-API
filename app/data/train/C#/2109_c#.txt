// Decompiled with JetBrains decompiler
// Type: System.Web.Configuration.ProfileSettingsCollection
// Assembly: System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
// MVID: 7E68A73E-4066-4F24-AB0A-F147209F50EC
// Assembly location: C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Web.dll

using System.Configuration;
using System.Runtime;

namespace System.Web.Configuration
{
  /// <summary>
  /// Contains a collection of <see cref="T:System.Web.Configuration.ProfileSettings"/> objects. This class cannot be inherited.
  /// </summary>
  [ConfigurationCollection(typeof (ProfileSettings))]
  public sealed class ProfileSettingsCollection : ConfigurationElementCollection
  {
    private static ConfigurationPropertyCollection _properties = new ConfigurationPropertyCollection();

    protected override ConfigurationPropertyCollection Properties
    {
      [TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")] get
      {
        return ProfileSettingsCollection._properties;
      }
    }

    /// <summary>
    /// Gets or sets the <see cref="T:System.Web.Configuration.ProfileSettings"/> object at the specified numeric index in the collection.
    /// </summary>
    /// 
    /// <returns>
    /// The <see cref="T:System.Web.Configuration.ProfileSettings"/> object at the specified index, or null if there is no object at that index.
    /// </returns>
    /// <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileSettings"/> object in the collection.</param>
    public ProfileSettings this[int index]
    {
      get
      {
        return (ProfileSettings) this.BaseGet(index);
      }
      set
      {
        if (this.BaseGet(index) != null)
          this.BaseRemoveAt(index);
        this.BaseAdd(index, (ConfigurationElement) value);
      }
    }

    /// <summary>
    /// Gets the <see cref="T:System.Web.Configuration.ProfileSettings"/> object based on the specified key in the collection.
    /// </summary>
    /// 
    /// <returns>
    /// A <see cref="T:System.Web.Configuration.ProfileSettings"/> object.
    /// </returns>
    /// <param name="key">The name of the <see cref="T:System.Web.Configuration.ProfileSettings"/> object contained in the collection.</param>
    public ProfileSettings this[string key]
    {
      get
      {
        return (ProfileSettings) this.BaseGet((object) key);
      }
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="T:System.Web.Configuration.ProfileSettingsCollection"/> class.
    /// </summary>
    [TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]
    public ProfileSettingsCollection()
    {
    }

    protected override ConfigurationElement CreateNewElement()
    {
      return (ConfigurationElement) new ProfileSettings();
    }

    protected override object GetElementKey(ConfigurationElement element)
    {
      return (object) ((ProfileSettings) element).Name;
    }

    /// <summary>
    /// Adds a <see cref="T:System.Web.Configuration.ProfileSettings"/> object to the collection.
    /// </summary>
    /// <param name="profilesSettings">A <see cref="T:System.Web.Configuration.ProfileSettings"/> object to add to the collection.</param><exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfileSettings"/> object to add already exists in the collection, or the collection is read-only.</exception>
    public void Add(ProfileSettings profilesSettings)
    {
      this.BaseAdd((ConfigurationElement) profilesSettings);
    }

    /// <summary>
    /// Removes all <see cref="T:System.Web.Configuration.ProfileSettings"/> objects from the collection.
    /// </summary>
    public void Clear()
    {
      this.BaseClear();
    }

    /// <summary>
    /// Removes a <see cref="T:System.Web.Configuration.ProfileSettings"/> object at the specified index location from the collection.
    /// </summary>
    /// <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileSettings"/> object in the collection.</param><exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.ProfileSettings"/> object at the specified index in the collection, the element has already been removed, or the collection is read-only.</exception>
    public void RemoveAt(int index)
    {
      this.BaseRemoveAt(index);
    }

    /// <summary>
    /// Inserts the specified <see cref="T:System.Web.Configuration.ProfileSettings"/> object at the specified index in the collection.
    /// </summary>
    /// <param name="index">The index of a <see cref="T:System.Web.Configuration.ProfileSettings"/> object in the collection.</param><param name="authorizationSettings">A <see cref="T:System.Web.Configuration.ProfileSettings"/> object to insert into the collection.</param><exception cref="T:System.Configuration.ConfigurationException">The <see cref="T:System.Web.Configuration.ProfileSettings"/> object to add already exists in the collection, the index is invalid, or the collection is read-only.</exception>
    public void Insert(int index, ProfileSettings authorizationSettings)
    {
      this.BaseAdd(index, (ConfigurationElement) authorizationSettings);
    }

    /// <summary>
    /// Returns the index of the specified <see cref="T:System.Web.Configuration.ProfileSettings"/> object.
    /// </summary>
    /// 
    /// <returns>
    /// The index of the specified <see cref="T:System.Web.Configuration.ProfileSettings"/> object, or -1 if the object is not found in the collection.
    /// </returns>
    /// <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileSettings"/> object in the collection.</param>
    public int IndexOf(string name)
    {
      ConfigurationElement element = this.BaseGet((object) name);
      if (element == null)
        return -1;
      return this.BaseIndexOf(element);
    }

    /// <summary>
    /// Removes a <see cref="T:System.Web.Configuration.BufferModeSettings"/> object from the collection.
    /// </summary>
    /// <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileSettings"/> object to remove from the collection.</param><exception cref="T:System.Configuration.ConfigurationException">There is no <see cref="T:System.Web.Configuration.ProfileSettings"/> object with the specified key in the collection, the element has already been removed, or the collection is read-only.</exception>
    public void Remove(string name)
    {
      this.BaseRemove((object) name);
    }

    /// <summary>
    /// Indicates whether the collection contains a <see cref="T:System.Web.Configuration.ProfileSettings"/> object with the specified name.
    /// </summary>
    /// 
    /// <returns>
    /// true if the collection contains a <see cref="T:System.Web.Configuration.ProfileSettings"/> object with the specified <paramref name="name"/>; otherwise, false.
    /// </returns>
    /// <param name="name">The name of a <see cref="T:System.Web.Configuration.ProfileSettings"/> object in the collection.</param>
    public bool Contains(string name)
    {
      return this.IndexOf(name) != -1;
    }
  }
}
