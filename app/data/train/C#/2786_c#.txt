using CoreGlue.Middleware.CQRS.Settings;
using Microsoft.Extensions.Options;
using System.Collections.Generic;

namespace CoreGlue.CQRS.Query
{
    public class QueryableStoreFactory : IQueryableStoreFactory
    {
        private IDictionary<string, IQueryableStore> QueryStores { get; set; } = new Dictionary<string, IQueryableStore>();

        public QueryableStoreFactory(IOptions<QueryOptions> options)
        {
            ParameterValidation.IsNotNull(options, nameof(options));

            QueryOptions queryStores = options.Value;

            foreach (ConnectionOptions connection in queryStores.TableStorage)
            {
                this.QueryStores.Add(connection.Name, new TableQueryableStore(connection));
            }
        }

        public IQueryableStore GetStore(string name)
        {
            return this.QueryStores[name];
        }
    }
}
