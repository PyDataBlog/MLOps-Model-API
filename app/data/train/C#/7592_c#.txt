using Jarvis.Server.Data;
using Newtonsoft.Json;
using System;

namespace Jarvis.Server.Common
{
    /// <summary>
    /// Converter telling JSON.Net how to handle <see cref="DateTime"/> type
    /// </summary>
    internal class TimeSpanJsonConverter : JsonConverter
    {
        public override bool CanRead
        {
            get { return true; }
        }

        public override bool CanConvert(Type objectType)
        {
            return typeof(TimeSpan) == objectType;
        }

        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            TimeSpan fromJavaTime = new TimeSpan((long.Parse(reader.Value.ToString()) * TimeSpan.TicksPerMillisecond));
            return fromJavaTime;
        }

        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            double millis = ((TimeSpan)value).TotalMilliseconds;
            writer.WriteValue(Math.Floor(millis));
        }
    }
}