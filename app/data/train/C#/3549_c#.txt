//-----------------------------------------------------------------------
// <copyright file="HtmlToXamlConverterTest.cs" company="AFS">
// Copyright (c) AFS. All rights reserved.
//
//    This file is part of Chatbox.
//
//    Chatbox is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Lesser General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    any later version.
//
//    Chatbox is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//    GNU Lesser General Public License for more details.
//
//    You should have received a copy of the GNU Lesser General Public License
//    along with Chatbox. If not, see http://www.gnu.org/copyleft/lesser.html
// </copyright>
//----------------------------------------------------------------------- 

namespace ChatBox.XamlUtility.Test
{
    using System;
    using System.Windows.Documents;

    using Microsoft.VisualStudio.TestTools.UnitTesting;

    /// <summary>
    /// Test cases for the HtmlToXamlConverter
    /// </summary>
    [TestClass]
    public class HtmlToXamlConverterTest
    {
        /// <summary>
        /// Test that the HtmlToXamlConverter can be created
        /// </summary>
        [TestMethod]
        public void HtmlToXamlCreateTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello");

            Assert.IsNotNull(converter);

            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do plain text
        /// </summary>
        [TestMethod]
        public void HtmlToXamlPlaintextTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, xaml");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do breaks
        /// </summary>
        [TestMethod]
        public void HtmlToXamlBreakTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, xaml<br>This is a second line");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do breaks
        /// </summary>
        [TestMethod]
        public void HtmlToXamlBreakWithSlashTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, xaml<br/>This is a second line");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do breaks
        /// </summary>
        [TestMethod]
        public void HtmlToXamlBreakWithSpaceSlashTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, xaml<br />This is a second line");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do multiple breaks
        /// </summary>
        [TestMethod]
        public void HtmlToXamlBreak2Test()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, xaml<br>This is a second line.<br><br>And a third");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do a break after a link
        /// </summary>
        [TestMethod]
        public void HtmlToXamlBreakAndLinkTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("<a href=\"http://www.foo.com\">Meet Ida.</a><br>Relax.");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsTrue(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do emphasis
        /// </summary>
        [TestMethod]
        public void HtmlToXamlEmphasisTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <em>This is a emphahsis text</em>.");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test emphasis followed by strong
        /// </summary>
        [TestMethod]
        public void HtmlToXamlEmphasisAndStrongTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <em>This is a emphahsis text</em>. And <strong>this is strong</strong> text");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test emphasis, break followed by strong
        /// </summary>
        [TestMethod]
        public void HtmlToXamlEmphasisBreakStrongTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <em>This is a emphahsis text</em>.<br> And <strong>this is strong</strong> text");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do emphasis and breaks
        /// </summary>
        [TestMethod]
        public void HtmlToXamlEmphasisBreakTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <em>This is emphahsis text</em>.<br>This is a second line");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do nested tags
        /// </summary>
        [TestMethod]
        public void HtmlToXamlNestedTagTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <em>This is <strong>strong</strong><br> emphahsis text</em>.This is a second line");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());

            Inline em = doc.FindChild<Italic>();
            Assert.IsNotNull(em);
            Assert.IsTrue(em.HasChild<Bold>()); 
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do neested tags
        /// </summary>
        [TestMethod]
        public void HtmlToXamlNestedLevelsTagTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <em>This</em> is <strong>strong<br> <em>emphahsis text</em>.</strong><br>This is a second line");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsTrue(doc.HasChild<LineBreak>());

            Inline em = doc.FindChild<Bold>();
            Assert.IsNotNull(em);
            Assert.IsTrue(em.HasChild<Italic>());
            Assert.IsTrue(em.HasChild<LineBreak>()); 
        }

        /// <summary>
        /// Test that the HtmlToXamlConverter can do neested tags
        /// </summary>
        [TestMethod]
        public void HtmlToXamlLinkTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <a href=\"http://www.everything2.com/\">this is a link</a>");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsFalse(doc.HasChild<Italic>());
            Assert.IsTrue(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());

            Hyperlink link = doc.FindChild<Hyperlink>();
            Assert.AreEqual(new Uri("http://www.everything2.com/"), link.NavigateUri);
        }

        /// <summary>
        /// Test a link containing an em
        /// </summary>
        [TestMethod]
        public void HtmlToXamlLinkContainingEmTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("hello, <a href=\"http://www.everything2.com/\">this is <em>a em link</em></a>");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsFalse(doc.HasChild<Bold>());
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsTrue(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());

            Hyperlink link = doc.FindChild<Hyperlink>();
            Assert.IsTrue(link.HasChild<Italic>());
        }

        /// <summary>
        /// This is a topic used on e2 containing strikeout text
        /// </summary>
        [TestMethod]
        public void HtmlToXamlStrikeoutTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("<s>This place needs more than actual content.</s> <s>This place needs <strong>less</strong> content</s> WRITE NODES");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Bold>());
            
            // todo - it has italic now, when it has strikeout, will use that instead
            Assert.IsTrue(doc.HasChild<Italic>());
            Assert.IsFalse(doc.HasChild<Hyperlink>());
            Assert.IsFalse(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test an image tag
        /// </summary>
        [TestMethod]
        public void ImageTest()
        {
            HtmlToXamlConverter converter = new HtmlToXamlConverter("<img src=\"http://example.com/foo.gif\" alt=\"foo\" />");

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<InlineUIContainer>());
        }

        /// <summary>
        /// Test with data like the topic sent on 24/01/2010, which doesn't appear to be parsed right
        /// </summary>
        [TestMethod]
        public void HtmlToXamlHrClosedAndLinkTest()
        {
            const string TopicData = "foo<hr/><a href=\"http://somesite.com/\" rel=\"nofollow\" class=\"externalLink\">LinkText</a>, followtext.";

            HtmlToXamlConverter converter = new HtmlToXamlConverter(TopicData);

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Hyperlink>(), "No hyperlink");
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }

        /// <summary>
        /// Test with data like the topic sent on 24/01/2010, which doesn't appear to be parsed right
        /// </summary>
        [TestMethod]
        public void HtmlToXamlHrNotClosedAndLinkTest()
        {
            const string TopicData = "foo<hr><a href=\"http://somesite.com/\" rel=\"nofollow\" class=\"externalLink\">LinkText</a>, followtext.";

            HtmlToXamlConverter converter = new HtmlToXamlConverter(TopicData);

            Assert.IsNotNull(converter);
            Inline doc = converter.XamlContent;
            Assert.IsNotNull(doc);

            Assert.IsTrue(doc.HasChild<Hyperlink>(), "No hyperlink");
            Assert.IsTrue(doc.HasChild<LineBreak>());
        }
    }
}
