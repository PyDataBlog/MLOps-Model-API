using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Controls;
using System.Xml;
using System.Diagnostics;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace RunMusicOpenWPF {
    public partial class AppCenter {
        public static readonly string resPath = AppDomain.CurrentDomain.BaseDirectory + "Data\\";

        public List<SoTrack> trackList; //Czy jest to dalej potrzebne?
        public int trackIndex {
            get { return save.trackIndex; }
            set { save.trackIndex = value; }
        }
        public Save save;
        public ISubValue TypRun;

        public AppCenter() {
            save.trackIndex = 0;
        }

        public AppCenter(ISubValue nextRun, Save save) {
            TypRun = nextRun;
            this.save = save;

        }


        /// <summary>
        /// z pliku tracklist.JSON tworzy i wczytuje całą listę do obiektu TrackList
        /// </summary>
        public void LoadTrackList() {
            if (trackList != null) return;
            trackList = new List<SoTrack>();

            JArray trackarray = JsonConvert.DeserializeObject<JArray>(File.ReadAllText(Save.tracklistlocation));
            for(int i = 0; i < trackarray.Count; i++) {
                string Name = (string)trackarray[i]["Name"];
                string Adres = (string)trackarray[i]["Adres"];
                int Votes = (int)trackarray[i]["Votes"];
                trackList.Add(SoTrack.Create(Name,Votes,Adres));

            }

            trackList.Sort((x, y) =>
            {
                return y.Votes.CompareTo(x.Votes);
            });
        }

        public void LoadTrackToListView(ListView listview) {
            listview.Items.Clear();
            for (int x = 0; x < trackList.Count; x++)
                listview.Items.Add(trackList[x]);
        }

        /// <summary>
        /// Ustawia główny Indeks na następny utwór na liście TrackList
        /// </summary>
        public void NextIndexTrack() {
            if (trackIndex == trackList.Count - 1) {
                trackIndex = -1;
            }
            trackIndex++;

        }
    }
}
