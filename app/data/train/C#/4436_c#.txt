using BasicVector;
using PPMonoGraphics.Components;
using Microsoft.Xna.Framework.Graphics;
using Primal;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Primal.Api;

namespace PPMonoGraphics.Systems {
    class ScreenSizeUpdater : DrawSystem {
        private GraphicsDevice graphicsDevice;

        public ScreenSizeUpdater(GraphicsDevice graphicsDevice) {
            this.graphicsDevice = graphicsDevice;
        }

        protected override void AddKeyComponents() {
            AddKeyComponent<ScreenSize>();
        }

        protected override void UpdateEntity(IEntity entity, double elapsedMs) {
            Vector standardScreenSize = ScreenSize.NORMAL_SCREEN_SIZE;
            Vector currentScreenSize = new Vector(graphicsDevice.Viewport.Bounds.Width,
                graphicsDevice.Viewport.Bounds.Height);

            entity.Get<ScreenSize>().CurrentScreenSize = currentScreenSize;

            double standardRatio = standardScreenSize.X / standardScreenSize.Y;
            double currentRatio = currentScreenSize.X / currentScreenSize.Y;

            if (currentRatio > standardRatio) {
                // horizontal offset.
                double scale = DetermineScale(standardScreenSize.Y, currentScreenSize.Y);
                double horOffset = (currentScreenSize.X - standardScreenSize.X * scale)/2;
                entity.Get<ScreenSize>().Scale = scale;
                entity.Get<ScreenSize>().Offset = new Vector(horOffset, 0);
            }
            else if (currentRatio < standardRatio) {
                // vertical offset.
                double scale = DetermineScale(standardScreenSize.X, currentScreenSize.X);
                double verOffset = (currentScreenSize.Y - standardScreenSize.Y * scale) / 2;
                entity.Get<ScreenSize>().Scale = scale;
                entity.Get<ScreenSize>().Offset = new Vector(0, verOffset);
            }
            else {
                //no offset
                double scale = DetermineScale(standardScreenSize.Y, currentScreenSize.Y);
                entity.Get<ScreenSize>().Scale = scale;
                entity.Get<ScreenSize>().Offset = new Vector(0, 0);
            }
        }

        private double DetermineScale(double standard, double current) {
            return current / standard;
        }
    }
}
