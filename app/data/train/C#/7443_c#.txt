namespace AlgorithmSandbox.Chapter5
{
    public class Question4
    {
        public static (int smallest, int largest) NextNumber(int x)
        {
            var smallest = x;
            var temp = x;
            while (temp > 0)
            {
                temp = temp - 1;
                if (Popcnt((uint) x) == Popcnt((uint) temp))
                {
                    smallest = temp;
                    break;
                }
            }

            var largest = x;
            temp = x;
            while (temp < int.MaxValue)
            {
                temp = temp + 1;
                if (Popcnt((uint) x) == Popcnt((uint) temp))
                {
                    largest = temp;
                    break;
                }
            }


            return (smallest, largest);
        }

        private static int Popcnt(uint x)
        {
            var count = 0;
            while (x != 0)
            {
                if ((x & 1) != 0) count++;
                x = x >> 1;
            }

            return count;
        }

        public static (int smallest, int largest) NextNumberV2(int x)
        {
            var i = sizeof(int) * 8;
            while ((x & (1 << i)) == 0)
            {
                i--;
            }

            var j = i - 1;
            while ((x & (1 << j)) == 1)
            {
                j--;
            }

            var smallest = (x & ~(1 << i)) | (1 << j);

            i = 0;
            while ((x & (1 << i)) == 0)
            {
                i++;
            }

            j = i + 1;
            while ((x & (1 << j)) == 1)
            {
                j++;
            }

            var largest = (x & ~(1 << i)) | (1 << j);


            return (smallest, largest);
        }
    }
}