using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Net.Http.Formatting;
using System.Threading.Tasks;

namespace RestSamples.Service
{
    public class ApiServiceWithHttpClient : IApiService
    {
        private HttpMessageHandler _messageHandler;

        public ApiServiceWithHttpClient(HttpMessageHandler handler)
        {
            _messageHandler = handler;
        }

        public async Task<IEnumerable<string>> GetAllValues()
        {
            using (var httpClient = new HttpClient(_messageHandler))
            {
                var httpMessage = new HttpRequestMessage(new HttpMethod("GET"), "http://localhost:59642/api/values");
                var response = await httpClient.SendAsync(httpMessage);
                return await response.Content.ReadAsAsync<IEnumerable<string>>();
            }
        }

        public async Task<bool> SaveValue(string value)
        {
            using (var httpClient = new HttpClient(_messageHandler))
            {
                var httpMessage = new HttpRequestMessage(new HttpMethod("POST"), "http://localhost:59642/api/values");
                httpMessage.Content = new ObjectContent(typeof(string), value, new JsonMediaTypeFormatter());
                var response = await httpClient.SendAsync(httpMessage);
                return response.StatusCode == HttpStatusCode.Created;
            }
        }
    }
}