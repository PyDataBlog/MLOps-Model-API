using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace HartUtils
{
    public static class ActionHelper 
    {

        /// <summary>
        /// Retry the called action until is successful
        /// </summary>
        /// <param name="action">Action to try to execute</param>
        /// <param name="numberOfRetries">Number of times it will retry</param>
        /// <param name="milisecondsWait">Time to wait between calls</param>
        public static void Retry(Action action, int numberOfRetries, int milisecondsWait)
        {
            try
            {
                action.Invoke();
            }
            catch (Exception)
            {
                if (numberOfRetries > 0)
                {
                    System.Threading.Thread.Sleep(milisecondsWait);
                    Retry(action, numberOfRetries - 1, milisecondsWait);
                }
                else
                {
                    throw;
                }
            }
        }

        /// <summary>
        /// Returns the ms it took to execute a certain action
        /// </summary>
        /// <param name="action"></param>
        /// <returns></returns>
        public static long ExecutionTime(Action action)
        {
            var s = new Stopwatch();
            s.Start();
            action.Invoke();
            s.Stop();
            return s.ElapsedMilliseconds;
        }

    }
}
