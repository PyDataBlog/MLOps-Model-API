// MIT License. Copyright (c) 2016 Maxim Kuzmin. Contacts: https://github.com/maxim-kuzmin

// Author: Maxim Kuzmin

using Makc2016.Core.Caching;
using Makc2016.Core.Caching.Clients;
using Makc2016.Core.Execution.Operations.Async;
using Makc2016.Data.Objects;
using Makc2016.Modules.DummyManyToManyLink.Models;
using Makc2016.Modules.DummyManyToManyLink.Operations.Item;
using System;
using System.Threading.Tasks;

namespace Makc2016.Modules.DummyManyToManyLink.Caching.Operations.Item
{
    /// <summary>
    /// Модули. Модуль "DummyManyToManyLink". Кэширование. Операции. Операция, выполняющая функцию вставки элемента.
    /// </summary>
    public class ModuleDummyManyToManyLinkCachingOperationItemInsert : CoreExecutionOperationAsyncWithInputAndOutputData
        <
            ModuleDummyManyToManyLinkModelItem,
            ModuleDummyManyToManyLinkModelItem
        >
    {
        #region Constructors

        /// <summary>
        /// Конструктор.
        /// </summary>
        /// <param name="operation">Операция, содержащая выполняемую функцию.</param>   
        /// <param name="config">Конфигурация.</param>        
        /// <param name="cache">Кэш.</param>        
        public ModuleDummyManyToManyLinkCachingOperationItemInsert(
            ModuleDummyManyToManyLinkOperationItemInsert operation,
            ICoreCachingClientConfig config,
            ICoreCachingCache cache
            ) : base(
                CreateExecutableFunction(operation, config, cache),
                operation.FuncErrorMessagesGetting,
                operation.FuncInputDataTransform,
                operation.FuncSuccessMessagesGetting,
                operation.FuncWarningMessagesGetting
                )
        {            
        }

        #endregion Constructors

        #region Private methods

        /// <summary>
        /// Создать выполняемую функцию.
        /// </summary>
        /// <returns>Выполняемая функция.</returns>
        private static Func<ModuleDummyManyToManyLinkModelItem, Task<ModuleDummyManyToManyLinkModelItem>> CreateExecutableFunction(
            ModuleDummyManyToManyLinkOperationItemInsert operation,
            ICoreCachingClientConfig config,
            ICoreCachingCache cache
            )
        {
            if (config.IsCachingEnabled)
            {
                var client = new CoreCachingClientWithChangeAndRead<ModuleDummyManyToManyLinkModelItem>(
                    "Item.Insert",
                    config,
                    cache
                    );

                return inputData =>
                {
                    var tags = new[]
                    {
                        DataObjectDummyManyToManyLink.DB_TABLE_NAME_WITH_SCHEMA
                    };

                    return client.ChangeAndRead(() => operation.ExecutableFunction.Invoke(inputData), tags);
                };
            }
            else
            {
                return operation.ExecutableFunction;
            }
        }

        #endregion Private methods
    }
}
