using CsvHelper;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RowScatter.Common
{
    [InputHandler("csv")]
    public class CsvInputHandler : InputHandler
    {

        [Parameter('f', "filename")]
        public string Filename { get; set; }

        private Row _current;
        public override Row Current
        {
            get
            {
                return _current;
            }
        }

        private TextReader textReader;
        private CsvReader csvReader;

        private CsvReader CsvFile
        {
            get
            {
                if (textReader == null) textReader = File.OpenText(Filename);
                if (csvReader == null) csvReader = new CsvReader(textReader);
                csvReader.Configuration.HasHeaderRecord = true;
                return csvReader;
            }
        }

        public override IEnumerable<string> Headers
        {
            get
            {
                return CsvFile.FieldHeaders.ToList();
            }
        }

        public override string Title
        {
            get
            {
                return "CSV Input Handler";
            }
        }

        public override void Dispose()
        {
        }

        public override bool MoveNext()
        {
            var res = CsvFile.Read();
            if (res)
            {
                if (CsvFile.IsRecordEmpty()) return false;
                _current = new Row();
                _current.Index = CsvFile.Row - 1;
                foreach (var header in CsvFile.FieldHeaders)
                {
                    var value = CsvFile.GetField(header);
                    if (value != null)
                    {
                        _current.Values.Add(header, value);
                    }
                }
            }
            return res;
        }

        public override void Reset()
        {

        }
    }
}
