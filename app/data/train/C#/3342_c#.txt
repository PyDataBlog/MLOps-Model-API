

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class UpdateTimeEntry : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the UpdateTimeEntry entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateTimeEntry()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateTimeEntry(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.UpdateTimeEntry> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdateTimeEntry_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UpdateTimeEntry_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int TPRESOURCEALLOCATIONID
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.TPRESOURCEALLOCATIONID);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.TPRESOURCEALLOCATIONID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TPRESOURCEALLOCATIONID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TPRESOURCEALLOCATIONID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TPRESOURCEALLOCATIONID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ResourceID
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ResourceID);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ResourceID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ResourceID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ResourceID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ResourceID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedBuildStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedBuildStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedBuildStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedBuildStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedBuildStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedBuildStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedBuildEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedBuildEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedBuildEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedBuildEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedBuildEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedBuildEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualBuildStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualBuildStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualBuildStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualBuildStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualBuildStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualBuildStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualBuildEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualBuildEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualBuildEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualBuildEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualBuildEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualBuildEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedTestStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedTestStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedTestStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedTestStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedTestStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedTestStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedTestEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedTestEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedTestEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedTestEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedTestEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedTestEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualTestStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualTestStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualTestStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualTestStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualTestStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualTestStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualTestEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualTestEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualTestEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualTestEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualTestEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualTestEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedImplementationStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedImplementationStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedImplementationStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedImplementationStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedImplementationStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedImplementationStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedImplementationEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedImplementationEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedImplementationEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedImplementationEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedImplementationEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedImplementationEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualImplementationStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualImplementationStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualImplementationStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualImplementationStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualImplementationStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualImplementationStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualImplementationEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualImplementationEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualImplementationEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualImplementationEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualImplementationEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualImplementationEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedPostImplementationStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedPostImplementationStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedPostImplementationStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedPostImplementationStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedPostImplementationStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedPostImplementationStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> PlannedPostImplementationEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedPostImplementationEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedPostImplementationEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedPostImplementationEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedPostImplementationEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PlannedPostImplementationEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualPostImplementationStartDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualPostImplementationStartDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualPostImplementationStartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualPostImplementationStartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualPostImplementationStartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualPostImplementationStartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualPostImplementationEndDate
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualPostImplementationEndDate);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualPostImplementationEndDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualPostImplementationEndDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualPostImplementationEndDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualPostImplementationEndDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> AllocationBuild
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationBuild);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationBuild, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationBuild_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationBuild_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationBuild_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> AllocationTest
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationTest);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationTest, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationTest_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationTest_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationTest_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> AllocationImplementation
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationImplementation);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationImplementation, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationImplementation_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationImplementation_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationImplementation_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<double> AllocationPostImplementation
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationPostImplementation);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationPostImplementation, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationPostImplementation_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationPostImplementation_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AllocationPostImplementation_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInsert
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.IsInsert);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.IsInsert, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInsert_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInsert_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInsert_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.GetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.SetValue(this, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.UpdateTimeEntry,
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass,
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.IImplementation,
                global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass>.Entry
                __UpdateTimeEntryEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass>.Entry(
                    global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.__UpdateTimeEntry_CreateNew,
                    global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.__UpdateTimeEntry_Created,
                    global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.__UpdateTimeEntry_AllowSaveWithErrors);
            private static global::LightSwitchApplication.UpdateTimeEntry __UpdateTimeEntry_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.UpdateTimeEntry> es)
            {
                return new global::LightSwitchApplication.UpdateTimeEntry(es);
            }
            private static void __UpdateTimeEntry_Created(global::LightSwitchApplication.UpdateTimeEntry e)
            {
                e.UpdateTimeEntry_Created();
            }
            private static bool __UpdateTimeEntry_AllowSaveWithErrors(global::LightSwitchApplication.UpdateTimeEntry e)
            {
                bool result = false;
                e.UpdateTimeEntry_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int> TPRESOURCEALLOCATIONID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.TPRESOURCEALLOCATIONID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>> ResourceID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ResourceID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedBuildStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedBuildStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedBuildEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedBuildEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualBuildStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualBuildStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualBuildEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualBuildEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedTestStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedTestStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedTestEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedTestEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualTestStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualTestStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualTestEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualTestEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedImplementationStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedImplementationStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedImplementationEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedImplementationEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualImplementationStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualImplementationStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualImplementationEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualImplementationEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedPostImplementationStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedPostImplementationStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> PlannedPostImplementationEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.PlannedPostImplementationEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualPostImplementationStartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualPostImplementationStartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualPostImplementationEndDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ActualPostImplementationEndDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>> AllocationBuild
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationBuild) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>> AllocationTest
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationTest) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>> AllocationImplementation
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationImplementation) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>> AllocationPostImplementation
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.AllocationPostImplementation) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>> IsInsert
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.IsInsert) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, byte[]>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new int TPRESOURCEALLOCATIONID { get; set; }
                new global::System.Nullable<int> ResourceID { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedBuildStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedBuildEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualBuildStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualBuildEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedTestStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedTestEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualTestStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualTestEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedImplementationStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedImplementationEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualImplementationStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualImplementationEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedPostImplementationStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> PlannedPostImplementationEndDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualPostImplementationStartDate { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualPostImplementationEndDate { get; set; }
                new global::System.Nullable<double> AllocationBuild { get; set; }
                new global::System.Nullable<double> AllocationTest { get; set; }
                new global::System.Nullable<double> AllocationImplementation { get; set; }
                new global::System.Nullable<double> AllocationPostImplementation { get; set; }
                new global::System.Nullable<int> IsInsert { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Entry
                    TPRESOURCEALLOCATIONID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Entry(
                        "TPRESOURCEALLOCATIONID",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._TPRESOURCEALLOCATIONID_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._TPRESOURCEALLOCATIONID_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._TPRESOURCEALLOCATIONID_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._TPRESOURCEALLOCATIONID_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._TPRESOURCEALLOCATIONID_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._TPRESOURCEALLOCATIONID_OnValueChanged);
                private static void _TPRESOURCEALLOCATIONID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._TPRESOURCEALLOCATIONID, sf);
                }
                private static bool _TPRESOURCEALLOCATIONID_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.TPRESOURCEALLOCATIONID_IsReadOnly(ref result);
                    return result;
                }
                private static void _TPRESOURCEALLOCATIONID_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TPRESOURCEALLOCATIONID_Validate(r);
                }
                private static int _TPRESOURCEALLOCATIONID_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.TPRESOURCEALLOCATIONID;
                }
                private static void _TPRESOURCEALLOCATIONID_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, int v)
                {
                    d.ImplementationEntity.TPRESOURCEALLOCATIONID = v;
                }
                private static void _TPRESOURCEALLOCATIONID_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.TPRESOURCEALLOCATIONID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Entry
                    ResourceID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ResourceID",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ResourceID_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ResourceID_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ResourceID_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ResourceID_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ResourceID_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ResourceID_OnValueChanged);
                private static void _ResourceID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ResourceID, sf);
                }
                private static bool _ResourceID_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ResourceID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ResourceID_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ResourceID_Validate(r);
                }
                private static global::System.Nullable<int> _ResourceID_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ResourceID;
                }
                private static void _ResourceID_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ResourceID = v;
                }
                private static void _ResourceID_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ResourceID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedBuildStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedBuildStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildStartDate_OnValueChanged);
                private static void _PlannedBuildStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedBuildStartDate, sf);
                }
                private static bool _PlannedBuildStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedBuildStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedBuildStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedBuildStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedBuildStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedBuildStartDate;
                }
                private static void _PlannedBuildStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedBuildStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedBuildStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedBuildStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedBuildEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedBuildEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedBuildEndDate_OnValueChanged);
                private static void _PlannedBuildEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedBuildEndDate, sf);
                }
                private static bool _PlannedBuildEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedBuildEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedBuildEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedBuildEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedBuildEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedBuildEndDate;
                }
                private static void _PlannedBuildEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedBuildEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedBuildEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedBuildEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualBuildStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualBuildStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildStartDate_OnValueChanged);
                private static void _ActualBuildStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualBuildStartDate, sf);
                }
                private static bool _ActualBuildStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualBuildStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualBuildStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualBuildStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualBuildStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualBuildStartDate;
                }
                private static void _ActualBuildStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualBuildStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualBuildStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualBuildStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualBuildEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualBuildEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualBuildEndDate_OnValueChanged);
                private static void _ActualBuildEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualBuildEndDate, sf);
                }
                private static bool _ActualBuildEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualBuildEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualBuildEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualBuildEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualBuildEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualBuildEndDate;
                }
                private static void _ActualBuildEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualBuildEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualBuildEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualBuildEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedTestStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedTestStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestStartDate_OnValueChanged);
                private static void _PlannedTestStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedTestStartDate, sf);
                }
                private static bool _PlannedTestStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedTestStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedTestStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedTestStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedTestStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedTestStartDate;
                }
                private static void _PlannedTestStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedTestStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedTestStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedTestStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedTestEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedTestEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedTestEndDate_OnValueChanged);
                private static void _PlannedTestEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedTestEndDate, sf);
                }
                private static bool _PlannedTestEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedTestEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedTestEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedTestEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedTestEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedTestEndDate;
                }
                private static void _PlannedTestEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedTestEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedTestEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedTestEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualTestStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualTestStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestStartDate_OnValueChanged);
                private static void _ActualTestStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualTestStartDate, sf);
                }
                private static bool _ActualTestStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualTestStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualTestStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualTestStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualTestStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualTestStartDate;
                }
                private static void _ActualTestStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualTestStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualTestStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualTestStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualTestEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualTestEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualTestEndDate_OnValueChanged);
                private static void _ActualTestEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualTestEndDate, sf);
                }
                private static bool _ActualTestEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualTestEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualTestEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualTestEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualTestEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualTestEndDate;
                }
                private static void _ActualTestEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualTestEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualTestEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualTestEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedImplementationStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedImplementationStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationStartDate_OnValueChanged);
                private static void _PlannedImplementationStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedImplementationStartDate, sf);
                }
                private static bool _PlannedImplementationStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedImplementationStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedImplementationStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedImplementationStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedImplementationStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedImplementationStartDate;
                }
                private static void _PlannedImplementationStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedImplementationStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedImplementationStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedImplementationStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedImplementationEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedImplementationEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedImplementationEndDate_OnValueChanged);
                private static void _PlannedImplementationEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedImplementationEndDate, sf);
                }
                private static bool _PlannedImplementationEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedImplementationEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedImplementationEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedImplementationEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedImplementationEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedImplementationEndDate;
                }
                private static void _PlannedImplementationEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedImplementationEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedImplementationEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedImplementationEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualImplementationStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualImplementationStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationStartDate_OnValueChanged);
                private static void _ActualImplementationStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualImplementationStartDate, sf);
                }
                private static bool _ActualImplementationStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualImplementationStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualImplementationStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualImplementationStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualImplementationStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualImplementationStartDate;
                }
                private static void _ActualImplementationStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualImplementationStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualImplementationStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualImplementationStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualImplementationEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualImplementationEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualImplementationEndDate_OnValueChanged);
                private static void _ActualImplementationEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualImplementationEndDate, sf);
                }
                private static bool _ActualImplementationEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualImplementationEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualImplementationEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualImplementationEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualImplementationEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualImplementationEndDate;
                }
                private static void _ActualImplementationEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualImplementationEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualImplementationEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualImplementationEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedPostImplementationStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedPostImplementationStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationStartDate_OnValueChanged);
                private static void _PlannedPostImplementationStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedPostImplementationStartDate, sf);
                }
                private static bool _PlannedPostImplementationStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedPostImplementationStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedPostImplementationStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedPostImplementationStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedPostImplementationStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedPostImplementationStartDate;
                }
                private static void _PlannedPostImplementationStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedPostImplementationStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedPostImplementationStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedPostImplementationStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    PlannedPostImplementationEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "PlannedPostImplementationEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._PlannedPostImplementationEndDate_OnValueChanged);
                private static void _PlannedPostImplementationEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._PlannedPostImplementationEndDate, sf);
                }
                private static bool _PlannedPostImplementationEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.PlannedPostImplementationEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _PlannedPostImplementationEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PlannedPostImplementationEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _PlannedPostImplementationEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.PlannedPostImplementationEndDate;
                }
                private static void _PlannedPostImplementationEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.PlannedPostImplementationEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _PlannedPostImplementationEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.PlannedPostImplementationEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualPostImplementationStartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualPostImplementationStartDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationStartDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationStartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationStartDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationStartDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationStartDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationStartDate_OnValueChanged);
                private static void _ActualPostImplementationStartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualPostImplementationStartDate, sf);
                }
                private static bool _ActualPostImplementationStartDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualPostImplementationStartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualPostImplementationStartDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualPostImplementationStartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualPostImplementationStartDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualPostImplementationStartDate;
                }
                private static void _ActualPostImplementationStartDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualPostImplementationStartDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualPostImplementationStartDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualPostImplementationStartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualPostImplementationEndDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualPostImplementationEndDate",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationEndDate_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationEndDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationEndDate_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationEndDate_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationEndDate_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ActualPostImplementationEndDate_OnValueChanged);
                private static void _ActualPostImplementationEndDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualPostImplementationEndDate, sf);
                }
                private static bool _ActualPostImplementationEndDate_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ActualPostImplementationEndDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualPostImplementationEndDate_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualPostImplementationEndDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualPostImplementationEndDate_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualPostImplementationEndDate;
                }
                private static void _ActualPostImplementationEndDate_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualPostImplementationEndDate = global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.TruncateDate(v);
                }
                private static void _ActualPostImplementationEndDate_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ActualPostImplementationEndDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry
                    AllocationBuild = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry(
                        "AllocationBuild",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationBuild_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationBuild_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationBuild_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationBuild_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationBuild_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationBuild_OnValueChanged);
                private static void _AllocationBuild_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._AllocationBuild, sf);
                }
                private static bool _AllocationBuild_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.AllocationBuild_IsReadOnly(ref result);
                    return result;
                }
                private static void _AllocationBuild_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AllocationBuild_Validate(r);
                }
                private static global::System.Nullable<double> _AllocationBuild_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.AllocationBuild;
                }
                private static void _AllocationBuild_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.AllocationBuild = v;
                }
                private static void _AllocationBuild_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.AllocationBuild_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry
                    AllocationTest = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry(
                        "AllocationTest",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationTest_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationTest_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationTest_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationTest_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationTest_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationTest_OnValueChanged);
                private static void _AllocationTest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._AllocationTest, sf);
                }
                private static bool _AllocationTest_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.AllocationTest_IsReadOnly(ref result);
                    return result;
                }
                private static void _AllocationTest_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AllocationTest_Validate(r);
                }
                private static global::System.Nullable<double> _AllocationTest_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.AllocationTest;
                }
                private static void _AllocationTest_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.AllocationTest = v;
                }
                private static void _AllocationTest_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.AllocationTest_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry
                    AllocationImplementation = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry(
                        "AllocationImplementation",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationImplementation_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationImplementation_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationImplementation_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationImplementation_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationImplementation_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationImplementation_OnValueChanged);
                private static void _AllocationImplementation_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._AllocationImplementation, sf);
                }
                private static bool _AllocationImplementation_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.AllocationImplementation_IsReadOnly(ref result);
                    return result;
                }
                private static void _AllocationImplementation_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AllocationImplementation_Validate(r);
                }
                private static global::System.Nullable<double> _AllocationImplementation_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.AllocationImplementation;
                }
                private static void _AllocationImplementation_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.AllocationImplementation = v;
                }
                private static void _AllocationImplementation_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.AllocationImplementation_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry
                    AllocationPostImplementation = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Entry(
                        "AllocationPostImplementation",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationPostImplementation_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationPostImplementation_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationPostImplementation_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationPostImplementation_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationPostImplementation_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._AllocationPostImplementation_OnValueChanged);
                private static void _AllocationPostImplementation_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._AllocationPostImplementation, sf);
                }
                private static bool _AllocationPostImplementation_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.AllocationPostImplementation_IsReadOnly(ref result);
                    return result;
                }
                private static void _AllocationPostImplementation_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AllocationPostImplementation_Validate(r);
                }
                private static global::System.Nullable<double> _AllocationPostImplementation_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.AllocationPostImplementation;
                }
                private static void _AllocationPostImplementation_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<double> v)
                {
                    d.ImplementationEntity.AllocationPostImplementation = v;
                }
                private static void _AllocationPostImplementation_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.AllocationPostImplementation_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInsert = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInsert",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._IsInsert_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._IsInsert_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._IsInsert_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._IsInsert_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._IsInsert_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._IsInsert_OnValueChanged);
                private static void _IsInsert_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInsert, sf);
                }
                private static bool _IsInsert_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.IsInsert_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInsert_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInsert_Validate(r);
                }
                private static global::System.Nullable<int> _IsInsert_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInsert;
                }
                private static void _IsInsert_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInsert = v;
                }
                private static void _IsInsert_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.IsInsert_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.UpdateTimeEntry.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.UpdateTimeEntry e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.UpdateTimeEntry.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.UpdateTimeEntry e)
                {
                    e.RowVersion_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, int>.Data _TPRESOURCEALLOCATIONID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Data _ResourceID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedBuildStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedBuildEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualBuildStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualBuildEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedTestStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedTestEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualTestStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualTestEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedImplementationStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedImplementationEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualImplementationStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualImplementationEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedPostImplementationStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _PlannedPostImplementationEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualPostImplementationStartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualPostImplementationEndDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data _AllocationBuild;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data _AllocationTest;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data _AllocationImplementation;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<double>>.Data _AllocationPostImplementation;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<int>>.Data _IsInsert;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UpdateTimeEntry, global::LightSwitchApplication.UpdateTimeEntry.DetailsClass, byte[]>.Data _RowVersion;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class APPLICATION1 : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the APPLICATION1 entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public APPLICATION1()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public APPLICATION1(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.APPLICATION1> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.APPLICATION1.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void APPLICATION1_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void APPLICATION1_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public short ApplicationID
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ApplicationID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.APPLICATION1.DetailsClass.SetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.CreatedBy);
            }
            set
            {
                global::LightSwitchApplication.APPLICATION1.DetailsClass.SetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.CreatedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.CreatedDate);
            }
            set
            {
                global::LightSwitchApplication.APPLICATION1.DetailsClass.SetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.CreatedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ModifiedBy);
            }
            set
            {
                global::LightSwitchApplication.APPLICATION1.DetailsClass.SetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ModifiedBy, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ModifiedDate);
            }
            set
            {
                global::LightSwitchApplication.APPLICATION1.DetailsClass.SetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ModifiedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.REF_TECHNOLOGY REF_TECHNOLOGY
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.REF_TECHNOLOGY);
            }
            set
            {
                global::LightSwitchApplication.APPLICATION1.DetailsClass.SetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.REF_TECHNOLOGY, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void REF_TECHNOLOGY_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void REF_TECHNOLOGY_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void REF_TECHNOLOGY_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.TP_APPLICATION> TP_APPLICATIONs
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetValue(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.TP_APPLICATIONs);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.TP_APPLICATION> TP_APPLICATIONsQuery
        {
            get
            {
                return global::LightSwitchApplication.APPLICATION1.DetailsClass.GetQuery(this, global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.TP_APPLICATIONs);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.APPLICATION1,
                global::LightSwitchApplication.APPLICATION1.DetailsClass,
                global::LightSwitchApplication.APPLICATION1.DetailsClass.IImplementation,
                global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ApplicationID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass>.Entry
                __APPLICATION1Entry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass>.Entry(
                    global::LightSwitchApplication.APPLICATION1.DetailsClass.__APPLICATION1_CreateNew,
                    global::LightSwitchApplication.APPLICATION1.DetailsClass.__APPLICATION1_Created,
                    global::LightSwitchApplication.APPLICATION1.DetailsClass.__APPLICATION1_AllowSaveWithErrors);
            private static global::LightSwitchApplication.APPLICATION1 __APPLICATION1_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.APPLICATION1> es)
            {
                return new global::LightSwitchApplication.APPLICATION1(es);
            }
            private static void __APPLICATION1_Created(global::LightSwitchApplication.APPLICATION1 e)
            {
                e.APPLICATION1_Created();
            }
            private static bool __APPLICATION1_AllowSaveWithErrors(global::LightSwitchApplication.APPLICATION1 e)
            {
                bool result = false;
                e.APPLICATION1_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, short> ApplicationID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ApplicationID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, short>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>> CreatedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.CreatedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>> ModifiedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.ModifiedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.REF_TECHNOLOGY> REF_TECHNOLOGY
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.REF_TECHNOLOGY) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.REF_TECHNOLOGY>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.TP_APPLICATION> TP_APPLICATIONs
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.TP_APPLICATIONs) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.TP_APPLICATION>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new short ApplicationID { get; }
                new string Name { get; set; }
                new string CreatedBy { get; set; }
                new global::System.Nullable<global::System.DateTime> CreatedDate { get; set; }
                new string ModifiedBy { get; set; }
                new global::System.Nullable<global::System.DateTime> ModifiedDate { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation REF_TECHNOLOGY { get; set; }
                new global::System.Collections.IEnumerable TP_APPLICATIONs { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, short>.Entry
                    ApplicationID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, short>.Entry(
                        "ApplicationID",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ApplicationID_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ApplicationID_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ApplicationID_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ApplicationID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ApplicationID_OnValueChanged);
                private static void _ApplicationID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, short>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._ApplicationID, sf);
                }
                private static bool _ApplicationID_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.ApplicationID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ApplicationID_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ApplicationID_Validate(r);
                }
                private static short _ApplicationID_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.ApplicationID;
                }
                private static void _ApplicationID_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.ApplicationID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedBy_SetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CreatedBy = v;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    CreatedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "CreatedDate",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedDate_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedDate_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedDate_GetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedDate_SetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._CreatedDate_OnValueChanged);
                private static void _CreatedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedDate, sf);
                }
                private static bool _CreatedDate_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.CreatedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedDate_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _CreatedDate_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedDate;
                }
                private static void _CreatedDate_SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.CreatedDate = global::LightSwitchApplication.APPLICATION1.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _CreatedDate_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.CreatedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedBy_SetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ModifiedBy = v;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ModifiedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ModifiedDate",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedDate_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedDate_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedDate_GetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedDate_SetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._ModifiedDate_OnValueChanged);
                private static void _ModifiedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedDate, sf);
                }
                private static bool _ModifiedDate_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.ModifiedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedDate_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ModifiedDate_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedDate;
                }
                private static void _ModifiedDate_SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ModifiedDate = global::LightSwitchApplication.APPLICATION1.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _ModifiedDate_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.ModifiedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.REF_TECHNOLOGY>.Entry
                    REF_TECHNOLOGY = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.REF_TECHNOLOGY>.Entry(
                        "REF_TECHNOLOGY",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_ComputeIsReadOnly,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_Validate,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_GetCoreImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_GetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_SetImplementationValue,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_Refresh,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._REF_TECHNOLOGY_OnValueChanged);
                private static void _REF_TECHNOLOGY_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.REF_TECHNOLOGY>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._REF_TECHNOLOGY, sf);
                }
                private static bool _REF_TECHNOLOGY_ComputeIsReadOnly(global::LightSwitchApplication.APPLICATION1 e)
                {
                    bool result = false;
                    e.REF_TECHNOLOGY_IsReadOnly(ref result);
                    return result;
                }
                private static void _REF_TECHNOLOGY_Validate(global::LightSwitchApplication.APPLICATION1 e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.REF_TECHNOLOGY_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _REF_TECHNOLOGY_GetCoreImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.REF_TECHNOLOGY;
                }
                private static global::LightSwitchApplication.REF_TECHNOLOGY _REF_TECHNOLOGY_GetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.REF_TECHNOLOGY, global::LightSwitchApplication.REF_TECHNOLOGY.DetailsClass>(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.REF_TECHNOLOGY, ref d._REF_TECHNOLOGY);
                }
                private static void _REF_TECHNOLOGY_SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass d, global::LightSwitchApplication.REF_TECHNOLOGY v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.REF_TECHNOLOGY, ref d._REF_TECHNOLOGY, (i, ev) => i.REF_TECHNOLOGY = ev, v);
                }
                private static void _REF_TECHNOLOGY_Refresh(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.REF_TECHNOLOGY, ref d._REF_TECHNOLOGY);
                }
                private static void _REF_TECHNOLOGY_OnValueChanged(global::LightSwitchApplication.APPLICATION1 e)
                {
                    e.REF_TECHNOLOGY_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.TP_APPLICATION>.Entry
                    TP_APPLICATIONs = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.TP_APPLICATION>.Entry(
                        "TP_APPLICATIONs",
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._TP_APPLICATIONs_Stub,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._TP_APPLICATIONs_GetReferencedEntities,
                        global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties._TP_APPLICATIONs_GetEntityCollection);
                private static void _TP_APPLICATIONs_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.APPLICATION1.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.TP_APPLICATION>.Data> c, global::LightSwitchApplication.APPLICATION1.DetailsClass d, object sf)
                {
                    c(d, ref d._TP_APPLICATIONs, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TP_APPLICATION> _TP_APPLICATIONs_GetReferencedEntities(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.TP_APPLICATION, global::LightSwitchApplication.TP_APPLICATION.DetailsClass>(global::LightSwitchApplication.APPLICATION1.DetailsClass.PropertySetProperties.TP_APPLICATIONs, ref d._TP_APPLICATIONs);
                }
                private static global::System.Collections.IEnumerable _TP_APPLICATIONs_GetEntityCollection(global::LightSwitchApplication.APPLICATION1.DetailsClass d)
                {
                    return d.ImplementationEntity.TP_APPLICATIONs;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, short>.Data _ApplicationID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _CreatedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ModifiedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.REF_TECHNOLOGY>.Data _REF_TECHNOLOGY;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.APPLICATION1, global::LightSwitchApplication.APPLICATION1.DetailsClass, global::LightSwitchApplication.TP_APPLICATION>.Data _TP_APPLICATIONs;
            
        }
    
        #endregion
    }
    
    #endregion
}
