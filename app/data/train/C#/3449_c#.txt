//This file is part of DictCCApp.
//
//DictCCApp is free software: you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//DictCCApp is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//
//You should have received a copy of the GNU General Public License
//along with DictCCApp.  If not, see <http://www.gnu.org/licenses/>.
using DictCCApp.Domain;
using System;
using System.Collections.Generic;

namespace DictCCApp.Services
{
    /// <summary>
    /// this is a very weak cache
    /// 
    /// </summary>
    internal class IndexCache
    {
        private Dictionary<string, WeakReference<WordSearchIndex>> _cache = new Dictionary<string, WeakReference<WordSearchIndex>>();

        public WordSearchIndex GetIndex(string filename)
        {
            if (_cache.ContainsKey(filename))
            {
                WordSearchIndex index;
                if (_cache[filename].TryGetTarget(out index))
                {
                    return index;
                }
                _cache.Remove(filename);
                return null;
            }
            return null;
        }

        public void AddIndex(string filename,WordSearchIndex index)
        {
            if (_cache.ContainsKey(filename))
            {
                _cache[filename] = new WeakReference<WordSearchIndex>(index);
            } else
            {
                _cache.Add(filename, new WeakReference<WordSearchIndex>(index));
            }
        }
    }
}
