//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(UnityEngine.Font.FontTextureRebuildCallback), factory.UnityEngine_Font_FontTextureRebuildCallback);
		dict.Add(typeof(System.Action<UnityEngine.Font>), factory.System_Action_UnityEngine_Font);
		dict.Add(typeof(System.Predicate<UnityEngine.UILineInfo>), factory.System_Predicate_UnityEngine_UILineInfo);
		dict.Add(typeof(System.Action<UnityEngine.UILineInfo>), factory.System_Action_UnityEngine_UILineInfo);
		dict.Add(typeof(System.Comparison<UnityEngine.UILineInfo>), factory.System_Comparison_UnityEngine_UILineInfo);
		dict.Add(typeof(ZipTool.DelegateZipCall), factory.ZipTool_DelegateZipCall);
		dict.Add(typeof(System.AsyncCallback), factory.System_AsyncCallback);
		dict.Add(typeof(ToLuaFramework.DelegateThreadFunc), factory.ToLuaFramework_DelegateThreadFunc);
		dict.Add(typeof(ToLuaFramework.DelegateThreadFuncCb), factory.ToLuaFramework_DelegateThreadFuncCb);
		dict.Add(typeof(System.Predicate<object>), factory.System_Predicate_object);
		dict.Add(typeof(System.Action<object>), factory.System_Action_object);
		dict.Add(typeof(System.Comparison<object>), factory.System_Comparison_object);
		dict.Add(typeof(Delegate_SocketEvent), factory.Delegate_SocketEvent);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<UnityEngine.Font.FontTextureRebuildCallback>.Init(factory.UnityEngine_Font_FontTextureRebuildCallback);
		DelegateTraits<System.Action<UnityEngine.Font>>.Init(factory.System_Action_UnityEngine_Font);
		DelegateTraits<System.Predicate<UnityEngine.UILineInfo>>.Init(factory.System_Predicate_UnityEngine_UILineInfo);
		DelegateTraits<System.Action<UnityEngine.UILineInfo>>.Init(factory.System_Action_UnityEngine_UILineInfo);
		DelegateTraits<System.Comparison<UnityEngine.UILineInfo>>.Init(factory.System_Comparison_UnityEngine_UILineInfo);
		DelegateTraits<ZipTool.DelegateZipCall>.Init(factory.ZipTool_DelegateZipCall);
		DelegateTraits<System.AsyncCallback>.Init(factory.System_AsyncCallback);
		DelegateTraits<ToLuaFramework.DelegateThreadFunc>.Init(factory.ToLuaFramework_DelegateThreadFunc);
		DelegateTraits<ToLuaFramework.DelegateThreadFuncCb>.Init(factory.ToLuaFramework_DelegateThreadFuncCb);
		DelegateTraits<System.Predicate<object>>.Init(factory.System_Predicate_object);
		DelegateTraits<System.Action<object>>.Init(factory.System_Action_object);
		DelegateTraits<System.Comparison<object>>.Init(factory.System_Comparison_object);
		DelegateTraits<Delegate_SocketEvent>.Init(factory.Delegate_SocketEvent);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.Check_UnityEngine_RectTransform_ReapplyDrivenProperties);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<UnityEngine.Font.FontTextureRebuildCallback>.Init(factory.Check_UnityEngine_Font_FontTextureRebuildCallback);
		TypeTraits<System.Action<UnityEngine.Font>>.Init(factory.Check_System_Action_UnityEngine_Font);
		TypeTraits<System.Predicate<UnityEngine.UILineInfo>>.Init(factory.Check_System_Predicate_UnityEngine_UILineInfo);
		TypeTraits<System.Action<UnityEngine.UILineInfo>>.Init(factory.Check_System_Action_UnityEngine_UILineInfo);
		TypeTraits<System.Comparison<UnityEngine.UILineInfo>>.Init(factory.Check_System_Comparison_UnityEngine_UILineInfo);
		TypeTraits<ZipTool.DelegateZipCall>.Init(factory.Check_ZipTool_DelegateZipCall);
		TypeTraits<System.AsyncCallback>.Init(factory.Check_System_AsyncCallback);
		TypeTraits<ToLuaFramework.DelegateThreadFunc>.Init(factory.Check_ToLuaFramework_DelegateThreadFunc);
		TypeTraits<ToLuaFramework.DelegateThreadFuncCb>.Init(factory.Check_ToLuaFramework_DelegateThreadFuncCb);
		TypeTraits<System.Predicate<object>>.Init(factory.Check_System_Predicate_object);
		TypeTraits<System.Action<object>>.Init(factory.Check_System_Action_object);
		TypeTraits<System.Comparison<object>>.Init(factory.Check_System_Comparison_object);
		TypeTraits<Delegate_SocketEvent>.Init(factory.Check_Delegate_SocketEvent);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Push = factory.Push_UnityEngine_RectTransform_ReapplyDrivenProperties;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<UnityEngine.Font.FontTextureRebuildCallback>.Push = factory.Push_UnityEngine_Font_FontTextureRebuildCallback;
		StackTraits<System.Action<UnityEngine.Font>>.Push = factory.Push_System_Action_UnityEngine_Font;
		StackTraits<System.Predicate<UnityEngine.UILineInfo>>.Push = factory.Push_System_Predicate_UnityEngine_UILineInfo;
		StackTraits<System.Action<UnityEngine.UILineInfo>>.Push = factory.Push_System_Action_UnityEngine_UILineInfo;
		StackTraits<System.Comparison<UnityEngine.UILineInfo>>.Push = factory.Push_System_Comparison_UnityEngine_UILineInfo;
		StackTraits<ZipTool.DelegateZipCall>.Push = factory.Push_ZipTool_DelegateZipCall;
		StackTraits<System.AsyncCallback>.Push = factory.Push_System_AsyncCallback;
		StackTraits<ToLuaFramework.DelegateThreadFunc>.Push = factory.Push_ToLuaFramework_DelegateThreadFunc;
		StackTraits<ToLuaFramework.DelegateThreadFuncCb>.Push = factory.Push_ToLuaFramework_DelegateThreadFuncCb;
		StackTraits<System.Predicate<object>>.Push = factory.Push_System_Predicate_object;
		StackTraits<System.Action<object>>.Push = factory.Push_System_Action_object;
		StackTraits<System.Comparison<object>>.Push = factory.Push_System_Comparison_object;
		StackTraits<Delegate_SocketEvent>.Push = factory.Push_Delegate_SocketEvent;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }

        LuaState state = remove.func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                state.DelayDispose(ld.self);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action), L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Events.UnityAction), L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<int>), L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<int>), L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<int>), L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Func<int,int>), L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Camera.CameraCallback), L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LowMemoryCallback), L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Application.LogCallback), L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMReaderCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.AsyncOperation>), L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Font_FontTextureRebuildCallback_Event : LuaDelegate
	{
		public UnityEngine_Font_FontTextureRebuildCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Font_FontTextureRebuildCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Font.FontTextureRebuildCallback UnityEngine_Font_FontTextureRebuildCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Font.FontTextureRebuildCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Font_FontTextureRebuildCallback_Event target = new UnityEngine_Font_FontTextureRebuildCallback_Event(func);
			UnityEngine.Font.FontTextureRebuildCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Font_FontTextureRebuildCallback_Event target = new UnityEngine_Font_FontTextureRebuildCallback_Event(func, self);
			UnityEngine.Font.FontTextureRebuildCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Font_FontTextureRebuildCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(UnityEngine.Font.FontTextureRebuildCallback), L, pos);
	}

	void Push_UnityEngine_Font_FontTextureRebuildCallback(IntPtr L, UnityEngine.Font.FontTextureRebuildCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Font_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Font_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Font_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Font param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Font param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Font> System_Action_UnityEngine_Font(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Font> fn = delegate(UnityEngine.Font param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Font_Event target = new System_Action_UnityEngine_Font_Event(func);
			System.Action<UnityEngine.Font> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Font_Event target = new System_Action_UnityEngine_Font_Event(func, self);
			System.Action<UnityEngine.Font> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Font(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.Font>), L, pos);
	}

	void Push_System_Action_UnityEngine_Font(IntPtr L, System.Action<UnityEngine.Font> o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_UnityEngine_UILineInfo_Event : LuaDelegate
	{
		public System_Predicate_UnityEngine_UILineInfo_Event(LuaFunction func) : base(func) { }
		public System_Predicate_UnityEngine_UILineInfo_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(UnityEngine.UILineInfo param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(UnityEngine.UILineInfo param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<UnityEngine.UILineInfo> System_Predicate_UnityEngine_UILineInfo(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<UnityEngine.UILineInfo> fn = delegate(UnityEngine.UILineInfo param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_UnityEngine_UILineInfo_Event target = new System_Predicate_UnityEngine_UILineInfo_Event(func);
			System.Predicate<UnityEngine.UILineInfo> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_UnityEngine_UILineInfo_Event target = new System_Predicate_UnityEngine_UILineInfo_Event(func, self);
			System.Predicate<UnityEngine.UILineInfo> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_UnityEngine_UILineInfo(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<UnityEngine.UILineInfo>), L, pos);
	}

	void Push_System_Predicate_UnityEngine_UILineInfo(IntPtr L, System.Predicate<UnityEngine.UILineInfo> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_UILineInfo_Event : LuaDelegate
	{
		public System_Action_UnityEngine_UILineInfo_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_UILineInfo_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.UILineInfo param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.UILineInfo param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.UILineInfo> System_Action_UnityEngine_UILineInfo(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.UILineInfo> fn = delegate(UnityEngine.UILineInfo param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_UILineInfo_Event target = new System_Action_UnityEngine_UILineInfo_Event(func);
			System.Action<UnityEngine.UILineInfo> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_UILineInfo_Event target = new System_Action_UnityEngine_UILineInfo_Event(func, self);
			System.Action<UnityEngine.UILineInfo> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_UILineInfo(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<UnityEngine.UILineInfo>), L, pos);
	}

	void Push_System_Action_UnityEngine_UILineInfo(IntPtr L, System.Action<UnityEngine.UILineInfo> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_UnityEngine_UILineInfo_Event : LuaDelegate
	{
		public System_Comparison_UnityEngine_UILineInfo_Event(LuaFunction func) : base(func) { }
		public System_Comparison_UnityEngine_UILineInfo_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(UnityEngine.UILineInfo param0, UnityEngine.UILineInfo param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(UnityEngine.UILineInfo param0, UnityEngine.UILineInfo param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<UnityEngine.UILineInfo> System_Comparison_UnityEngine_UILineInfo(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<UnityEngine.UILineInfo> fn = delegate(UnityEngine.UILineInfo param0, UnityEngine.UILineInfo param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_UnityEngine_UILineInfo_Event target = new System_Comparison_UnityEngine_UILineInfo_Event(func);
			System.Comparison<UnityEngine.UILineInfo> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_UnityEngine_UILineInfo_Event target = new System_Comparison_UnityEngine_UILineInfo_Event(func, self);
			System.Comparison<UnityEngine.UILineInfo> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_UnityEngine_UILineInfo(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<UnityEngine.UILineInfo>), L, pos);
	}

	void Push_System_Comparison_UnityEngine_UILineInfo(IntPtr L, System.Comparison<UnityEngine.UILineInfo> o)
	{
		ToLua.Push(L, o);
	}

	class ZipTool_DelegateZipCall_Event : LuaDelegate
	{
		public ZipTool_DelegateZipCall_Event(LuaFunction func) : base(func) { }
		public ZipTool_DelegateZipCall_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public ZipTool.DelegateZipCall ZipTool_DelegateZipCall(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			ZipTool.DelegateZipCall fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			ZipTool_DelegateZipCall_Event target = new ZipTool_DelegateZipCall_Event(func);
			ZipTool.DelegateZipCall d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			ZipTool_DelegateZipCall_Event target = new ZipTool_DelegateZipCall_Event(func, self);
			ZipTool.DelegateZipCall d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_ZipTool_DelegateZipCall(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(ZipTool.DelegateZipCall), L, pos);
	}

	void Push_ZipTool_DelegateZipCall(IntPtr L, ZipTool.DelegateZipCall o)
	{
		ToLua.Push(L, o);
	}

	class System_AsyncCallback_Event : LuaDelegate
	{
		public System_AsyncCallback_Event(LuaFunction func) : base(func) { }
		public System_AsyncCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(System.IAsyncResult param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(System.IAsyncResult param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.AsyncCallback System_AsyncCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.AsyncCallback fn = delegate(System.IAsyncResult param0) { };
			return fn;
		}

		if(!flag)
		{
			System_AsyncCallback_Event target = new System_AsyncCallback_Event(func);
			System.AsyncCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_AsyncCallback_Event target = new System_AsyncCallback_Event(func, self);
			System.AsyncCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_AsyncCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.AsyncCallback), L, pos);
	}

	void Push_System_AsyncCallback(IntPtr L, System.AsyncCallback o)
	{
		ToLua.Push(L, o);
	}

	class ToLuaFramework_DelegateThreadFunc_Event : LuaDelegate
	{
		public ToLuaFramework_DelegateThreadFunc_Event(LuaFunction func) : base(func) { }
		public ToLuaFramework_DelegateThreadFunc_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public ToLuaFramework.DelegateThreadFunc ToLuaFramework_DelegateThreadFunc(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			ToLuaFramework.DelegateThreadFunc fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			ToLuaFramework_DelegateThreadFunc_Event target = new ToLuaFramework_DelegateThreadFunc_Event(func);
			ToLuaFramework.DelegateThreadFunc d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			ToLuaFramework_DelegateThreadFunc_Event target = new ToLuaFramework_DelegateThreadFunc_Event(func, self);
			ToLuaFramework.DelegateThreadFunc d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_ToLuaFramework_DelegateThreadFunc(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(ToLuaFramework.DelegateThreadFunc), L, pos);
	}

	void Push_ToLuaFramework_DelegateThreadFunc(IntPtr L, ToLuaFramework.DelegateThreadFunc o)
	{
		ToLua.Push(L, o);
	}

	class ToLuaFramework_DelegateThreadFuncCb_Event : LuaDelegate
	{
		public ToLuaFramework_DelegateThreadFuncCb_Event(LuaFunction func) : base(func) { }
		public ToLuaFramework_DelegateThreadFuncCb_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public ToLuaFramework.DelegateThreadFuncCb ToLuaFramework_DelegateThreadFuncCb(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			ToLuaFramework.DelegateThreadFuncCb fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			ToLuaFramework_DelegateThreadFuncCb_Event target = new ToLuaFramework_DelegateThreadFuncCb_Event(func);
			ToLuaFramework.DelegateThreadFuncCb d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			ToLuaFramework_DelegateThreadFuncCb_Event target = new ToLuaFramework_DelegateThreadFuncCb_Event(func, self);
			ToLuaFramework.DelegateThreadFuncCb d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_ToLuaFramework_DelegateThreadFuncCb(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(ToLuaFramework.DelegateThreadFuncCb), L, pos);
	}

	void Push_ToLuaFramework_DelegateThreadFuncCb(IntPtr L, ToLuaFramework.DelegateThreadFuncCb o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_object_Event : LuaDelegate
	{
		public System_Predicate_object_Event(LuaFunction func) : base(func) { }
		public System_Predicate_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<object> System_Predicate_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<object> fn = delegate(object param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_object_Event target = new System_Predicate_object_Event(func);
			System.Predicate<object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_object_Event target = new System_Predicate_object_Event(func, self);
			System.Predicate<object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Predicate<object>), L, pos);
	}

	void Push_System_Predicate_object(IntPtr L, System.Predicate<object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_object_Event : LuaDelegate
	{
		public System_Action_object_Event(LuaFunction func) : base(func) { }
		public System_Action_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(object param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(object param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<object> System_Action_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<object> fn = delegate(object param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_object_Event target = new System_Action_object_Event(func);
			System.Action<object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_object_Event target = new System_Action_object_Event(func, self);
			System.Action<object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Action<object>), L, pos);
	}

	void Push_System_Action_object(IntPtr L, System.Action<object> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_object_Event : LuaDelegate
	{
		public System_Comparison_object_Event(LuaFunction func) : base(func) { }
		public System_Comparison_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(object param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(object param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<object> System_Comparison_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<object> fn = delegate(object param0, object param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_object_Event target = new System_Comparison_object_Event(func);
			System.Comparison<object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_object_Event target = new System_Comparison_object_Event(func, self);
			System.Comparison<object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(System.Comparison<object>), L, pos);
	}

	void Push_System_Comparison_object(IntPtr L, System.Comparison<object> o)
	{
		ToLua.Push(L, o);
	}

	class Delegate_SocketEvent_Event : LuaDelegate
	{
		public Delegate_SocketEvent_Event(LuaFunction func) : base(func) { }
		public Delegate_SocketEvent_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, ByteBuffer param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, ByteBuffer param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Delegate_SocketEvent Delegate_SocketEvent(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Delegate_SocketEvent fn = delegate(int param0, ByteBuffer param1) { };
			return fn;
		}

		if(!flag)
		{
			Delegate_SocketEvent_Event target = new Delegate_SocketEvent_Event(func);
			Delegate_SocketEvent d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Delegate_SocketEvent_Event target = new Delegate_SocketEvent_Event(func, self);
			Delegate_SocketEvent d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Delegate_SocketEvent(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType(typeof(Delegate_SocketEvent), L, pos);
	}

	void Push_Delegate_SocketEvent(IntPtr L, Delegate_SocketEvent o)
	{
		ToLua.Push(L, o);
	}

}

