#!/bin/bash

#set -o xtrace
#This script use for generate gamegrop of 
#blew function is used to generate xml for virtualhost
#create asher 20150114
#modifyed 20151130 add two line and diffirent infrastraction game
#modifyed change to No Pxe Pc game intall  , used direct change disk


basepath=$(dirname "$(readlink -f "$0")") #绝对路径

#DATE=`date +%Y%m%d`
DATE=`date "+%Y%m%d%H%M"`
#DATE=`date +%Y_%m_%d_%H_%M`
RESULTS=/export/works/createvhost
INSTALLPATH=/export/tmp
PATHFILE=${INSTALLPATH}/$DATE

mkdir -p $RESULTS > /dev/null
mkdir -p $INSTALLPATH > /dev/null    
mkdir -p $PATHFILE > /dev/null    

VhostImage=/export/VirMachines #宿主机上虚拟机的磁盘文件位置
InforForCMDB=$PATHFILE/ForImportCMDB_${DATE}.csv #此文件用于生成导入cmdb的信息
XMLPATH=${basepath}/NoPxePcGame/XML
PathImag=/export/idcs/kvm_img/
#PathImag=/export/KVM_IMG

function Coloer()
{
## just some color 
YS='\033[0m'
YSr='\033[31m' #red
YSg='\033[32m' #green
YSy='\033[33m' #yellow
YSbl='\033[34m' #blue
YSp='\033[35m' #purple
YSsb='\033[36m' #sky blue
YSw='\033[37m' #white
YSwbk='\033[40;37m' #white on black
YSwr='\033[41;37m' #white on red
YSwg='\033[42;37m' #white on green
YSwy='\033[43;37m' #white on yellow
YSwbe='\033[44;37m' #white on blue
YSwp='\033[45;37m' #white on purple
YSwp='\033[46;37m' #white on purple
YSbkw='\033[47;30m' #black  on white
}

function GenerateXml()
{
yes | /bin/cp $XMLPATH/M_MODEL.xml $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
VHOST=`echo v_${GroupName}_${gameserver}`
UUID1=`uuidgen`
MAC1=`python -c "from virtinst.util import randomMAC;print randomMAC(type='qemu')"`
FMAC=`echo $MAC1 |awk -F: '{print $1":"$2":"$3":"$4":"$5}'`
LMAC=`echo $MAC1 |awk -F: '{print $6}'`
NUM16=`echo $((16#$LMAC))`
if [ $NUM16 = "255" ]
then
 GenerateXml
fi
REMAC=`echo $[$NUM16 + 1]`
LMAC2=`printf "%02x" $REMAC`
MAC2=${FMAC}":"${LMAC2}
sed -i "s/TVHOST/$VHOST/g" $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
sed -i "s/TUUID1/$UUID1/g" $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
sed -i "s/TMAC1/$MAC1/g" $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
sed -i "s/TMAC2/$MAC2/g" $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
sed -i "s/MEMORY/$VMEMORY/g" $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
sed -i "s/VNCIP/$WNIP/g"  $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml
if [ $NUM16 = "255" ]
then
 GenerateXml
fi
}

function EditImg()
{
#eth1 1 ip address and eth0 1 ip  if 2 ipress on eth1 ,this function cant do it.
/usr/bin/guestfish -a $PATHFILE/$WNIP/v_${GroupName}_${gameserver}_root.img -i <<EOF
glob rm-rf /etc/sysconfig/network-scripts/ifcfg-eth*
glob rm-rf /etc/sysconfig/network-scripts/route-*
glob rm-rf /etc/openvpn/*254*
write /etc/hosts "127.0.0.1       localhost.localdomain localhost\n${GroupIP}.254    manager\n${GroupIP}.11     game1\n${GroupIP}.31     database\n${GroupIP}.32     backup\n"
write /etc/udev/rules.d/70-persistent-net.rules ""
write /etc/sysconfig/network "NETWORKING=yes\nHOSTNAME=${gameserver}\n"
write /etc/sysconfig/network-scripts/ifcfg-eth0 "DEVICE=eth0\nBOOTPROTO=static\nONBOOT=yes\nADDRESS=$MAC1\nIPADDR=${NIP1}\nNETMASK=255.255.255.0\nTYPE=Ethernet\n"
write /etc/sysconfig/network-scripts/ifcfg-eth1 "DEVICE=eth1\nBOOTPROTO=static\nONBOOT=yes\nADDRESS=$MAC2\nIPADDR=${asher1}\nNETMASK=${asher2}\nGATEWAY=${asher3}\n"
EOF
}

function EditBkImg()
{
#just for two ip address on eth1
/usr/bin/guestfish -a $PATHFILE/$WNIP/v_${GroupName}_${gameserver}_root.img -i <<EOF
glob rm-rf /etc/openvpn/*254*
glob rm-rf /etc/sysconfig/network-scripts/ifcfg-eth*
write /etc/hosts "127.0.0.1       localhost.localdomain localhost\n${GroupIP}.254    manager\n${GroupIP}.11     game1\n${GroupIP}.31     database\n${GroupIP}.32     backup\n"
write /etc/udev/rules.d/70-persistent-net.rules " "
write /etc/sysconfig/network "NETWORKING=yes\nHOSTNAME=${gameserver}\n"
write /etc/sysconfig/network-scripts/ifcfg-eth0 "DEVICE=eth0\nBOOTPROTO=static\nONBOOT=yes\nADDRESS=$MAC1\nIPADDR=${NIP1}\nNETMASK=255.255.255.0\nTYPE=Ethernet\n"
write /etc/sysconfig/network-scripts/ifcfg-eth1 "DEVICE=eth1\nBOOTPROTO=static\nONBOOT=yes\nADDRESS=$MAC2\nIPADDR=${asher1}\nNETMASK=${asher2}\nGATEWAY=${asher3}\n"
write /etc/sysconfig/network-scripts/ifcfg-${ETH} "DEVICE=eth1:1\nBOOTPROTO=static\nONBOOT=yes\nADDRESS=$MAC2\nIPADDR=${asher4}\nNETMASK=${asher2}\n"
EOF
}

function DoDisk () 
{
     if [ "$gameserver" = 'backup' ]
        then
    	if [ "$OS_ver" = '4.8' ]
		then
	   	ETH=eth1\.1 
	else
	   	ETH=eth1\:1 
	fi
	asher1=$WIP2
	asher2=${GMASK}
	asher3=${GGATEWAY}
	asher4=$WIP3
	EditBkImg
     elif [ "$gameserver" = 'manager' ]
		then
		asher1=$WIP1
		asher2=${GMASK}
		asher3=${GGATEWAY}
		EditImg
     elif [ "$Line" = '2' ] 
       then
       	if [ "$gameserver" = 'game1' ]
		then
    	    if [ "$OS_ver" = '4.8' ]
		        then
	   	            ETH=eth1\.1 
            	else
	   	            ETH=eth1\:1 
	        fi
			asher1=${ANWIP}
			asher2=${ANGMASK}
			asher3=${ANGATEWAY}
        	asher4=$${ANWIP2}
        	EditBkImg
			EditImg
       		else
			asher1=0
			asher2=0
			asher3=0
			EditImg
        fi
     else
	asher1=0
	asher2=0
	asher3=0
	EditImg
     fi
}


#get stg from phycical server
function GetStg()
{
	S1=`/usr/bin/ssh  -p$Port_SSH $WNIP "dmidecode | grep 'Serial Number' | head -n1 |awk -F: '{print $2}'"`
	STG=`echo $S1 | awk '{print $3}'`
    ssh -p$Port_SSH $WNIP "mkdir -p $VhostImage"
}


#use for update to asset platform
function Makexls()
{
	if [ "$gameserver" = 'manager' ]
		then
        printf "%s,%s,6,%s,\"/dev/vda1|/|100G,/dev/vdb|/export|500G\",%s,\"\"\"游戏\"\"\",CentOS release %s,64,3.4.95.R620.CentOS6.5-x86_64.OpenBeta.KVM,\"\"\"是\"\"\",\"eth0|%s|%s,eth1|%s|%s\" \n" $STG $UUID1 $VMEMORY $gameserver $OS_ver $MAC1 $NIP1 $MAC2 $WWIPS >> $InforForCMDB
       elif [ "$gameserver" = 'backup' ]
                then
                printf "%s,%s,6,%s,\"/dev/vda|/|500G\",%s,\"\"\"游戏\"\"\",CentOS release %s,64,3.4.95.R620.CentOS6.5-x86_64.OpenBeta.KVM,\"\"\"是\"\"\",\"eth0|%s|%s,eth1|%s|%s,eth1:1|%s|%s\" \n" $STG $UUID1 $VMEMORY $gameserver $OS_ver  $MAC1 $NIP1 $MAC2 $WWIPS $MAC2 $WWIPS1 >> $InforForCMDB
        elif [ "$Line" = '2' ]
            then
                if [ "$gameserver" = 'game1' ]
                    then
                printf "%s,%s,6,%s,\"/dev/vda|/|500G\",%s,\"\"\"游戏\"\"\",CentOS release %s,64,3.4.95.R620.CentOS6.5-x86_64.OpenBeta.KVM,\"\"\"是\"\"\",\"eth0|%s|%s,eth1|%s|%s,eth1:1|%s|%s\" \n" $STG $UUID1 $VMEMORY $gameserver $OS_ver  $MAC1 $NIP1 $MAC2 $ANWIP $MAC2 $ANWIP2 >> $InforForCMDB
#        		printf "%s,%s,6,%s,\"/dev/vda1|/|100G,/dev/vdb|/export|500G\",%s,\"\"\"游戏\"\"\",CentOS release %s,64,3.4.95.R620.CentOS6.5-x86_64.OpenBeta.KVM,\"\"\"是\"\"\",\"eth0|%s|%s,eth1|%s|%s\" \n" $STG $UUID1 $VMEMORY $gameserver $OS_ver  $MAC1 $NIP1 $MAC2 $ANWIP >> $InforForCMDB
		else 
		printf "%s,%s,6,%s,\"/dev/vda|/|300G\",%s,\"\"\"游戏\"\"\",CentOS release %s,64,3.4.95.R620.CentOS6.5-x86_64.OpenBeta.KVM,\"\"\"是\"\"\",\"eth0|%s|%s\" \n" $STG $UUID1 $VMEMORY $gameserver $OS_ver  $MAC1 $NIP1 >> $InforForCMDB
                 fi
       else
        printf "%s,%s,6,%s,\"/dev/vda|/|300G\",%s,\"\"\"游戏\"\"\",CentOS release %s,64,3.4.95.R620.CentOS6.5-x86_64.OpenBeta.KVM,\"\"\"是\"\"\",\"eth0|%s|%s\" \n" $STG $UUID1 $VMEMORY $gameserver $OS_ver  $MAC1 $NIP1 >> $InforForCMDB
         fi
}
#copy virtual server xml to phycical server.
function SCopyXml()
	{
		scp -P $Port_SSH $PATHFILE/$WNIP/v_${GroupName}_$gameserver.xml $WNIP:/etc/libvirt/qemu/
	}

function StartVM()
	{
		ssh -p $Port_SSH $WNIP "virsh create  /etc/libvirt/qemu/v_${GroupName}_$gameserver.xml"
	}

function ScpDisk()
    {
       scp -P $Port_SSH $PATHFILE/$WNIP/v_${GroupName}_$gameserver*.img $WNIP:/${VhostImage}
       rm -f  $PATHFILE/$WNIP/v_${GroupName}_$gameserver*.img 
    }

function CopyDisk()
	{
	 if [ "$gameserver" = 'manager' ]
		then
		/bin/cp ${PathImag}/${ImgName}_manager_root.img  $PATHFILE/$WNIP/v_${GroupName}_${gameserver}_root.img
		/bin/cp ${PathImag}/${ImgName}_manager_export.img  $PATHFILE/$WNIP/v_${GroupName}_${gameserver}_export.img
		else
		/bin/cp ${PathImag}/${ImgName}_others_root.img  $PATHFILE/$WNIP/v_${GroupName}_${gameserver}_root.img
		/bin/cp ${PathImag}/${ImgName}_others_export.img  $PATHFILE/$WNIP/v_${GroupName}_${gameserver}_export.img
	fi
	}

function ChooseIMG()
	{
       echo  "选择要创建的虚拟机模板,并复制镜像名称"
	ALLIMG=`ls $PathImag  -l | grep img | awk '{print $9}' | grep -v '^$' | awk -F_ '{print $1"_"$2}' | uniq`
        echo  "${ALLIMG}"
        echo -n "请选择>:"
        read ImgName
        echo 
	}

function ChooseGW(){
    echo -e  "${YSg}根据选项选择或者输入网关:${YS}"
    select var in "$1.1" "$1.254" "others"
        do
        case $var in
        "$1.1")
            ;;
        "$1.254")
            ;;
        "others")
            echo -n -e "${YSg}please input gateway ip:${YS}"
            read var;;
        *)
            echo -e "${YSr}Wrong select${YS}"
            exit 0;;
    esac
    break
    done
    }

function ChooseMASK(){
    echo -e  "${YSg}根据选项选择或者输入掩码:${YS}"
    select var in "255.255.255.0" "255.255.255.128" "others"
        do
        case $var in
        "255.255.255.0")
            ;;
        "255.255.255.128")
            ;;
        "others")
            echo -n -e "${YSr}please input mask:>${YS}"
            read var;;
        *)
            echo "${YSr}Wrong select.${YS}"
            exit 0;;
    esac
    break
    done
    }


#generate  vhost xml for start and create vhost on each phycical host
#generate asset info use it to input cmdb



function Operate()
{
GetStg
GenerateXml
Makexls 
CopyDisk
DoDisk
SCopyXml
ScpDisk
sleep 2
StartVM
}

#main script start:
function SelectOS()
{
#echo -e "\t" "\e[0;33mInput Which GameServer,OS System and Network Line \e[00m"

    select var in "CentOS4.8" "CentOS5.7" "CentOS6.3" "CentOS6.4" "CentOS6.5" "Others"
    do
    case $var in 
    "CentOS4.8")
        OS_ver=4.8;;

    "CentOS5.7")
        OS_ver=5.7;;

    "CentOS6.3")
        OS_ver=6.3;;

    "CentOS6.4")
        OS_ver=6.4;;

    "CentOS6.5")
        OS_ver=6.5;;
    "Others")
        echo "Input the OS version"
        echo -e -n "${YSg}Just input number like${YS} ${YSr}4.8${YS}:"
        read OS_ver
        echo -e "${YSg}Your input OS system is:${YS} ${YSr} ${OS_ver}${YS}";;
    *)
        echo "Wrong Select"
        exit 0;;
    esac
    break
    done
}


function SelectGlobalIP()
{
# because some game group use game1 for it's anothers Global line, Tel or Unicom
# so this function use for this selection 
#. coloer.sh
#echo -e "${YSr}I'm red coloer${Cend}" 
echo -e   "${YSg}Select the Global ip if  game1 use a${YS} ${YSbl}diffent ip address with backup${YS}, select ${YSr}2 or 1${YS}>"
echo -e -n  "${YSg}多线还是单线${YS}, 单线选择2,单线选择1: ${YSr}2 or 1${YS}>"
read Line
### one line or two line must input below inforation before if 
echo  -e "${YSg}please input Global ip address like:${YS}${YSr} 123.234.456 10>${YS}"
echo -n -e "${YSg}输入manager、backup外网ip地址:${YS}${YSr} 123.234.456 10>${YS}"
read WIPD WP1 
WIP1=${WIPD}"."${WP1} 
((WP1++))
WIP2=${WIPD}"."${WP1}
((WP1++))
WIP3=${WIPD}"."${WP1}

echo "please select Globle ip netmask  address :"
echo  -e "虚拟机外网掩码:>"
ChooseMASK
GMASK=$var
echo "please select Globle ip  gateway address :"
echo -e "虚拟机外网网关:"
ChooseGW $WIPD
GGATEWAY=$var

######
#echo "Globle ip is :$WIP1,$WIP2,${WIP3}. mask:$GMASK,gateway:$GGATEWAY"
###
if [ "$Line" = "2" ]; then
    echo -e "${YSg}Please input Anothers Global ip and it's relation information${YS}"
    echo -e "${YSg}输入game1外网ip及其他相关信息${YS}"
    echo -n -e "${YSg}Input anothers globle ip for game1:${YS} ${YSwg} 211.100.255.1>${YS}"
    read  ANWIP
    echo -e -n "${YSr}Input ${ANWIP}'s Mask:>${YS}"
    echo  -e "虚拟机外网掩码:>"
    ChooseMASK
    ANGMASK=$var
    echo -e -n "${YSr}Input ${ANWIP} gateway:>${YS}"
    echo -e "虚拟机外网网关:"
    ANWIPPRE=`echo $ANWIP | awk -F. '{print $1"."$2"."$3}'`
    ANWIPPRES=`echo $ANWIP | awk -F. '{print $4}'`
    ChooseGW $ANWIPPRE
    ANWIP2=${ANWIPPRE}.$((ANWIPPRES + 1))
    ANGATEWAY=$var
fi
if [ "$Line" = "2" ]; then
    python -c  "print('*' * 50)"
    echo -e "${YSg}Globle ip is :${YS}${YSbkw}$WIP1,$WIP2,${WIP3}.${YS} mask:${YSbkw}$GMASK${YS},gateway:${YSbkw}$GGATEWAY${YS}"
    echo -e "${YSg}manager、backup外网ip:${YS}${YSbkw}$WIP1,$WIP2,${WIP3}.${YS} mask:${YSbkw}$GMASK${YS},gateway:${YSbkw}$GGATEWAY${YS}"
    python -c  "print('*' * 50)"
    echo -e "${YSg}Anothers line Global ip:${YS}${YSbkw}${ANWIP} 和 ${ANWIP2} ${YS} Mask:${YSbkw}${ANGMASK}${YS}.Gateway:${YSbkw}${ANGATEWAY}${YS}"
    echo -e "${YSg}game1外网 ip:${YS}${YSbkw}${ANWIP} 和 ${ANWIP2} ${YS} Mask:${YSbkw}${ANGMASK}${YS}.Gateway:${YSbkw}${ANGATEWAY}${YS}"
else
    python -c  "print('*' * 50)"
    echo -e "${YSg}Globle ip is :${YS}${YSbkw}$WIP1,$WIP2,${WIP3}.${YS} mask:${YSbkw}$GMASK${YS},gateway:${YSbkw}$GGATEWAY${YS}"
    echo -e "${YSg}manager、backup外网ip:${YS}${YSbkw}$WIP1,$WIP2,${WIP3}.${YS} mask:${YSbkw}$GMASK${YS},gateway:${YSbkw}$GGATEWAY${YS}"
fi
}
function ChooseSshPort(){
    echo -e  "${YSg}请输入管理机到宿主机的ssh端口:${YS}"
    select var in "22" "22222" "others port"
        do
        case $var in
        "22")
        Port_SSH=$var;;
        "22222")
        Port_SSH=$var;;
        "others port")
            echo -n -e "${YSr}please input your ssh port:>${YS}"
            read Port_SSH;;
        *)
            echo "${YSr}Wrong select.${YS}"
            exit 0;; 
    esac
    break
    done
    }   

function CmdbTitle()
    {
        echo  ams_st","os_st","os_cpu","os_memory","os_disk","os_hostname","os_purpose","os_os","os_os_bits","os_kernel","os_is_virtual","os_net > $InforForCMDB
    }

function Main()
{
# input the vhost host 
echo -e "${YSg}input PhycialHost ip address  in order to run virtul server${YS}"
echo -e "${YSg}输入运行虚拟机的的物理机的ip地址(内网):${YS}"
echo -e "${YSg}Input 2 PhycialServer Ip: ${YS}"
echo -e "${YSg}such as:${YS}${YSwg} 192.168.100.4${YS} ${YSbl}192.168.100.5:>${YS}"
echo -e -n "${YSg}输入2台内网ip地址，或者 输入2个一样的内网地址: ${YS}"
read PHOSTIP1 PHOSTIP2

/bin/mkdir -p $PATHFILE/$PHOSTIP1
/bin/mkdir -p $PATHFILE/$PHOSTIP2

echo  -e "${YSg}Input Group of virtual game server name and ip:${YS}${YSwg}wuxi100>${YS}"
echo -n -e "${YSg}输入虚拟机游戏组名称:${YS}${YSwg}wuxi100>${YS}"
#GroupName is the name of group fo this virtul host 	
read GroupName 

echo  -e "${YSg}Input Group of virtual game server's  ip:${YS}${YSwg}172.16.10>${YS}"
echo -n -e "${YSg}输入虚拟机组的内网ip段:${YS}${YSwg}172.16.10>${YS}"
#GroupName is the name of group fo this virtul host 	
read GroupIP

InforForCMDB=$RESULTS/${Date}_${GroupName}${GroupIP}${Date}_${PHOSTIP1}_${PHOSTIP2}_importCMDB.csv
echo -e "${YSr}please check you input info:${YS}"
echo -e "${YSr}请检查:${YS}"
python -c  "print('*' * 50)"
echo -e "${YSg}PhycialHost ip:${YS}${YSbl}$PHOSTIP1  $PHOSTIP2${YS}"
echo -e "${YSg}GroupName is  :${YS}${YSbl}$GroupName${YS}"
echo -e "${YSg}GroupIP  is   :${YS}${YSbl}$GroupIP${YS}"
python -c  "print('*' * 50)"
ChooseSshPort
}

function Choose(){
echo -e "${YSg}please check, if info is right yes or no${YS}"
echo -e -n "${YSwp}yes or no:$YS"
read  anser
python -c  "print('*' * 50)"
if [ "$anser" = "yes" ]
        then
	echo 
        else
        exit 0
fi
}

function Run()
{
GroupServer1='manager database backup game1'
GroupServer=$GroupServer1

CmdbTitle
for gameserver in $GroupServer
do

case $gameserver in 
manager)
{
VMEMORY='25165824'
NIP1=${GroupIP}"."254
echo $gameserver
echo $NIP1
WWIPS=$WIP1 #Global ip for this vhost
WNIP=`echo $PHOSTIP1`
Operate  #run 
}&
;;

game1)
{
VMEMORY='33554432'
echo $gameserver
NIP1=${GroupIP}"."11
echo $NIP1
WNIP=`echo $PHOSTIP2`
Operate #run 
}&
;;

database)
{
VMEMORY='33554432'
echo $gameserver
NIP1=${GroupIP}"."31
echo $NIP1
WNIP=`echo $PHOSTIP1`
Operate & #run 
}&
;;

backup)
{
VMEMORY='25165824'
echo $gameserver
NIP1=${GroupIP}"."32
echo $NIP1
WWIPS="$WIP2"
WWIPS1="$WIP3"
WNIP=`echo $PHOSTIP2`
Operate  #run 
}&
;;

esac
done
}
###################################everything is run #########################
Coloer # put Coloer in 
ChooseIMG
Main #input groupname and phycical server
SelectOS #choose which os 
SelectGlobalIP #input Global ip address
Choose # choose go and reinput
Run # main function  
echo "........................... 配置虚拟机脚本已在后台执行中，需等待3～5分钟多.................."
#GenerateInstallScript #generate instal script for pxe system install
#/bin/cp  $PATHFILE/${GroupName}.xml $INSTALLPATH
#cat $PATHFILE/virtinfo >>${INSTALLPATH}/virinfo
