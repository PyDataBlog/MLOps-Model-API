#!/bin/bash
# to get rid of MSDOS format do this to this file: sudo sed -i s/\\r//g ./filename
# or, open in nano, control-o and then then alt-M a few times to toggle msdos format off and then save

# updated the list of installed gear so this works if we also use it : https://github.com/DeadSix27/python_cross_compile_script
sudo apt-get install -y build-essential autoconf libtool-bin libtool gettext autopoint gyp gperf autogen pandoc 
sudo apt-get install -y subversion curl texinfo g++ bison flex cvs yasm automake ed gcc cmake git make pkg-config zlib1g-dev mercurial unzip pax wget ant
sudo apt-get install -y git-remote-hg libxslt1.1 libxml2 rake docbook-utils docbook-xsl docbook-to-man p7zip  
sudo apt-get install -y xsltproc 
#sudo apt-get remove -y nasm
sudo apt-get remove -y doxygen
# gendef is installed with mingw
sudo apt-get install -y libmozjs-dev libxmu-dev libgconf2-dev libdbus-1-dev network-manager-dev xserver-xorg-dev # for libproxy

cd ~/Desktop
sudo chmod 777 -R *

#------------------------------------------------------------------------------------------------
# 2017.05.26 x264 has a new dependency on nasm 2.13.1 or greater ... 
# before we do anything, build NASM if need be
set -x
if [[ ! -d "nasm-2.13.01" ]]; then
   echo "Downloading nasm 2.13.01"
   url="https://github.com/hydra3333/ffmpeg-windows-build-helpers-withOpenCL/blob/master/miscellaneous/nasm-2.13.01.tar.xz?raw=true"
   rm -f "nasm-2.13.01.tar.xz"
   curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' "$url" --retry 50 -L --output "nasm-2.13.01.tar.xz" --fail # -L means "allow redirection" or some odd :|
   tar -xf "nasm-2.13.01.tar.xz" || unzip "nasm-2.13.01.tar.xz"
   echo "Configuring nasm 2.13.01"
   cd nasm-2.13.01
      ./autogen.sh
      ./configure --prefix=/usr --exec_prefix=/usr --enable-sections --enable-lto 
      echo "Make nasm 2.13.01"
      make 
      echo "Installing nasm 2.13.01"
      sudo make install # sudo so it copies into /usr folder tree
   cd ..
   echo "Done Building and Installing nasm 2.13.01"
fi
set +x
#read -p "After nasm build, press Enter to continue"
#------------------------------------------------------------------------------------------------

cd ~/Desktop
sudo chmod 777 -R *
mkdir -v "ffmpeg-windows-build-helpers-withOpenCL-master"
cd ffmpeg-windows-build-helpers-withOpenCL-master
pwd

#rm -f ./cross_compile_ffmpeg-rdp-withOpenCL-v5-gcc7.1.0.sh
#curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/hydra3333/ffmpeg-windows-build-helpers-withOpenCL/master/cross_compile_ffmpeg-rdp-withOpenCL-v5-gcc7.1.0.sh -O --fail || exit 1
#sudo chmod 777 -R *

rm -f ./cross_compile_ffmpeg.rdp-mod004.sh
curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/hydra3333/ffmpeg-windows-build-helpers-withOpenCL/master/cross_compile_ffmpeg.rdp-mod004.sh -O --fail || exit 1
sudo chmod 777 -R *

sudo ./cross_compile_ffmpeg.rdp-mod004.sh --cflags='-mtune=generic -O3' --gcc-cpu-count=2 --sandbox-ok=y --build-ffmpeg-shared=n --build-ffmpeg-static=y --disable-nonfree=n --build-x264-with-libav=y --build-intel-qsv=y --build-libmxf=n --build-mp4box=y --build-mplayer=n --build-vlc=n --git-get-latest=y --prefer-stable=n --compiler-flavors=multi --enable-gpl=y --build-lsw=y --enable-opencl=y --high-bitdepth=y
exit
