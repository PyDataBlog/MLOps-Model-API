#!/bin/bash

# TODO: The file naming used here is the default of Motion, will fail if user changed that.
# TODO: The wildcard matching used here may produce bug when same event ID is exists.

set -e

# Set attachment file size limit to 20MB
ATTACHMENT_BYTES_LIMIT=20971520

EVENT=$1
IMAGE_FILE_BYTES=$(find . -name "${EVENT}-*.jpg" -ls | awk '{total += $7} END {print total}')
IMAGE_FILE_SIZE=$(numfmt --to=iec-i --suffix=B ${IMAGE_FILE_BYTES})
VIDEO_FILE_BYTES=$(find . -name "${EVENT}-*.mp4" -ls | awk '{total += $7} END {print total}')
VIDEO_FILE_SIZE=$(numfmt --to=iec-i --suffix=B ${VIDEO_FILE_BYTES})

TIMESTAMP=$(date)
END_TIME=$(date +"%s")
START_TIME=$(cat ${EVENT}-start-time.log)
DURATION=$((${END_TIME}-${START_TIME}))

SUBJECT="[ALARM] Motion detected at ${TIMESTAMP}"
BODY="Alarm time: ${TIMESTAMP}\n"
BODY="${BODY}Event duration: $((${DURATION} / 60)) minutes and $((${DURATION} % 60)) seconds\n"
BODY="${BODY}Video size generated by this event (ID: ${EVENT}) is: ${VIDEO_FILE_SIZE}\n"

# Exit with a brief message if e-mail notification is disabled
if [ -z "${MAILTO}" ]; then
    echo -n "${BODY}"
    exit 0
fi

# Send e-mail
if [ "${VIDEO_FILE_BYTES}" -lt "${ATTACHMENT_BYTES_LIMIT}" ]; then
    # Select a random image as the preview of video
    PREVIEW=$(files=(${EVENT}-*.jpg); printf "%s" "${files[RANDOM % ${#files[@]}]}")
    # Attach the video and the preview image
    ATTACHMENT="${PREVIEW} ${EVENT}-*.mp4"
    echo -e "${BODY}" | mutt ${MAILTO} -s "${SUBJECT}" -a ${ATTACHMENT}
else
    BODY="${BODY}File size is too big for a e-mail attachment, please check it out on the server.\n"
    echo -e "${BODY}" | mutt ${MAILTO} -s "${SUBJECT}"
fi

echo "Notification mail has been sent! (event: ${EVENT})"

rm -f ${EVENT}-start-time.log >/dev/null 2>&1
