<#   This is a program to create a checksum of a know good copy of Landesk Folders Checksums, once compared with the known 
good copy of the Files in C:\Program Files\LanDesk, it will check for variations in the folder, then copy over good copy of the 
files that are missing,( for the moment this is only good for x86 due to the lack of X64 VM's). The next step would be to re-register any 
of the DDL's that are missing/ Corrupt. This is not know at the time of these comments if this is the cause of the LDAV.Exe issues, however we can
assume that this program wouldn't hurt anthing.Also, this program will be taking advantage of hyperthreading, this is to help insure accuracy as 
well as minimize the load on one PID. Also, it will be a two part script, a list of the Hashes from a good configuration as the source. 
The second part will begin the cleaning process. 

RA 
#>



#*********************************************START OF PROGRAM**********************************************************




$filesrc = 'E:\LDav Clean'              #Clean copy of LDesk
$filedest = 'E:\LDAV BAD'                    #Bad copy of LDESK 
$A = Get-Content  'Path to bad hash' #Good Hash 
$B = Get-Content   'Path to Bad Hash'   #Bad hash
$ddl = 'C:\Windows\System32\'                  #Landesk Location/DDL location

#*********************************************Variables Above************************************************************
#********************************************Functions Below************************************************************8
    function hasher {
    dir $filesrc -Recurse |Get-FileHash | Export-Csv ''Path to good hash'' |FL HASH,PATH
    dir $filedest -Recurse |Get-FileHash | Export-Csv  "'Path to bad hash'"	|FL HASH, PATH
}
    

    function changes { 

    diff    -IncludeEqual $filesrc  $filedest | Export-Csv C:\Users\PATH TO HASH COMPARE\  # Comparing the Hashes 
    }



                function adder {        # Beginning the process of Repairing 
    
                if  ($A -eq $B) {Write-Host 'They are already equal to each other'}
    
                else { 
                Remove-Item -Confirm:$false -Recurse  $filedest  # Got to clean the destination of LDAV folder
              }
                }




  function ricoh { 
 Copy-Item -Recurse -Verbose $filesrc $filedest  #Copier Machine 
 }


#******************************************TEST FUNCTION*****************************************
 <# function data {   #FUNCTION TO DO DATa COMPARASION BEFORE EOL 
Get-FileHash $filesrc 
Start-Sleep -m 1000
Get-FileHash $filedest
}#>




function ddlsearch { 
 
 dir $ddl               #Code to Run the DDL search
  Get-ChildItem -Filter *.ddl

 }
 
#*******************************STARTING THE ACTUAL PROGRAM***************************************
 ##STARTING THE FUNCTIONS BELOW
hasher  #Starts Hasing Functin 
 Start-Sleep -m 10000  #Giving a break 
 #adder 
  changes 
 #Start-Sleep -m 1000
 
# ricoh 
# Start-sleep -m 1000 
 


#Write-Host 'Looks good to me' 
