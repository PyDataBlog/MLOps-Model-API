# Note: this script can only be run on a HUB/CAS server locally.  The Get-ExchangeCertificate cmdlet does not attach remotely.

Add-PSSnapin Microsoft.Exchange.Management.PowerShell.Admin
$cert_stats = get-exchangecertificate -DomainName usmail.chartindustries.com
$exp_date = [DateTime]$cert_stats.NotAfter
$today = [DateTime]::Today
$diff = $exp_date.Subtract($today)
$send_email = $false
if ($diff.Days -lt 60) {
    if ($diff.Days -ge 30) {
        # send alert weekly
        if ($diff.Days % 7 -eq 0) {
            # send email
            $send_email = $true
        }
    } else {
        # less than 30 days, send email daily
        $send_email = $true
    }
}
if ($send_email) {
    $smtp_server = "clehubcas01.chart-ind.local"
    $email_subject = "Hub/Cas SSL Certificate expires in " + $diff.Days + " days!"
    $email_body = "<html>`n<head>`n<body><p><p>usmail Exchange SSL Certificate expiring in <strong>" + $diff.Days + "</strong> days."
    $email_body += "<p>Certificate Details:</p>"
    $email_body += "<p><table border='1'><tr><td>DomainNames</td><td>" + $cert_stats.CertificateDomains + "</td><tr>"
    $email_body += "<tr><td>Issuer</td><td>" + $cert_stats.Issuer + "</td></tr>"
    $email_body += "<tr><td>Status</td><td>" + $cert_stats.Status + "</td></tr>"
    $email_body += "<tr><td>Expires on</td><td>" +$cert_stats.NotAfter + "</td></tr>"
    $email_body += "<tr><td>Thumbprint</td><td>" + $cert_stats.Thumbprint + "</td><tr></table></p>"
    $email_body += "<p>To see more information, log on to the HUB/CAS server and run this command in EMC: <b>Get-ExchangeCertificate -Thumbprint " + $cert_stats.Thumbprint + " | fl</b></p>"
    $email_body += "</body></html>"
    
    
    Send-MailMessage -SmtpServer $smtp_server -From "SCOM2012@chart-ind.local" -To "Erik.Pavelchak@chartindustries.com" -Cc "Nathaniel.Hauenstein@chartindustries.com" -Subject $email_subject -Body $email_body -BodyAsHtml
#    Send-MailMessage -SmtpServer $smtp_server -From "SCOM2012@chart-ind.local" -To "Kevin.Merolla@chartindustries.com" -Subject $email_subject -Body $email_body -BodyAsHtml
}