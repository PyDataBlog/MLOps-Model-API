#==============================================================================
#
#          FILE:  EnterNetwork.psm1
#         USAGE:  Import-Module EnterNetwork.psm1
#   DESCRIPTION:  Add a new network to QIP
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kevin Huntly <khuntly@mtb.com>
#       COMPANY:  M&T Bank Telecom Engineering
#       VERSION:  1.0
#       CREATED:  ---
#      REVISION:  ---
#==============================================================================

#=====  FUNCTION  =============================================================
#          NAME:  QIPEnterNetwork
#   DESCRIPTION:  Adds a new network to QIP
#    PARAMETERS:  A CSV file containing the network information to add
#       RETURNS:  0 regardless of result.
#==============================================================================
Function QIPEnterNetwork ([String] $INPUTFILE)
{
    If ($INPUTFILE -And (Test-Path $INPUTFILE))
    {
        $RETURNCODE = 0;
        $REJECTFILE = [System.IO.Path]::GetTempFileName();
        $ERRFILE = [System.IO.Path]::GetTempFileName();
        $STDOUTFILE = [System.IO.Path]::GetTempFileName();
        $STDERRFILE = [System.IO.Path]::GetTempFileName();
        $QIPARGS = "-g $LOGINSERVER -s $LOGINDBASE  -o `"$INTERNAL_ORG`" -f $INPUTFILE -r $REJECTFILE -e $ERRFILE";

        InvokeCommand "$QIPENTERNETWORK" "$QIPARGS" $true $true $true $true $STDOUTFILE $STDERRFILE;

        If (-Not $?)
        {
            Write-Host "Failed to add the new network. Please review the reject/error logs produced by QIP.";
            Write-Host "Additional information may be found In $STDOUTFILE and/or $STDERRFILE";

            $RETURNCODE = 1;
        }
    }
    Else
    {
        Write-Host "No input file was provided. Please ensure the file exists and can be read.";

        $RETURNCODE = 1;
    }

    If ($REJECTFILE) { Clear-Variable -Name REJECTFILE; }
    If ($ERRFILE) { Clear-Variable -Name ERRFILE; }
    If ($QIPARGS) { Clear-Variable -Name QIPARGS; }
    If ($INPUTFILE) { Clear-Variable -Name INPUTFILE; }
    If ($STDOUTFILE) { Clear-Variable -Name STDOUTFILE; }
    If ($STDERRFILE) { Clear-Variable -Name STDERRFILE; }

    Return $RETURNCODE;
}
