Function Get-FileName($initialDirectory)
{
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null
    
    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $OpenFileDialog.initialDirectory = $initialDirectory
    $OpenFileDialog.filter = "TXT (*.txt)| *.txt|CSV (*.csv)| *.csv"
    $OpenFileDialog.ShowDialog() | Out-Null
    $OpenFileDialog.filename
}


<#------------- CONNECT TO SWIS -------------#>
# load the snappin if it's not already loaded (step 1)
if (!(Get-PSSnapin | Where-Object { $_.Name -eq "SwisSnapin" })) {
    Add-PSSnapin "SwisSnapin"
}

#define target host and credentials

$hostname = 'mpswhaorionav'
#$user = "admin"
#$password = "password"
# create a connection to the SolarWinds API
#$swis = connect-swis -host $hostname -username $user -password $password -ignoresslerrors
$swis = Connect-Swis -Hostname $hostname -Trusted

<#------------- ACTUAL SCRIPT -------------#>


$PropertyToSet = "Caption"



"`nPlease provide the list of hostnames or IP address"
[void](Read-Host 'Press Enter to continue')
$header = 'Caption', 'IP_Address'


$inputfile = Get-FileName "D:\"
$csvFile = import-csv $inputfile -Header $header


$query = @"
select n.ip_address, n.uri, n.Caption
from orion.nodes n
"@
$Nodes = Get-SwisData $swis $query 



foreach ($line in $csvFile ) {
    
    $Uri = $nodes | where-object {$_.IP_Address -eq $line.IP_Address } | select-object -ExpandProperty Uri
    $PropertyValue = "$($line.Caption)"

    $propbag = @{
        "$PropertyToSet" = "$PropertyValue" ;
    }

    "Setting node: $($line.IP_Address) $PropertyToSet to $PropertyValue"
    Set-SwisObject -SwisConnection $swis -Uri $uri -properties $propbag  
}


