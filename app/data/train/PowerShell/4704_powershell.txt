


Param ($ParentDiskPath,$vmPath,$OSVHDX,$Unattendpath,$Assetspath)



$VMName = "CONTOSODC"

$ProgressPreference = "SilentlyContinue"
 


#Local Credential
$localCred = new-object -typename System.Management.Automation.PSCredential -argumentlist "Administrator", (ConvertTo-SecureString "Password01" -AsPlainText -Force)


#Create Virtual Machine
$date = Get-date
$msgtxt =  "$date : Creating ContosoDC VM Differencing Disks." 
Write-Host $msgtxt -ForegroundColor Cyan
$msgtxt | Out-File ($LogFilePath + "VMDeployment.log")  -Append -Force  
New-VHD -Differencing -ParentPath ($ParentDiskPath + $OSVHDX) -Path ($vmpath + $VMName + '\' + $VMName + '.vhdx') | Out-Null
New-VM -Name $VMName -VHDPath ($vmpath + $VMName + '\' + $VMName + '.vhdx') -Path ($vmpath + $VMName) -Generation 2 | Out-Null
Set-VMMemory -VMName $VMName -DynamicMemoryEnabled $true -StartupBytes 2GB -MaximumBytes 2GB -MinimumBytes 500MB | Out-Null
Remove-VMNetworkAdapter -VMName $VMName -Name "Network Adapter" | Out-Null
Add-VMNetworkAdapter -VMName $VMName -Name "Contoso" -SwitchName "vSwitch-Fabric" -DeviceNaming On | Out-Null
Set-VMProcessor -VMName $VMName -Count 2 | Out-Null
set-vm -Name $VMName -AutomaticStopAction TurnOff | Out-Null

#Inject Answer File
#MountVHDXFile
$date = Get-date
$msgtxt =  "$date : Mounting and Injecting Answer File into the $VMName VM." 
Write-Host $msgtxt -ForegroundColor Cyan
$msgtxt | Out-File ($LogFilePath + "VMDeployment.log")  -Append -Force 
New-Item -Path "C:\TempMount" -ItemType Directory | Out-Null
Mount-WindowsImage -Path "C:\TempMount" -Index 1 -ImagePath ($vmpath + $VMName + '\' + $VMName + '.vhdx') | Out-Null
Write-Host "Applying Unattend file to Disk Image..." -ForegroundColor Cyan
#Remove-Item -Path "C:\TempVMMMount\Windows\Panther\Unattend.xml"
New-Item -Path C:\TempMount\windows -ItemType Directory -Name Panther -Force | Out-Null
Copy-Item -Path $Unattendpath -Destination "C:\TempMount\Windows\Panther\Unattend.xml" | Out-Null
#Copy Backinfo
Copy-Item -Path $Assetspath\BACKINFO -Destination C:\TempMount -Recurse


$date = Get-date
$msgtxt =  "$date : Saving OS Customizations." 
Write-Host $msgtxt -ForegroundColor Cyan
$msgtxt | Out-File ($LogFilePath + "VMDeployment.log")  -Append -Force 
Dismount-WindowsImage -Path "C:\TempMount" -Save | Out-Null
Remove-Item "C:\TempMount"  | Out-Null

#Start Virtual Machine
$date = Get-date
$msgtxt =  "$date : Starting VM $VMName." 
Write-Host $msgtxt -ForegroundColor Cyan
$msgtxt | Out-File ($LogFilePath + "VMDeployment.log")  -Append -Force 
Start-VM -Name $VMName | Out-Null

while ((icm -VMName $VMName -Credential $localcred {"Test"} -ea SilentlyContinue) -ne "Test") {Sleep -Seconds 1}

#Wait until the VM is restarted

$date = Get-date
$msgtxt =  "$date : Configuring CONTOSODC VM and Installing Active Directory." 
Write-Host $msgtxt -ForegroundColor Cyan
$msgtxt | Out-File ($LogFilePath + "VMDeployment.log")  -Append -Force 

Invoke-Command -VMName $VMName -Credential $localCred -ScriptBlock {

$NIC = Get-NetAdapterAdvancedProperty -RegistryKeyWord "HyperVNetworkAdapterName" | where {$_.RegistryValue -eq "Contoso"}
Rename-NetAdapter -name $NIC.name -newname "Contoso" | Out-Null 
New-NetIPAddress -InterfaceAlias "Contoso" –IPAddress 192.168.1.254 -PrefixLength 24 -DefaultGateway 192.168.1.1 | Out-Null
Set-DnsClientServerAddress -InterfaceAlias “Contoso” -ServerAddresses 192.168.1.254 | Out-Null
Install-WindowsFeature -name AD-Domain-Services –IncludeManagementTools | Out-Null
$SecureString = ConvertTo-SecureString "Password01" -AsPlainText -Force
Write-Host "`n`n`n`n`n`n`nInstalling Active Directory..." -ForegroundColor Yellow
Install-ADDSForest -DomainName "contoso.com" -DomainMode WinThreshold -DatabasePath "c:\Domain" -InstallDns `
-DomainNetbiosName "contoso" -SafeModeAdministratorPassword $secureString `
-Confirm -Force -NoRebootOnCompletion | Out-Null


#Install BackInfo
New-Item -Path 'C:\Program Files (x86)\Backinfo' -ItemType Directory -Force | Out-Null
Copy-Item -Path 'C:\BackInfo\Shortcut to BackInfo.exe.lnk' -Destination 'C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp' -Force
Copy-Item -Path 'C:\BackInfo\BackInfo.exe' -Destination 'C:\Program Files (x86)\Backinfo' -Force
Copy-Item -Path 'C:\BackInfo\BackInfo.ini'  -Destination 'C:\Program Files (x86)\Backinfo' -Force
}

Get-VM $VMName | Stop-VM
Get-VM $VMName | Start-VM 

#Wait until DC is created and rebooted

$password = "Password01" | ConvertTo-SecureString -asPlainText -Force
$username = "contoso\administrator" 
$credential = New-Object System.Management.Automation.PSCredential($username,$password)


while ((icm -VMName $VMName -Credential $credential {(Get-ADDomainController contosodc).enabled} -ea SilentlyContinue) -ne $true) {Sleep -Seconds 1}

$date = Get-date
$msgtxt =  "$date : Configuring Accounts in Active Directory." 
Write-Host $msgtxt -ForegroundColor Cyan
$msgtxt | Out-File ($LogFilePath + "VMDeployment.log")  -Append -Force 

Invoke-Command -VMName $VMName -Credential $credential -ScriptBlock {

Set-ADDefaultDomainPasswordPolicy -ComplexityEnabled $false -Identity contoso.com  -MinPasswordLength 0
New-ADUser -Name "NC Admin" -GivenName NC -Surname Admin -SamAccountName NCAdmin -UserPrincipalName NCAdmin@contoso.com -AccountPassword $SecureString -Enabled $True -ChangePasswordAtLogo $False
New-ADUser -Name "NC Client" -GivenName NC -Surname Client -SamAccountName NCClient -UserPrincipalName NCClient@contoso.com -AccountPassword $SecureString -Enabled $True -ChangePasswordAtLogo $False

NEW-ADGroup –name “NCAdmins” –groupscope Global
NEW-ADGroup –name “NCClients” –groupscope Global

add-ADGroupMember "Domain Admins" "NCAdmin"
add-ADGroupMember "NCAdmins" "NCAdmin"
add-ADGroupMember "NCClients" "NCClient"
add-ADGroupMember "NCClients" "Administrator"
add-ADGroupMember "NCAdmins" "Administrator"
}


 

