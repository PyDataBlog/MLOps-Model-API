#==============================================================================
#
#          FILE:  QIP-ServiceManagement.psm1
#         USAGE:  Import-Module QIP-ServiceManagement.psm1
#   DESCRIPTION:  Address management functions for QIP
#
#       OPTIONS:  ---
#  REQUIREMENTS:  ---
#          BUGS:  ---
#         NOTES:  ---
#        AUTHOR:  Kevin Huntly <khuntly@mtb.com>
#       COMPANY:  M&T Bank Telecom Engineering
#       VERSION:  1.0
#       CREATED:  ---
#      REVISION:  ---
#==============================================================================

#=====  FUNCTION  =============================================================
#          NAME:  NightlyMaintenanceTasks
#   DESCRIPTION:  Removes addresses In use from QIP
#    PARAMETERS:  A list of the addresses to remove
#       RETURNS:  0 regardless of result.
#==============================================================================
Function EnterpriseNightlyMaintenanceTasks ()
{
    Write-Host "Beginning nightly maintenance process";

    ## stop and disable services
    StopServices "$QIPENTERPRISESVCS,$QIPTOMCATSVC";

    If (-Not $?)
    {
        Write-Host "Service stop FAILED. Please notify engineering.";

        Return 1;
    }

    DisableServices "$QIPENTERPRISESVCS,$QIPTOMCATSVC";

    ## start archives
    ArchiveExportData; If (-Not $?) { Write-Host "Failed to archive export zipfiles. Please notify engineering."; }
    ArchiveImportData; If (-Not $?) { Write-Host "Failed to archive import zipfiles. Please notify engineering."; }
    ClearAudit;

    If (-Not $?)
    {
        Write-Host "Failed to clear audit data. Please notify engineering.";

        Return 1;
    }

    QIPExportDatabase;

    If (-Not $?)
    {
        Write-Host "Failed to perform databse export. Please notify engineering.";

        Return 1;
    }

    ## start and enable services
    StartServices "$QIPENTERPRISESVCS";

    If (-Not $?)
    {
        Write-Host "Service start FAILED. Please notify engineering.";

        Return 1;
    }

    EnableServices "$QIPENTERPRISESVCS";

    ## run reports
    DHCPObjectReport; If (-Not $?) { Write-Host "Failed to execute DHCP object report. Please notify engineering."; }
    QIPReport; If (-Not $?) { Write-Host "Failed to execute QIP Object report. Please notify engineering."; }
    ShowTree; If (-Not $?) { Write-Host "Failed to execute free subnet report. Please notify engineering."; }

    ## run generations
    SiteGeneration; If (-Not $?) { Write-Host "Failed to execute Active Directory sites/services generation. Please notify engineering."; }
    DHCPGeneration; If (-Not $?) { Write-Host "Failed to execute DHCP server generation. Please notify engineering."; }
    DNSGeneration; If (-Not $?) { Write-Host "Failed to execute DNS server generation. Please notify engineering."; }

    ## restart tomcat
    StartServices "$QIPTOMCATSVC";

    If (-Not $?)
    {
        Write-Host "Failed to restart VitalQIP web services. Please notify engineering.";

        Return 1;
    }

    Return 0;
}

#=====  FUNCTION  =============================================================
#          NAME:  NightlyMaintenanceTasks
#   DESCRIPTION:  Removes addresses In use from QIP
#    PARAMETERS:  A list of the addresses to remove
#       RETURNS:  0 regardless of result.
#==============================================================================
Function RemoteNightlyMaintenanceTasks ()
{
    Write-Host "Beginning remote server nightly maintenance process";

    TempFileCleanup; If (-Not $?) { Write-Host "Failed to perform temp file cleanup. Please notify engineering."; Return 1; }
    JournalFileCleanup; If (-Not $?) { Write-Host "Failed to perform journal file cleanup. Please notify engineering."; Return 1; }

    Return 0;
}

#=====  FUNCTION  =============================================================
#          NAME:  WeeklyMaintenanceTasks
#   DESCRIPTION:  Adds a new network to QIP
#    PARAMETERS:  A list of the addresses to remove
#       RETURNS:  0 regardless of result.
#==============================================================================
Function WeeklyMaintenanceTasks ()
{
    Write-Host "Beginning weekly maintenance process";

    ## stop and disable services
    StopServices "$QIPENTERPRISESVCS,$QIPTOMCATSVC,$QIPDBSERVICE";

    If (-Not $?)
    {
        Write-Host "Service stop FAILED. Please notify engineering.";

        Return 1;
    }

    ## sleep for 15 seconds to allow quiet time
    Start-Sleep -s 15;

    ## restart database
    StartServices "$$QIPDBSERVICE";

    If (-Not $?)
    {
        Write-Host "Service start FAILED. Please notify engineering.";

        Return 1;
    }

    StartServices "$QIPENTERPRISESVCS,$QIPTOMCATSVC";

    If (-Not $?)
    {
        Write-Host "Service start FAILED. Please notify engineering.";

        Return 1;
    }

    Return 0;
}
