<#

  Title:	VM Storage Rescan
  Version:	1.0
  Author:	Will Longo (wlongo-nospam@longoconsulting.us)
  Purpose:	Rescan for storage after presenting new storage to a host on your Cluster.

  Usage: You must add the new storage to one of your hosts and then rescan the rest to make it available.

  Versioning:
    1.0 - Initial creation
#>
#requires -version 3.0
if ( (Get-PSSnapin | Where-Object { $_.Name -eq "VMware.VimAutomation.Core"}) -eq $null ){
	Add-PSSnapIn VMware.VimAutomation.Core}
###################Program
Function Program{
	#Export Credentials
	$credSuper = $Host.ui.PromptForCredential("VCenter Credentials","Enter your vcenter super account and password","","")
	if(!$credSuper){write-host "Cancelled by User!" -ForegroundColor Yellow -BackgroundColor Red;return}
	$cred = new-vicredentialstoreitem -host $vcserver -user $credSuper.UserName -Password $credSuper.GetNetworkCredential().password
	Connect-VIServer -server $cred.Host -user $cred.User -Password $cred.Password -wa 0
	#logic
	get-cluster | select Name | ft -autosize | out-default
	$vmcluster = read-host "What Cluster from the above list were you assigned?"
	$x = read-host "Do you wish to rescan HBA or VMFS?"
	$count = (get-cluster -name $vmcluster | get-vmhost).count
	$i=1
	$hostlist = (get-cluster -name $vmcluster | get-vmhost).name
	if($x -eq "VMFS")
	{
		#get-cluster -name $vmcluster | get-vmhost | Get-VMHostStorage -RescanVmfs
		foreach($hostX in $hostlist)
		{
			Write-Progress -Activity "Rescanning VMFS" -status "Scanning host $i of $count" -percentcomplete (($i / $count) * 100)
			Get-VMHostStorage -VMHost $hostX -RescanVmfs | out-null
			Write-Host $hostX " Completed"
			$i++
		}
	}
	elseif($x -eq "HBA")
	{
		#get-cluster -name $vmcluster | get-vmhost | Get-VMHostStorage -RescanAllHBA
		foreach($hostX in $hostlist)
		{
			Write-Progress -Activity "Rescanning VMFS" -status "Scanning host $i of $count" -percentcomplete (($i / $count) * 100)
			Get-VMHostStorage -VMHost $hostX -RescanAllHBA | out-null
			Write-Host $hostX " Completed"
			$i++
		}
	}
	else
	{
		Write-host "Invalid Selection";return
	}
	Disconnect-VIServer -Server $cred.host -Confirm:$False
	Remove-VICredentialStoreItem -user $cred.user -Confirm:$False
	write-host "Completed..."
}
###################End functions
###################Initial Stuff
Write-host "Will Longo's Mass Provisioning tool"
write-host ""
write-host "1 for nadcwpappvct04.hca.corpad.net"
write-host "2 for ordcwpappvct03.hca.corpad.net"
write-host "3 for sadcwpappvct01.hca.corpad.net"
write-host "4 for fwdcwpappvct03.hca.corpad.net"
write-host "5 for drdcwpappvct09.hca.corpad.net"
write-host "6 for mtdvwpappvct01.hca.corpad.net"
write-host "7 for nadcwlappvct02.hca.corpad.net"
$x = read-host "Select your vcenter by the number above"
if ($x -eq 1){$vcserver = "nadcwpappvct04.hca.corpad.net"}
elseif($x -eq 2){$vcserver = "ordcwpappvct03.hca.corpad.net"}
elseif($x -eq 3){$vcserver = "sadcwpappvct01.hca.corpad.net"}
elseif($x -eq 4){$vcserver = "fwdcwpappvct03.hca.corpad.net"}
elseif($x -eq 5){$vcserver = "drdcwpappvct09.hca.corpad.net"}
elseif($x -eq 6){$vcserver = "mtdvwpappvct01.hca.corpad.net"}
elseif($x -eq 7){$vcserver = "nadcwlappvct02.hca.corpad.net"}
else{Write-Host "Invalid Selection or server not added to script"}
Program