param([String] $ver)

$assemblyFile = "..\src\\PlugToolkit\Properties\AssemblyInfo.cs"
$nuspecFile = (Resolve-Path .\).Path + "\nuget\PlugToolkit.nuspec"

$regex= [System.Text.RegularExpressions.Regex]::Match($ver, "^(\d+\.)?(\d+\.)?(\*|\d+)$");

if (-not $regex.Success)
{
    write-host "version must have [major.minor.build] format" -ForegroundColor Red
    exit 1;
}


if(-not (Test-Path $nuspecFile))
{
    write-host "$nuspecFile is not found" -ForegroundColor Red
    exit 1
}

if(-not (Test-Path $assemblyFile))
{
    write-host "$assemblyFile is not found" -ForegroundColor Red
    exit 1
}


$XMLfile = New-Object -TypeName XML
$XMLfile.Load($nuspecFile)

$version = $XMLfile.package.metadata.version
Write-Host -Object "current version = $version"

if ($ver -eq "" -or $ver -eq [String]::Empty)
{
    [string]$major = $version.Split('.')[0]
    [string]$minor = $version.Split('.')[1]
    [string]$build = $version.Split('.')[2]
    [int]$intBuild = [convert]::ToInt32($build, 10) + 1
    $version = "$major.$minor.$intBuild"
}
else
{
    $version = $ver
}

Write-Host -Object "updating nuspec file with version number $version"

#Save the new version number
$XMLfile.package.metadata.version = $version

# set the file as read write and save
Set-ItemProperty ($nuspecFile) -Name IsReadOnly -Value $false
$XMLfile.save($nuspecFile)
write-host -object 'nuspec file updated' -ForegroundColor Green

[string]$major = $version.Split('.')[0]
$assemblyVersion = "$major.0.0.0"
$assemblyFileVersion = "$version.0"

$newAssemblyVersion = 'AssemblyVersion("' + $assemblyVersion + '")';
$newAssemblyFileVersion = 'AssemblyFileVersion("' + $assemblyFileVersion + '")';
  
Write-Host -object "updating assembly file with version number $assemblyVersion"
$tmpFile = $assemblyFile + ".tmp"

get-content $assemblyFile |
foreach-object{$_ -replace 'AssemblyVersion\("[0-9]+(\.([0-9]+|\*)){1,3}"\)', $newAssemblyVersion } |
foreach-object{$_ -replace 'AssemblyFileVersion\("[0-9]+(\.([0-9]+|\*)){1,3}"\)', $newAssemblyFileVersion }  > $TmpFile

move-item $tmpFile $assemblyFile -force
write-host -object 'assembly file updated' -ForegroundColor Green