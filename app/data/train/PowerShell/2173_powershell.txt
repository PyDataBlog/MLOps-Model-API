
<#------------- CONNECT TO SWIS -------------#>
# load the snappin if it's not already loaded (step 1)
if (!(Get-PSSnapin | Where-Object { $_.Name -eq "SwisSnapin" })) {
    Add-PSSnapin "SwisSnapin"
}

#define target host and credentials

$hostname = 'localhost'
#$user = "admin"
#$password = "password"
# create a connection to the SolarWinds API
#$swis = connect-swis -host $hostname -username $user -password $password -ignoresslerrors
$swis = Connect-Swis -Hostname $hostname -Trusted

<#------------- ACTUAL SCRIPT -------------#>

$Frequency = "300"

$query = @"
SELECT Containerid, Name, Owner, Frequency, StatusCalculator, Description, PollingEnabled
FROM Orion.Container
where frequency<300
"@
$Groups = Get-SwisData $swis $query 
  
# iterate through this list and update each group
foreach($Group in $Groups)  
    {  
    # write out which group we're working with
    "Working with node: $($Group.Name)..."
    Invoke-SwisVerb $swis "Orion.Container" "UpdateContainer" @(
    # group ID
    $Group.Containerid,

    # group name
    $Group.Name,

    # owner, must be 'Core'
    $Group.Owner,

    # refresh frequency
    $Frequency,

    # Status rollup mode:
    # 0 = Mixed status shows warning
    # 1 = Show worst status
    # 2 = Show best status
    $Group.StatusCalculator,

    # group description
    $Group.Description,

    # polling enabled/disabled = true/false (in lowercase)
    $Group.PollingEnabled
  ) | Out-Null
    }  
