# create a log file with this pattern -> NOT as xml. its like this:
# ERROR: Something went wrong
# INFO: Something happened
function log ($text) {
    try {
        # Add time to beginning of line
        $text = (get-date).ToShortTimeString() + " - " + $text
        # Add content to logfile
        Add-Content $log.Text $text
    } catch {
        # If no log file available, write to console
        write-host $text
    }
}

# import the xmlfile with the user names, if it is available
function import ($file) {
    log "INFO: Importing users"
    try{
        return [xml]$xml = Get-Content $file
    } catch {
        log "EROR: File couldn't be imported"
    }
}

# Connect to the Active Directory Server
function connect {
    log "INFO: Connecting to Active Directory"
    try{
        import-module activedirectory
        log "INFO: Imported ActiveDirectory Module"
        
    } catch {
    log "ERROR: ActiveDirectory-Module missing, try installing and enabling the RSAT-Tools!"
    }
    
    # Get the credentials to log in to AD
    $cred = Get-Credential
    
    try {
        # "Mount" Active Directory on cd into it
        new-psdrive -Name AD -psprovider ActiveDirectory -Root "" -Server $server.Text -Cred $cred
        cd AD:
        log ("INFO: Connection could be etablished to " + $server.Text)
    } catch {
        log ("ERROR: Connection be etablished to Server " + $server.Text)
    }           
}

# Disconnect from Active Directory
function disconnect {
    log "INFO: Disconnecting from Active Directory"
    try {    
        cd C:
        Remove-PSDrive AD
        log "INFO: Disconnected Active Directory"
    } catch {
        log "ERROR: Couldn't disconnect for some Reason. Maybe this is because there is no drive 'C:/' or it didn't even connect.."
    }
}

# Create Users
function create ($xml) {
   log "INFO: Start creation of Users"
    # Try to import the activedirectory Modul
    try {
        $usercount = 0
        $xml.users.user | % {
            try {
                # Create a secure password
                $passw = ConvertTo-SecureString -String $_.pw -AsPlainText -Force
                # Actually add the User
                New-ADUser -Name $_.name -SamAccountName $_.name `
                    -Path $dn.Text `
                    -Title "autocreateduser" `
                    -AccountExpirationDate $dateTimePicker1.Value `
                    -AccountPassword $passw `
                    -enabled $true
                # Count the created users
                $usercount++
            } catch [Exception] {
                # Log the Exception Message if something goes wrong! (There are various different reasons for it to not work)
                log $_.Exception.Message
                log "ERROR: Couldn't create user. It could be a bad xml (for example if a username/password is missing!), permission problems or maybe the user already exists"
            }
        }
        
        log ("INFO: Created " + $usercount + " Users")
    } catch [Exception] {
        # It often happens that the passwords don't meet security settings. That's why a hint is given here
        log "ERROR: The users couldn't be Created properly! It could be that the Security Settings for Passwords are too strong, to disable complexity checks, follow this page:
https://www.interactivewebs.com/blog/index.php/server-tips/windows-2012-turn-off-password-complexity/"
        log $_.Exception.Message
    }
}

# Remove Users
function remove {
    log "INFO: Removing users"
    try {
        Get-ADUser -Filter {title -eq "autocreateduser"} `
        -SearchBase $dn.Text | Remove-ADUser -Confirm:$false
        log "INFO: Removed users"
    } catch {
        log "ERROR: Couldn't remove users! Check if permissions are set properly"
    }
}


#Generated Form Function
function GenerateForm {
########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
# Generated On: 10/27/2016 10:36 AM
# Generated By: Samuel
########################################################################

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null
#endregion

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$rem = New-Object System.Windows.Forms.Button
$dateTimePicker1 = New-Object System.Windows.Forms.DateTimePicker
$pwdfile_button = New-Object System.Windows.Forms.Button
$log_button = New-Object System.Windows.Forms.Button
$userlist_button = New-Object System.Windows.Forms.Button
$run = New-Object System.Windows.Forms.Button
$pwdfile = New-Object System.Windows.Forms.TextBox
$label9 = New-Object System.Windows.Forms.Label
$log = New-Object System.Windows.Forms.TextBox
$log_desc = New-Object System.Windows.Forms.Label
$userlist = New-Object System.Windows.Forms.TextBox
$userlist_desc = New-Object System.Windows.Forms.Label
$label6 = New-Object System.Windows.Forms.Label
$exp_desc = New-Object System.Windows.Forms.Label
$dn = New-Object System.Windows.Forms.TextBox
$dn_desc = New-Object System.Windows.Forms.Label
$server = New-Object System.Windows.Forms.TextBox
$server_desc = New-Object System.Windows.Forms.Label
$title = New-Object System.Windows.Forms.Label
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.

$log_button_OnClick= 
{
#TODO: Place custom script here
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null
    
    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $OpenFileDialog.initialDirectory = $log.Text
    $OpenFileDialog.ShowDialog() | Out-Null
    $log.Text = $OpenFileDialog.FileName
}

$run_OnClick= 
{
    log ""
    log "INFO: Started User Creation"
    # Try to create the Users
    $xml = import($userlist.text)
    connect
    create $xml
    disconnect
}

$handler_form1_Load= 
{
#TODO: Place custom script here

}

$userlist_button_OnClick= 
{
    [System.Reflection.Assembly]::LoadWithPartialName("System.windows.forms") | Out-Null
    
    $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog
    $OpenFileDialog.initialDirectory = $userlist.Text
    $OpenFileDialog.ShowDialog() | Out-Null
    $userlist.Text = $OpenFileDialog.FileName

}

$rem_OnClick= 
{
    log "INFO: Start removing Users"
    connect
    remove
    disconnect
}

$handler_label9_Click= 
{
#TODO: Place custom script here

}

$handler_label1_Click= 
{
#TODO: Place custom script here

}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 332
$System_Drawing_Size.Width = 484
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "Primal Form"
$form1.add_Load($handler_form1_Load)


$rem.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 270
$System_Drawing_Point.Y = 297
$rem.Location = $System_Drawing_Point
$rem.Name = "rem"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 96
$rem.Size = $System_Drawing_Size
$rem.TabIndex = 20
$rem.Text = "Remove Users"
$rem.TextAlign = 1
$rem.UseVisualStyleBackColor = $True
$rem.add_Click($rem_OnClick)

$form1.Controls.Add($rem)

$dateTimePicker1.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 168
$System_Drawing_Point.Y = 145
$dateTimePicker1.Location = $System_Drawing_Point
$dateTimePicker1.Name = "dateTimePicker1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 268
$dateTimePicker1.Size = $System_Drawing_Size
$dateTimePicker1.TabIndex = 19

$form1.Controls.Add($dateTimePicker1)

$log_button.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 310
$System_Drawing_Point.Y = 218
$log_button.Location = $System_Drawing_Point
$log_button.Name = "log_button"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 126
$log_button.Size = $System_Drawing_Size
$log_button.TabIndex = 17
$log_button.Text = "open..."
$log_button.UseVisualStyleBackColor = $True
$log_button.add_Click($log_button_OnClick)

$form1.Controls.Add($log_button)


$userlist_button.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 310
$System_Drawing_Point.Y = 191
$userlist_button.Location = $System_Drawing_Point
$userlist_button.Name = "userlist_button"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 126
$userlist_button.Size = $System_Drawing_Size
$userlist_button.TabIndex = 16
$userlist_button.Text = "open..."
$userlist_button.UseVisualStyleBackColor = $True
$userlist_button.add_Click($userlist_button_OnClick)

$form1.Controls.Add($userlist_button)


$run.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 372
$System_Drawing_Point.Y = 297
$run.Location = $System_Drawing_Point
$run.Name = "run"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 100
$run.Size = $System_Drawing_Size
$run.TabIndex = 15
$run.Text = "Create Users"
$run.UseVisualStyleBackColor = $True
$run.add_Click($run_OnClick)

$form1.Controls.Add($run)

$log.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 168
$System_Drawing_Point.Y = 218
$log.Location = $System_Drawing_Point
$log.Name = "log"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 135
$log.Size = $System_Drawing_Size
$log.TabIndex = 12

$form1.Controls.Add($log)

$log_desc.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 218
$log_desc.Location = $System_Drawing_Point
$log_desc.Name = "log_desc"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 149
$log_desc.Size = $System_Drawing_Size
$log_desc.TabIndex = 11
$log_desc.Text = "Log file"

$form1.Controls.Add($log_desc)

$userlist.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 168
$System_Drawing_Point.Y = 191
$userlist.Location = $System_Drawing_Point
$userlist.Name = "userlist"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 135
$userlist.Size = $System_Drawing_Size
$userlist.TabIndex = 10

$form1.Controls.Add($userlist)

$userlist_desc.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 13
$System_Drawing_Point.Y = 191
$userlist_desc.Location = $System_Drawing_Point
$userlist_desc.Name = "userlist_desc"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 148
$userlist_desc.Size = $System_Drawing_Size
$userlist_desc.TabIndex = 9
$userlist_desc.Text = "User list file"

$form1.Controls.Add($userlist_desc)

$label6.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 168
$label6.Location = $System_Drawing_Point
$label6.Name = "label6"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 19
$System_Drawing_Size.Width = 424
$label6.Size = $System_Drawing_Size
$label6.TabIndex = 8
$label6.Text = "___________________________________________________________________________________________________________"

$form1.Controls.Add($label6)

$exp_desc.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 145
$exp_desc.Location = $System_Drawing_Point
$exp_desc.Name = "exp_desc"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 149
$exp_desc.Size = $System_Drawing_Size
$exp_desc.TabIndex = 6
$exp_desc.Text = "expiration Date"

$form1.Controls.Add($exp_desc)

$dn.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 168
$System_Drawing_Point.Y = 119
$dn.Location = $System_Drawing_Point
$dn.Name = "dn"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 268
$dn.Size = $System_Drawing_Size
$dn.TabIndex = 5

$form1.Controls.Add($dn)

$dn_desc.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 119
$dn_desc.Location = $System_Drawing_Point
$dn_desc.Name = "dn_desc"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 149
$dn_desc.Size = $System_Drawing_Size
$dn_desc.TabIndex = 4
$dn_desc.Text = "Base DN"

$form1.Controls.Add($dn_desc)

$server.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 168
$System_Drawing_Point.Y = 92
$server.Location = $System_Drawing_Point
$server.Name = "server"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 268
$server.Size = $System_Drawing_Size
$server.TabIndex = 3

$form1.Controls.Add($server)

$server_desc.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 92
$server_desc.Location = $System_Drawing_Point
$server_desc.Name = "server_desc"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 149
$server_desc.Size = $System_Drawing_Size
$server_desc.TabIndex = 2
$server_desc.Text = "AD Server"

$form1.Controls.Add($server_desc)

$title.DataBindings.DefaultDataSourceUpdateMode = 0
$title.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",26.25,4,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 12
$System_Drawing_Point.Y = 9
$title.Location = $System_Drawing_Point
$title.Name = "title"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 49
$System_Drawing_Size.Width = 496
$title.Size = $System_Drawing_Size
$title.TabIndex = 0
$title.Text = "User Creator 4ooo"
$title.add_Click($handler_label1_Click)

$form1.Controls.Add($title)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm