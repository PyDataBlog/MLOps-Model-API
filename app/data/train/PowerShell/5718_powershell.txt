##################################################
#
# Functions supporting DCDN Tool
# 
# Author:		Sgt Jochmans B. - 4GpCIS
# 		  		Sgt Bouchier G. - 10GpCIS
#
# Version:		DCDN Tool 1.5
# 
##################################################

##################################################
#region      Function file header

if (Get-Module LoggingFramework) {
	if (!(IsInitialized-LF)) {
		write-host "You should first initialize the LoggingFramework module with command 'Initialize-LF'" -Foreground Red
		exit 2
	}
} else {
	write-host "You should first import LoggingFramework module with command 'Import-Module LoggingFramework.psm1'" -Foreground Red
	exit 1
}

$script:ScriptName = [System.IO.Path]::GetFileName($MyInvocation.MyCommand.Definition)
Log-Debug "Begin loading functions from '$($script:ScriptName)'"

#endregion   Function file header
##################################################

##################################################
#region      Functions

Function Load-Rights {
<#
	.SYNOPSIS
		Loads rights
	.DESCRIPTION
		This will show all rights on the selected folder
#>
	Param()
	
    $MainForm.Cursor = 'WaitCursor'
         
    $selectedValue = $lbxFoldersView.SelectedItem.ToString()
	$clickedFolder = "$Script:commonPath`\" + "$selectedValue"
	$clickedFolder = $clickedFolder.ToString()
	$rboxRightsView.Text	+= "$clickedFolder is clicked"
		
    #Seems that the clicked items contain an 'end-of-string' character, meaning we can't find the exact name back in the Get-Item command		
    if ( $clickedFolder.contains("`n") )
	{
		$clickedFolder = $clickedFolder.Substring(0,$clickedFolder.Length-1)
	}
		
	$clickedItem = Get-Item $clickedFolder
	$clickedAccess = $clickedItem.GetAccessControl('Access')
	$script:clickedAcl = $clickedAccess.Access
		
    #TODO: MAKE SOME BETTER VISUAL RESULT !!! it does look less ugly than before
	$rboxRightsView.Text = "Rights viewer on folder: $selectedValue"
		
	for ($count = 0 ; $count -lt $clickedAcl.count ; $count++)
	{
		$item = $clickedAcl.get_Item("$count")
		$group = $item.IdentityReference
		$group = $group.ToString()
		$group = $group.Replace("BAF\","")
		$right = $item.FileSystemRights
        $right = $right.ToString()
        $right = $right.Replace(", Synchronize","")
		$rboxRightsView.Text	+= "`n$group rights are $right"
	}
        
    $MainForm.Cursor = 'Default'
}

#endregion   Functions
##################################################

##################################################
#region      Function file footer

Log-Debug "End loading functions from '$($script:ScriptName)'"

#endregion   Function file footer
#################################################