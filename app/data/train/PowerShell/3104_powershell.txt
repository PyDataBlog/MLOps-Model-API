# MIT License
# 
# Copyright (c) 2016 Joonas Forsberg <joonas.forsberg@iki.fi>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

<#
.SYNOPSIS
Launches OpenNebula context-script
.DESCRIPTION
This script will launch the OpenNebula contextualization script included in the Context DVD
.EXAMPLE
Launch-Contextualization
#>

# Set execution policy to unrestricted
Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force

# Get the context drive
$contextDrive = Get-WMIObject Win32_Volume | ? { $_.Label -eq "CONTEXT" }

# Launch from C-drive if the context drive doesn't exists
if(!$contextdrive) {

    # Find out file name for context file
    $file = Get-ChildItem -path C:\ | where {$_.name -match "context" -And $_.name -match "ps1"}
    $script = C:\ + $file.Name

    Start-Process powershell -ArgumentList "-noprofile -File $script" -verb runas

    exit 0
}

# Find out file name for context file
$file = Get-ChildItem -path $contextDrive.Name | where {$_.name -match "context" -And $_.name -match "ps1"}
$script = $contextDrive.Name + $file.Name

# Execute start script
Start-Process powershell -ArgumentList "-noprofile -File $script" -verb runas