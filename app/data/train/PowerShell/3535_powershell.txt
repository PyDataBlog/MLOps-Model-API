<#
.SYNOPSIS
    Searches publicly listed Eventbrite Events using the v1 API

.DESCRIPTION
    Searches the Eventbrite event index to find publicly listed events.

    For your events to be included in the results, they must include an organizer profile, a valid venue address, 
    and must have available ticket types. The event must also be marked as both 'public' and 'live'.

    No additional user access tokens are required for this method, but you must supply your application key.

    RSS feeds of public event data are also available from: http://www.eventbrite.com/directory/

.PARAMETER Keywords
    The search keywords. To run an OR search, you need this format:
        "keywords=google%20OR%20multimedia"

.PARAMETER Category
    Event categories (comma seperated).
    
    Available categories: conferences, conventions, entertainment, fundraisers, meetings, other, performances, 
                          reunions, sales, seminars, social, sports, tradeshows, travel, religion, 
                          fairs, food, music, recreation.
.PARAMETER Address
    The venue address.

.PARAMETER City
    The venue City.

.PARAMETER Region
    The venue state/province/county/territory depending on the country. 2-letter state code is required for US addresses.

.PARAMETER PostalCode
    The postal/zip code of the venue.

.PARAMETER Country
    2-letter country code, according to the ISO 3166 format.

.PARAMETER Within
    If "within" is set and the "city" or "zipcode" resolve to a specific geolocation, the search will be restricted to 
    the specified within radius. The sorting default will be set to "distance".

.PARAMETER Within_unit
    If within is set, you can specify the unit to use: "M" for miles, or "K" for kilometers. By default, the API will use miles.

.PARAMETER Latitude
    If "within" is set you can limit your search to wgs84 coordinates (latitude, Longitude).

.PARAMETER Longitude
    If "within" is set you can limit your search to wgs84 coordinates (latitude, Longitude).

.PARAMETER Date
    The event start date. Limit the list of results to a date range, specified by a label or by exact dates. 
    
    Currently supported  labels include: "All", "Future", "Past", "Today", "Yesterday", "Last Week", "This Week", 
                                         "Next week", "This Month", "Next Month" and months by name, e.g. "October". 
                    
    Exact date ranges take the form "YYYY-MM-DD YYYY-MM-DD", e.g. "2008-04-25 2008-04-27".

.PARAMETER Date_created
    The date range the event was created, specified by a label or by exact dates. 
    
    Currently supported labels include: "Today", "Yesterday", "Last Week", "This Week", "This Month". 
    
    Exact date ranges take the form "YYYY-MM-DD YYYY-MM-DD", e.g. "2008-04-25 2008-04-27".

.PARAMETER Date_modified
    The date the event was last modified, specified by a label or by exact dates. 
    
    Currently supported labels include: "Today", "Yesterday", "Last Week", "This Week", "This Month". 
    
    Exact date ranges take the form "YYYY-MM-DD YYYY-MM-DD", e.g. "2008-04-25 2008-04-27".

.PARAMETER Organizer
    The organizer name.

.PARAMETER Max
    Limit the number of events returned. Maximum limit is 100 events per page. Default is 10.

.PARAMETER Count_only
    Only return the total number of events ("true" or "false"). Default is "false".

.PARAMETER sort_by
    Sort the list of events by "id", "date", "name", "city". The default is "date".

.PARAMETER page
    Allows for paging through the results of a query. Default is 1.

.PARAMETER since_id
    Returns events with id greater than "since_id" value. Default is 1.

.PARAMETER tracking_link
    The tracking link code to add to the event URLs.

.PARAMETER AccessToken
    Your Eventbrite API oAuth token.

    See: https://www.eventbrite.com/myaccount/apps/

.EXAMPLE

    Search-EventbriteEvent -keywords "powershell" -max 50 -verbose | 
    Where status -eq 'live' | 
    Sort start_date | 
    Ft id,title,@{n='organizer';e={$_.Organizer.Name}},start_date,timezone -AutoSize

.LINK
    http://developer.eventbrite.com/doc/events/event_search/

.LINK
    Get-EventbriteEvent

#>
function Search-EventbriteEvent
{
    [CmdletBinding()]
    Param (
        
        [Parameter()]
        [string]
        $keywords,
        
        [Parameter()]
        [ValidateSet("conferences","conventions","entertainment","fundraisers","meetings",
                     "other","performances","reunions","sales","seminars","social","sports",
                     "tradeshows","travel","religion","fairs","food","music","recreation")]
        [string]
        $categories,


        [Parameter()]
        [string]
        $address,

        [Parameter()]
        [string]
        $city,

        [Parameter()]
        [string]
        $region,

        [Parameter()]
        [string]
        $postal_code,

        [Parameter()]
        [string]
        $country,

        [Parameter()]
        [string]
        $within,

        [Parameter()]
        [string]
        $within_unit,

        [Parameter()]
        [string]
        $latitude,

        [Parameter()]
        [string]
        $longitude,

        [Parameter()]
        [string]
        $date,

        [Parameter()]
        [string]
        $date_created,

        [Parameter()]
        [string]
        $date_modified,
        
        [Parameter()]
        [string]
        $organizer,

        [Parameter()]
        [string]
        $max,

        [Parameter()]
        [string]
        $count_only,

        [Parameter()]
        [string]
        $sort_by,

        [Parameter()]
        [string]
        $page,

        [Parameter()]
        [string]
        $since_id,

        [Parameter()]
        [string]
        $tracking_link,

        [Parameter()]
        [string]
        $AccessToken = (Get-EventbriteConnection).access_token

    )

    Begin
    {
        $root   = "https://www.eventbrite.com"
        $format = "json"
        $method = "event_search"
        $uri    = "$root/$format/$method`?"

        $RequestParameters = @{
            Uri = $uri
            Headers = @{
                Authorization = 'Bearer ' + $AccessToken
            }
        }
    }
    Process
    {
                
        Write-Verbose "$($MyInvocation.MyCommand.Name) :: Building URI from bound parameters"

        Remove-PSBoundCommonParameters $PSBoundParameters | foreach {
            
            Write-Verbose "$($MyInvocation.MyCommand.Name) :: Adding `'$($_.Key)`' to URI with value `'$($_.Value)`'"

            $RequestParameters.Uri += "&$($_.Key)=$($_.Value)"
        }
    
        try
        {
            $result = Invoke-RestMethod @RequestParameters -ErrorAction Stop
        }
        catch
        {
            Write-Error $_.exception.message
            continue
        }

        if($result.error)
        {
            Write-Error $result.error.error_message
            continue
        }
        elseif($result.events)
        {
            $PsResult = $result.events.event
            $PsResult.PSTypeNames.Clear()
            $PsResult.PSTypeNames.Add('Eventbrite.Event')
            $PsResult
        }
        else
        {
            Write-Error $result
            continue
        }
    }
    
}