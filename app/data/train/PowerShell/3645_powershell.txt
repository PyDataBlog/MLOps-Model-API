function New-BPAAgentGroup {
    <#
        .SYNOPSIS
            Creates a new AutoMate BPA agent group.

        .DESCRIPTION
            New-BPAAgentGroup creates an agent group object.

        .PARAMETER Name
            The name of the new object.

        .PARAMETER Notes
            The new notes to set on the object.

        .PARAMETER Folder
            The folder to place the object in.

        .PARAMETER BPAServer
            The server to create the object on.

        .EXAMPLE
            # Create an agent group
            New-BPAAgentGroup -Name "All Agents" -Notes "Group containing all agents"

        .NOTES
            Author(s):     : David Seibel
            Contributor(s) :
            Date Created   : 11/07/2016
            Date Modified  : 02/12/2018

        .LINK
            https://github.com/davidseibel/PoshBPA
    #>
    [CmdletBinding()]
    param(
        [Parameter(Mandatory = $true, Position = 0)]
        [ValidateNotNullOrEmpty()]
        [string]$Name,

        [string]$Notes = "",

        [ValidateScript({$_.TypeName -eq "Folder"})]
        $Folder,

        [string]$BPAServer
    )

    $guid = "{$((New-Guid).Guid)}"

    if (-not $BPAServer -and $global:BPAConnectionInfo.Count -gt 1) {
        throw "Multiple BPA Servers are connected, please specify which server to create a new agent group on!"
    } elseif (-not $BPAServer) {
        $BPAServer = $BPAConnectionInfo.Server
    }

    $user = Get-BPAUser -BPAServer $BPAServer | Where-Object {$_.Name -ieq ($BPAConnectionInfo | Where-Object {$_.Server -eq $BPAServer}).Credential.UserName}
    if (-not $Folder) {            
        $Folder = Get-BPAFolder -Name AGENTGROUPS -BPAServer $BPAServer
    }

    # Get the template object from the PoshBPA\ObjectTemplates folder, and configure the object
    $newObject = Get-BPAObjectTemplate -Type "AgentGroup" -BPAServer $BPAServer
    $newObject.ID          = $guid
    $newObject.Name        = $Name
    $newObject.ParentID    = $Folder.ID
    $newObject.Path        = Join-Path -Path $Folder.Path -ChildPath $Folder.Name
    $newObject.CreatedBy   = $user.ID
    $newObject.Notes       = $Notes
    
    $newObject | New-BPAObject -BPAServer $BPAServer
    return (Get-BPAAgentGroup -ID $guid -BPAServer $BPAServer)
}