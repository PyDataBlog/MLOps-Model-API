#Join-Domain.ps1
#Author: Joshua Weller
#Version: 1.00

#This script joins the computer to a domain based on the variables below

#FQDN of Domain. eg windows.local
$domainname = ""

#Username of the account used to join the domain. Must be DOMAIN\USER format.
$username = ""

#Password of the account used to join the domain.
$password = ""

#Path to the OU you want the computer to be put in. Must be LDAP Path eg "OU=Computers,OU=CESA,DC=CENET,DC=Internal"
$oupath = ""

#Connects to AD using the above details, creates a search object and sets the search filter
$ADconnection = New-Object system.directoryservices.directoryentry("LDAP://$domainname",$username,$password)
$ADsearch = New-Object system.directoryservices.directorysearcher($ADconnection)
$ADsearch.filter = "(&(objectClass=computer)(cn= $env:computername))"
$ADresults = $ADsearch.FindAll()
[string]$ADaccount = $ADresults[0].properties.cn

if ($ADaccount -eq $env:computername) {
    #Adds the computer to the domain, then restarts.
    Add-Computer -DomainName $domainname -Credential (New-Object system.management.automation.pscredential($username,(ConvertTo-SecureString $password -AsPlainText -Force)))
}
else {
    #Adds the computer to the domain, specifying the OU, then restarts.
    Add-Computer -DomainName $domainname -Credential (New-Object system.management.automation.pscredential($username,(ConvertTo-SecureString $password -AsPlainText -Force))) -OUPath $oupath
}
