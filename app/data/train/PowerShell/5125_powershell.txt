Write-Host "Cleaning SxS..."
if ($env:nodismclean -eq "false")
{
    &Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase | out-null
}

Remove-Item "c:\config.psd1"
Remove-Item "c:\runonce.ps1"

$cleanfolders = @(
    "$env:localappdata\Nuget"
    "$env:localappdata\temp\*"
    "$env:windir\logs"
    "$env:windir\panther"
    "$env:windir\temp\*"
    "$env:windir\winsxs\manifestcache"
    "c:\servicepack"
) 

Write-Host "Cleaning folders..."
if ($env:nofolderclean -eq "false")
{
    try
    {
        foreach ($folder in $cleanfolders)
        {
            if (Test-Path $folder) 
            {
                Write-Host "Removing $folder"
                Remove-Item $folder -Recurse -Force -ErrorAction SilentlyContinue
            }
        }
    } catch
    {
        #do nothing. This is to stop exceptions from failing process.
    }
}
Write-Host "Defraging disk"
&Defrag.exe c: /H | Out-Null

Write-Host "Zeroing out free space..."
$FilePath = "c:\zero.tmp"
$Volume = Get-WmiObject win32_logicaldisk -filter "DeviceID='C:'"
$ArraySize = 64kb
$SpaceToLeave = $Volume.Size * 0.05
$FileSize = $Volume.FreeSpace - $SpacetoLeave
$ZeroArray = new-object byte[]($ArraySize)

$Stream = [io.File]::OpenWrite($FilePath)
$lastpercent = -1
try
{
    $CurFileSize = 0
    while ($CurFileSize -lt $FileSize)
    {
        $Stream.Write($ZeroArray, 0, $ZeroArray.Length)
        $CurFileSize += $ZeroArray.Length

        $percent = [Math]::Round($CurFileSize / $FileSize * 100)

        if ($percent -ne $lastpercent)
        {
            Write-Host "Cleaning space [$percent%]"
            $lastpercent = $percent
        }
    }
}
finally
{
    if ($Stream)
    {
        $Stream.Close()
    }
}

New-Item "C:\Windows\Setup\Scripts" -ItemType Directory -Force
"block" | out-file "c:\provision.wait"
Write-Host "Finish Free space clean..."
Remove-Item $FilePath -Force  

Start-Sleep 30
