<#
.SYNOPSIS
This PowerShell script module file provides a step to be used in a series of
executable PowerShell steps that is intended to be included in all main
PowerShell scripts that reside within the automation framework.

.DESCRIPTION
Note: This script module is NOT intended to be executed independent of another
PowerShell script referencing and using it.
#>

function Show-ContextObjectOwnership {
    <#
    .SYNOPSIS
    Displays context object ownership for all context properties from the
    context file.

    .DESCRIPTION
    N/A

    .EXAMPLE
    There are no parameters for this function.
 
    Show-ContextObjectOwnership
    #>

    # read context file into hashtable, if it exists
    $context = Read-Context

    # output context object ownership
    Write-Host "**********************************************************"
    Write-Host "Context Object Ownership"
    Write-Host "**********************************************************"
    
    if ($context) {

        Write-Host "----------------------------------------------------------"
        Write-Host "Property (Owner)=Value"
        Write-Host "----------------------------------------------------------"

        $context.GetEnumerator() | Sort-Object Key | % {

            # ensure context property key matches
            # criteria to be a file system object
            if (($_.Key -match "home" -or
                $_.Key -match "dir" -or
                $_.Key -match "file" -or
                $_.Key -match "lib" -or
                $_.Key -match "exec") -and
                ($_.Key -notmatch "homeEnvVar" -and
                $_.Key -notmatch "dirPermissions" -and
                $_.Key -notmatch "fileExt")) {

                Write-Host "$($_.Key) `($(Get-ObjectOwnership -object $_.Value)`) = $($_.Value)"
            }
        }
    }
    else {
        Write-Host "None"
    }
    Write-Host "**********************************************************"
    Write-BlankLine
}