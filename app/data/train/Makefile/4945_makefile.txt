#############################################################################
# Makefile for building: Part2
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mon Aug 24 13:43:33 2015
# Project:  Primatte.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile Primatte.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -Wall -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4/QtXml -I/usr/include/qt4 -I/usr/include -I/usr/include/opencv -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/X11R6/lib -L/usr/lib -lqglviewer-qt4 -lGLU -lopencv_core -lopencv_imgproc -lopencv_highgui -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann -lQtXml -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		io.cpp \
		application.cpp \
		matrixd.cpp \
		boundingpolyhedron.cpp \
		coloursegmenters.cpp \
		inputassembler.cpp \
		algorithmprimatte.cpp \
		alphalocator.cpp \
		inputprocessing.cpp \
		fittingalgorithms.cpp \
		spherepolyhedron.cpp 
OBJECTS       = main.o \
		io.o \
		application.o \
		matrixd.o \
		boundingpolyhedron.o \
		coloursegmenters.o \
		inputassembler.o \
		algorithmprimatte.o \
		alphalocator.o \
		inputprocessing.o \
		fittingalgorithms.o \
		spherepolyhedron.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Primatte.pro
QMAKE_TARGET  = Part2
DESTDIR       = 
TARGET        = Part2

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: Primatte.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/link_pkgconfig.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libqglviewer-qt4.prl \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile Primatte.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/link_pkgconfig.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libqglviewer-qt4.prl:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile Primatte.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Part21.0.0 || $(MKDIR) .tmp/Part21.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Part21.0.0/ && $(COPY_FILE) --parents io.h application.h matrixd.h boundingpolyhedron.h icoloursegmenter.h ifittingalgorithm.h coloursegmenters.h inputassembler.h IAlgorithm.h algorithmprimatte.h ialphalocator.h alphalocator.h inputprocessing.h fittingalgorithms.h spherepolyhedron.h .tmp/Part21.0.0/ && $(COPY_FILE) --parents main.cpp io.cpp application.cpp matrixd.cpp boundingpolyhedron.cpp coloursegmenters.cpp inputassembler.cpp algorithmprimatte.cpp alphalocator.cpp inputprocessing.cpp fittingalgorithms.cpp spherepolyhedron.cpp .tmp/Part21.0.0/ && (cd `dirname .tmp/Part21.0.0` && $(TAR) Part21.0.0.tar Part21.0.0 && $(COMPRESS) Part21.0.0.tar) && $(MOVE) `dirname .tmp/Part21.0.0`/Part21.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Part21.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp application.h \
		inputassembler.h \
		inputprocessing.h \
		matrixd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

io.o: io.cpp io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o io.o io.cpp

application.o: application.cpp application.h \
		inputassembler.h \
		inputprocessing.h \
		matrixd.h \
		fittingalgorithms.h \
		ifittingalgorithm.h \
		spherepolyhedron.h \
		io.h \
		coloursegmenters.h \
		icoloursegmenter.h \
		boundingpolyhedron.h \
		alphalocator.h \
		ialphalocator.h \
		algorithmprimatte.h \
		IAlgorithm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o application.o application.cpp

matrixd.o: matrixd.cpp matrixd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o matrixd.o matrixd.cpp

boundingpolyhedron.o: boundingpolyhedron.cpp boundingpolyhedron.h \
		matrixd.h \
		ifittingalgorithm.h \
		spherepolyhedron.h \
		application.h \
		inputassembler.h \
		inputprocessing.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o boundingpolyhedron.o boundingpolyhedron.cpp

coloursegmenters.o: coloursegmenters.cpp coloursegmenters.h \
		icoloursegmenter.h \
		matrixd.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o coloursegmenters.o coloursegmenters.cpp

inputassembler.o: inputassembler.cpp inputassembler.h \
		inputprocessing.h \
		matrixd.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o inputassembler.o inputassembler.cpp

algorithmprimatte.o: algorithmprimatte.cpp algorithmprimatte.h \
		IAlgorithm.h \
		inputassembler.h \
		inputprocessing.h \
		matrixd.h \
		boundingpolyhedron.h \
		ifittingalgorithm.h \
		spherepolyhedron.h \
		application.h \
		ialphalocator.h \
		icoloursegmenter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o algorithmprimatte.o algorithmprimatte.cpp

alphalocator.o: alphalocator.cpp alphalocator.h \
		ialphalocator.h \
		boundingpolyhedron.h \
		matrixd.h \
		ifittingalgorithm.h \
		spherepolyhedron.h \
		application.h \
		inputassembler.h \
		inputprocessing.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o alphalocator.o alphalocator.cpp

inputprocessing.o: inputprocessing.cpp inputprocessing.h \
		matrixd.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o inputprocessing.o inputprocessing.cpp

fittingalgorithms.o: fittingalgorithms.cpp fittingalgorithms.h \
		ifittingalgorithm.h \
		spherepolyhedron.h \
		matrixd.h \
		application.h \
		inputassembler.h \
		inputprocessing.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fittingalgorithms.o fittingalgorithms.cpp

spherepolyhedron.o: spherepolyhedron.cpp spherepolyhedron.h \
		matrixd.h \
		application.h \
		inputassembler.h \
		inputprocessing.h \
		io.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o spherepolyhedron.o spherepolyhedron.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

