# Copyright (c) 2015, Daniel Wang. 
# All Rights Reserved.
# Author: Daniel Wang (empiredaniel@gmail.com)
#
# Brief: make the library and test cases, do test check 

# Common options
# ==============

CC = gcc

INCLUDES = -I. -I./include -I./deps/include
CFLAGS = -Wall -g 
LDFLAGS = 

# Build library
# =============

LIB_INCLUDES = -I./src
LIB_CFLAGS = 
LIB_LDFLAGS = -L./deps/lib # -lglog -lgflags -lpthread -lm 

SOURCE_DIRS = src
LIB_SOURCES = $(shell find $(SOURCE_DIRS) -name '*.c' -print | sort | tr "\n" " ")
LIB_PREFIXES = $(LIB_SOURCES:.c=)
LIB_OBJECTS = $(LIB_SOURCES:.c=.o)

LIBRARY = libcalgos.a
AR = ar

.PHONY: all
all: $(LIBRARY)

$(LIBRARY): $(LIB_OBJECTS)
	-rm -f $@
	$(AR) -crsv $@ $(LIB_OBJECTS)

$(LIB_OBJECTS): $(LIB_SOURCES)
	for p in $(LIB_PREFIXES); do	\
		$(CC) $(INCLUDES) $(LIB_INCLUDES) $(CFLAGS) $(LIB_CFLAGS)  \
		$${p}.c -c -o $${p}.o ;		\
	done

# Run test
# ========

.PHONY: check
check: test
	for p in $(TEST_PROGRAMS); do	\
		./$${p} ;		\
	done

# Build test
# ==========

TEST_INCLUDES = -I./deps/test/include
TEST_CFLAGS = $(CFLAGS)
TEST_LDFLAGS = -L./deps/test/lib # -lgtest_main -lgtest

TEST_DIRS = tests
TEST_SOURCES = $(shell find $(TEST_DIRS) -name '*.c' -print | sort | tr "\n" " ")
TEST_PREFIXES = $(TEST_SOURCES:.c=)
TEST_PROGRAMS = $(TEST_PREFIXES)

.PHONY: test
test: $(TEST_PROGRAMS)

$(TEST_PROGRAMS): $(LIBRARY) $(TEST_SOURCES)
	for p in $(TEST_PREFIXES); do	\
		$(CC) $(INCLUDES) $(LIB_INCLUDES) $(TEST_INCLUDES) $(CFLAGS) $(TEST_CFLAGS)	\
		$${p}.c $(LIBRARY) $(LIB_LDFLAGS) $(TEST_LDFLAGS) $(LDFLAGS) -o $${p} ;	\
	done

# Clean
# =====

ALL_LIBRARIES = $(LIBRARY)
ALL_PROGRAMS = $(TEST_PROGRAMS)
ALL_OBJECTS = $(shell find . $(SOURCE_DIRS) -name '*.o' -print | sort | tr "\n" " ")

.PHONY: clean
clean:
	-rm -rf $(ALL_LIBRARIES) $(ALL_PROGRAMS) $(ALL_OBJECTS)

