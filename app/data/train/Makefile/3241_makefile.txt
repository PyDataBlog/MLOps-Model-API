
#NDK 根目录
NDK_ROOT=/home/yang/Android/Sdk/ndk-bundle
#编译器根目录
TOOLCHAINS_ROOT=$(NDK_ROOT)/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64
#编译器目录
TOOLCHAINS_PREFIX=$(TOOLCHAINS_ROOT)/bin/arm-linux-androideabi
#头文件搜索路径
TOOLCHAINS_INCLUDE=$(TOOLCHAINS_ROOT)/lib/gcc/arm-linux-androideabi/4.9.x/include-fixed

#SDK根目录
PLATFORM_ROOT=$(NDK_ROOT)/platforms/android-24/arch-arm
#SDK头文件搜索路径
PLATFORM_INCLUDE=$(PLATFORM_ROOT)/usr/include
#SDK库文件搜索路径
PLATFORM_LIB=$(PLATFORM_ROOT)/usr/lib
#生成文件名称
MODULE_NAME=libdlsymDemo
#删除命令
RM=rm
#编译选项
FLAGS=  -I$(TOOLCHAINS_INCLUDE) \
        -I$(PLATFORM_INCLUDE) \
        -L$(PLATFORM_LIB) \
        -nostdlib \
        -lgcc \
        -lc \
        -Bdynamic \
        -pie -fPIE \
		-ldl


#所有的obj文件
ALL_OBJS=   $(MODULE_NAME).o \
            $(PLATFORM_LIB)/crtbegin_dynamic.o \
            $(PLATFORM_LIB)/crtend_android.o
#编译器链接
all:
	$(TOOLCHAINS_PREFIX)-gcc $(FLAGS) -c module1.c module2.c module3.c
	$(TOOLCHAINS_PREFIX)-gcc $(FLAGS) -shared -fPIC module1.o module2.o module3.o -o libSharedModule.so
	$(TOOLCHAINS_PREFIX)-gcc $(FLAGS) -c $(MODULE_NAME).c -o $(MODULE_NAME).o
	$(TOOLCHAINS_PREFIX)-gcc $(FLAGS) $(ALL_OBJS) -o $(MODULE_NAME)

#清理所有的.o文件
clean:
	$(RM) *.o

#安装到手机
install:
	adb push $(MODULE_NAME) /data/local/tmp/$(MODULE_NAME)
	adb push libSharedModule.so /data/local/tmp/libSharedModule.so
	adb shell chmod +x /data/local/tmp/$(MODULE_NAME)
	
#运行程序
run:
	adb shell /data/local/tmp/$(MODULE_NAME)
