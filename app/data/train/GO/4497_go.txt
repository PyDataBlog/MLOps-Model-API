package main

import "fmt"

type ListNode struct {
	Val  int
	Next *ListNode
}

/**
 * Definition for singly-linked list.
 * type ListNode struct {
 *     Val int
 *     Next *ListNode
 * }
 */
func deleteDuplicates(head *ListNode) *ListNode {
	ptr := &head

	for *ptr != nil {
		next := &((*ptr).Next)
		val := (*ptr).Val
		if (*next) != nil && val == (*next).Val {
			// TODO delete all node has Val
			for (*ptr) != nil && (*ptr).Val == val {
				next := (*ptr).Next
				*ptr = next
			}
		} else {
			ptr = next
		}
	}

	return head
}

func main() {
	fmt.Println("vim-go")
}
