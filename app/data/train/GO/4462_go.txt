package featuredgames

// ListResponse is the response received when querying
// for a list of featured games
type ListResponse struct {
	ClientRefreshInterval int            `json:"clientRefreshInterval"`
	GameList              []FeaturedGame `json:"gameList"`
}

// FeaturedGame contains details of a game featured by Riot
type FeaturedGame struct {
	BannedChampions   []BannedChampion `json:"bannedChampions"`
	GameID            int              `json:"gameId"`
	GameLength        int              `json:"gameLength"`
	GameMode          string           `json:"gameMode"`
	GameQueueConfigID int              `json:"gameQueueConfigId"`
	GameStartTime     int              `json:"gameStartTime"`
	GameType          string           `json:"gameType"`
	MapID             int              `json:"mapId"`
	Observer          Observer         `json:"observers"`
	Participants      []Participant    `json:"participants"`
	PlatformID        string           `json:"platformId"`
}

// BannedChampion is information about one of the champions banned
// in a game
type BannedChampion struct {
	ChampionID int `json:"championId"`
	BanTurn    int `json:"pickTurn"`
	TeamID     int `json:"teamId"`
}

// Observer contains information required to observe a game
type Observer struct {
	EncryptionKey string `json:"encryptionKey"`
}

// Participant is a human or bot player on either side of a game
type Participant struct {
	Bot              bool   `json:"bot"`
	ChampionID       int    `json:"championId"`
	ProfileIconID    int    `json:"profileIconId"`
	FirstSummonerID  int    `json:"spell1Id"`
	SecondSummonerID int    `json:"spell2Id"`
	SummonerName     string `json:"summonerName"`
	TeamID           int    `json:"teamId"`
}
