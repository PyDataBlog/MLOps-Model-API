package room

import (
    "log"

    "github.com/jinzhu/gorm"
    _ "github.com/jinzhu/gorm/dialects/sqlite"
)

const tableName string = "rooms"

type Room struct {
    gorm.Model
    Id   int64 `sql:"AUTO_INCREMENT" gorm:"primary_key"`
    Name string `sql:"size:255;unique;index"`
    Size int32
    VC bool
    CalendarId string
}

var (
    dbHandle *gorm.DB
    dbPath string
)

func check(err error) {
    if err != nil {
        log.Println("[Models]: ", err)
    }

}

func Create(dbHandle *gorm.DB, name string, size int32, vc bool, calendarId string) {
    dbHandle.Create(&Room{Name: name, Size: size, VC: vc, CalendarId: calendarId})
}

func GetAll(dbHandle *gorm.DB) []*Room {
    var rooms []*Room
    rows, err := dbHandle.Table(tableName).Select(nil).Rows()
    check(err)
    rows.Scan(&rooms)
    return rooms
}

func SetDbPath(path string) {
    dbPath = path
}
