package geoMath

import (
  "github.com/helmutkemper/mgo/bson"
  "github.com/helmutkemper/db"
)

type RelationErrorStt struct {
  IdMongo                               bson.ObjectId       `bson:"_id,omitempty"`
  IdParser                              bson.ObjectId       `bson:"IdParser,omitempty"`
  // id do open street maps
  Id                                    int64
  IdSearched                            int64
  DbCollectionName                      string              `bson:"dbCollectionName" json:"-"`
  *db.DbStt                                                 `bson:"-"`             //mongodb class
}

func ( RelationErrorAStt *RelationErrorStt ) SetDbCollectionName( nameAStr string ){ RelationErrorAStt.DbCollectionName = nameAStr }

func ( RelationErrorAStt *RelationErrorStt ) Insert() error {
  var err error

  err = RelationErrorAStt.DbStt.TestConnection()
  if err != nil{
    return err
  }

  RelationErrorAStt.IdMongo, err = RelationErrorAStt.DbStt.GetMongoId()
  if err != nil{
    return err
  }

  if RelationErrorAStt.DbStt.HasIndex( RelationErrorAStt.DbCollectionName, "id" ) != true {
    RelationErrorAStt.DbStt.IndexKeyMake ( RelationErrorAStt.DbCollectionName, "id" )
  }

  if RelationErrorAStt.DbStt.HasIndex( RelationErrorAStt.DbCollectionName, "idSearched" ) != true {
    RelationErrorAStt.DbStt.IndexKeyMake ( RelationErrorAStt.DbCollectionName, "idSearched" )
  }

  return RelationErrorAStt.DbStt.Insert( RelationErrorAStt.DbCollectionName, RelationErrorAStt )
}

func ( RelationErrorAStt *RelationErrorStt ) FindOne( queryAObj bson.M ) error {
  err := RelationErrorAStt.DbStt.TestConnection()
  if err != nil {
    return err
  }

  return RelationErrorAStt.DbStt.FindOne( RelationErrorAStt.DbCollectionName, &RelationErrorAStt, queryAObj )
}

func ( RelationErrorAStt *RelationErrorStt ) RemoveAll( queryAObj bson.M ) error {
  err := RelationErrorAStt.DbStt.TestConnection()
  if err != nil {
    return err
  }

  _, ret := RelationErrorAStt.DbStt.RemoveAll( RelationErrorAStt.DbCollectionName, queryAObj )
  return ret
}
