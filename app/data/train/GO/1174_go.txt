// Code generated by protoc-gen-go.
// source: dockerplugin.proto
// DO NOT EDIT!

package dockerplugin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import google_protobuf1 "go.pedge.io/pb/go/google/protobuf"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ActivateResponse is a response for the docker plugin API activate function call.
type ActivateResponse struct {
	Implements []string `protobuf:"bytes,1,rep,name=implements" json:"implements,omitempty"`
}

func (m *ActivateResponse) Reset()                    { *m = ActivateResponse{} }
func (m *ActivateResponse) String() string            { return proto.CompactTextString(m) }
func (*ActivateResponse) ProtoMessage()               {}
func (*ActivateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*ActivateResponse)(nil), "dockerplugin.ActivateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for API service

type APIClient interface {
	// Activate is the activate function call for the docker plugin API.
	Activate(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ActivateResponse, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) Activate(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ActivateResponse, error) {
	out := new(ActivateResponse)
	err := grpc.Invoke(ctx, "/dockerplugin.API/Activate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for API service

type APIServer interface {
	// Activate is the activate function call for the docker plugin API.
	Activate(context.Context, *google_protobuf1.Empty) (*ActivateResponse, error)
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dockerplugin.API/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Activate(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dockerplugin.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Activate",
			Handler:    _API_Activate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("dockerplugin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xc9, 0x4f, 0xce,
	0x4e, 0x2d, 0x2a, 0xc8, 0x29, 0x4d, 0xcf, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x93, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f,
	0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0x86, 0xa8, 0x95, 0x92, 0x86, 0xca,
	0x82, 0x79, 0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9, 0x05, 0x25, 0x95, 0x10, 0x49, 0x25, 0x23, 0x2e,
	0x01, 0xc7, 0xe4, 0x92, 0xcc, 0xb2, 0xc4, 0x92, 0xd4, 0xa0, 0xd4, 0xe2, 0x02, 0xa0, 0xae, 0x54,
	0x21, 0x39, 0x2e, 0xae, 0xcc, 0xdc, 0x82, 0x9c, 0xd4, 0xdc, 0xd4, 0xbc, 0x92, 0x62, 0x09, 0x46,
	0x05, 0x66, 0x0d, 0xce, 0x20, 0x24, 0x11, 0xa3, 0x34, 0x2e, 0x66, 0xc7, 0x00, 0x4f, 0xa1, 0x78,
	0x2e, 0x0e, 0x98, 0x56, 0x21, 0x31, 0x3d, 0x88, 0x25, 0x7a, 0x30, 0x4b, 0xf4, 0x5c, 0x41, 0x96,
	0x48, 0xc9, 0xe9, 0xa1, 0x38, 0x1e, 0xdd, 0x2a, 0x25, 0xe9, 0xa6, 0xcb, 0x4f, 0x26, 0x33, 0x89,
	0x2a, 0x09, 0xe8, 0x07, 0xa0, 0xaa, 0xb0, 0x62, 0xd4, 0x4a, 0x62, 0x03, 0x1b, 0x66, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0xb2, 0x13, 0x35, 0x82, 0x01, 0x01, 0x00, 0x00,
}
