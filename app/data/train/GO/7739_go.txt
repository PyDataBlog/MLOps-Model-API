package main

import "fmt"

func maxProfit(prices []int) int {
	if len(prices) <= 1 {
		return 0
	}

	ret := 0
	for i := 0; i < len(prices)-1; i++ {
		if (i == 0 && prices[i] < prices[i+1]) || (i > 0 && prices[i] <= prices[i-1] && prices[i] < prices[i+1]) {
			low := prices[i]
			// fmt.Printf("i: %d, low: %d, ", i, prices[i])
			// fmt.Printf("find low: %d\n", prices[i])
			for i = i + 1; i < len(prices); i++ {
				if (i == len(prices)-1 && prices[i] >= prices[i-1]) || (i < len(prices)-1 && prices[i] >= prices[i-1] && prices[i] > prices[i+1]) {
					// fmt.Printf("i: %d, high: %d, earn: %d\n", i, prices[i], prices[i]-low)
					ret += (prices[i] - low)
					break
				}
			}
		}
	}

	return ret
}

func main() {
	// fmt.Println(maxProfit([]int{7, 1, 5, 3, 6, 4}))
	// fmt.Println(maxProfit([]int{1, 2, 3, 4, 5}))
	// fmt.Println(maxProfit([]int{5, 2, 3, 2, 6, 6, 2, 9, 1, 0, 7, 4, 5, 0}))
	fmt.Println(maxProfit([]int{1, 9, 6, 9, 1, 7, 1, 1, 5, 9, 9, 9}))
	// fmt.Println(maxProfit([]int{7, 6, 4, 3, 1}))
}
