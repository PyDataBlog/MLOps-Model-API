-- This program is free software: you can redistribute it and/or modify
-- it under the terms of the GNU General Public License as published by
-- the Free Software Foundation, either version 3 of the License, or
-- (at your option) any later version.
--
-- This program is distributed in the hope that it will be useful,
-- but WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-- GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program.  If not, see <http://www.gnu.org/licenses/>.

require "engine.class"
local Screen = require "mod.class.Screen"
local Map = require "engine.Map"

module(..., package.seeall, class.inherit(Screen))

function _M:init()
  self.name = "Mission View"
  self.short_name = "mission"
  self.desc = "View the map and oversee the current mission"
  event.watch("Player Level Changed", self, self.levelChanged)
  Screen.init(self)

	print("[DISPLAY MODE] 32x32 ASCII/background")
	Map:setViewPort(self.ScreenManager.screenbounds.x, self.ScreenManager.screenbounds.y, self.iw, self.ih, 32, 32, nil, 22, true)
  
end

function _M:levelChanged(_, data)
  print("[mission screen] Got event")
  game.level.map:moveViewSurround(game.level.default_up.x, game.level.default_up.y, 8, 8)
end

function _M:toScreen(nb_keyframe)
  	-- Now the map, if any
	if game.level and game.level.map and game.level.map.finished then
		-- Display the map and compute FOV for the player if needed
		if game.level.map.changed then
			game.player:playerFOV()
		end

		game.level.map:display(nil, nil, nb_keyframe)

		-- Display the targetting system if active
		--self.target:display()

		-- And the minimap
		--self.level.map:minimapDisplay(self.w - 200, 20, util.bound(self.player.x - 25, 0, self.level.map.w - 50), util.bound(self.player.y - 25, 0, self.level.map.h - 50), 50, 50, 0.6)
	end
end

