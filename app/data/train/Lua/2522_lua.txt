local ManageRankCommandsPanel = Menu.Create("menu_ranks_options_commands")

function ManageRankCommandsPanel:GenerateMenu(id, Page)
	self.Items = {}
	local CommandsList = {}
	local RankName = PlayerTemp[id]["RankSelected"]
	if RankName and Rank.Info[RankName] then
		if Rank.CanTarget(Rank.UserRealRank(id), RankName) then
			for Command, _ in pairs(chat) do
				local Bool, Source = Rank.HasChatCommand(RankName, Command)
				if Bool then
					if Source == RankName then
						table.insert(self.Items, Command .. "|" .. Language.Translate2(id, "menu_enabled"))
					else
						table.insert(self.Items, "(" .. Command .. "|" .. Language.Translate2(id, "menu_inherited_from", {FROM = Rank.Info[Source].Name or Source}))
					end
				else
					table.insert(self.Items, Command .. "|" .. Language.Translate2(id, "menu_disabled"))
				end
				table.insert(CommandsList, Command)
			end
		end
	end
	PlayerTemp[id]["RankCommands"] = CommandsList
	return Menu.GenerateMenu(self, id, Page)
end

function ManageRankCommandsPanel:ClickButton(id, Page, Button)
	if Button > 0 then
		local CommandsList = PlayerTemp[id]["RankCommands"]
		local RankName = PlayerTemp[id]["RankSelected"]
		if RankName and Rank.Info[RankName] then
			if Rank.CanTarget(Rank.UserRealRank(id), RankName) then
				local Command = CommandsList[Button]
				if Command then
					local Bool, Source = Rank.HasChatCommand(RankName, Command)
					if Bool then
						if Source == RankName then
							Rank.RemoveCommand(RankName, Command)
						end
					else
						Rank.AddCommand(RankName, Command)
					end
					SAS.SaveRanks()
				end
				self:Open(id, Page)
			end
		end
	end
end
