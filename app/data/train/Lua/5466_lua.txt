local graphics, sound, input
local sms
local data = {}
local renderOrder = {
  'draw first',
  'draw',
  'draw last',
  'draw debug',
}

function love.load()
    graphics = require '../love-game/wrap-love-graphics'(love)
    sound = require '../love-game/wrap-love-sound'(love)
    input = require '../any-game/input-vkeys'({isKeyDown = love.keyboard.isDown})
    local assertImplementsInterface = require '../engine/assert/implementsTreeInterface'
    assertImplementsInterface(graphics, require '../any-game/graphics-interface')
    assertImplementsInterface(input, require '../any-game/input-vkeys-interface')

    local sys = require 'game-setup'
    sms = sys.sms

    local subscribe = sys.subscribe
    subscribe {
      ['quit'] = function(lovecommands)
        love.event.quit()
      end,
      ['set title'] = function(lovecommands, title)
        love.window.setTitle(title)
      end,
    }

    subscribe {
      ['set render order'] = function(renderer, ordering)
        renderOrder = ordering
      end,
    }

    subscribe {
      ['preupdate'] = function(basic_preupdate, data, dt)
        -- data.dt = dt
        -- data.time = data.time + dt
      end,
    }

    data.dt = 0
    data.time = 0
    data.os = love.system.getOS()
    data.cores = love.system.getProcessorCount()
    data.setcolor = graphics.palette.set
    data.input = input
    sms:post('setup', data)
    sms:post('set title', 'research')
end

function love.update(dt)
    input.update(dt)
    sms:post('preupdate', data, dt)
    sms:post('update', data)
end

function love.draw()
    for ii = 1, #renderOrder do
      local tag = renderOrder[ii]
      sms:post(tag, graphics, data)
    end
end
