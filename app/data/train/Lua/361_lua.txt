--[[
-- base class for all OO class
--
-- author: wxm71(weixing.mei@aispeech.com)
--]]

local _M = {}

function _M:define(ins) 
    local ins = ins or {}
    return setmetatable(ins, {__index=self})
end


-- call a function defined in super class
--
-- ARGUMENTS:
--  name: name of function to be call
--
-- TIPS:
--  this function should call with instance of class instead of a class, effect of the latter use are not define. 
--  for example, 
--  {{{
--      ins = some_class:new()
--      ins.super_call('func', args)            -- RIGHT
--
--      some_class:super_call('func', args)     -- WRONG!!! effect are not defined
--  }}}
function _M:super_call(name, ...)
    -- class metatable
    local meta = getmetatable(self)
    local parent = meta.__index

    if nil==parent then return nil end

    -- parent class
    meta = getmetatable(parent)
    parent = meta.__index
    local func = parent[name]
    if func then
        return func(self, unpack(arg))
    else
        return nil
    end
end


return _M
