local class = require "lib/middleclass"
Vector2 = class("Vector2")

function Vector2:initialize(x, y)
	self.x = x or 0
	self.y = y or 0
end

function Vector2:length()
	return math.sqrt(self.x * self.x + self.y * self.y)
end

function Vector2:dot(vector)
	return self.x * vector.x + self.y * vector.y
end

function Vector2:cross(vector)
	return self.x * vector.y - vector.x * self.y
end

function Vector2:__add(vector)
	return Vector2:new(self.x + vector.x, self.y + vector.y) 
end

function Vector2:__sub(vector)
	return Vector2:new(self.x - vector.x, self.y - vector.y)
end

function Vector2:__mul(escalar)
	return Vector2:new(self.x * escalar, self.y * escalar)
end

function Vector2:__unm()
	return Vector2:new(-self.x, -self.y)
end

function Vector2:__len()
	return math.sqrt(self.x * self.x + self.y * self.y)
end

function Vector2:__eq(vector)
	return self.x == vector.x and self.y == vector.y
end

function Vector2:__lt(vector)
	return self.x < vector.x and self.y < vector.y
end

function Vector2:__le(vector)
	return self.x <= vector.x and self.y <= vector.y
end

function Vector2:__tostring()
	return "(" .. self.x .. "," .. self.y .. ")"
end
