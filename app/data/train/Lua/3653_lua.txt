minetest.register_node("landgrab:claimblock", {
	description = "Land Grab Claim",
	tiles = {"landgrab_claimblock.png"},
	groups = {oddly_breakable_by_hand=2},
	on_place = function(itemstack, placer, pointed_thing)
		local pos	= pointed_thing.above
		local name	= placer:get_player_name()
		if pos.y < -450 then
			minetest.chat_send_player(name,"[Landgrab] You cannot claim below -450")
			return itemstack
		end
		local res, err = landgrab.api.add_claim(pos, name, "claimblock")
		if err ~= nil or res == nil then
			minetest.chat_send_player(name,"[Landgrab] " .. (err or "Something went wrong!"))
			return itemstack
		end 
		itemstack:take_item()
		minetest.chat_send_player(name,"[Landgrab] You now own this area.")
		minetest.remove_node(pos)
		return itemstack
	end,
})

minetest.register_craft({
	output = 'landgrab:claimblock',
	recipe = {
		{'default:stone','default:steel_ingot','default:stone'},
		{'default:steel_ingot','default:mese_crystal','default:steel_ingot'},
		{'default:stone','default:steel_ingot','default:stone'},
	}
})

minetest.register_alias("claimblock", "landgrab:claimblock")

-- Requires pull request: https://github.com/minetest/minetest_game/pull/2009

doors.register("landgrab:shared_door", {
	tiles = {{name="landgrab_shared_door.png", backface_culling = false}},
	description = "Shared Door",
	groups = {cracky = 1, level = 2},
	sounds = default.node_sound_metal_defaults(),
	sound_open = "doors_steel_door_open",
	sound_close = "doors_steel_door_close",
	recipe = {
		{"group:wood", "group:wood", "group:wood"},
		{"default:steel_ingot", "landgrab:claimblock", "default:steel_ingot"},
		{"group:wood", "group:wood", "group:wood"},
	},
	on_construct = function(pos)
		local meta	= minetest.get_meta(pos)

		meta:set_string("infotext", "Shared Door")
	
	end,
	on_rightclick = function(pos, node, clicker, itemstack, pointed_thing)
		local can_interact = minetest.is_protected(pos, clicker:get_player_name())
		if can_interact == nil or can_interact == false then
			doors.door_toggle(pos, node, clicker)
			return itemstack
		end	
	end,
	can_dig = function(pos, digger)
		local can_interact = minetest.is_protected(pos, digger:get_player_name())
		if can_interact == nil or can_interact == false then
			return true
		end
			
		minetest.record_protection_violation(pos, digger:get_player_name())
		return false
	end
})

minetest.register_node("landgrab:shared_chest", {
	tiles = {
		"landgrab_shared_chest_top.png",
		"landgrab_shared_chest_top.png",
		"landgrab_shared_chest_side.png",
		"landgrab_shared_chest_side.png",
		"landgrab_shared_chest_side.png",
		"landgrab_shared_chest_front.png"
	},
	description = "Shared Chest",
	groups = {snappy=2,choppy=2,oddly_breakable_by_hand=2,tubedevice=1,tubedevice_receiver=1},
	paramtype2 = "facedir",
	sounds = default.node_sound_wood_defaults(),
	tube = {
		insert_object = function(pos, node, stack, direction)
			local meta		= minetest.get_meta(pos)
			local inventory	= meta:get_inventory()
			return inventory:add_item("main",stack)
		end,
		can_insert = function(pos, node, stack, direction)
			local meta		= minetest.get_meta(pos)
			local inventory	= meta:get_inventory()
			return inventory:room_for_item("main",stack)
		end,
		input_inventory="main",
		connect_sides = {left=1, right=1, back=1, top=1, bottom=1},
	},
		
	allow_metadata_inventory_move = function(pos, from_list, from_index, to_list, to_index, count, player)
		
		local can_interact = minetest.is_protected(pos, player:get_player_name())
		if can_interact == nil or can_interact == false then
			return count
		end
			
		return 0
		
	end,
	allow_metadata_inventory_put = function(pos, listname, index, stack, player)
		
		local can_interact = minetest.is_protected(pos, player:get_player_name())
		if can_interact == nil or can_interact == false then
			return stack:get_count()
		end
		
		return 0
			
	end,
	allow_metadata_inventory_take = function(pos, listname, index, stack, player)
		
		local can_interact = minetest.is_protected(pos, player:get_player_name())
		if can_interact == nil or can_interact == false then
			return stack:get_count()
		end
		
		return 0
			
	end,
	
	on_construct = function(pos)
		local meta	= minetest.get_meta(pos)
		local inv	= meta:get_inventory()

		meta:set_string("infotext", "Shared Chest")
			
		meta:set_string("formspec", "size[12,9.5]list[current_name;main;0,0;12,5;]list[current_player;main;2,5.5;8,4;]")
		
		inv:set_size("main", 12*5)
	end,

	can_dig = function(pos, digger)
			
		local can_interact = minetest.is_protected(pos, digger:get_player_name())
		if can_interact == nil or can_interact == false then
			return true
		end
			
		minetest.record_protection_violation(pos, digger:get_player_name())
		return false
			
	end
	
})

minetest.register_craft({
	output = 'landgrab:shared_chest',
	recipe = {
		{'group:wood','group:wood','default:stone'},
		{'group:wood','landgrab:claimblock','group:wood'},
		{'default:stone','group:wood','group:wood'},
	}
})