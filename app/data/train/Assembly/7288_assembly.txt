; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\TaintAnalysis\AntiTaint\Epilog\src\func-va.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG3581	DB	'%d ', 00H
$SG3582	DB	'%s', 0aH, 00H
_DATA	ENDS
PUBLIC	_func
EXTRN	__imp__printf:PROC
EXTRN	__imp__gets:PROC
; Function compile flags: /Odtpy
; File d:\projects\taintanalysis\antitaint\epilog\src\func-va.c
_TEXT	SEGMENT
_ap$ = -16						; size = 4
_buf$ = -12						; size = 8
_i$ = -4						; size = 4
_num$ = 8						; size = 4
_func	PROC

; 10   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H

; 11   :   va_list ap;
; 12   :   char buf[8];
; 13   :   int i;
; 14   :   va_start(ap, num);

	lea	eax, DWORD PTR _num$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 15   :   gets(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR __imp__gets
	add	esp, 4

; 16   :   for (i = 0 ; i < num ; ++i)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@func
$LN2@func:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN3@func:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _num$[ebp]
	jge	SHORT $LN1@func

; 17   :     printf("%d ", va_arg(ap, int));

	mov	ecx, DWORD PTR _ap$[ebp]
	add	ecx, 4
	mov	DWORD PTR _ap$[ebp], ecx
	mov	edx, DWORD PTR _ap$[ebp]
	mov	eax, DWORD PTR [edx-4]
	push	eax
	push	OFFSET $SG3581
	call	DWORD PTR __imp__printf
	add	esp, 8
	jmp	SHORT $LN2@func
$LN1@func:

; 18   :   printf("%s\n", buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	push	OFFSET $SG3582
	call	DWORD PTR __imp__printf
	add	esp, 8

; 19   :   va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 20   : }

	mov	esp, ebp
	pop	ebp
	ret	0
_func	ENDP
_TEXT	ENDS
PUBLIC	_main
; Function compile flags: /Odtpy
_TEXT	SEGMENT
_main	PROC

; 23   : {

	push	ebp
	mov	ebp, esp

; 24   :   func(2, 3, 4);

	push	4
	push	3
	push	2
	call	_func
	add	esp, 12					; 0000000cH

; 25   :   return 0;

	xor	eax, eax

; 26   : }

	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
