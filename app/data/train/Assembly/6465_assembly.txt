[bits 32]

section .text 

extern __time32
extern _printf
extern _exit
extern _getchar
extern _fflush

global  _main 

_main: 
	push DWORD seed
    call __time32
	lp:
		mov eax, [seed]
		and eax, 0x00ffff00 ; seed[8..23]
		shr eax, 8 ; 
		mov [rand], eax ; rand = seed[8..23]
		
		mul eax ; seed = rand^2
		add eax, [k] ; seed += k
		mov [seed], eax
		
		push DWORD [rand]
		push DWORD output
        call _printf
        add esp, 8
		call _getchar
		cmp eax, 0xFFFFFFFF
		push 0
		call _fflush
		jne lp
		
	push    0
	call    _exit
	ret 

section .data
rand dd 0
seed dd 0
k dd 0xDEADBEEF
output db "%X", 10, 0