; lab 08

/* Part A */
/* Activity 1  */


;initialize the stack pointer at the TOS
.org 0x00
ldi r16, high(ramend)
out sph, r16
ldi r16, low(ramend)
out spl, r16


; data direction register B set input for Port B
ldi r16, 0x00
out ddrb, r16

; setting Port D as output
ldi r16, 0xFF
out ddrd, r16

; if bit 1 of pinb is high, SW1 is on,
;    then, LEDS are all blinking every 1 second
; skip if its cleared (low or 0) 
sbic pinb, 0
call case1


; if bit 2 of pinb is high, SW2 is on,
;    then LEDs are light on like stairway
; skip if its cleared (low or 0)
sbic pinb, 1
call case2


; if bit 3 of pinb is high, SW3 is on,
;    then LEDS are rolling up and down
; skip if its cleared (low or 0)
sbic pinb, 2
call case3


; if bit 4 of pinb is high, SW4 is on,
;    then odd sequence LEDs are on every 2 seconds
; skip if its cleared (low or 0)
sbic pinb, 3
call case4


; if bit 5 of pinb is high, SW5 is on,
;    then even sequence LEDs are on every 2 seconds
; skip if its cleared (low or 0)
sbic pinb, 4
call case5


; if bit 6 of pinb is high, SW6 is on,
;    then no operation required
; skip if its cleared (low or 0)
sbic pinb, 5

; if bit 7 of pinb is high, SW7 is on,
;    then no operation required
; skip if its cleared (low or 0)
sbic pinb, 6

; if bit 8 of pinb is high, SW8 is on,
;    then no operation required
; skip if its cleared (low or 0)
sbic pinb, 7

;blink leds every 1 second
case1: 
 
    ldi r16, 0xff 
    out PORTD, R16		; turn all leds on
	call DELAY_1S		; do this for one second
	ldi r16, 0x00
	out PORTD, R16		; turn all leds off
	call DELAY_1S		; do this for one second

	ret

; stairway the LEDs
case2:
	ldi r16, 0x00
	out portd, r16	; 0000 0000
	;call delay_1s
	ldi r16, 0x01
	out portd, r16	; 0000 000X
	;call delay_1s
	ldi r16, 0x03
	out portd, r16	; 0000 00XX
	;call delay_1s
	ldi r16, 0x07
    out portd, r16	; 0000 0XXX
	;call delay_1s
	ldi r16, 0x0F
    out portd, r16	; 0000 XXXX
	;call delay_1s
	ldi r16, 0x1F
	out portd, r16  ; 000X XXXX
	;call delay_1s


	ret


; roll up and down the LEDs
case3:
		; rol the leds!  (from previous code)

	ret

; odd sequence on every 2 seconds
case4:
	;	2*n + 1 = odd 


	ret


; even sequence on every 2 seconds


DELAY_1S:						; Label for delay function
	.equ COUNT = 9999		; Each unit represents 0.5us for 8MHz clock
	.equ PRESCALER = 200	; Multiplies the counter
	ldi r23, PRESCALER		; r23 off time count
	L1:
		ldi r24, COUNT%256	; r24 off time count
		ldi r25, COUNT/256	; r25 off time count
		L2:
			subi r24, 1		; Decrement off time count
			sbci r25, 0		; Upper byte
		brne L2				; Loop until zero
		dec r23				; Decrement number of repeats
	brne L1					; Loop until zero
ret							; Finish delay and return--
