bits 16
org 0x10000 ;; the loader jump 0x1000:0 -> 0x10000

jmp kernel

%include "boot/io.inc"
%include "boot/gdt.inc"

welcome: db "Welcome to GeenixOS",0x0D, 0x0A, 0
yesmsg:  db "Equals", 0x0D, 0x0A, 0
nomsg:  db "Not Equals", 0x0D, 0x0A, 0

kernel:
	mov ax, 0x1000 ; now we are in address 1000h:0000h
	; ; reset the gs, fs, ds, es
	;; make sure addressing is from 0x10000
	mov gs, ax     
	mov fs, ax
	mov ds, ax
	mov es, ax
	;; initialize stack segment & stack pointer
	;; mov ax, 0x0500
	;; mov ss, ax
	;; mov sp, ax
	mov si, welcome
	call display_string 
	push ax
	mov  ax, 0x0102
	cmp  ah, 0x01
	je  .print_yes
.print_no:
	mov si, nomsg
	call display_string
	jmp .exit
.print_yes:
	mov si, yesmsg
	call display_string
.exit:
	pop  ax
	jmp $ ; hang the kernel

; INT 0x12 - BIOS GET MEMORY SIZE
; Returns: AX = Kilobytes of contiguous memory starting from absolute address 0x0. 
get_memory_size:
	xor ax, ax
	int 0x12
	; NOW ax = amount of KB in system recorded by BIOS
