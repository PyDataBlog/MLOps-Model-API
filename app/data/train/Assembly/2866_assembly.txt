    BITS 16

start:
    mov ax, 07C0h           ; set up 4K stack after the bootloader. gonna need more stack.
    add ax, 288             ; (4096 + 512) / 16 bytes per paragraph
    mov ss, ax              ;
    mov sp, 4096            ; 

    mov ax, 07C0h           ; set data segment to where we're loaded.
    mov ds, ax


    mov si, text_string     ; put string position into SI
    call print_string       ;

    jmp $                   ; jump here, infinite loop.

    text_string db 'get off my lawn', 0


print_string:               ; routine: print something.
    mov ah, 0Eh             ; int 10h 'print char' function.

.repeat:
    lodsb                   ; get char from string.
    cmp al, 0
    je .done                ; jump if al was 0.
    jmp .repeat             ; that's how you if statment.

.done:
    ret

    times 510-($-$$) db 0   ; zero pad remainder of sector.
    dw 0xAA55               ; standard PC boot signature.
