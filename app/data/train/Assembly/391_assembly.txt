
global _start

section .text

_start: ; for gcc, this should be main() instead

	mov eax, 0x4 ; syscall handle for write() - see unistd.h
	mov ebx, 0x1 ; first write() parameter - 1 stands for stdout (and 0 is stdin, 2 is stderr, just like in bash)
	mov ecx, message ; second write() parameter - pointer to the buffer
	mov edx, 0x6 ; third write() parameter - the buffer len
	int 0x80 ; interrupt 80 indicates a syscall

	mov eax, 0x1 ; syscall handle for exit()
	mov ebx, 0x5 ; exit() parameter - the exit code. if you run this app and then go echo $? from a terminal you should see 5 printed
	int 0x80  ; syscall

section .data

	message: db "foobar" ; db means define byte, i think

