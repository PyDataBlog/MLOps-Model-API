; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\TaintAnalysis\AntiTaint\Epilog\src\struct.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG3571	DB	'%d %d %d', 00H
	ORG $+3
$SG3580	DB	'%s %d %d %d', 0aH, 00H
_DATA	ENDS
PUBLIC	_fill
EXTRN	__imp__scanf:PROC
; Function compile flags: /Odtp
; File d:\projects\taintanalysis\antitaint\epilog\src\struct.c
_TEXT	SEGMENT
_c$ = -12						; size = 4
_b$ = -8						; size = 4
_a$ = -4						; size = 4
_s$ = 8							; size = 4
_fill	PROC

; 14   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 15   :   int a, b, c;
; 16   :   scanf("%d %d %d", &a, &b, &c);

	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	lea	ecx, DWORD PTR _b$[ebp]
	push	ecx
	lea	edx, DWORD PTR _a$[ebp]
	push	edx
	push	OFFSET $SG3571
	call	DWORD PTR __imp__scanf
	add	esp, 16					; 00000010H

; 17   :   s->a = a;

	mov	eax, DWORD PTR _a$[ebp]
	cdq
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], edx

; 18   :   s->b = b;

	mov	eax, DWORD PTR _b$[ebp]
	cdq
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], edx

; 19   :   s->c = c;

	mov	eax, DWORD PTR _c$[ebp]
	cdq
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], edx

; 20   : }

	mov	esp, ebp
	pop	ebp
	ret	0
_fill	ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_func
EXTRN	__imp__printf:PROC
EXTRN	__imp__gets:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_buf$ = -40						; size = 8
_s$ = -32						; size = 24
__$ArrayPad$ = -4					; size = 4
_func	PROC

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 24   :   struct S s;
; 25   :   char buf[8];
; 26   :   gets(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR __imp__gets
	add	esp, 4

; 27   :   fill(&s);

	lea	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_fill
	add	esp, 4

; 28   :   printf("%s %d %d %d\n", buf, (int)s.a, (int)s.b, (int)s.c);

	mov	edx, DWORD PTR _s$[ebp+16]
	push	edx
	mov	eax, DWORD PTR _s$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	push	OFFSET $SG3580
	call	DWORD PTR __imp__printf
	add	esp, 20					; 00000014H

; 29   : }

	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
_func	ENDP
_TEXT	ENDS
PUBLIC	_main
; Function compile flags: /Odtp
_TEXT	SEGMENT
_main	PROC

; 32   : {

	push	ebp
	mov	ebp, esp

; 33   :   func();

	call	_func

; 34   :   return 0;

	xor	eax, eax

; 35   : }

	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
