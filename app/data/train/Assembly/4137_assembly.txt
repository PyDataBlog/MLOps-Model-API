################################################################################
#
# MIPS Assembly Fun
#	Fibonacci Sequencer
#
# By: Corey Prophitt <prophitt.corey@gmail.com>
#
################################################################################
# License: 
#	Copyright (C) 2011, Corey Prophitt
#
#	This program is free software: you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation, either version 3 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
################################################################################
#
#	$t0: pre-previous
#	$t1: previous
#	$t2: next
#	$t3: the upper limit
#
		.data
hello:		.asciiz "\nMIPS Assembly Fun: Fibonacci\n"
prompt:		.asciiz "Enter the upper limit (inclusive): "
output:		.asciiz "\n~: "
		.globl main
		.text
main:
		# Display Hello, 4 = print string
		li $v0, 4
		la $a0, hello
		syscall
 
		# Display Prompt
		li $v0, 4
		la $a0, prompt
		syscall
 
		# Get the upper limit, 5 = read integer
		li $v0, 5
		syscall
		move $t3, $v0
 
		# Print the first two numbers, 1 = print integer
		li $v0, 4
		la $a0, output
		syscall
		li $v0, 1
		li $a0, 1
		syscall
		li $v0, 4
		la $a0, output
		syscall
		li $v0, 1
		li $a0, 2
		syscall
 
		# Initial values
		li $t0, 1
		li $t1, 2
 
		# Calculate the remaining fibonacci numbers and output
dowhile:
		add $t2, $t0, $t1
		bgt $t2, $t3, exit
		li $v0, 4
		la $a0, output
		syscall
		li $v0, 1
		move $a0, $t2
		syscall
		move $t0, $t1
		move $t1, $t2
		ble $t2, $t3, dowhile
		
exit:
		# Terminate the program
		li $v0, 10
		syscall