//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
// Parameters:
//
//   float4 g_Ambient;
//   float4 g_Diffuse;
//   float4 g_EyeDirection;
//   float4 g_EyePosition;
//   float4 g_ForceAlphaColor;
//   float4 g_GI0Scale;
//   float4 g_LightScatteringColor;
//   float4 g_PowerGlossLevel;
//   float4 g_ShadowMapParams;
//   sampler2D g_ShadowMapSampler;
//   float4 g_Specular;
//   float4 g_TransColorMask;
//   sampler2D g_VerticalShadowMapSampler;
//   float4 g_aLightField[6];
//   float4 mrgEyeLight_Attribute;
//   float4 mrgEyeLight_Diffuse;
//   float4 mrgEyeLight_Range;
//   float4 mrgEyeLight_Specular;
//   float4 mrgGlobalLight_Diffuse;
//   float4 mrgGlobalLight_Direction;
//   float4 mrgGlobalLight_Specular;
//   sampler2D sampDif;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   mrgGlobalLight_Direction   c10      1
//   g_Diffuse                  c16      1
//   g_Ambient                  c17      1
//   g_Specular                 c18      1
//   g_PowerGlossLevel          c20      1
//   g_EyePosition              c22      1
//   g_EyeDirection             c23      1
//   mrgGlobalLight_Diffuse     c36      1
//   mrgGlobalLight_Specular    c37      1
//   mrgEyeLight_Diffuse        c58      1
//   mrgEyeLight_Specular       c59      1
//   mrgEyeLight_Range          c60      1
//   mrgEyeLight_Attribute      c61      1
//   g_ShadowMapParams          c65      1
//   g_GI0Scale                 c70      1
//   g_LightScatteringColor     c75      1
//   g_aLightField              c77      6
//   g_ForceAlphaColor          c89      1
//   g_TransColorMask           c150     1
//   sampDif                    s0       1
//   g_VerticalShadowMapSampler s7       1
//   g_ShadowMapSampler         s13      1
//

    ps_3_0
    def c0, 0.5, 0, 1, -2
    def c1, 500, 5, 1024, 4
    def c2, -2, 3, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord2 v1.xyz
    dcl_texcoord3_pp v2
    dcl_texcoord4 v3
    dcl_texcoord6 v4
    dcl_texcoord5_pp v5.xyz
    dcl vFace
    dcl_2d s0
    dcl_2d s7
    dcl_2d s13
    rcp r0.x, v3.w
    mul r0.xy, r0.x, v3
    mad r0.xy, r0, -c0.w, -c0.z
    abs_sat r0.xy, r0
    add_sat r0.xy, r0, -c65.x
    mul r0.xy, r0, c65.y
    max r1.x, r0.x, r0.y
    max r0.x, v4.z, c0.y
    add r0.y, r0.x, -v4.w
    cmp r0.z, r0.y, c0.y, r0.x
    mov r0.xyw, v4
    texldp_pp r0, r0, s7
    lrp_pp r1.y, v5.z, c0.z, r0.x
    lrp_pp r0.y, r1.x, c0.z, r1.y
    mov r2.xyz, c79
    add r1.yzw, -r2.xxyz, c80.xxyz
    cmp_pp r2.xyz, vFace, v2, -v2
    nrm_pp r3.xyz, r2
    mad_pp r2.xyz, r3, c0.x, c0.x
    mad r1.yzw, r2.y, r1, c79.xxyz
    mul_pp r4.xyz, r3, r3
    mul r1.yzw, r1, r4.y
    mov r5.xyz, c77
    add r5.xyz, -r5, c78
    mad r2.xyw, r2.x, r5.xyzz, c77.xyzz
    mad_pp r1.yzw, r4.x, r2.xxyw, r1
    mov r5.xyz, c81
    add r2.xyw, -r5.xyzz, c82.xyzz
    mad r2.xyz, r2.z, r2.xyww, c81
    mad_pp r1.yzw, r4.z, r2.xxyz, r1
    mul_pp r2.xyz, r1.yzww, c17
    mul r2.xyz, r2, c70.w
    mad r1.yzw, r1, c17.xxyz, -r2.xxyz
    mad_pp r0.yzw, r0.y, r1, r2.xxyz
    max r1.y, v3.z, c0.y
    add r1.z, r1.y, -v3.w
    cmp r2.z, r1.z, c0.y, r1.y
    mov r2.xyw, v3
    texldp_pp r2, r2, s13
    min_pp r1.y, r0.x, r2.x
    lrp_pp r0.x, v5.z, c0.z, r1.y
    lrp_pp r2.x, r1.x, c0.z, r0.x
    mul_pp r0.x, r2.x, c77.w
    mul r1.xyz, r0.x, c36
    mul r2.xyz, r0.x, c37
    add_pp r0.x, -c61.z, c61.y
    rcp_pp r0.x, r0.x
    add r4.xyz, -c22, v1
    dp3 r1.w, r4, r4
    rsq r1.w, r1.w
    mul_pp r4.xyz, r1.w, r4
    rcp r1.w, r1.w
    add r1.w, r1.w, -c60.z
    dp3_pp r2.w, r4, c23
    add_pp r2.w, r2.w, -c61.z
    mul_sat_pp r0.x, r0.x, r2.w
    mad_pp r2.w, r0.x, c2.x, c2.y
    mul_pp r0.x, r0.x, r0.x
    mul_pp r0.x, r0.x, r2.w
    pow_sat_pp r2.w, r0.x, c61.w
    mov r5.z, c0.z
    add r0.x, r5.z, -c61.x
    cmp_pp r0.x, r0.x, c0.z, r2.w
    add r2.w, -c60.z, c60.w
    rcp r2.w, r2.w
    mul_sat r1.w, r1.w, r2.w
    add_pp r1.w, -r1.w, c0.z
    cmp_pp r1.w, -c61.x, r5.z, r1.w
    mul_pp r0.x, r0.x, r1.w
    mul_pp r5.xyz, c58.w, c58
    mul r5.xyz, r0.x, r5
    dp3_pp r1.w, r3, -r4
    mov_sat_pp r2.w, r1.w
    mov_sat_pp r1.w, -r1.w
    mul r6.xyz, r1.w, r5
    mul r5.xyz, r2.w, r5
    dp3_pp r1.w, r3, -c10
    mov_sat_pp r3.w, r1.w
    mov_sat_pp r1.w, -r1.w
    mad_pp r6.xyz, r1, r1.w, r6
    mad_pp r1.xyz, r1, r3.w, r5
    mul r2.xyz, r2, r3.w
    mad_pp r0.yzw, r1.xxyz, c16.xxyz, r0
    mul_pp r1.xyz, r6, c16
    texld_pp r5, v0, s0
    mul_pp r1.xyz, r1, r5
    mul r1.xyz, r1, c150
    mad_pp r0.yzw, r0, r5.xxyz, r1.xxyz
    mul_pp r1.w, r5.w, c16.w
    mul_pp r5.xyz, c59.w, c59
    mul r5.xyz, r0.x, r5
    mul r5.xyz, r2.w, r5
    add_pp r6.xyz, c22, -v1
    dp3_pp r0.x, r6, r6
    rsq_pp r0.x, r0.x
    mad_pp r4.xyz, r6, r0.x, -r4
    mad_pp r6.xyz, r6, r0.x, -c10
    nrm_pp r7.xyz, r6
    dp3_sat_pp r0.x, r7, r3
    nrm_pp r6.xyz, r4
    dp3_sat_pp r2.w, r6, r3
    mov_pp r3.xy, c1
    mul_pp r3.xy, r3, c20.yzzw
    max_pp r4.x, r3.x, c0.z
    mul_pp r3.xyz, r3.y, c18
    min r3.w, r4.x, c1.z
    pow_pp r4.x, r2.w, r3.w
    pow_pp r2.w, r0.x, r3.w
    mul r4.xyz, r4.x, r5
    mad_pp r2.xyz, r2, r2.w, r4
    mul_pp r2.xyz, r3, r2
    mad_pp r1.xyz, r2, v2.w, r0.yzww
    mul_pp r0, r1, c89
    min_pp r1, r0, c1.w
    mul_pp r0.xyz, c75, v5.y
    mad_pp oC0.xyz, r1, v5.x, r0
    mov_pp oC0.w, r1.w

// approximately 129 instruction slots used (3 texture, 126 arithmetic)
