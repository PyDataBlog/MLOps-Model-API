format elf64
use32

section '.multiboot'
Multiboot:
  .magic:
    dd 0x1BADB002
  .flags:
    dd 0x00000003
  .checksum:
    dd -(0x1BADB005)

section '.rodata'
Gdt:
  .pointer:
    dw .userData + 7 - $
    dd $ - 2
    dw 0x0
  .kernelCode:
    dd 0x00000000
    dd 0x00209A00
  .kernelData:
    dd 0x00000000
    dd 0x00009200
  .userCode:
    dd 0x00000000
    dd 0x0020FA00
  .userData:
    dd 0x00000000
    dd 0x0000F200

section '.bss' writeable
PageTables:
  .pml4:
    rb 4096
  .pdp:
    rb 4096
  .pd:
    rb 4096

KernelStack:
  rb 65535
  .base:

section '.text' executable
public _start
_start:
  .init:
    mov esp, KernelStack.base
    push ebx
  .checkCpu:
    mov eax, 0x1
    cpuid
    test ecx, (1 shl 20) or (1 shl 12)
    jz .error
  .enablePaging:
    mov eax, PageTables.pdp
    mov ebx, PageTables.pd
    or eax, 0x03
    or ebx, 0x3
    mov [PageTables.pml4], eax
    mov [PageTables.pdp], ebx

    xor ecx, ecx
  @@:
    mov eax, 0x200000
    mul ecx
    or eax, 0x83
    mov [PageTables.pd + ecx * 8], eax
    add ecx, 1
    cmp ecx, 0x200
    jne @b
  .enableLM:
    mov ecx, 0xC0000080
    rdmsr
    or eax, (1 shl 8)
    wrmsr

    mov ebx, PageTables.pml4
    mov cr3, ebx

    mov ecx, cr4
    or ecx, (1 shl 5)
    mov cr4, ecx

    mov eax, cr0
    or eax, (1 shl 31)
    mov cr0, eax
    lgdt [Gdt.pointer]
    jmp 0x8:lm

  .error:
    jmp $

extrn kmain
use64
  lm:
    mov ax, 0x10
    mov ds, ax
    mov es, ax
    mov ss, ax
    mov gs, ax
    mov fs, ax

    pop rax
    jmp kmain
