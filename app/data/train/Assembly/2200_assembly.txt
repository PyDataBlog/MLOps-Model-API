    #Exercise: write a program to receive a input, and check if it is inside an
    # array declared in memory

.data
    dataset: .word 9,2,5,1,8,2,4,3,6,7,-1
    input_number_request: .asciiz "\Digite um numero: "
    output_number_found: .asciiz "\Encontrado"
    output_number_not_found: .asciiz "\Nao Encontrado"

.text

    main:
        la $a0, input_number_request
        jal print_string
        jal read_integer

        add $a0, $zero, $v0
        la $a1, dataset
        jal try_to_find_number
        
        beq $v0, $zero, case_nao_encontrado

        case_encontrado:
        la $a0, output_number_found
        jal print_string
        j exit_m_beq

        case_nao_encontrado:
        la $a0, output_number_not_found
        jal print_string

        exit_m_beq:
        jal exit
    
    #$a0: value to find in dataset
    #a1: dataset
    try_to_find_number:
        add $s0, $zero, $a0
        add $s1, $zero, $a1

        add $a0, $zero, $ra
        jal push_to_stack

        add $a0, $zero, $a1
        jal find_dataset_length
        add $s2, $zero, $v0
        
        jal pop_from_stack
        add $ra, $zero, $v0

        add $v0, $zero, $zero #returns 0 if not value not found
        add $t0, $zero $s1
        addi $t5, $zero -1 #end_of_array_value
        ttfn_loop:
            lw $t4, 0($t0)
            beq $t5, $t4, exit_ttfn_loop
            beq $s0, $t4, case_found 
            addi $t0, $t0, 4
            j ttfn_loop
        
        case_found:
        addi $v0, $zero, 1

        exit_ttfn_loop:         
        jr $ra
    
    find_dataset_length:
        add $t0, $zero, $a0 #dataset
        add $t3, $zero, $zero #counter

        loop:
            lw $t1, 0($t0)
            beq $t1, -1, exit_loop
            
            add $t3, $t3, 1
            addi $t0, $t0, 4
            j loop
        
        exit_loop:
        add $v0, $zero, $t3
        jr $ra

    push_to_stack:
        addi $sp, $sp, -4
        sw $a0, 0($sp)
        jr $ra

    pop_from_stack:
        lw $v0, 0($sp)
        addi $sp, $sp, 4
        jr $ra

    read_integer:
        li $v0, 5
        syscall
        jr $ra
        
    print_integer:
        li $v0, 1
        syscall
        jr $ra

    print_string:
        li $v0, 4
        syscall
        jr $ra

    exit:
        li $v0 10
        syscall
