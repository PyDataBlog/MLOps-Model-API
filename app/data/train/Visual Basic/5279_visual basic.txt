Imports System.Runtime.InteropServices
Imports System.IO

Public Class Form1

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        Dim objSEApplication As SolidEdgeFramework.Application = Nothing
        Dim objDoc As SolidEdgePart.PartDocument = Nothing
        Dim objFeats(0 To 1) As Object
        Dim objFGs As SolidEdgePart.FeatureGroups = Nothing
        Dim objFG As SolidEdgePart.FeatureGroup = Nothing
        Dim SEInstallDir As DirectoryInfo

        Try
            objSEApplication = Marshal.GetActiveObject("SolidEdge.Application")
            SEInstallDir = GetTrainingFolder()
            objDoc = objSEApplication.Documents.Open(SEInstallDir.FullName + "\17_tooth_pinion.par")

            ' I want to group swept cutout and pattern
            objFeats(0) = objDoc.Models.Item(1).SweptCutouts.Item(1)
            objFeats(1) = objDoc.Models.Item(1).Patterns.Item(1)

            objFGs = objDoc.Models.Item(1).FeatureGroups
            ' You have two options to group. 
            ' 1.AddFeatureGroupsByRange- Using this API you can group the features by range.  
            ' 2.AddFeatureGroupsBySet- Using this API you can group set of features defined in an array.  
            'Use the first and last features that you want to group
            objFG = objFGs.AddFeatureGroupsByRange(objFeats(0), objFeats(1))

            ' Using method#2, I am grouping by an entire set of features (actually, the array I built)
            objFG = objFGs.AddFeatureGroupsBySet(2, objFeats)
        Catch ex As Exception
            MsgBox(ex.ToString)
        End Try

    End Sub
    Function GetTrainingFolder() As DirectoryInfo
        Dim objInstallData As SEInstallDataLib.SEInstallData = Nothing
        Dim objInstallFolder As DirectoryInfo = Nothing
        Dim objTrainingFolder As DirectoryInfo = Nothing

        Try
            objInstallData = New SEInstallDataLib.SEInstallData
            objInstallFolder = New DirectoryInfo(objInstallData.GetInstalledPath())
            objTrainingFolder = New DirectoryInfo(Path.Combine(objInstallFolder.Parent.FullName, "Training"))
        Catch
        Finally
            If Not (objInstallData Is Nothing) Then
                Marshal.FinalReleaseComObject(objInstallData)
                objInstallData = Nothing
            End If
        End Try

        Return objTrainingFolder
    End Function

End Class
