Namespace Models

    Public Class CachedField
        Inherits GenericEntity

        Public Overrides Property ID As String
            Get
                Return FieldName
            End Get
            Set(value As String)
                FieldName = value
            End Set
        End Property

        Private _DataType As String = ""
        Public Property DataType As String
            Get
                Return _DataType
            End Get
            Set(value As String)
                SetProperty(_DataType, value, "DataType")
            End Set
        End Property

        Private _FieldName As String = ""
        Public Property FieldName As String
            Get
                Return _FieldName
            End Get
            Set(value As String)
                SetProperty(_FieldName, value, "FieldName", {"ID"})
            End Set
        End Property

        Private _FieldAlias As String = ""
        Public Property FieldAlias As String
            Get
                Return _FieldAlias
            End Get
            Set(value As String)
                SetProperty(_FieldAlias, value, "FieldAlias")
            End Set
        End Property

        Private _FieldOptions As New List(Of Models.CachedFieldOption)
        Public ReadOnly Property FieldOptions As List(Of Models.CachedFieldOption)
            Get
                Return _FieldOptions
            End Get
        End Property

        Public ReadOnly Property HasAlias As Boolean
            Get
                If FieldName.ToLower.StartsWith("userdef") Then
                    If FieldName.Equals(FieldAlias, StringComparison.OrdinalIgnoreCase) Then
                        Return False
                    End If
                End If
                Return True
            End Get
        End Property

        Public Overrides Function GetParameters() As System.Collections.Generic.IDictionary(Of String, Object)
            Throw New NotImplementedException
        End Function

        Public Overrides Sub LoadFromEntity(genericEntity As GenericEntity)
            If Me Is genericEntity Then
                Return
            End If
            If TypeOf (genericEntity) Is CachedField Then
            Else
                Return
            End If
            Dim Entity As CachedField = DirectCast(genericEntity, CachedField)

            Me.DataType = Entity.DataType
            Me.FieldName = Entity.FieldName
            Me.FieldAlias = Entity.FieldAlias

            _FieldOptions.Clear()
            _FieldOptions.AddRange(Entity.FieldOptions)
        End Sub

        Public Overrides Sub LoadFromReader(dataReader As System.Data.IDataReader)
            Throw New NotImplementedException
        End Sub

        Public Overrides Sub PopulateDataRow(ByRef dataRow As System.Data.DataRow)
            Throw New NotImplementedException
        End Sub

    End Class

End Namespace
