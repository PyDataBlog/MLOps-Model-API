Imports System.IO
Imports Visomes.MySQL
Imports Visomes.SGV.Core

Namespace My

    ' The following events are available for MyApplication:
    ' 
    ' Startup: Raised when the application starts, before the startup form is created.
    ' Shutdown: Raised after all application forms are closed.  This event is not raised if the application terminates abnormally.
    ' UnhandledException: Raised if the application encounters an unhandled exception.
    ' StartupNextInstance: Raised when launching a single-instance application and the application is already active. 
    ' NetworkAvailabilityChanged: Raised when the network connection is connected or disconnected.
    Partial Friend Class MyApplication

        ''' <summary>
        ''' MUDANÇAS DE CONEXÃO DE REDE
        ''' </summary>
        ''' <remarks></remarks>
        Private Sub MyApplication_NetworkAvailabilityChanged(ByVal sender As Object, ByVal e As Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs) Handles Me.NetworkAvailabilityChanged
            If Not e.IsNetworkAvailable Then
                MessageBox.Show("Você não está conectado a rede. Está aplicação não funcionará desconectado da rede.", Core.STR_NOME_SISTEMA, MessageBoxButtons.OK, MessageBoxIcon.Warning)
            End If
        End Sub

        ''' <summary>
        ''' DESLIGAMENTO DO SISTEMA
        ''' </summary>
        ''' <remarks></remarks>
        Private Sub MyApplication_Shutdown(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Shutdown
            Core.CloseOpenServices()
            ConfigureEventLog()
            My.Application.Log.WriteEntry("Shutdown_application;" & Date.Now & vbCrLf & "------------------------------------------")
        End Sub

        ''' <summary>
        ''' PRÓXIMA INSTÂNCIA
        ''' </summary>
        ''' <remarks></remarks>
        Private Sub MyApplication_StartupNextInstance(ByVal sender As Object, ByVal e As Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs) Handles Me.StartupNextInstance
            MessageBox.Show("Só é permitido uma única instância da aplicação.", Core.STR_NOME_SISTEMA, MessageBoxButtons.OK, MessageBoxIcon.Information)
        End Sub

        ''' <summary>
        ''' É LANÇADO QUANDO UMA EXCEÇÃO NÃO É CAPTURADA
        ''' </summary>
        ''' <remarks></remarks>
        Private Sub MyApplication_UnhandledException(ByVal sender As Object, ByVal e As Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs) Handles Me.UnhandledException
            e.ExitApplication = False
            MessageBox.Show(e.Exception.Message, Core.STR_NOME_SISTEMA, MessageBoxButtons.OK, MessageBoxIcon.Error)
            My.Application.Log.WriteException(e.Exception, Diagnostics.TraceEventType.Critical, e.Exception.Message & vbCrLf & e.Exception.StackTrace & vbCrLf & e.Exception.Source & vbCrLf & Date.Now)
            Core.SalvaTela()
        End Sub

        ''' <summary>
        ''' INICIALIZAÇÃO DO SISTEMA
        ''' </summary>
        ''' <returns></returns>
        ''' <remarks></remarks>
        Protected Overrides Function OnStartup(ByVal eventArgs As Microsoft.VisualBasic.ApplicationServices.StartupEventArgs) As Boolean
            Try
                ConfigureEventLog()
                My.Application.Log.WriteEntry("Startup_application;" & Date.Now)
                Return True
            Catch ex As Exception
                MessageBox.Show(ex.Message & ex.StackTrace & ex.Source, Core.STR_NOME_SISTEMA)
                eventArgs.Cancel = False
                Return False
            End Try
        End Function
    End Class
End Namespace

