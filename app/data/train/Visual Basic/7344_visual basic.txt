Public Class frmCronogramaExterno

    Private AUSENCIA As Color = Color.DarkRed
    Private SERVICO As Color = Color.DarkGreen
    Private data As New Visomes.Extras.Date()

    Private listServico As New Generic.List(Of Date)
    Private listColor As New Generic.List(Of Color)
    Private listInfo As New Generic.List(Of String)

    Public Sub New()
        InitializeComponent()
        SetbLists()
        Me.cboTecnico.Items.AddRange(Funcionario.ListaFuncionarioExterno())
    End Sub

    Private Sub dtpInicio_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles dtpInicio.ValueChanged
        Clean()
        SetbLists()
        PesquisarServico()
    End Sub

    Private Sub dtpFim_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles dtpFim.ValueChanged
        Clean()
        SetbLists()
        PesquisarServico()
    End Sub

    Private Sub Clean()
        listServico.Clear()
        listInfo.Clear()
        listColor.Clear()
        gcc.Clean()
    End Sub

    Private Sub SetbLists()
        If cboTecnico.SelectedIndex = -1 Then
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, pnlPreAg.BackColor, "PRÉ-AGENDADO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, pnlConfimado.BackColor, "CONFIRMADO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, pnlEmExc.BackColor, "EM EXECUÇÃO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, pnlAgDesp.BackColor, "AGUARDANDO DESPESAS")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, pnlAgFat.BackColor, "AGUARDANDO FATURAMENTO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, pnlFat.BackColor, "FATURADO")
            ExternoCronograma.GetListDateInFalta(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo)
        Else
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()), Color.FromArgb(128, 255, 255), "PRÉ-AGENDADO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()), pnlConfimado.BackColor, "CONFIRMADO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()), pnlEmExc.BackColor, "EM EXECUÇÃO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()), pnlAgDesp.BackColor, "AGUARDANDO DESPESAS")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()), pnlAgFat.BackColor, "AGUARDANDO FATURAMENTO")
            ExternoCronograma.GetListDateInService(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()), pnlFat.BackColor, "FATURADO")
            ExternoCronograma.GetListDateInFalta(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo, Funcionario.GetIdByNome(cboTecnico.SelectedItem.ToString()))
        End If
        ExternoCronograma.GetListDateFeriado(dtpInicio.Value, dtpFim.Value, listServico, listColor, listInfo)
        gcc.MarkDate(listServico.ToArray(), listInfo.ToArray(), listColor.ToArray())
    End Sub

    Private Sub cboTecnico_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTecnico.SelectedIndexChanged
        Clean()
        SetbLists()
        PesquisarServico()
    End Sub

    Private Sub CarregaServico(ByVal strCondicao As String)
        dgvServico.DataSource = ExternoServico.CarregaGrid(strCondicao)
        With Me.dgvServico()
            .Columns(0).HeaderText = ""
            .Columns(1).HeaderText = "Orçamento"
            .Columns(2).HeaderText = "Os"
            .Columns(3).HeaderText = "Cliente"
            .Columns(4).HeaderText = "Técnico"
            .Columns(5).HeaderText = "Cadastro"
            .Columns(6).HeaderText = "Início"
            .Columns(7).HeaderText = "Final"
            .Columns(8).HeaderText = "Situação"
            .Columns(9).Visible = False
        End With
    End Sub

    Private Sub PesquisarServico()
        Dim strCondicao As New System.Text.StringBuilder(" TRUE ")
        If cboTecnico.SelectedIndex > -1 Then strCondicao.Append(" AND f.nomeCompleto = '" & cboTecnico.SelectedItem.ToString() & "'")
        Dim dtInicial As String = String.Empty
        Dim dtFinal As String = String.Empty
        dtInicial = data.ConvertToInternacionalDate(dtpInicio.Value.ToShortDateString)
        dtFinal = data.ConvertToInternacionalDate(dtpFim.Value.ToShortDateString)
        strCondicao.Append(" AND (dtInicial BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' OR dtFinal BETWEEN '" & dtInicial & "' AND '" & dtFinal & "') ")
        CarregaServico(strCondicao.ToString())
    End Sub

    Private Sub btnLimpar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnLimpar.Click
        Core.CleanFields(CType(gpbFiltro, Control))
    End Sub

    Private Sub btnSair_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSair.Click
        ListaExterno()
    End Sub

    Private Sub ListaExterno()
        ViewInicial.CloseMdiChildren(Me)
        Dim index As Integer = 0
        Dim b As Boolean = False
        For Each f As Form In ViewInicial.MdiChildren
            If TypeOf f Is PesquisaExterno Then
                If CType(f, PesquisaExterno).AbaSelecionada = PesquisaExterno.Abas.SERVICO Then
                    ViewInicial.Abas.SelectedTab = CType(ViewInicial.Abas.Controls(index), TabPage)
                    b = True
                    Exit For
                End If
            End If
            index += 1
        Next
        If Not b Then
            Dim frm As New PesquisaExterno(PesquisaExterno.LastQueryServico, PesquisaExterno.Abas.SERVICO)
            frm.MdiParent = ViewInicial
            frm.Show()
        End If
    End Sub
End Class