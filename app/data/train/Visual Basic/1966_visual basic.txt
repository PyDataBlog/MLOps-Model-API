'Public Class OscopeForm
'    Private _aOscopeController As OscopeController
'    Public IsInitialized As Boolean = False
'    Private _maxOnText As String = "Turn Max Traces On"
'    Private _maxOffText As String = "Turn Max Traces Off"



'    Public Sub New(ByRef oscopeController As OscopeController)
'        Me._aOscopeController = OscopeController

'        InitializeComponent()

'        Me.isInitialized = True
'        Me.Visible = True

'    End Sub

'    Private Sub TryEditConnectionToolStripMenuItem_Click(sender As System.Object, e As System.EventArgs) Handles TryEditConnectionToolStripMenuItem.Click
'        Try
'            Me._aOscopeController.tryConnection()

'        Catch ex As Exception
'            MsgBox("Unable to try/edit Oscope IP connection: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub btnGetSearchTrace_Click(sender As System.Object, e As System.EventArgs) Handles btnGetSearchTrace.Click
'        Me._aOscopeController.updatePlot()
'    End Sub

'    Private Sub btnExit_Click(sender As System.Object, e As System.EventArgs) Handles btnExit.Click
'        Me._aOscopeController.exitCall()
'        Me.Close()
'    End Sub

'    Private Sub btnClrPlot_Click(sender As System.Object, e As System.EventArgs) Handles btnClrPlot.Click
'        Try
'            Me.ScatterPlot1.ClearData()
'            Me.ScatterPlot2.ClearData()
'        Catch ex As Exception
'            MsgBox("Cannot clear plot: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click
'        Try
'            Me._aOscopeController.clearMaxHoldTraces()
'        Catch ex As Exception
'            MsgBox("Cannot clear FFT max hold traces" & ex.Message)
'        End Try

'    End Sub

'    Private Sub btnReplayTrace_Click(sender As System.Object, e As System.EventArgs) Handles btnReplayTrace.Click
'        Try
'            Me._aOscopeController.replay()
'        Catch ex As Exception
'            MsgBox("Unable to start replay thread: " & ex.Message)
'        End Try

'    End Sub

'    Private Sub btnMaxOnOff_Click(sender As System.Object, e As System.EventArgs) Handles btnMaxOnOff.Click
'        Try
'            If Me.btnMaxOnOff.Text.ToUpper.Contains("OFF") Then
'                Try
'                    Me._aOscopeController.turnOffMax()
'                    Me.btnMaxOnOff.Text = Me._maxOnText
'                Catch ex As Exception

'                End Try

'            ElseIf Me.btnMaxOnOff.Text.ToUpper.Contains("ON") Then
'                Me._aOscopeController.turnOnMaxTraces()
'                Me.btnMaxOnOff.Text = Me._maxOffText
'            End If
'        Catch ex As Exception
'            MsgBox("Unable to toggle max function display on/off: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub UpdateToolStripMenuItem_Click(sender As System.Object, e As System.EventArgs) Handles UpdateFunc2Ant.Click, UpdateFunc4Ant.Click
'        Try
'            Me._aOscopeController.updateCalFile(sender, "antenna")

'        Catch ex As Exception
'            MsgBox("Unable to update antenna cal file: " & ex.Message)
'        End Try

'    End Sub

'    Private Sub UpdateToolStripMenuItem1_Click(sender As System.Object, e As System.EventArgs) Handles UpdateFunc2Cable.Click, UpdateFunc4Cable.Click
'        Try
'            Me._aOscopeController.updateCalFile(sender, "cable")
'        Catch ex As Exception
'            MsgBox("Unable to update cable cal file: " & ex.Message)
'        End Try

'    End Sub

'    Private Sub cmboDisplayUnits_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles cmboDisplayUnits.SelectedIndexChanged

'        If Me.IsInitialized <> False Then
'            Select Case cmboDisplayUnits.Text
'                Case "V/m"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(-0.000001, 10)
'                    XyCursor1.YPosition = (0.001)
'                    Me.YAxis1.Caption = "Amplitude (V/m)"
'                    Me._aOscopeController.LoadLimit()
'                Case "dBuV"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(-70, 50)
'                    XyCursor1.YPosition = (20)
'                    Me.YAxis1.Caption = "Amplitude (dBuV)"
'                    Me.CheckBox1.Checked = False
'                Case "dBuV/m"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(-10, 200)
'                    XyCursor1.YPosition = (20)
'                    Me.YAxis1.Caption = "Amplitude (dBuV/m)"
'                    Me._aOscopeController.LoadLimit()
'                    Me.CheckBox1.Checked = False
'                Case "dBm"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(-100, -20)
'                    XyCursor1.YPosition = (20)
'                    Me.YAxis1.Caption = "Amplitude (dBm)"
'                    Me.CheckBox1.Checked = False
'                Case "dBm/Hz"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(-170, -30)
'                    XyCursor1.YPosition = (-100)
'                    Me.YAxis1.Caption = "Amplitude (dBm/Hz)"
'                    Me.CheckBox1.Checked = False
'                Case "W/m2"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(0, 5)
'                    Me.XyCursor1.YPosition = (2.5)
'                    Me.YAxis1.Caption = "Amplitude (W/m2)"
'                Case "mW/cm2"
'                    Me.YAxis1.Range = New NationalInstruments.UI.Range(0, 5)
'                    Me.XyCursor1.YPosition = (2.5)
'                    Me.YAxis1.Caption = "Amplitude (mW/cm2)"

'            End Select
'        End If

'        Me.OscopeScatterGraph.Refresh()

'    End Sub

'    Private Sub XyCursor1_AfterMove(ByVal sender As Object, ByVal e As NationalInstruments.UI.AfterMoveXYCursorEventArgs) Handles XyCursor1.AfterMove
'        Dim proxyCursor As NationalInstruments.UI.XYCursor = CType(sender, NationalInstruments.UI.XYCursor)
'        If ProxyCursor.Tag Is "XYCursor1" Then
'            lblCursor1yaxis.Text = System.Math.Round(XyCursor1.YPosition, 2).ToString() : lblCursor1yaxis.Refresh()
'            lblCursor1xaxis.Text = System.Math.Round(XyCursor1.XPosition, 8).ToString() : lblCursor1xaxis.Refresh()
'        End If
'    End Sub

'    Private Sub XyCursor2_AfterMove(ByVal sender As Object, ByVal e As NationalInstruments.UI.AfterMoveXYCursorEventArgs) Handles XyCursor1.AfterMove, XyCursor2.AfterMove
'        Dim proxyCursor As NationalInstruments.UI.XYCursor = CType(sender, NationalInstruments.UI.XYCursor)
'        If ProxyCursor.Tag Is "XYCursor2" Then
'            lblCursor2yaxis.Text = System.Math.Round(XyCursor2.YPosition, 2).ToString() : lblCursor2yaxis.Refresh()
'            lblCursor2xaxis.Text = System.Math.Round(XyCursor2.XPosition, 8).ToString() : lblCursor2xaxis.Refresh()
'        End If
'    End Sub

'    Private Sub updateOscopeLimFile1_Click(sender As System.Object, e As System.EventArgs) Handles updateOscopeLimFile1.Click
'        'prompt to get user input directory
'        Try
'            Me.OpenFileDialog1.Title = "Select a file for Limit File 1: "
'            Me.OpenFileDialog1.InitialDirectory = Environment.SpecialFolder.MyComputer
'            If Me.OpenFileDialog1.ShowDialog(Me) = Windows.Forms.DialogResult.Cancel Then

'            Else
'                Me._aOscopeController.oscopeObj.getlimitFile1 = Me.OpenFileDialog1.FileName
'                Me.limitFile1.Text = Me.OpenFileDialog1.FileName
'            End If

'            Me._aOscopeController.LoadLimit()

'        Catch ex As Exception
'            MsgBox("Unable to load limit file 1: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub updateOscopeLimitFile2_Click(sender As System.Object, e As System.EventArgs) Handles updateOscopeLimitFile2.Click
'        'prompt to get user input directory
'        Try
'            Me.OpenFileDialog1.Title = "Select a file for Limit File 2: "
'            Me.OpenFileDialog1.InitialDirectory = Environment.SpecialFolder.MyComputer
'            If Me.OpenFileDialog1.ShowDialog(Me) = Windows.Forms.DialogResult.Cancel Then

'            Else
'                Me._aOscopeController.oscopeObj.getlimitFile2 = Me.OpenFileDialog1.FileName
'                Me.limFile2.Text = Me.OpenFileDialog1.FileName
'            End If

'            Me._aOscopeController.LoadLimit()

'        Catch ex As Exception
'            MsgBox("Unable to load limit file 2: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub updateOscopeLimitFile3_Click(sender As System.Object, e As System.EventArgs) Handles updateOscopeLimitFile3.Click
'        'prompt to get user input directory
'        Try
'            Me.OpenFileDialog1.Title = "Select a file for Limit File 3: "
'            Me.OpenFileDialog1.InitialDirectory = Environment.SpecialFolder.MyComputer
'            If Me.OpenFileDialog1.ShowDialog(Me) = Windows.Forms.DialogResult.Cancel Then

'            Else
'                Me._aOscopeController.oscopeObj.getlimitFile3 = Me.OpenFileDialog1.FileName
'                Me.limFile3.Text = Me.OpenFileDialog1.FileName
'            End If

'            Me._aOscopeController.LoadLimit()

'        Catch ex As Exception
'            MsgBox("Unable to load limit file 3: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub removeLimitFile1_Click(sender As System.Object, e As System.EventArgs) Handles removeLimit1.Click
'        Try
'            Me.limitFile1.Text = ""
'            Me.Limit1.ClearData()
'        Catch ex As Exception

'        End Try

'    End Sub

'    Private Sub removeLimitFile2_Click(sender As System.Object, e As System.EventArgs) Handles removeLimit2.Click
'        Try
'            Me.limFile2.Text = ""
'            Me.Limit2.ClearData()
'        Catch ex As Exception

'        End Try

'    End Sub

'    Private Sub removeLimitFile3_Click(sender As System.Object, e As System.EventArgs) Handles removeLimit3.Click
'        Try
'            Me.limFile3.Text = ""
'            Me.Limit3.ClearData()
'        Catch ex As Exception

'        End Try

'    End Sub



'    Private Sub Button3_Click(sender As System.Object, e As System.EventArgs) Handles Button3.Click
'        Try

'            Dim startPoint As Double = Me.XAxis1.Range.Minimum
'            Dim endPoint As Double = Me.XAxis1.Range.Maximum
'            Dim centerPoint As Double = (startPoint + endPoint) / 2

'            Dim topPoint As Double = Me.YAxis1.Range.Maximum
'            Dim bottomPoint As Double = Me.YAxis1.Range.Maximum
'            Dim middlePoint As Double = (topPoint + bottomPoint) / 2

'            Me.XyCursor1.SnapMode = CursorSnapMode.Floating
'            Me.XyCursor2.SnapMode = CursorSnapMode.Floating

'            Me.XyCursor1.XPosition = centerPoint
'            Me.XyCursor1.YPosition = middlePoint

'            Me.XyCursor2.XPosition = centerPoint
'            Me.XyCursor2.YPosition = middlePoint

'            Threading.Thread.Sleep(100)

'            Me.XyCursor1.SnapMode = CursorSnapMode.NearestPoint
'            Me.XyCursor2.SnapMode = CursorSnapMode.NearestPoint

'            Threading.Thread.Sleep(100)

'            Me.OscopeScatterGraph.Refresh()
'            Me.Update()

'        Catch ex As Exception
'            MsgBox("Unable to center cursors: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub chkLogFreq_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles chkLogFreq.CheckedChanged
'        If chkLogFreq.Checked = True Then Me.XAxis1.ScaleType = ScaleType.Logarithmic Else XAxis1.ScaleType = ScaleType.Linear

'    End Sub

'    Private Sub CheckBox1_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles CheckBox1.CheckedChanged
'        If CheckBox1.Checked = True Then Me.YAxis1.ScaleType = ScaleType.Logarithmic Else YAxis1.ScaleType = ScaleType.Linear
'    End Sub

'    Private Sub btnUpdateOscopeParams_Click(sender As System.Object, e As System.EventArgs) Handles btnUpdateOscopeParams.Click
'        Me._aOscopeController.updateOscopeParameters()
'    End Sub

'    Private Sub CheckBox2_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles CheckBox2.CheckedChanged
'        If Me.isInitialized = True Then
'            Try
'                Me._aOscopeController.toggleStateFunction1and2(Me.CheckBox2.Checked)
'            Catch ex As Exception
'                MsgBox("Unable to change state of channel 1: " & ex.Message)
'            End Try
'        End If
'    End Sub

'    Private Sub CheckBox4_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles CheckBox4.CheckedChanged
'        If Me.isInitialized = True Then
'            Try
'                Me._aOscopeController.toggleStateFunction3and4(Me.CheckBox4.Checked)
'            Catch ex As Exception
'                MsgBox("Unable to change state of channel 2: " & ex.Message)
'            End Try
'        End If
'    End Sub

'    Private Sub btnSaveToCSV_Click(sender As System.Object, e As System.EventArgs) Handles btnSaveToCSV.Click
'        Try
'            Me._aOscopeController.saveToCSV()

'        Catch ex As Exception
'            MsgBox("Unable to save data to CSV file: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub Button2_Click(sender As System.Object, e As System.EventArgs) Handles btnUpdateFunction.Click
'        Try
'            Me._aOscopeController.updateOscopeFunctions()

'        Catch ex As Exception
'            MsgBox("Error updating oscope mission function(s): " & ex.Message)
'        End Try
'    End Sub

'    Private Sub cmbBxExistingMissions_Click(sender As System.Object, e As System.EventArgs) Handles cmbBxExistingMissions.SelectedIndexChanged

'        Try
'            If Me.cmbBxExistingMissions.SelectedItem = "" Then
'                Return
'            End If

'            Me._aOscopeController.editMission(Me.cmbBxExistingMissions.SelectedItem)
'            Me.cmbBxExistingMissions.Text = ""

'        Catch ex As Exception
'            MsgBox("error updating existing mission: " & ex.Message)
'        End Try
'    End Sub

'    Private Sub cmbBxMeas_Click(sender As System.Object, e As System.EventArgs) Handles cmbBxMeas.SelectedIndexChanged
'        Try
'            If Me.cmbBxMeas.SelectedItem = "" Then
'                Return
'            End If

'            Me._aOscopeController.editMeasState(Me.cmbBxMeas.SelectedItem)
'            Me.cmbBxMeas.SelectedItem = ""

'        Catch ex As Exception
'            MsgBox("error updating existing measurment: " & ex.Message)
'        End Try

'    End Sub


'    Private Sub cmbBxMeasName_SelectedIndexChanged(sender As System.Object, e As System.EventArgs) Handles cmbBxMeasName.SelectedIndexChanged
'        Try

'            If Me.cmbBxMeasName.Text = "" Then
'                Return
'            End If

'            'load the last meas state
'            For Each measState In Me._aOscopeController.oscopeMeas.getMeasState
'                If measState Is Nothing Then
'                    Exit For
'                End If
'                If Me.cmbBxMeasName.Text = measState.getName Then
'                    Me._aOscopeController.currentMeasState = measState
'                End If
'            Next

'            Me.txtBxmemoryDepth.Text = Me._aOscopeController.currentMeasState.getmemoryDepth
'            Me.txtBxtimeRange.Text = Me._aOscopeController.currentMeasState.gettime
'            Me.txtBxSampleRate.Text = Me._aOscopeController.currentMeasState.getsampleRate

'        Catch ex As Exception
'            MsgBox("error loading measurement state: " & ex.Message)
'        End Try
'    End Sub
'End Class