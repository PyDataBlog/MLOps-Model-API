Imports Visomes.MySQL
Imports Visomes.SGV.Core

Public Class Orcamento

#Region "Variaveis"
    Private idValue As String
    Private cadastroValue As Date
    Private situacaoValue As SituacaoEnum
    Private empresaValue As Empresa
    Private clienteValue As Cliente
    Private vendedorValue As Funcionario
    Private vlrLiquidoValue As Double
    Private descontoValue As Double
    Private tipoDescontoValue As TipoDescontoEnum
    Private telaTransporteValue As CadTransporteOrcamento
    Private Shared telaDescricaoServicoValue As CadObsServico
    Private Shared pastaValue As ViewLocalPastaPadrao
    Private Shared obsPadraoValue As CadObsPadraoOrcamento
    Private dadosPedidoValue As ViewPedidoOrcamento
    Private statusValue As Boolean = True
    Private obsValue As String
    Private obsOsValue As String
    Private InteressadoValue As Cliente
    Private numPedidoValue As String
    Private responsavelPedidoValue As String
    Private dtAprovacaoPedidoValue As Date?
    Private validadeValue As Date
    Private aprovadoValue As Boolean
    Private liberadoValue As Boolean
    Private descricaoValue As String
    Private dPagamentoValue As String
    Private prazoExecucaoValue As Integer
    Private tipoEnvioValue As TipoTransporte
    Private reprovacaoValue As MotivoReprovacao
    Private vlrRecuperado As Double
    Private prazoEntregaValue As TipoPrazoOrcamento
    Private tipoPagamentoValue As TipoPagamento
    Private tipoOrcamentoValue As TipoOrcamento
    Private tipoContatoValue As TipoContato
#End Region

#Region "Property"

    Public ReadOnly Property TelaPedido() As ViewPedidoOrcamento
        Get
            Return Me.dadosPedidoValue
        End Get
    End Property

    Public Property TipoContato() As TipoContato
        Get
            Return tipoContatoValue
        End Get
        Set(ByVal value As TipoContato)
            tipoContatoValue = value
        End Set
    End Property

    Public Property Reprovacao() As MotivoReprovacao
        Get
            Return reprovacaoValue
        End Get
        Set(ByVal value As MotivoReprovacao)
            reprovacaoValue = value
        End Set
    End Property

    Public Property TipoOrcamento() As TipoOrcamento
        Get
            Return tipoOrcamentoValue
        End Get
        Set(ByVal value As TipoOrcamento)
            tipoOrcamentoValue = value
        End Set
    End Property

    Public Property TipoPagamento() As TipoPagamento
        Get
            Return tipoPagamentoValue
        End Get
        Set(ByVal value As TipoPagamento)
            tipoPagamentoValue = value
        End Set
    End Property

    Public Property TipoEnvio() As TipoTransporte
        Get
            Return tipoEnvioValue
        End Get
        Set(ByVal value As TipoTransporte)
            tipoEnvioValue = value
        End Set
    End Property

    Public Property PrazoEntrega() As TipoPrazoOrcamento
        Get
            Return prazoEntregaValue
        End Get
        Set(ByVal value As TipoPrazoOrcamento)
            prazoEntregaValue = value
        End Set
    End Property

    Public Property PrazoExecucao() As Integer
        Get
            Return prazoExecucaoValue
        End Get
        Set(ByVal value As Integer)
            prazoExecucaoValue = value
        End Set
    End Property

    Public Property DataPagamento() As String
        Get
            Return dPagamentoValue
        End Get
        Set(ByVal value As String)
            dPagamentoValue = value
        End Set
    End Property

    Public Property Descricao() As String
        Get
            Return descricaoValue
        End Get
        Set(ByVal value As String)
            descricaoValue = value
        End Set
    End Property

    Public Property Liberado() As Boolean
        Get
            Return liberadoValue
        End Get
        Set(ByVal value As Boolean)
            liberadoValue = value
        End Set
    End Property

    Public Property Aprovado() As Boolean
        Get
            Return aprovadoValue
        End Get
        Set(ByVal value As Boolean)
            aprovadoValue = value
        End Set
    End Property

    Public Property Validade() As Date
        Get
            Return validadeValue
        End Get
        Set(ByVal value As Date)
            validadeValue = value
        End Set
    End Property

    Public Property NumPedido() As String
        Get
            Return numPedidoValue
        End Get
        Set(ByVal value As String)
            numPedidoValue = value
        End Set
    End Property

    Public Property ResponsavelPedido() As String
        Get
            Return responsavelPedidoValue
        End Get
        Set(ByVal value As String)
            responsavelPedidoValue = value
        End Set
    End Property

    Public Property AprovacaoPedido() As Date?
        Get
            Return dtAprovacaoPedidoValue
        End Get
        Set(ByVal value As Date?)
            dtAprovacaoPedidoValue = value
        End Set
    End Property

    Public Property Interessado() As Cliente
        Get
            Return InteressadoValue
        End Get
        Set(ByVal value As Cliente)
            InteressadoValue = value
        End Set
    End Property

    Public Property ObsOs() As String
        Get
            Return obsOsValue
        End Get
        Set(ByVal value As String)
            obsOsValue = value
        End Set
    End Property

    Public Property Observacoes() As String
        Get
            Return obsValue
        End Get
        Set(ByVal value As String)
            obsValue = value
        End Set
    End Property

    Public Property Status() As Boolean
        Get
            Return statusValue
        End Get
        Set(ByVal value As Boolean)
            statusValue = value
        End Set
    End Property

    Public Shared Property ObservacaoPadrao() As CadObsPadraoOrcamento
        Get
            Return obsPadraoValue
        End Get
        Set(ByVal value As CadObsPadraoOrcamento)
            obsPadraoValue = value
        End Set
    End Property

    Public Shared Property PastaPadrao() As ViewLocalPastaPadrao
        Get
            Return pastaValue
        End Get
        Set(ByVal value As ViewLocalPastaPadrao)
            pastaValue = value
        End Set
    End Property

    Public Property AlterarTransporte() As CadTransporteOrcamento
        Get
            Return Me.telaTransporteValue
        End Get
        Set(ByVal value As CadTransporteOrcamento)
            Me.telaTransporteValue = value
        End Set
    End Property

    Public Shared Property DescricaoServico() As CadObsServico
        Get
            Return telaDescricaoServicoValue
        End Get
        Set(ByVal value As CadObsServico)
            telaDescricaoServicoValue = value
        End Set
    End Property

    Public Property ID() As String
        Get
            Return Me.idValue
        End Get
        Set(ByVal value As String)
            Me.idValue = value
        End Set
    End Property

    Public Property FormaDesconto() As TipoDescontoEnum
        Get
            Return tipoDescontoValue
        End Get
        Set(ByVal value As TipoDescontoEnum)
            tipoDescontoValue = value
        End Set
    End Property

    Public Property ValorRecuperado() As Double
        Get
            Return vlrRecuperado
        End Get
        Set(ByVal value As Double)
            vlrRecuperado = value
        End Set
    End Property

    Public Property Desconto() As Double
        Get
            Return descontoValue
        End Get
        Set(ByVal value As Double)
            descontoValue = value
        End Set
    End Property

    Public Property ValorLiquido() As Double
        Get
            Return vlrLiquidoValue
        End Get
        Set(ByVal value As Double)
            vlrLiquidoValue = value
        End Set
    End Property

    Public Property Vendedor() As Funcionario
        Get
            Return vendedorValue
        End Get
        Set(ByVal value As Funcionario)
            vendedorValue = value
        End Set
    End Property

    Public Property Cliente() As Cliente
        Get
            Return clienteValue
        End Get
        Set(ByVal value As Cliente)
            clienteValue = value
        End Set
    End Property

    Public Property Empresa() As Empresa
        Get
            Return empresaValue
        End Get
        Set(ByVal value As Empresa)
            empresaValue = value
        End Set
    End Property

    Public Property Situacao() As SituacaoEnum
        Get
            Return situacaoValue
        End Get
        Set(ByVal value As SituacaoEnum)
            situacaoValue = value
        End Set
    End Property

    Public Property Cadastro() As Date
        Get
            Return cadastroValue
        End Get
        Set(ByVal value As Date)
            cadastroValue = value
        End Set
    End Property

    Public Shared Property Directory() As String
        Get
            Return GetDirectorioPadrao()
        End Get
        Set(ByVal value As String)
            SetDirectoryORC(value)
        End Set
    End Property

    Public Shared ReadOnly Property RelatorioSQLAprovadosByCliente(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Return "SELECT c.nomeFantasia 'nome', COUNT(*) 'qtd', SUM(vlrTotal) 'vlr' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "WHERE idSituacao = 4 AND " _
                 & "o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "GROUP BY o.idCliente ORDER BY COUNT(*) DESC LIMIT 10"
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLReprovadoCliente(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Return "SELECT c.nomeFantasia 'nome', COUNT(*) 'qtd', SUM(vlrTotal) 'vlr',ce.estrela 'estrela' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "INNER JOIN cliente_estrela ce ON ce.id = c.stars " _
                 & "WHERE idSituacao = 10 AND " _
                 & "o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "GROUP BY o.idCliente ORDER BY COUNT(*) DESC LIMIT 10"
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLReponsavelClienteByMotivo(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Dim str As New System.Text.StringBuilder(" AND (")
            Dim b As Boolean = False
            Connection.ConnectionMysql()
            MyData = DML.Select("o.idCliente", _
                                "orcamento o", _
                                "idSituacao = 10 AND " _
                              & "o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                              & "GROUP BY o.idCliente ORDER BY COUNT(*) DESC LIMIT 10")
            While MyData.Read
                If Not IsDBNull(MyData.Item(0)) Then
                    b = True
                    str.Append("o.idCliente=" & MyData.GetString(0) & " OR ")
                End If
            End While
            Connection.DisconnectMySQL()
            MyData.Dispose()
            If b Then
                str.Append(")")
                str.Replace(" OR )", ")")
            Else
                str.Remove(0, str.Length)
            End If
            Return "SELECT c.nomeFantasia 'nome', motivoReprovacao 'motivo', COUNT(*) 'qtd', SUM(vlrTotal) 'vlr' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "WHERE idSituacao = 10 AND  o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " & str.ToString() & " " _
                 & "GROUP BY motivoReprovacao ,c.razaoSocialNome ORDER BY nome"
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLReprovadosMes(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Return "SELECT MONTH(o.dtCadastro) 'mes',COUNT(*) 'qtd',SUM(vlrTotal) 'vlr' " _
                 & "FROM orcamento o " _
                 & "WHERE idSituacao = 10 AND  o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "GROUP BY MONTH(o.dtCadastro)"
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLAprovadosMes(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Return "SELECT MONTH(o.dtCadastro) 'mes',COUNT(*) 'qtd',SUM(vlrTotal) 'vlr' " _
                 & "FROM orcamento o " _
                 & "WHERE idSituacao = 4 AND  o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "GROUP BY MONTH(o.dtCadastro)"
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLAprovadosXReprovados(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Return "SELECT SUM(o.vlrTotal) vlr, COUNt(*) qtd, os.descricao tipo " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                 & "WHERE o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "AND o.idSituacao = 4 OR o.idSituacao = 10 GROUP BY tipo"
        End Get
    End Property

    Public ReadOnly Property RelatorioSQL() As String
        Get
            Return "SELECT c.razaoSocialNome 'clienteNome',c.cnpjCpf 'clienteCNPJ'," _
                 & "ec.logradouro 'clienteLogradouro',ec.endNumero 'clienteNumEnd'," _
                 & "c.ie 'clienteIE',ec.cidade 'clienteCidade',ec.uf 'clienteUf'," _
                 & "ec.cep 'clienteCep',ec.bairro 'clienteBairro'," _
                 & "cc.telefone 'clienteFone', cc.email 'clienteEmail'," _
                 & "cc.departamento 'clienteDepto',c.dtCadastro 'clienteDtCadastro'," _
                 & "c2.razaoSocialNome 'orcInteressado',o.desc 'OrcDescServ'," _
                 & "o.prazoExec 'orcPrzExec',ctpe.descricao 'orcPrzExecObs'," _
                 & "o.dtValidade 'orcVld',o.Dpag 'orcCondPag',cctp.descricao 'orcFormPag'," _
                 & "ttc.descricao 'orcTipoFrete',o.obs 'orcObs',op.obs 'orcObsPadrao'," _
                 & "f.nomeCompleto 'vendedorNome',f2.nomeCompleto 'funcNome'," _
                 & "cf.descricao 'funcCargo', f.email1 'funcEmail'," _
                 & "CONCAT('File://',f.assCaminho) 'funcAss', " _
                 & "cc.contato 'clienteContato'" _
                 & "FROM orcamento o " _
                 & "INNER JOIN empresa e ON e.idEmpresa = o.idEmpresa " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "INNER JOIN endereco_cliente ec ON ec.idCliente = c.idCliente " _
                 & "INNER JOIN contato_cliente cc ON  cc.idCliente = c.idCliente " _
                 & "INNER JOIN orcamento_tipo_prazo_entrega ctpe ON  ctpe.idTipoPrazo = o.idPrazoEntrega " _
                 & "INNER JOIN controle_cobranca_tipo_pagamento cctp ON  cctp.idTipo = o.idPagamento " _
                 & "INNER JOIN tipo_transporte_cliente ttc ON  ttc.idTipoTransporteCliente = o.idTransporte " _
                 & "INNER JOIN orcamento_obs_padrao op ON op.id = 1 " _
                 & "INNER JOIN funcionario f on f.idFuncionario = o.idVendedor " _
                 & "LEFT JOIN historico_cadastral_orcamento hco ON  hco.idOrcamento = o.idOrcamento AND hco.idTipoAlteracao = 1 " _
                 & "LEFT JOIN usuario u ON u.idUsuario = hco.idUsuario " _
                 & "LEFT JOIN funcionario f2 ON f2.idFuncionario = u.idFuncionario " _
                 & "LEFT JOIN cargofuncao cf ON cf.idcargofuncao = f.idCargoFuncao " _
                 & "LEFT JOIN cliente c2 ON c2.idCliente = o.idInteressado " _
                 & "WHERE o.idOrcamento = '" & Me.idValue & "' AND ec.idTipoEnderecoCliente = 1 AND idTipoContatoCliente = o.tipoContato "
        End Get
    End Property

    Public ReadOnly Property RelatorioServicoSQL() As String
        Get
            Return "SELECT oi.qtd 'qtd', CONCAT(sgv.descricao_servico(s.idServico)," _
                 & "' ',oi.complemento) 'descricao'," _
                 & "GROUP_CONCAT(DISTINCT(sl.descricao)) 'tipoServ'," _
                 & "GROUP_CONCAT(DISTINCT(tai.descricao)) 'acred',oi.vlr 'vlrUnit'," _
                 & "total_item_orc_desc(oi.idItem) 'vlrTotal'," _
                 & "tec.descricao 'equip',oi.vlrDesc 'desconto'," _
                 & "oi.idTipoDesconto 'tipoDesconto' " _
                 & "FROM orcamento_itens oi " _
                 & "INNER JOIN servico s ON s.idServico = oi.idServico " _
                 & "LEFT JOIN tipo_servico_licitacao sl ON  sl.idTipoServicoLicitacao = oi.idTipoServ " _
                 & "LEFT JOIN tipo_acreditacao_item tai ON  tai.idTipoAcreditacaoItem = oi.idTipoAcraditacao " _
                 & "LEFT JOIN tipo_equipamento_controle tec ON  tec.idTipoEquipamento = oi.idEquipe " _
                 & "WHERE idOrcamento = '" & Me.idValue & "' GROUP BY oi.idItem "
        End Get
    End Property

    Public ReadOnly Property RelatorioDespesaSQL() As String
        Get
            Return "SELECT td.descricao 'despesa', od.valor " _
                 & "FROM orcamento_despesa od " _
                 & "INNER JOIN orcamento o ON o.idOrcamento = od.idOrcamento " _
                 & "INNER JOIN tipo_despesa_servico td ON  td.idTipoDespesaServico = od.idDespesa " _
                 & "WHERE od.idOrcamento = '" & Me.idValue & "'"
        End Get
    End Property

    Public ReadOnly Property RelatorioProdutoSQL() As String
        Get
            Return "SELECT CONCAT(p.descricao,op.complemento) 'descricao'," _
                 & "op.qtd 'qtd',gp.descricao 'Grupo'," _
                 & "sgp.descricao  'subgrupo',op.vlr 'vlrUnitario'," _
                 & "total_produto_orc_desc(op.idOrcamentoProduto)'vlrTotal'," _
                 & "op.vlrDesc 'desconto',op.idTipoDesconto 'tipoDesconto'," _
                 & "pl.validade,op.tipoDeCompra 'natureza' " _
                 & "FROM orcamento_produtos op " _
                 & "LEFT JOIN produto_lote pl ON pl.idLote = op.idLote " _
                 & "INNER JOIN produto p ON p.idProduto = op.idProduto " _
                 & "INNER join produto_subgrupo sgp ON sgp.idSubgrupo = op.idSubgrupo " _
                 & "INNER JOIN produto_grupo gp ON gp.idGrupo=sgp.idGrupo " _
                 & "WHERE op.idOrcamento = '" & Me.idValue & "'"
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioVendedorSQL(ByVal dtInicial As String, ByVal dtFinal As String, Optional ByVal idFunc As String = "") As String
        Get
            Return "SELECT f.nomeCompleto 'nome',os.descricao 'situacao',COUNT(*) 'total',SUM(o.vlrTotal) 'valor' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                 & "INNER JOIN funcionario f ON f.idFuncionario = o.idVendedor " _
                 & "WHERE o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "AND o.status = 1 " _
                 & IIf(Not String.IsNullOrEmpty(idFunc), "AND o.idVendedor='" & idFunc & "' ", "").ToString() _
                 & "GROUP BY f.nomeCompleto , os.descricao ORDER BY nome "
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioOrcamentistaSQL(ByVal dtInicial As String, ByVal dtFinal As String, Optional ByVal idFunc As String = "") As String
        Get
            Return "SELECT f.nomeCompleto 'nome',os.descricao 'situacao',COUNT(*) 'total',SUM(o.vlrTotal) 'valor' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                 & "INNER JOIN historico_cadastral_orcamento hco ON hco.idOrcamento = o.idOrcamento AND idTipoAlteracao=1 " _
                 & "INNER JOIN usuario u ON u.idUsuario = hco.idUsuario " _
                 & "INNER JOIN funcionario f ON f.idFuncionario = u.idFuncionario " _
                 & "WHERE o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "AND o.status = 1 " _
                 & IIf(Not String.IsNullOrEmpty(idFunc), "AND u.idFuncionario='" & idFunc & "' ", "").ToString() _
                 & "GROUP BY f.nomeCompleto , os.descricao ORDER BY nome "
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioVendedorByMesSQL(ByVal dtInicial As String, ByVal dtFinal As String, Optional ByVal idFunc As String = "") As String
        Get
            Return "SELECT f.nomeCompleto 'nome',os.descricao 'situacao',MONTH(o.dtCadastro) 'mes',SUM(o.vlrTotal) 'valor' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                 & "INNER JOIN funcionario f ON f.idFuncionario = o.idVendedor " _
                 & "WHERE o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "AND o.status = 1 " _
                 & IIf(Not String.IsNullOrEmpty(idFunc), "AND o.idVendedor='" & idFunc & "' ", "").ToString() _
                 & "GROUP BY f.nomeCompleto , mes ORDER BY mes "
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioOrcamentitstaByMesSQL(ByVal dtInicial As String, ByVal dtFinal As String, Optional ByVal idFunc As String = "") As String
        Get
            Return "SELECT f.nomeCompleto 'nome',os.descricao 'situacao',MONTH(o.dtCadastro) 'mes',COUNT(*) 'total' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                 & "INNER JOIN historico_cadastral_orcamento hco ON hco.idOrcamento = o.idOrcamento " _
                 & "INNER JOIN usuario u ON u.idUsuario = hco.idUsuario AND idTipoAlteracao=1 " _
                 & "INNER JOIN funcionario f ON f.idFuncionario = u.idFuncionario " _
                 & "WHERE o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "AND o.status = 1 " _
                 & IIf(Not String.IsNullOrEmpty(idFunc), "AND u.idFuncionario='" & idFunc & "' ", "").ToString() _
                & "GROUP BY f.nomeCompleto , mes ORDER BY mes "
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLReprovados(ByVal dtInicial As String, ByVal dtFinal As String) As String
        Get
            Return "SELECT motivoReprovacao 'motivo', COUNT(*) 'qtd', SUM(vlrTotal) 'vlr'" _
                 & "FROM orcamento o " _
                 & "WHERE idSituacao = 10 AND  dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' " _
                 & "GROUP BY motivoReprovacao ORDER BY COUNT(*) DESC "
        End Get
    End Property

    Public Shared ReadOnly Property RelatorioSQLFaturamentoDetalhado(ByVal cond As String) As String
        Get
            Return "SELECT CONCAT(c.nomeFantasia,' - ',ec.cidade) 'unidade', f.nf 'nf', DATE_FORMAT(f.dtFat,'%d/%m/%Y') 'dtEmissao', " _
                 & "o.numPedido 'numPedido', tec.descricao 'servico', " _
                 & "oi.qtd 'qtd', total_item_orc_desc(oi.idItem) 'valor' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_itens oi ON oi.idOrcamento = o.idOrcamento " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "INNER JOIN ordem_servico_item osi ON osi.idOrcItem = oi.idItem " _
                 & "INNER JOIN faturamento_itens_os fio ON fio.idItemOs = osi.idItem " _
                 & "INNER JOIN ordem_servico os ON os.idOs = osi.idOs " _
                 & "INNER JOIN faturamento f ON f.idFat = fio.idFat " _
                 & "INNER JOIN tipo_equipamento_controle tec ON tec.idTipoEquipamento = oi.idEquipe " _
                 & "INNER JOIN endereco_cliente ec ON ec.idCliente = c.idCliente " _
                 & "WHERE osi.fat = 1 AND " & cond & " GROUP BY oi.idItem " _
                 & "UNION " _
                 & "SELECT CONCAT(c.nomeFantasia,' - ',ec.cidade) 'Unidade', f.nf 'Nota Fiscal', DATE_FORMAT(f.dtFat,'%d/%m/%Y') 'Data de Emissão', o.numPedido 'N° Pedido', " _
                 & "p.descricao 'Serviço',  op.qtd 'Quantidade',  total_produto_orc_desc(op.idOrcamentoProduto) 'Valor Total' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_produtos op ON op.idOrcamento = o.idOrcamento " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "INNER JOIN ordem_servico_produto osp ON osp.idOrcamentoProduto = op.idOrcamentoProduto " _
                 & "INNER JOIN faturamento_produtos_os fpo ON fpo.idItem = osp.idItem " _
                 & "INNER JOIN ordem_servico os ON os.idOs = osp.idOs " _
                 & "INNER JOIN faturamento f ON f.idFat = fpo.idFat " _
                 & "INNER JOIN produto p ON p.idProduto = op.idProduto " _
                 & "INNER JOIN endereco_cliente ec ON ec.idCliente = c.idCliente " _
                 & "WHERE osp.fat = 1 AND " & cond & " GROUP BY op.idOrcamentoProduto " _
                 & "UNION " _
                 & "SELECT CONCAT(c.nomeFantasia,' - ',ec.cidade) 'Unidade', f.nf 'Nota Fiscal', DATE_FORMAT(f.dtFat,'%d/%m/%Y') 'Data de Emissão', o.numPedido 'N° Pedido', " _
                 & "tds.descricao 'Serviço',  1 'Quantidade',  od.valor 'Valor Total' " _
                 & "FROM orcamento o " _
                 & "INNER JOIN orcamento_despesa od ON od.idOrcamento = o.idOrcamento " _
                 & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                 & "INNER JOIN faturamento_desp_orc fdo ON fdo.id = od.id " _
                 & "INNER JOIN faturamento f ON f.idFat = fdo.idFat " _
                 & "INNER JOIN tipo_despesa_servico tds ON tds.idTipoDespesaServico = od.idDespesa " _
                 & "INNER JOIN endereco_cliente ec ON ec.idCliente = c.idCliente " _
                 & "WHERE od.fat = 1 AND " & cond & " GROUP BY od.idDespesa"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC() As String
        Get
            Return "\Relatorios\orc.rdlc"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC2() As String
        Get
            Return "\Relatorios\reprovadosOrc.rdlc"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC3() As String
        Get
            Return "\Relatorios\faturadosOrc.rdlc"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC4() As String
        Get
            Return "\Relatorios\vendedoresOrc.rdlc"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC5() As String
        Get
            Return "\Relatorios\OrcamentistaOrc.rdlc"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC6() As String
        Get
            Return "\Relatorios\aprovadoOrc.rdlc"
        End Get
    End Property

    Public Shared ReadOnly Property CaminhoRDLC7() As String
        Get
            Return "\Relatorios\FaturamentoDetalhado.rdlc"
        End Get
    End Property
#End Region

#Region "ENUMS"

    Public Enum TipoDescontoEnum As Byte
        Monetario = 1
        Percentual
        SemDesconto
    End Enum

    Public Enum SituacaoEnum As Integer
        AGUARDANDO_LIBERACAO = 1
        LIBERADO = 2
        LIBERADO_NOVO = 3
        APROVADO = 4
        FAT_PARCIAL = 5
        REC_PARCIAL = 6
        REC_TOTAL = 7
        INATIVO = 8
        ALTERADO = 9
        REPROVADO = 10
        FATURADO = 11
    End Enum

    Public Enum TipoItemEnum As Integer
        SERVICO = 1
        PRODUTO
    End Enum

    Public Enum CampoLog As Integer
        EMPRESA = 1
        CLIENTE
        DESCRICAO_DO_ORCAMENTO
        TIPO_DE_ORCAMENTO
        VENDEDOR
        LOCAL_DO_ORCAMENTO
        INTERESSADO
        CONTATO
        QUANTIDADE_ITEM
        SERVICO_ITEM
        COMPLEMENTO_SERVICO
        EQUIPAMENTO_ITEM
        TIPO_SERVICO_ITEM
        ACREDITACAO_ITEM
        SUBAREA_ITEM
        TIPO_DE_DESCONTO_ITEM
        VALOR_DESCONTO_ITEM
        VALOR_UNITARIO
        IMPOSTO_ITEM
        QUANTIDADE_PRODUTO
        PRODUTO
        COMPLEMENTO_PRODUTO
        TIPO_DE_DESCONTO_PRODUTO
        DESCONTO_PRODUTO
        VALOR_UNITARIO_PRODUTO
        DIAS_PARA_PAGAMENTO
        PRAZO
        FORMA_DE_PAGAMENTO
        VALIDADE_DO_ORCAMENTO
        PRAZO_DE_ENTREGA
        TIPO_DE_ENVIO
        TIPO_DE_DESCONTO_GERAL
        DESCONTO_GERAL
        OBSERVACOES
        TIPO_DE_DESPESA
        VALOR_DA_DESPESA
        OBSERVACAO_DA_OS
        RETROCEDER_PARA_LICITACAO
        NÚMERO_DO_PEDIDO
        RESPONSAVEL_PELO_PEDIDO
        DATA_DE_APROVACAO_DO_CLIENTE
    End Enum

    Public Enum MotivoReprovacao As Integer
        PRECO = 1
        PRAZO
        LOGISTICA
        FATURAMENTO_MINIMO
        CRITERIO_TECNICO
        PRAZO_DE_AGENDAMENTO
        VALIDADE_MRC
        NAO_NECESSITA_RBC
        VIDE_NEGOCIACOES
    End Enum
#End Region

    Public Sub New(ByVal idOrcamento As String)
        Me.idValue = idOrcamento
        CarregaDados()
    End Sub

    Private Sub CarregaDados()
        Dim idEmpresa As Integer = 0
        Dim idCliente As Integer = 0
        Dim idVendedor As String = String.Empty
        Dim idInteressado As Integer = 0
        Dim idTipoTransporte As Integer = 0
        Dim idPrazo As Integer = 0
        Dim idTipoPagamento As Integer = 0
        Dim idTipo As Integer = 0
        Dim idTipoContato As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("select * from orcamento o where o.idOrcamento = '" & Me.idValue & "'")
        If Core.MyData.Read() Then
            Me.situacaoValue = CType(MyData.GetInt32(1), SituacaoEnum)
            idPrazo = MyData.GetInt32(2)
            idTipoTransporte = MyData.GetInt32(3)
            idTipoPagamento = MyData.GetInt32(4)
            idTipo = MyData.GetInt32(5)
            idVendedor = MyData.GetString(6)
            idEmpresa = MyData.GetInt32(7)
            idCliente = MyData.GetInt32(8)
            idInteressado = MyData.GetInt32(9)
            Me.cadastroValue = MyData.GetDateTime(10)
            Me.descricaoValue = MyData.GetString(11)
            Me.dPagamentoValue = MyData.GetString(12)
            Me.prazoExecucaoValue = MyData.GetInt32(13)
            Me.validadeValue = MyData.GetDateTime(14)
            Me.tipoDescontoValue = CType(MyData.GetInt32(15), TipoDescontoEnum)
            Me.descontoValue = MyData.GetDouble(16)
            Me.obsValue = MyData.GetString(17)
            Me.statusValue = MyData.GetBoolean(18)
            Me.liberadoValue = MyData.GetBoolean(19)
            Me.aprovadoValue = MyData.GetBoolean(20)
            'idusuario 21
            'insuse 22
            Me.vlrLiquidoValue = MyData.GetDouble(23)
            idTipoContato = MyData.GetInt32(24)
            If Not MyData.IsDBNull(25) Then Me.obsOsValue = MyData.GetString(25)
            If Not MyData.IsDBNull(26) Then Me.numPedidoValue = MyData.GetString(26)
            If Not MyData.IsDBNull(27) Then Me.responsavelPedidoValue = MyData.GetString(27)
            If Not MyData.IsDBNull(28) Then Me.dtAprovacaoPedidoValue = MyData.GetDateTime(28)
            If Not MyData.IsDBNull(29) Then Me.reprovacaoValue = getIDReprovacao(MyData.GetString(29))
            Me.vlrRecuperado = MyData.GetDouble(30)
        End If
        Core.MyData.Dispose()
        Connection.DisconnectMySQL()
        If idEmpresa > 0 Then Me.empresaValue = New Empresa(idEmpresa)
        If idCliente > 0 Then Me.clienteValue = New Cliente(idCliente)
        If Not String.IsNullOrEmpty(idVendedor) Then Me.vendedorValue = New Funcionario(idVendedor)
        If idInteressado > 0 Then Me.InteressadoValue = New Cliente(idInteressado)
        If idTipoTransporte > 0 Then Me.tipoEnvioValue = New TipoTransporte(idTipoTransporte)
        If idPrazo > 0 Then Me.prazoEntregaValue = New TipoPrazoOrcamento(idPrazo)
        If idTipoPagamento > 0 Then Me.tipoPagamentoValue = New TipoPagamento(idTipoPagamento)
        If idTipo > 0 Then Me.tipoOrcamentoValue = New TipoOrcamento(idTipo)
        If idTipoContato > 0 Then Me.tipoContatoValue = New TipoContato(idTipoContato)
    End Sub

    Private Function getIDReprovacao(ByVal id As String) As MotivoReprovacao
        For Each value In CType([Enum].GetValues(GetType(MotivoReprovacao)), Integer())
            If id.Equals(CType(value, MotivoReprovacao).ToString().Replace("__", "-").Replace("_", " ")) Then
                Return CType(value, MotivoReprovacao)
            End If
        Next
    End Function

    Private Sub SetaDesconto(ByVal id As Integer)
        If id = 1 Then
            Me.tipoDescontoValue = TipoDescontoEnum.Monetario
        ElseIf id = 2 Then
            Me.tipoDescontoValue = TipoDescontoEnum.Percentual
        Else
            Me.tipoDescontoValue = TipoDescontoEnum.SemDesconto
        End If
    End Sub

    Public Function IsOpen() As Boolean
        Dim blninUser As Boolean = False
        Dim strLogin As String = ""
        Connection.ConnectionMysql()
        MyData = DML.Select("o.inUse, u.login", "orcamento o, usuario u", "o.idUsuario = u.idusuario AND o.idOrcamento  = '" & idValue & "' AND o.idUsuario <> " & Core.Usuario.ID & "")
        If MyData.Read Then
            If Not IsDBNull(MyData.Item(1)) Then
                blninUser = MyData.GetBoolean(0)
                strLogin = MyData.GetString(1)
            End If
        End If
        Connection.DisconnectMySQL()
        MyData.Dispose()
        If blninUser Then
            MessageBox.Show("Orçamento " & idValue & " está em uso pelo usuário(a) " & strLogin & ". " & "E será aberto somente leitura.", Core.STR_NOME_SISTEMA, MessageBoxButtons.OK, _
                            MessageBoxIcon.Information)
            Return True
        Else
            Return Not DML.Update("orcamento", "inUse = 1, idUsuario=" & Core.Usuario.ID & "", "idOrcamento  = '" & idValue & "'")
        End If

    End Function

    Public Shared Sub LiberaOrcamento()
        DML.Update("orcamento", "inUse = 0, idUsuario=NULL", "idUsuario  = '" & Core.Usuario.ID & "'")
    End Sub

    Public Function Existe() As Boolean
        If clienteValue IsNot Nothing Then
            Return Me.statusValue
        Else
            Return False
        End If
    End Function

    Public Function ValorBruto() As Double
        Return ValorTotalServicos() + ValorTotalDespesas() + ValorTotalProdutos() + Me.ValorTotalDescontoServicos() + Me.ValorTotalDescontoProduto()
    End Function

    Public Function ValorTotalServicos() As Double
        Dim vlrTotal As Double = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT total_itens_orc('" & Me.idValue & "')")
        If MyData.Read() Then vlrTotal = MyData.GetDouble(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return vlrTotal
    End Function

    Public Function TotalServico() As Integer
        Dim total As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT COUNT(*) " & "FROM orcamento_itens WHERE  idOrcamento = '" & Me.idValue & "'")
        If MyData.Read() Then total = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return total
    End Function

    Public Function TotalServicoByQuantidade() As Integer
        Dim total As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT SUM(qtd) FROM orcamento_itens WHERE  idOrcamento = '" & Me.idValue & "'")
        If MyData.Read() Then If Not MyData.IsDBNull(0) Then total = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return total
    End Function

    Public Function ValorTotalDespesas() As Double
        Dim vlrTotal As Double = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT total_despesa_orc('" & Me.idValue & "')")
        If MyData.Read() Then vlrTotal = MyData.GetDouble(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return vlrTotal
    End Function

    Public Function TotalDespesa() As Integer
        Dim total As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT COUNT(*) FROM orcamento_despesa WHERE  idOrcamento = '" & Me.idValue & "'")
        If MyData.Read() Then total = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return total
    End Function

    Public Function ValorTotalProdutos() As Double
        Dim vlrTotal As Double = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT total_produtos_orc('" & Me.idValue & "')")
        If MyData.Read() Then vlrTotal = MyData.GetDouble(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return vlrTotal
    End Function

    Public Function TotalProduto() As Integer
        Dim total As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT COUNT(*) FROM orcamento_produtos WHERE  idOrcamento = '" & Me.idValue & "'")
        If MyData.Read() Then total = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return total
    End Function

    Public Function TotalProdutoByQuantidade() As Integer
        Dim total As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT SUM(qtd) FROM orcamento_produtos WHERE  idOrcamento = '" & Me.idValue & "'")
        If MyData.Read() Then If Not MyData.IsDBNull(0) Then total = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return total
    End Function

    Public Function ValorTotalDescontoServicos() As Double
        Dim vlrTotal As Double = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT total_desconto_item_orc('" & Me.idValue & "')")
        If MyData.Read() Then vlrTotal = MyData.GetDouble(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return vlrTotal
    End Function

    Public Function ValorTotalDescontoProduto() As Double
        Dim vlrTotal As Double = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("SELECT total_desconto_produto_orc('" & Me.idValue & "')")
        If MyData.Read() Then vlrTotal = MyData.GetDouble(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return vlrTotal
    End Function

    Public Function Liberar() As Boolean
        If Not DML.Update("orcamento", "liberar=1", "idOrcamento = '" & Me.idValue & "'") Then
            Return False
        End If
        If Not DML.Update("orcamento", "idSituacao=2", "idOrcamento = '" & Me.idValue & "'") Then
            Return False
        End If
        AdicionaHistorico(HistoricoCadastral.TypeOfChanceRegistration.Liberar)
        Return True
    End Function

    Public Function Aprovar() As Boolean
        If Not DML.Update("orcamento", "aprovar=1", "idOrcamento = '" & Me.idValue & "'") Then
            Return False
        End If
        If Not DML.Update("orcamento", "idSituacao=4", "idOrcamento = '" & Me.idValue & "'") Then
            Return False
        End If
        AdicionaHistorico(HistoricoCadastral.TypeOfChanceRegistration.Aprovar)
        Return True
    End Function

    Public Function VerificaLoteZerado(ByRef listLote As Generic.List(Of String)) As Boolean
        Dim list As Generic.List(Of Integer) = GetIdsIProduto()
        Dim lote As LoteProduto
        Dim s As String = String.Empty
        Dim b As Boolean = False
        For Each l As Integer In list
            s = GetLoteProduto(l)
            If Not String.IsNullOrEmpty(s) Then
                lote = New LoteProduto(GetLoteProduto(l), False)
                If lote.Quantidade = 0 Then
                    b = True
                    listLote.Add(lote.ID)
                End If
            End If
        Next
        Return b
    End Function

    Public Function Inativar() As Boolean
        If Not DML.Update("orcamento", "status=0, idSituacao=8", "idOrcamento = '" & Me.idValue & "'") Then
            Return False
        End If
        Desviuncular()
        Dim list As Generic.List(Of Integer)
        list = GetIdsIProduto()
        For Each n As Integer In list
            Dim lote As String = GetLoteProduto(n)
            If Not String.IsNullOrEmpty(lote) Then
                Dim l As New LoteProduto(lote, False)
                l.AjustaQuantidadeVirtual(GetQuantidadeProduto(n) * -1)
            End If
        Next
        AdicionaHistorico(HistoricoCadastral.TypeOfChanceRegistration.Inativar)
        Return True
    End Function

    Public Function Reprovar(ByVal motivo As MotivoReprovacao) As Boolean
        If Not DML.Update("orcamento", "idSituacao=10,motivoReprovacao='" & motivo & "'", "idOrcamento = '" & Me.idValue & "'") Then
            Return False
        End If
        Dim list As Generic.List(Of Integer)
        list = GetIdsIProduto()
        For Each n As Integer In list
            Dim lote As String = GetLoteProduto(n)
            If Not String.IsNullOrEmpty(lote) Then
                Dim l As New LoteProduto(lote, False)
                l.AjustaQuantidadeVirtual(GetQuantidadeProduto(n) * -1)
            End If
        Next
        AdicionaHistorico(HistoricoCadastral.TypeOfChanceRegistration.Reprovar)
        Return True
    End Function

    Public Function GetIdsIProduto() As Generic.List(Of Integer)
        Dim ids As New Generic.List(Of Integer)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idOrcamentoProduto", "orcamento_produtos", "idOrcamento = '" & Me.idValue & "'")
        While Core.MyData.Read()
            ids.Add(MyData.GetInt32(0))
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return ids
    End Function

    Public Function GetIdsIServico() As Generic.List(Of Integer)
        Dim ids As New Generic.List(Of Integer)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idItem", "orcamento_itens", "idOrcamento = '" & Me.idValue & "'")
        While Core.MyData.Read()
            ids.Add(MyData.GetInt32(0))
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return ids
    End Function

    Public Function GetQuantidadeProduto(ByVal idProdutoOrc As Integer) As Integer
        Dim qtd As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("qtd", "orcamento_produtos", "idOrcamentoProduto = '" & idProdutoOrc & "'")
        While Core.MyData.Read()
            qtd = MyData.GetInt32(0)
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return qtd
    End Function

    Public Function GetLoteProduto(ByVal idOrcamentoProduto As Integer) As String
        Dim lote As String = String.Empty
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idLote", "orcamento_produtos", "idOrcamentoProduto = '" & idOrcamentoProduto & "'")
        While Core.MyData.Read()
            If Not Core.MyData.IsDBNull(0) Then
                lote = MyData.GetString(0)
            End If
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return lote
    End Function

    Public Shared Function GetDirectorioPadrao() As String
        Dim folder As String = ""
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("local", "orcamento_pasta", "idorcamento_pasta = 1")
        If Core.MyData.Read() Then
            folder = Core.MyData.GetString(0)
        End If
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return folder
    End Function

    Private Shared Sub SetDirectoryORC(ByVal diretorio As String)
        DML.Update("orcamento_pasta", "local = '" & diretorio.Replace("\", "\\") & "'", "idorcamento_pasta = 1")
    End Sub

    Public Function GetDiretorio() As String
        Dim dirTemp As String = Me.ID.Replace("/", "-")
        If dirTemp.Length > 16 Then
            Dim temp As String = String.Empty
            For Each c As Char In dirTemp
                If IsNumeric(c) Or c = "/" Or c = "-" Then
                    temp += c
                End If
            Next
            dirTemp = temp
        End If
        Return GetDirectorioPadrao() & "\" & dirTemp.Substring(12, 4) & "\" & dirTemp & "\"
    End Function

    Public Function LocalArquivo() As String
        Return GetDiretorio() & "\ORC-" & Me.ID.Replace("/", "-") & ".pdf"
    End Function

    Public Function AdicionaHistorico(ByVal intTipo As HistoricoCadastral.TypeOfChanceRegistration) As Boolean
        Return DML.Insert("historico_cadastral_orcamento", "idUsuario,idTipoAlteracao,idOrcamento,data,hora", " " & Core.Usuario.ID & "," & intTipo & ",'" & Me.idValue & "',CURRENT_DATE(),CURTIME()")
    End Function

    Public Function AdicionaHistorico(ByVal intTipo As HistoricoCadastral.TypeOfChanceRegistration, ByVal dt As String) As Boolean
        Dim e As New Extras.Date()
        Dim dtC As String = e.ConvertToInternacionalDate(dt)
        Return DML.Insert("historico_cadastral_orcamento", "idUsuario,idTipoAlteracao,idOrcamento,data,hora", "" & Core.Usuario.ID & "," & intTipo & ",'" & Me.idValue & "','" & dtC & "',CURTIME()")
    End Function

    Public Function ContemProdutoParaImportar() As Boolean
        Dim count As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("COUNT(*)", "orcamento_produtos", "idOrcamento = '" & Me.idValue & "' AND qtd - count_produto_os(idOrcamentoProduto) > 0")
        If Core.MyData.Read() Then
            count = Core.MyData.GetInt32(0)
        End If
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return count > 0
    End Function

    Public Function ContemServicoParaImportar() As Boolean
        Dim count As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("COUNT(*)", "orcamento_itens", "idOrcamento = '" & Me.idValue & "' AND qtd - count_servico_os(idItem) > 0")
        If Core.MyData.Read() Then count = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return count > 0
    End Function

    Public Function ContemProduto() As Boolean
        Dim count As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("COUNT(*)", "orcamento_produtos", "idOrcamento = '" & Me.idValue & "'")
        If Core.MyData.Read() Then count = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return count > 0
    End Function

    Public Function ContemServico() As Boolean
        Dim count As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("COUNT(*)", "orcamento_itens", "idOrcamento = '" & Me.idValue & "'")
        If Core.MyData.Read() Then count = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return count > 0
    End Function

    Public Function ContemDespesa() As Boolean
        Dim count As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("COUNT(*)", "orcamento_despesa", "idOrcamento = '" & Me.idValue & "'")
        If Core.MyData.Read() Then count = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return count > 0
    End Function

    Public Function NotFaturado() As Boolean
        Dim b As Boolean = True
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(idFat)", _
                            "faturamento_desp_orc fdo " _
                          & "INNER JOIN orcamento_despesa od ON od.id = fdo.id ", _
                            "od.idOrcamento='" & idValue & "'")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then b = False
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(idFat)", _
                            "faturamento_itens_os fio " _
                          & "INNER JOIN ordem_servico_item osi ON osi.idItem = fio.idItemOs " _
                          & "INNER JOIN orcamento_itens oi ON oi.idItem = osi.idOrcItem ", _
                            "oi.idOrcamento='" & idValue & "'")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then b = False
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(idFat)", _
                            "faturamento_produtos_os fpo " _
                          & "INNER JOIN ordem_servico_produto osp ON osp.idItem = fpo.idItem " _
                          & "INNER JOIN orcamento_produtos op ON op.idOrcamentoProduto = osp.idOrcamentoProduto ", _
                            "op.idOrcamento='" & idValue & "'")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then b = False
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Return b
    End Function

    Public Function IsFaturadoParcial() As Boolean
        Dim count As Boolean = False
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(*)", "orcamento_itens oi ", "oi.idOrcamento= '" & idValue & "' AND count_servico_os(oi.idItem) < oi.qtd")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then count = True
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(*)", _
                            "ordem_servico_item oi " _
                          & "INNER JOIN orcamento_itens oit ON oit.idItem = oi.idOrcItem " _
                          & "INNER JOIN orcamento o ON o.idOrcamento = oit.idOrcamento " _
                          & "INNER  JOIN orcamento_situacao oss ON oss.idSituacao = o.idSituacao", _
                            "oit.idOrcamento= '" & idValue & "' AND oi.fat = 0 AND oi.status=1 LIMIT 1")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then count = True
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(*)", "orcamento_produtos op ", "op.idOrcamento= '" & idValue & "' AND count_produto_os(op.idOrcamentoProduto) < op.qtd")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then count = True
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(*)", _
                            "ordem_servico_produto osp " _
                          & "INNER JOIN orcamento_produtos op ON op.idOrcamentoProduto = osp.idOrcamentoProduto " _
                          & "INNER JOIN orcamento o ON o.idOrcamento = op.idOrcamento " _
                          & "INNER  JOIN orcamento_situacao oss ON oss.idSituacao = o.idSituacao", _
                            "op.idOrcamento= '" & idValue & "' AND osp.fat = 0 AND osp.status=1 LIMIT 1")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then count = True
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(*)", "orcamento_despesa op ", "op.idOrcamento= '" & idValue & "' AND fat = 0 LIMIT 1")
        If MyData.Read() Then
            If MyData.GetInt32(0) > 0 Then count = True
        End If
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Return count
    End Function

    Public Function UpdateSituacao() As Boolean
        Return DML.Update("orcamento", "idSituacao = " & Me.situacaoValue & "", "idOrcamento = '" & Me.idValue & "'")
    End Function

    Public Sub SetSituacao()
        If liberadoValue Then
            Me.situacaoValue = Orcamento.SituacaoEnum.LIBERADO
            If aprovadoValue Then
                Me.situacaoValue = Orcamento.SituacaoEnum.APROVADO
                If Not NotFaturado() Then
                    If IsFaturadoParcial() Then
                        Me.situacaoValue = Orcamento.SituacaoEnum.FAT_PARCIAL
                    Else
                        Me.situacaoValue = Orcamento.SituacaoEnum.FATURADO
                    End If
                End If
            End If
        Else
            Me.situacaoValue = SituacaoEnum.AGUARDANDO_LIBERACAO
        End If
        UpdateSituacao()
    End Sub

    Public Shared Function RetrocederLicitacaoServico(ByVal idItem As Integer, ByVal idLicitacaoItem As Integer, ByVal qtd As Integer, ByVal tipoItem As TipoItemEnum) As Boolean
        Select Case tipoItem
            Case Orcamento.TipoItemEnum.SERVICO : Return DML.Delete("orcamento_itens", "idItem=" & idItem & "")
            Case Orcamento.TipoItemEnum.PRODUTO : Return DML.Delete("orcamento_produtos", "idOrcamentoProduto=" & idItem & "")
        End Select
        Return False
    End Function

    Public Shared Function ItemRetornavelServicoLicitacao(ByVal idItem As Integer, ByVal qtd As Integer) As Boolean
        Dim qtdOs As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("count_servico_os(oi.idItem)", "orcamento_itens oi  ", "oi.idItem='" & idItem & "'")
        If MyData.Read Then If Not MyData.IsDBNull(0) Then qtdOs = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return qtdOs = 0
    End Function

    Public Function EmOS() As Boolean
        Dim os As Boolean = False
        Connection.ConnectionMysql()
        MyData = DML.Select("count_servico_os(oi.idItem)", "orcamento_itens oi  ", "oi.idOrcamento='" & Me.idValue & "'")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then os = MyData.GetInt32(0) > 0
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Connection.ConnectionMysql()
        MyData = DML.Select("count_produto_os(op.idOrcamentoProduto)", "orcamento_produtos op  ", "op.idOrcamento='" & Me.idValue & "'")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then os = MyData.GetInt32(0) > 0
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return os
    End Function

    Public Shared Function ProdutoRetornavelServicoLicitacao(ByVal idItem As Integer, ByVal qtd As Integer) As Boolean
        Dim qtdOs As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("count_produto_os(op.idOrcamentoProduto)", "orcamento_produtos op  ", "op.idOrcamentoProduto='" & idItem & "'")
        If MyData.Read Then If Not MyData.IsDBNull(0) Then qtdOs = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return qtdOs = 0
    End Function

    Public Shared Function GetListaSituacao() As Object()
        Dim list As New Generic.List(Of String)
        Connection.ConnectionMysql()
        MyData = DML.Select("descricao", "orcamento_situacao", "status=1 ORDER BY descricao")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then list.Add(MyData.GetString(0))
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return list.ToArray()
    End Function

    Public Shared Function GetIDSituacaoByDescricao(ByVal desc As String) As Integer
        Dim id As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("idSituacao", "orcamento_situacao", "descricao = '" & desc & "'")
        MyData.Read()
        id = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Return id
    End Function

    Public Shared Function GetIDTipoOrcamentoByDescricao(ByVal desc As String) As Integer
        Dim id As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("idTipo", "orcamento_tipo", "descricao = '" & desc & "'")
        MyData.Read()
        id = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Return id
    End Function

    Public Shared Function GetListaTipoOrcamento() As Object()
        Dim list As New Generic.List(Of String)
        Connection.ConnectionMysql()
        MyData = DML.Select("descricao", "orcamento_tipo", "status=1 ORDER BY descricao")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then list.Add(MyData.GetString(0))
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return list.ToArray()
    End Function

    Public Shared Function GetIdByRecebimento(ByVal idRec As String) As Generic.List(Of String)
        Dim ids As New Generic.List(Of String)
        Connection.ConnectionMysql()
        MyData = DML.Select("DISTINCT oi.idOrcamento", "orcamento_itens oi INNER JOIN recebimento_itens ri  ON  ri.idOrcItens = oi.idItem", "ri.idRec='" & idRec & "'")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then ids.Add(MyData.GetString(0))
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return ids
    End Function

    Public Shared Function GetIDItemLicitacaoByIDItemOrc(ByVal idOrcItem As Integer) As Integer
        Dim id As Integer = 0
        Connection.ConnectionMysql()
        MyData = DML.Select("oi.idLicitaItem", "orcamento_itens oi  ", "oi.idItem='" & idOrcItem & "'")
        If MyData.Read Then If Not MyData.IsDBNull(0) Then id = MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return id
    End Function

    Public Function CarregaServicosView() As DataTable
        Return DML.FeedDataGridView("oi.idItem,oi.idTipoDesconto," _
                                  & "oi.idServico,oi.idEquipe,1,oi.qtd," _
                                  & "tec.descricao,oi.complemento," _
                                  & "tsl.descricao,tai.descricao,tsa.descricao," _
                                  & "otd.descricao,oi.vlrDesc,oi.vlr,s.vlrImposto," _
                                  & "total_item_orc_desc(oi.idItem) 'total'," _
                                  & "oi.idItem,oi.idTipoServ,oi.idOrcamento 'Orc.',oi.local 'Local'", _
                                    "orcamento_itens oi " _
                                  & "INNER JOIN servico s ON s.idServico = oi.idServico " _
                                  & "LEFT JOIN tipo_acreditacao_item tai ON tai.idTipoAcreditacaoItem = oi.idTipoAcraditacao " _
                                  & "LEFT JOIN tipo_sub_area tsa ON tsa.idSubArea = oi.idSubArea " _
                                  & "LEFT JOIN tipo_servico_licitacao tsl ON tsl.idTipoServicoLicitacao = oi.idTipoServ " _
                                  & "LEFT JOIN orcamento_tipo_desconto otd ON otd.idTipo = oi.idTipoDesconto " _
                                  & "LEFT JOIN tipo_equipamento_controle tec ON tec.idTipoEquipamento = oi.idEquipe ", _
                                    "oi.idOrcamento = '" & Me.idValue & "' ")
    End Function

    Public Function CarregaServicos() As DataTable
        Return DML.FeedDataGridView("oi.idItem,oi.idTipoDesconto,oi.idServico,oi.idEquipe," _
                                  & "1,oi.qtd,sgv.descricao_servico(s.idServico)," _
                                  & "oi.complemento,tec.descricao,tsl.descricao," _
                                  & "tai.descricao,tsa.descricao," _
                                  & "otd.descricao,oi.vlrDesc,oi.vlr,s.vlrImposto," _
                                  & "total_item_orc_desc(oi.idItem) 'total'," _
                                  & "oi.idTipoServ,oi.idTipoAcraditacao," _
                                  & "oi.idSubArea,oi.idLicitaItem," _
                                  & "oi.local", _
                                    "orcamento_itens oi " _
                                  & "INNER JOIN servico s ON s.idServico = oi.idServico " _
                                  & "LEFT JOIN tipo_acreditacao_item tai ON tai.idTipoAcreditacaoItem = oi.idTipoAcraditacao " _
                                  & "LEFT JOIN tipo_sub_area tsa ON tsa.idSubArea = oi.idSubArea " _
                                  & "LEFT JOIN tipo_servico_licitacao tsl ON tsl.idTipoServicoLicitacao = oi.idTipoServ " _
                                  & "LEFT JOIN orcamento_tipo_desconto otd ON otd.idTipo = oi.idTipoDesconto " _
                                  & "LEFT JOIN tipo_equipamento_controle tec ON tec.idTipoEquipamento = oi.idEquipe ", _
                                    "oi.idOrcamento = '" & Me.idValue & "'")
    End Function

    Public Function CarregaServicosRecebimento() As DataTable
        Return DML.FeedDataGridView("oi.idItem,oi.idTipoDesconto,oi.idServico," _
                                  & "oi.idEquipe,1,oi.qtd - count_servico_rec(oi.idItem)," _
                                  & "tec.descricao,oi.complemento," _
                                  & "tsl.descricao,tai.descricao,tsa.descricao," _
                                  & "otd.descricao,oi.vlrDesc,oi.vlr,s.vlrImposto," _
                                  & "total_item_orc_desc(oi.idItem) 'total'," _
                                  & "oi.idItem,oi.idTipoServ," _
                                  & "oi.idOrcamento 'Orcamento',oi.qtd - count_servico_rec(oi.idItem)," _
                                  & "oi.complemento,oi.idLicitaItem ", _
                                    "orcamento_itens oi " _
                                  & "INNER JOIN servico s ON s.idServico = oi.idServico " _
                                  & "INNER JOIN tipo_acreditacao_item tai ON tai.idTipoAcreditacaoItem = oi.idTipoAcraditacao " _
                                  & "INNER JOIN tipo_sub_area tsa ON tsa.idSubArea = oi.idSubArea " _
                                  & "INNER JOIN tipo_servico_licitacao tsl ON tsl.idTipoServicoLicitacao = oi.idTipoServ " _
                                  & "LEFT JOIN orcamento_tipo_desconto otd ON otd.idTipo = oi.idTipoDesconto " _
                                  & "LEFT JOIN tipo_equipamento_controle tec ON tec.idTipoEquipamento = oi.idEquipe ", _
                                    "oi.idOrcamento = '" & Me.idValue & "' AND " _
                                  & "oi.qtd - count_servico_rec(oi.idItem) > 0 AND oi.local <> 'EXTERNO'")
    End Function

    Public Function CarregaServicoOS() As DataTable
        Return DML.FeedDataGridView("oi.idItem,oi.idTipoDesconto,oi.idServico," _
                                  & "oi.idEquipe,1,oi.qtd - count_servico_os(oi.idItem)," _
                                  & "tec.descricao,oi.complemento," _
                                  & "tsl.descricao,tai.descricao,tsa.descricao," _
                                  & "otd.descricao,oi.vlrDesc,oi.vlr,s.vlrImposto," _
                                  & "total_item_orc_desc(oi.idItem) 'total'," _
                                  & "oi.idItem,oi.idTipoServ," _
                                  & "oi.idOrcamento 'Orcamento',oi.qtd - count_servico_os(oi.idItem),tsl.idTipoServicoLicitacao," _
                                  & "tsa.idSubArea,tai.idTipoAcreditacaoItem," _
                                  & "CONCAT(sgv.descricao_servico(oi.idServico),' ',oi.complemento)," _
                                  & "oi.local 'Local'", _
                                    "orcamento_itens oi " _
                                  & "INNER JOIN servico s ON s.idServico = oi.idServico " _
                                  & "INNER JOIN tipo_acreditacao_item tai ON tai.idTipoAcreditacaoItem = oi.idTipoAcraditacao " _
                                  & "INNER JOIN tipo_sub_area tsa ON tsa.idSubArea = oi.idSubArea " _
                                  & "INNER JOIN tipo_servico_licitacao tsl ON tsl.idTipoServicoLicitacao = oi.idTipoServ " _
                                  & "LEFT JOIN orcamento_tipo_desconto otd ON otd.idTipo = oi.idTipoDesconto " _
                                  & "LEFT JOIN tipo_equipamento_controle tec ON tec.idTipoEquipamento = oi.idEquipe ", _
                                    "oi.idOrcamento = '" & idValue & "' AND oi.qtd - count_servico_os(oi.idItem) > 0 ")
    End Function

    Public Shared Function ListaDeOrcByCondicao(Optional ByVal condicao As String = "", Optional ByVal orc As String = "") As DataTable
        Return DML.FeedDataGridView("DISTINCT o.idOrcamento,o.`desc`," _
                                  & "c.nomeFantasia,os.descricao," _
                                  & "o.dtAprovacao," _
                                  & "vlrTotal," _
                                  & "f.NomeCompleto,f2.NomeCompleto,o.status," _
                                  & "o.liberar,o.aprovar," _
                                  & "ttc.descricao,ot.descricao," _
                                  & "o.prazoExec," _
                                  & "o.vlrTotal," _
                                  & "o.vlrTotal-valor_faturado_orc(o.idOrcamento)", _
                                    "orcamento o " _
                                  & "INNER JOIN cliente c ON c.idCliente = o.idCliente " _
                                  & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                                  & "LEFT JOIN orcamento_itens oi ON oi.idOrcamento = o.idOrcamento " _
                                  & "LEFT JOIN servico s ON s.idServico = oi.idServico " _
                                  & "INNER JOIN funcionario f ON f.idFuncionario = o.idVendedor " _
                                  & "LEFT JOIN tipo_transporte_cliente ttc ON ttc.idTipoTransporteCliente = o.idTransporte " _
                                  & "LEFT JOIN recebimento_itens ri ON ri.idOrcItens = oi.idItem " _
                                  & "LEFT JOIN orcamento_produtos op ON op.idOrcamento = o.idOrcamento " _
                                  & "INNER JOIN orcamento_tipo ot ON ot.idTipo = o.idTipo " _
                                  & "LEFT JOIN historico_cadastral_orcamento hco ON hco.idOrcamento = o.idOrcamento AND hco.idTipoAlteracao =4 " _
                                  & "LEFT JOIN usuario u ON u.idUsuario = hco.idUsuario " _
                                  & "LEFT JOIN funcionario f2 ON f2.idFuncionario = u.idFuncionario " _
                                  & "LEFT JOIN produto_subgrupo ps ON ps.idSubgrupo = op.idSubgrupo " _
                                  & "LEFT JOIN produto_grupo pg ON pg.idGrupo = ps.idGrupo ", _
                                    "o.status = 1 " _
                                  & IIf(Not String.IsNullOrEmpty(orc), "AND " _
                                  & "o.idOrcamento = '" & orc & "' ", String.Empty).ToString() _
                                  & IIf(Not String.IsNullOrEmpty(condicao), "AND " _
                                  & condicao, String.Empty).ToString() _
                                  & " GROUP BY o.idOrcamento")
    End Function

    Public Shared Function CarregaOrcamentos(ByVal strCondicao As String) As DataTable
        Return DML.FeedDataGridView("o.idOrcamento,c.nomeFantasia,c2.nomeFantasia,os.descricao,o.dtCadastro,vlrTotal,f.NomeCompleto," _
                                  & "o.status,o.liberar,o.aprovar,ttc.descricao," _
                                  & "ot.descricao,f2.NomeCompleto,cc.contato,cc.telefone 'Telefone'," _
                                  & "cc.email,os2.nfFat,motivoReprovacao,vlrRecuperado", _
                                    "orcamento o " _
                                  & "LEFT JOIN cliente c ON c.idCliente = o.idCliente " _
                                  & "LEFT JOIN cliente c2 ON c2.idCliente = o.idInteressado " _
                                  & "LEFT JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao " _
                                  & "LEFT JOIN funcionario f ON f.idFuncionario = o.idVendedor " _
                                  & "LEFT JOIN tipo_transporte_cliente ttc ON ttc.idTipoTransporteCliente = o.idTransporte " _
                                  & "INNER JOIN  orcamento_tipo ot ON ot.idTipo = o.idTipo " _
                                  & "LEFT JOIN historico_cadastral_orcamento hco ON hco.idOrcamento = o.idOrcamento " _
                                  & "LEFT JOIN usuario u ON u.idUsuario = hco.idUsuario " _
                                  & "LEFT JOIN funcionario f2 ON f2.idFuncionario = u.idFuncionario " _
                                  & "LEFT JOIN contato_cliente cc ON cc.idTipoContatoCliente = o.tipoContato AND cc.idCliente = o.idCliente " _
                                  & "LEFT JOIN ordem_servico os2 ON os2.idOrcamento = o.idOrcamento ", _
                                    strCondicao & " GROUP BY SUBSTRING(o.idOrcamento,7) DESC")
    End Function

    Public Function CarregaProdutos() As DataTable
        Return DML.FeedDataGridView("op.idOrcamentoProduto,op.idTipoDesconto," _
                                  & "1,op.idProduto,op.idLote,op.qtd,p.descricao," _
                                  & "op.complemento,pl.validade,pg.descricao," _
                                  & "ps.descricao,tsa.descricao,ot.descricao,op.vlrDesc,op.vlr," _
                                  & "total_produto_orc_desc(op.idOrcamentoProduto)," _
                                  & "op.idSubarea,op.idSubgrupo,idLicitaItem,tipoDeCompra,0", _
                                    "orcamento_produtos op " _
                                  & "LEFT JOIN produto_lote pl ON pl.idLote = op.idLote " _
                                  & "LEFT JOIN produto p ON p.idProduto = op.idProduto " _
                                  & "LEFT JOIN produto_subgrupo ps ON ps.idSubgrupo = op.idSubgrupo " _
                                  & "LEFT JOIN produto_grupo pg ON pg.idGrupo = ps.idGrupo " _
                                  & "LEFT JOIN orcamento_tipo_desconto ot ON ot.idTipo = op.idTipoDesconto " _
                                  & "INNER JOIN tipo_sub_area tsa ON tsa.idSubarea = op.idSubarea", _
                                    "op.idOrcamento = '" & Me.idValue & "'")
    End Function

    Public Function CarregaProdutosOS() As DataTable
        Return DML.FeedDataGridView("op.idOrcamentoProduto,op.idTipoDesconto," _
                                  & "1,op.idProduto,op.idLote,op.qtd - count_produto_os(op.idOrcamentoProduto),p.descricao," _
                                  & "op.complemento,pl.validade,pg.descricao," _
                                  & "ps.descricao,tsa.descricao," _
                                  & "op.idSubarea,pl.certificado,op.qtd - count_produto_os(op.idOrcamentoProduto)", _
                                    "orcamento_produtos op " _
                                  & "LEFT JOIN produto_lote pl ON pl.idLote = op.idLote " _
                                  & "INNER JOIN produto p ON p.idProduto = op.idProduto " _
                                  & "INNER JOIN produto_subgrupo ps ON ps.idSubgrupo = op.idSubgrupo " _
                                  & "INNER JOIN produto_grupo pg ON pg.idGrupo = ps.idGrupo " _
                                  & "LEFT JOIN orcamento_tipo_desconto ot ON ot.idTipo = op.idTipoDesconto " _
                                  & "INNER JOIN tipo_sub_area tsa ON tsa.idSubarea = op.idSubarea", _
                                    "op.idOrcamento = '" & idValue & "' AND op.qtd - count_produto_os(op.idOrcamentoProduto) > 0")
    End Function

    Public Function CarregaProdutosView() As DataTable
        Return DML.FeedDataGridView("op.idOrcamentoProduto,op.idTipoDesconto," _
                                  & "1,op.idProduto,op.idLote,op.qtd,p.descricao," _
                                  & "op.complemento,pl.validade,pg.descricao," _
                                  & "ps.descricao,tsa.descricao,op.idSubarea,pl.certificado", _
                                    "orcamento_produtos op " _
                                  & "LEFT JOIN produto_lote pl ON pl.idLote = op.idLote " _
                                  & "INNER JOIN produto p ON p.idProduto = op.idProduto " _
                                  & "INNER JOIN produto_subgrupo ps ON ps.idSubgrupo = op.idSubgrupo " _
                                  & "INNER JOIN produto_grupo pg ON pg.idGrupo = ps.idGrupo " _
                                  & "LEFT JOIN orcamento_tipo_desconto ot ON ot.idTipo = op.idTipoDesconto " _
                                  & "INNER JOIN tipo_sub_area tsa ON tsa.idSubarea = op.idSubarea", _
                                    "op.idOrcamento = '" & idValue & "'")
    End Function

    Public Function Commit() As Boolean
        Dim dt As New Extras.Date()
        Dim strVencimento As String = dt.ConvertToInternacionalDate(Me.validadeValue.ToShortDateString())
        Dim strAprovacao As String = "NULL"
        Dim strIdFrete As String = String.Empty
        Dim strInteressado As String = String.Empty
        Dim idDesconto As String = String.Empty
        Dim strVlrDesconto As String = String.Empty
        Dim strVlrTotal As String = Me.vlrLiquidoValue.ToString().Replace(",", ".")
        If Me.dtAprovacaoPedidoValue IsNot Nothing Then strAprovacao = "'" & dt.ConvertToInternacionalDate(Me.dtAprovacaoPedidoValue.Value.ToShortDateString()) & "'"
        If Me.InteressadoValue Is Nothing Then
            strInteressado = Me.clienteValue.ID.ToString()
        Else
            strInteressado = Me.InteressadoValue.ID.ToString()
        End If
        If tipoDescontoValue <> TipoDescontoEnum.SemDesconto Then
            strVlrDesconto = Me.descontoValue.ToString().Replace(",", ".")
            idDesconto = CType(tipoDescontoValue, Integer).ToString()
        Else
            strVlrDesconto = "0.00"
            idDesconto = "NULL"
        End If

        If Me.idValue = "#" Then

        ElseIf Me.idValue = "#R" Then

        Else
            If Not DML.Update("orcamento", _
                              "idPrazoEntrega='" & prazoEntregaValue.ID & "'," _
                            & "idTransporte='" & Me.tipoEnvioValue.ID & "'," _
                            & "idPagamento='" & tipoPagamentoValue.ID & "'," _
                            & "idTipo='" & tipoOrcamentoValue.ID & "'," _
                            & "idVendedor='" & Me.vendedorValue.ID & "'," _
                            & "idEmpresa='" & Me.empresaValue.ID & "'," _
                            & "idCliente='" & Me.clienteValue.ID & "'," _
                            & "`desc`='" & Me.descricaoValue.Replace("'", "\'") & "'," _
                            & "Dpag='" & Me.dPagamentoValue.Replace("'", "\'") & "'," _
                            & "prazoExec='" & Me.prazoExecucaoValue & "'," _
                            & "dtValidade='" & strVencimento.Replace("'", "\'") & "'," _
                            & "obs='" & Me.obsValue.Replace("'", "\'") & "'," _
                            & "idInteressado=" & strInteressado & "," _
                            & "idDesconto = " & idDesconto & "," _
                            & "vlrDesconto = " & strVlrDesconto & "," _
                            & "vlrTotal = " & strVlrTotal & "," _
                            & "tipoContato=" & Me.tipoContatoValue.ID & "," _
                            & "obsOs='" & Me.ObsOs.Replace("'", "\'") & "'," _
                            & "numPedido='" & Me.numPedidoValue.Replace("'", "\'") & "'," _
                            & "respPedido='" & Me.responsavelPedidoValue.Replace("'", "\'") & "'," _
                            & "dtAprovacao=" & strAprovacao & "", _
                              "idOrcamento = '" & Me.idValue & "'") Then
                Return False
            Else
                AdicionaHistorico(HistoricoCadastral.TypeOfChanceRegistration.Alterar)
                Return True
            End If
        End If
    End Function

    Public Sub AdicionarLog(ByVal campo As CampoLog, ByVal anterior As String, ByVal atual As String)
        Dim id = DML.NextPK("idLog", "orcamento_log")
        DML.Insert("orcamento_log", _
                   "idLog,idUsuario,idOrc,idCampo,valorAnterior,valorAtual,dtAlteracao,horaAlteracao", "" & id & "," & Core.Usuario.ID & ",'" & Me.idValue & "'," & campo & ",'" & anterior & "','" & atual & "',CURRENT_DATE,CURRENT_TIME")
    End Sub

    Public Sub AdicionaPasta()
        Try
            System.IO.Directory.CreateDirectory(GetDiretorio())
        Catch ex As System.IO.IOException
            MessageBox.Show(ex.Message, Core.STR_NOME_SISTEMA)
        Catch ex As Exception
            MessageBox.Show(ex.Message, Core.STR_NOME_SISTEMA)
        End Try
    End Sub

    Public Shared Function GetComplementoItemByID(ByVal id As Integer) As String
        Dim complemento As String = String.Empty
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("complemento", "orcamento_itens oi", "idItem = '" & id & "'")
        If Core.MyData.Read() Then
            complemento = Core.MyData.GetString(0)
        End If
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return complemento
    End Function

    Public Shared Function CalcTotalItem(ByVal qtd As Integer, ByVal imposto As Double, ByVal preco As Double, ByVal tipoDesconto As Orcamento.TipoDescontoEnum, ByVal desconto As Double) As Double
        Dim total As Double = 0
        Select Case tipoDesconto
            Case Orcamento.TipoDescontoEnum.Monetario
                total = (qtd * preco) - desconto + imposto
            Case Orcamento.TipoDescontoEnum.Percentual
                total = (qtd * preco) - ((preco * qtd) * desconto / 100) + imposto
            Case Orcamento.TipoDescontoEnum.SemDesconto
                total = (qtd * preco) + imposto
        End Select
        Return total
    End Function

    Public Shared Function GetCodServicoByItemServico(ByVal idItem As Integer) As Integer
        Dim servico As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idServico", "orcamento_itens", "idItem = '" & idItem & "'")
        If Core.MyData.Read() Then servico = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return servico
    End Function

    Public Shared Function GetIdTipoServicoByItemServico(ByVal idItem As Integer) As Integer
        Dim servico As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idTipoServ", "orcamento_itens", "idItem = '" & idItem & "'")
        If Core.MyData.Read() Then servico = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return servico
    End Function

    Public Shared Function GetListOrcByCliente(ByVal idCliente As Integer) As Object()
        Return Core.FeedsLists("DISTINCT o.idOrcamento", "orcamento o ", "idCliente = " & idCliente & " AND status=1")
    End Function

    Public Shared Function GetListOrcParaFaturarByCliente(ByVal idCliente As Integer) As Object()
        Return Core.FeedsLists("DISTINCT o.idOrcamento", "orcamento o ", "idCliente = " & idCliente & " AND idSituacao <> 11 AND idSituacao <> 8 AND idSituacao <> 10")
    End Function

    Public Shared Function GetIdTipoAcreditacaoByItemServico(ByVal idItem As Integer) As Integer
        Dim acreditacao As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idTipoAcraditacao", "orcamento_itens", "idItem = '" & idItem & "'")
        If Core.MyData.Read() Then acreditacao = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return acreditacao
    End Function

    Public Shared Function GetIdTipoSubAreaByItemServico(ByVal idItem As Integer) As Integer
        Dim subarea As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idSubArea", "orcamento_itens", "idItem = '" & idItem & "'")
        If Core.MyData.Read() Then subarea = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return subarea
    End Function

    Public Function TotalItens() As Integer
        Return TotalServico() + TotalProduto() + TotalDespesa()
    End Function

    Public Function FirstServicoID() As Integer
        Dim servico As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idItem", "orcamento_itens", "idOrcamento = '" & Me.idValue & "' ORDER BY idItem LIMIT 1")
        If Core.MyData.Read() Then servico = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return servico
    End Function

    Public Function LastServicoID() As Integer
        Dim servico As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idItem", "orcamento_itens", "idOrcamento = '" & Me.idValue & "' ORDER BY idItem DESC LIMIT 1")
        If Core.MyData.Read() Then servico = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return servico
    End Function

    Public Function FirstProdutoID() As Integer
        Dim servico As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idOrcamentoProduto", "orcamento_produtos", "idOrcamento = '" & Me.idValue & "' ORDER BY idOrcamentoProduto LIMIT 1")
        If Core.MyData.Read() Then servico = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return servico
    End Function

    Public Function LastProdutoID() As Integer
        Dim servico As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idOrcamentoProduto", "orcamento_produtos", "idOrcamento = '" & Me.idValue & "' ORDER BY idOrcamentoProduto DESC LIMIT 1")
        If Core.MyData.Read() Then servico = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return servico
    End Function

    Public Sub Desviuncular()
        Dim ids As Generic.List(Of Integer) = GetIdsIServico()
        For Each num As Integer In ids
            DML.Update("orcamento_itens oi,recebimento_itens ri", "ri.idOrcItens=NULL,ri.idOrc=NULL", "idOrcamento = '" & Me.idValue & "' AND idItem=" & num & " AND ri.idOrcItens=" & num & "")
            DML.Update("itens_licitacao il, orcamento_itens oi", "oi.idLicitaItem=NULL", "oi.idItem = " & num & " AND oi.idLicitaItem = il.idItensLicitacao")
        Next
        ids = GetIdsIProduto()
        For Each num As Integer In ids
            DML.Update("itens_licitacao il, orcamento_produtos op", "op.idLicitaItem=NULL", "op.idOrcamentoProduto = " & num & " AND op.idLicitaItem = il.idItensLicitacao")
        Next
    End Sub

    Public Shared Function DesvincularServico(ByVal idItem As Integer) As Boolean
        Return DML.Update("orcamento_itens oi,recebimento_itens ri", "ri.idOrcItens=NULL, ri.idOrc=NULL", "ri.idOrcItens=" & idItem & " AND oi.idItem=" & idItem & "")
    End Function

    Public Function RemoveServico(ByVal idItem As Integer) As Boolean
        If Not Orcamento.DesvincularServico(idItem) Then Return False
        Return DML.Delete("orcamento_itens", "idItem = " & idItem & " AND idOrcamento = '" & Me.idValue & "'")
    End Function

    Public Function RemoveProduto(ByVal idItem As Integer) As Boolean
        Dim l As New LoteProduto(GetLoteProduto(idItem), False)
        l.AjustaQuantidadeVirtual(GetQuantidadeProduto(idItem) * -1)
        Return DML.Delete("orcamento_produtos", "idOrcamentoProduto = " & idItem & " AND idOrcamento = '" & Me.idValue & "'")
    End Function

    Public Shared Function ListOrcOsByCliente(ByVal idCliente As Integer) As Object()
        Return Core.FeedsLists("DISTINCT o.idOrcamento", _
                               "orcamento o " _
                             & "LEFT JOIN orcamento_itens oi ON  oi.idOrcamento = o.idOrcamento " _
                             & "LEFT JOIN orcamento_produtos op ON  op.idOrcamento = o.idOrcamento ", _
                               "status = 1 AND (idSituacao=4 OR idSituacao=5) AND  (oi.qtd > count_servico_os(oi.idItem) OR op.qtd > count_produto_os(op.idOrcamentoProduto)) AND " _
                             & "idcliente = '" & idCliente & "'")
    End Function

    Public Shared Function ListOrcRecByCliente(ByVal idCliente As Integer) As Object()
        Return Core.FeedsLists("DISTINCT o.idOrcamento", _
                               "orcamento o " _
                             & "INNER JOIN orcamento_itens oi ON oi.idOrcamento = o.idOrcamento ", _
                               "o.status = 1 AND  o.idcliente = '" & idCliente & "' AND oi.qtd > count_servico_rec(oi.idItem) AND oi.local <> 'EXTERNO' AND o.idSituacao <> 10 ")
    End Function

    Public Shared Function TotalByData(ByVal init As Date, ByVal fim As Date, ByVal idEmpresa As Integer) As Integer
        Dim total As Integer = 0
        Dim dtInicial As String = String.Empty
        Dim dtFinal As String = String.Empty
        Dim data As New Visomes.Extras.Date()
        dtInicial = data.ConvertToInternacionalDate(init.ToShortDateString)
        dtFinal = data.ConvertToInternacionalDate(fim.ToShortDateString)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("COUNT(*)", "orcamento o", "dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' AND status=1 AND idEmpresa=" & idEmpresa & "")
        If Core.MyData.Read() Then
            If Not MyData.IsDBNull(0) Then total = Core.MyData.GetInt32(0)
        End If
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return total
    End Function

    Public Shared Function TotalByDataSituacao(ByVal init As Date, ByVal fim As Date, ByVal idEmpresa As Integer) As Generic.Dictionary(Of String, Integer)
        Dim total As New Generic.Dictionary(Of String, Integer)
        total.Add("AGUARDANDO LIBERAÇÃO", 0)
        total.Add("LIBERADO", 0)
        total.Add("APROVADO", 0)
        total.Add("FAT. PARCIAL", 0)
        total.Add("REPROVADO", 0)
        total.Add("FATURADO", 0)
        Dim dtInicial As String = String.Empty
        Dim dtFinal As String = String.Empty
        Dim data As New Visomes.Extras.Date()
        dtInicial = data.ConvertToInternacionalDate(init.ToShortDateString)
        dtFinal = data.ConvertToInternacionalDate(fim.ToShortDateString)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("os.descricao,COUNT(*)", _
                                 "orcamento o " _
                               & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao ", _
                                 "o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' AND " _
                               & "o.status=1 AND idEmpresa=" & idEmpresa & " GROUP BY os.descricao")
        While Core.MyData.Read()
            If Not MyData.IsDBNull(1) Then total.Item(MyData.GetString(0)) = MyData.GetInt32(1)
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return total
    End Function

    Public Shared Function ValorByData(ByVal init As Date, ByVal fim As Date, ByVal idEmpresa As Integer) As Double
        Dim total As Double = 0
        Dim dtInicial As String = String.Empty
        Dim dtFinal As String = String.Empty
        Dim data As New Visomes.Extras.Date()
        dtInicial = data.ConvertToInternacionalDate(init.ToShortDateString)
        dtFinal = data.ConvertToInternacionalDate(fim.ToShortDateString)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("SUM(vlrTotal)", "orcamento o", "dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' AND status=1 AND idEmpresa=" & idEmpresa & "")
        If Core.MyData.Read() Then
            If Not MyData.IsDBNull(0) Then total = Core.MyData.GetDouble(0)
        End If
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return total
    End Function

    Public Shared Function ValorByDataSituacao(ByVal init As Date, ByVal fim As Date, ByVal idEmpresa As Integer) As Generic.Dictionary(Of String, Double)
        Dim total As New Generic.Dictionary(Of String, Double)
        total.Add("AGUARDANDO LIBERAÇÃO", 0)
        total.Add("LIBERADO", 0)
        total.Add("APROVADO", 0)
        total.Add("FAT. PARCIAL", 0)
        total.Add("REPROVADO", 0)
        total.Add("FATURADO", 0)
        Dim dtInicial As String = String.Empty
        Dim dtFinal As String = String.Empty
        Dim data As New Visomes.Extras.Date()
        dtInicial = data.ConvertToInternacionalDate(init.ToShortDateString)
        dtFinal = data.ConvertToInternacionalDate(fim.ToShortDateString)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("os.descricao,SUM(vlrTotal)", _
                                 "orcamento o " _
                               & "INNER JOIN orcamento_situacao os ON os.idSituacao = o.idSituacao ", _
                                 "o.dtCadastro BETWEEN '" & dtInicial & "' AND '" & dtFinal & "' AND " _
                               & "o.status=1 AND idEmpresa=" & idEmpresa & " GROUP BY os.descricao")
        While Core.MyData.Read()
            If Not MyData.IsDBNull(1) Then total.Item(MyData.GetString(0)) = MyData.GetDouble(1)
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return total
    End Function

    Public Shared Function ListAll() As Generic.List(Of String)
        Dim list As New Generic.List(Of String)
        Connection.ConnectionMysql()
        MyData = DML.Select("DISTINCT o.idOrcamento", "orcamento o ", "")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then list.Add(MyData.GetString(0))
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return list
    End Function

    Public Shared Function ListOrcByCliente(ByVal idCliente As Integer) As Generic.List(Of String)
        Dim list As New Generic.List(Of String)
        Connection.ConnectionMysql()
        MyData = DML.Select("o.idOrcamento", "orcamento o ", "idCliente=" & idCliente & " AND status=1")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then list.Add(MyData.GetString(0))
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return list
    End Function

    Public Function IsAcreditado() As Boolean
        Dim acreditado As Boolean = False
        Connection.ConnectionMysql()
        MyData = DML.Select("oi.idTipoAcraditacao", "orcamento_itens oi ", "(idTipoAcraditacao=1 OR idTipoAcraditacao=2 OR idTipoAcraditacao=3) AND oi.idOrcamento='" & Me.idValue & "'")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then acreditado = True
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Connection.ConnectionMysql()
        MyData = DML.Select("op.idSubarea", "orcamento_produtos op ", "(idSubgrupo=1 OR idSubgrupo=2) AND op.idOrcamento='" & Me.idValue & "'")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then acreditado = True
        End While
        Connection.DisconnectMySQL()
        MyData.Dispose()
        Return acreditado
    End Function

    Public Function IsExterno() As Boolean
        Dim externo As Boolean = False
        Connection.ConnectionMysql()
        MyData = DML.Select("COUNT(*)", "orcamento_itens oi ", " local='EXTERNO' AND oi.idOrcamento='" & Me.idValue & "'")
        While MyData.Read
            If Not MyData.IsDBNull(0) Then If MyData.GetInt32(0) > 0 Then externo = True
        End While
        Return externo
    End Function

    Public Overrides Function Equals(ByVal obj As Object) As Boolean
        If obj Is Nothing Then Return False
        Return Me.idValue.Equals(CType(obj, Orcamento))
    End Function
End Class
