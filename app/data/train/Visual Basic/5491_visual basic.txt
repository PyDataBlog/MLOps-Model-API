Imports System.IO
Imports System.Runtime.InteropServices

Module Example
    <STAThread()> _
    Sub Main()

        Dim objApplication As SolidEdgeFramework.Application
        Dim objDraftDocument As SolidEdgeDraft.DraftDocument
        Dim objSheet As SolidEdgeDraft.Sheet
        Dim objDimensions As SolidEdgeFrameworkSupport.Dimensions
        Dim objHzDimension As SolidEdgeFrameworkSupport.Dimension
        Dim objVtDimension As SolidEdgeFrameworkSupport.Dimension
        Dim objLines2d As SolidEdgeFrameworkSupport.Lines2d
        Dim objDimStyle As SolidEdgeFrameworkSupport.DimStyle
        Dim objHzLine2d As SolidEdgeFrameworkSupport.Line2d
        Dim objVtLine2d As SolidEdgeFrameworkSupport.Line2d

        Try
            OleMessageFilter.Register()

            objApplication = Marshal.GetActiveObject("SolidEdge.Application")
            objDraftDocument = objApplication.Documents.Add("SolidEdge.DraftDocument")

            'Get the active sheet
            objSheet = objDraftDocument.ActiveSheet

            'Get the lines collection and dimensions collection.
            objLines2d = objSheet.Lines2d
            objDimensions = objSheet.Dimensions

            'Add a horizontal line and a vertical line
            objHzLine2d = objLines2d.AddBy2Points(x1:=0.2, y1:=0.2, x2:=0.3, y2:=0.2)
            objVtLine2d = objLines2d.AddBy2Points(x1:=0.35, y1:=0.35, x2:=0.35, y2:=0.25)

            'Add dimensions to the lines that are created above.
            objHzDimension = objDimensions.AddLength(Object:=objHzLine2d)
            objVtDimension = objDimensions.AddLength(Object:=objVtLine2d)

            'Get the horizontal dim style
            objDimStyle = objHzDimension.Style

            'Get and Set Secondary Linear tolerance unit label.
            objDimStyle.SecondaryLinearToleranceUnitLabel = "A"

        Catch ex As Exception
            Console.WriteLine(ex.Message)
        Finally
            OleMessageFilter.Revoke()
        End Try
    End Sub
End Module