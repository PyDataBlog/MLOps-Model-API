Imports System.Runtime.InteropServices
Imports System.IO

Public Class Form1

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        
        Dim objApp As SolidEdgeFramework.Application
        Dim objDoc As SolidEdgePart.PartDocument
        Dim objModels As SolidEdgePart.Models
        Dim objModel As SolidEdgePart.Model
        Dim bMerge As Boolean
        Dim PlaceHolderObj As Object
        Dim CopiedParts As SolidEdgePart.CopiedPart

        PlaceHolderObj = Nothing

        ' document whose part copy needs to be created
        Dim strPath As String = "C:\Asm2.asm"

        Try
            ' Create/get the application with specific settings
            objApp = Marshal.GetActiveObject("SolidEdge.Application")
            
            ' Assumes document is already loaded in SE.
            objDoc = objApp.ActiveDocument 

            objModels = objDoc.Models

            If Err.Number() Then
                MsgBox("Failed to get models collection.")

            End If

            ' call AddCopiedPartEx that takes arguments for merging all the bodies in single body in case of muliple design bodies.
            objModel = objModels.AddCopiedPartEx(strPath, 1, 1, 1, PlaceHolderObj, PlaceHolderObj, PlaceHolderObj, PlaceHolderObj, True, "config_2", True)

            ' get the part copy features based on index
            CopiedParts = objModel.CopiedParts.Item(1)

            If CopiedParts IsNot Nothing Then

                ' get the Merge into single body flag value for edit
                bMerge = CopiedParts.MergeIntoSingleBody

                ' edit the feature by setting required option for merging into single body flag
                If bMerge = False Then
                    CopiedParts.MergeIntoSingleBody = True
                Else
                    CopiedParts.MergeIntoSingleBody = False
                End If
            End If

            ' need to call update to reflect on display.
            CopiedParts.Update()

            'close the document
            Call objDoc.Close()
            objApp = Nothing
            objDoc = Nothing
            Exit Sub
        Catch ex As Exception
            MsgBox(ex.ToString)
        Finally

            If Not objDoc Is Nothing Then
                objDoc.Close(False)
                objDoc = Nothing
            End If
        End Try

    End Sub

End Class
