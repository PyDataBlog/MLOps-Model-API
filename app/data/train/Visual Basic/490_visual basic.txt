Imports Visomes.Validation
Imports Visomes.Extras
Imports Visomes.MySQL
Imports MySql.Data.MySqlClient
Imports System.Diagnostics
Imports Visomes.ConsultaCNPJ
Imports System.Collections.Generic
Imports Visomes.SGV.Core

''' <summary>
''' EXIBE FORMULÁRIO DE CADASTRO DE CLIENTE
''' </summary>
''' <remarks></remarks>
Public Class CadCliente

#Region "Variaveis"
    Private idTipoObsCliente As Integer
    Private idTipoFaturamentoCliente As Integer
    Private idRegiaoCliente As Integer
    Private idTipoGrupoCliente As Integer
    Private idTipoTransporteCliente As Integer
    Private idTipoAtividadeCliente As Integer
    Private idTipoContato As Integer
    Private idTipoEndereco As Integer
    Private status As Boolean = True
    Private block As Boolean
    Private strPadraoRegex As String
    Private delFinanceiros As New HashSet(Of Integer)
    Private delContatos As New HashSet(Of Integer)
    Private delEnderecos As New HashSet(Of Integer)
    Private blnValidaSubCadastros As Boolean = True
    Private moeda As New Currency()
    Private valid As New Validating()
    Private stars As Integer
    Private novo As Boolean
#End Region

#Region "Property"

    ''' <summary>
    ''' Lista de contatos a serem deletados
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property ContatosDeletados() As HashSet(Of Integer)
        Get
            Return Me.delContatos
        End Get
        Set(ByVal value As HashSet(Of Integer))
            Me.delContatos = value
        End Set
    End Property

    ''' <summary>
    ''' Lista de endereços a serem deletados
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property DenderecoDeletados() As HashSet(Of Integer)
        Get
            Return Me.delEnderecos
        End Get
        Set(ByVal value As HashSet(Of Integer))
            Me.delEnderecos = value
        End Set
    End Property

    ''' <summary>
    ''' Combobox de atividade de empresa
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property AtividadeEmpresa() As ComboBox
        Get
            Return cboAtividadeEmpresa
        End Get
        Set(ByVal value As ComboBox)
            Me.cboAtividadeEmpresa = value
        End Set
    End Property

    ''' <summary>
    ''' Obtém ou define endereços
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property DataGridViewEndereco() As DataGridView
        Get
            Return dgvEndereco
        End Get
        Set(ByVal value As DataGridView)
            dgvEndereco = value
        End Set
    End Property

    ''' <summary>
    ''' Obtém ou define contatos
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property DataGridViewContato() As DataGridView
        Get
            Return dgvContato
        End Get
        Set(ByVal value As DataGridView)
            dgvContato = value
        End Set
    End Property

    ''' <summary>
    ''' BindingSource de endereço
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property BindingSourceEndereco() As BindingSource
        Get
            Return bdsEndereco
        End Get
        Set(ByVal value As BindingSource)
            bdsEndereco = value
        End Set
    End Property

    ''' <summary>
    ''' BindingSource de contato
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property BindingSourceContato() As BindingSource
        Get
            Return bdsContato
        End Get
        Set(ByVal value As BindingSource)
            bdsContato = value
        End Set
    End Property

    ''' <summary>
    ''' Obtém ou define  Razão Social
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property TextBoxRazaoSocial() As TextBox
        Get
            Return txtRazaoSocial
        End Get
        Set(ByVal value As TextBox)
            txtRazaoSocial = value
        End Set
    End Property

    ''' <summary>
    ''' Obtém ou Define Nome Fantasia
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property TextBoxNomeFantasia() As TextBox
        Get
            Return txtNomeFantasia
        End Get
        Set(ByVal value As TextBox)
            txtNomeFantasia = value
        End Set
    End Property

#End Region

    ''' <summary>
    ''' INICIA UMA NOVA INSTÂNCIA DE frmCadCliente
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub New()
        InitializeComponent()
        Me.novo = True
        blnValidaSubCadastros = True
        ValidatesOutPut = True
        cboTipoPessoa.SelectedIndex = 0
        mtbDataCadastro.Text = CStr(CurrentDate())
        CarregaComboBox()
        txtCodCliente.Text = CStr(DML.NextPK("idCliente", "cliente"))
        CarregaHistoricoCliente(0)
        CarregaEnderecosCliente(0)
        CarregaContatosCliente(0)
        CarregaFinanceiroCliente(0)
        ConfiguraStars()
        ControleAcesso()
    End Sub

    ''' <summary>
    ''' INICIA UMA NOVA INSTÂNCIA DE frmCadCliente
    ''' COM FORMULÁRIO DE CLIENTE CARREGADO
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub New(ByVal idCliente As Integer)
        InitializeComponent()
        Me.novo = False
        CarregaComboBox()
        CarregaCamposCliente(idCliente)
        CarregaHistoricoCliente(idCliente)
        CarregaEnderecosCliente(idCliente)
        CarregaContatosCliente(idCliente)
        CarregaFinanceiroCliente(idCliente)
        ValidatesOutPut = True
        mtbCnpj.ReadOnly = True
        mtbCpf.ReadOnly = True
        cboTipoPessoa.Enabled = False
        ConfiguraStars()
        ControleAcesso()
    End Sub

    ''' <summary>
    ''' INÍCIO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub frmModeloCadastroCliente_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        txtBanco.AutoCompleteCustomSource.AddRange(FeedsListsToString("nome", "bancos", String.Empty))
    End Sub

#Region "Carregamento"

    Private Sub ControleAcesso()
        If Not Core.Usuario.HasAccess(Usuario.TypeAcess.CliCobranca) Then
            Me.chkPedencia.Enabled = False
            Me.chkNegativado.Enabled = False
        End If
    End Sub


    ''' <summary>
    ''' CARREGA CAMPOS DE CADASTRO DO CLIENTE
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Public Sub CarregaCamposCliente(ByVal idCliente As Integer)

        Dim strObsPadrao As String = String.Empty
        Dim strFaturamento As String = String.Empty
        Dim strRegiao As String = String.Empty
        Dim strGrupo As String = String.Empty
        Dim strTransporte As String = String.Empty
        Dim strAtividade As String = String.Empty
        Dim strTipo As String = String.Empty

        Connection.ConnectionMysql()
        MyData = DML.Select("c.idCliente,o.descricao,f.descricao," _
                          & "r.descricao,g.descricao,t.descricao,a.descricao," _
                          & "c.tipo,c.dtCadastro,c.status,c.cnpjCpf," _
                          & "c.ie,c.im,c.razaoSocialNome," _
                          & "c.nomeFantasia,c.homePage,c.limiteCredito," _
                          & "c.obs,c.fornecedor,c.icms,c.fabricante,c.stars," _
                          & "c.interessado,c.pendencia,c.negativado," _
                          & "c.avisos,c.suspenso", _
                            "cliente c  " _
                          & "INNER JOIN  tipo_obs_cliente o ON " _
                          & "c.idTipoObsCliente = o.idTipoObsCliente " _
                          & "INNER JOIN  tipo_faturamento_client f ON " _
                          & "c.idTipoFaturamentoCliente = f.idTipoFaturamentoCliente " _
                          & "INNER JOIN regiao_cliente r ON " _
                          & "c.idRegiaoCliente = r.idRegiaoCliente " _
                          & "INNER JOIN tipo_grupo_client g ON " _
                          & "c.idTipoGrupoCliente = g.idTipoGrupoCliente " _
                          & "INNER JOIN tipo_transporte_cliente t ON " _
                          & "c.idTipoTransporteCliente = t.idTipoTransporteCliente " _
                          & "INNER JOIN tipo_atividade_clientex a ON " _
                          & "c.idTipoAtividadeCliente = a.idTipoAtividadeCliente", _
                            " c.idCliente = " & idCliente & "")
        If MyData.Read() Then
            Me.block = True
            Me.txtCodCliente.Text = MyData.GetString(0)
            strObsPadrao = MyData.GetString(1)
            strFaturamento = MyData.GetString(2)
            strRegiao = MyData.GetString(3)
            strGrupo = MyData.GetString(4)
            strTransporte = MyData.GetString(5)
            strAtividade = MyData.GetString(6)
            strTipo = MyData.GetString(7)
            Me.mtbDataCadastro.Text = MyData.GetString(8)
            Me.status = MyData.GetBoolean(9)
            If strTipo = "PJ" Then
                Me.mtbCnpj.Text = MyData.GetString(10)
            Else
                Me.mtbCpf.Text = MyData.GetString(10)
            End If
            If Not IsDBNull(MyData.Item(11)) Then mtbIe.Text = MyData.GetString(11)
            If Not IsDBNull(MyData.Item(12)) Then mtbIm.Text = MyData.GetString(12)
            Me.txtRazaoSocial.Text = MyData.GetString(13)
            Me.txtNomeFantasia.Text = MyData.GetString(14)
            Me.lklHomePage.Text = MyData.GetString(15)
            Me.txtLimiteCredito.Text = MyData.GetString(16)
            If Not IsDBNull(MyData.Item(17)) Then txtObs.Text = MyData.GetString(17)
            Me.chkFornecedor.Checked = MyData.GetBoolean(18)
            Me.chkIcms.Checked = MyData.GetBoolean(19)
            Me.chkFabricante.Checked = MyData.GetBoolean(20)
            Me.stars = MyData.GetInt32(21)
            Me.chkInteressado.Checked = MyData.GetBoolean(22)
            Me.chkPedencia.Checked = MyData.GetBoolean(23)
            Me.chkNegativado.Checked = MyData.GetBoolean(24)
            If Not MyData.IsDBNull(25) Then Me.txtAvisos.Text = MyData.GetString(25)
            Me.chkSuspenso.Checked = MyData.GetBoolean(26)
            Me.block = False
        End If
        Connection.DisconnectMySQL()
        MyData.Dispose()
        cboObsercaoPadrao.SelectedItem = strObsPadrao
        cboFormaFaturamento.SelectedItem = strFaturamento
        cboRegiaoCliente.SelectedItem = strRegiao
        cboGrupo.SelectedItem = strGrupo
        cboFormaTransporte.SelectedItem = strTransporte
        cboAtividadeEmpresa.SelectedItem = strAtividade
        cboTipoPessoa.SelectedItem = strTipo
        Me.btnSalvar.Enabled = Me.status
        If Not Core.Usuario.HasAccess(Usuario.TypeAcess.clienteAlterar) Then Me.btnSalvar.Enabled = False
    End Sub


    ''' <summary>
    ''' CARREGA HISTORIO CADASTRAL DO CLIENTE
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Private Sub CarregaHistoricoCliente(ByVal idCliente As Integer)
        dgvHistCadastral.DataSource = DML.FeedDataGridView("t.descricao Tipo, h.data Data,h.hora Hora,u.login 'Alterado por'", _
                                                           "historico_cadastral_cliente h " _
                                                         & "INNER JOIN tipo_alteracao_cadastral t, " _
                                                         & "cliente c , usuario u", "h.idUsuario = u.idUsuario" _
                                                         & " AND h.idCliente = c.idCliente AND " _
                                                         & "h.idTipoAlteracaoCadastral = t.idTipoAlteracaoCadastral AND " _
                                                         & "h.idCliente = " & idCliente & "")
    End Sub



    ''' <summary>
    ''' CARREGA ENDEREÇOS
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Private Sub CarregaEnderecosCliente(ByVal idCliente As Integer)
        bdsEndereco.DataSource = DML.FeedDataGridView("e.logradouro ,e.endNumero ,e.endComplemento ,e.bairro ," _
                                                    & "e.cep CEP,e.cidade ,e.uf UF,t.descricao ,e.status ," _
                                                    & "e.dtCadastro 'Data de Cadastro',u.login 'Alterado por'," _
                                                    & "1,e.idTipoEnderecoCliente", _
                                                      "endereco_cliente e, tipo_endereco_cliente t, usuario u", _
                                                      "e.idCliente = " & idCliente & " AND " _
                                                    & "e.idTipoEnderecoCliente = t.idTipoEnderecoCliente " _
                                                    & "AND u.idusuario = e.idUsuario")
        With dgvEndereco()
            .DataSource = bdsEndereco
            .Columns(8).Visible = False 'status
            .Columns(11).Visible = False '1
            .Columns(12).Visible = False 'tipo endereço
            .Columns(0).HeaderText = "Logradouro"
            .Columns(1).HeaderText = "Número"
            .Columns(2).HeaderText = "Complemento"
            .Columns(3).HeaderText = "Bairro"
            .Columns(4).HeaderText = "CEP"
            .Columns(5).HeaderText = "Cidade"
            .Columns(6).HeaderText = "UF"
            .Columns(7).HeaderText = "Tipo"
            .Columns(8).HeaderText = "Status"
            .Columns(9).HeaderText = "Data Alteração"
            .Columns(10).HeaderText = "Criado/Alterado"
            .Columns(0).AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill
            .Columns(2).AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill
        End With
        SetButtomEndereco()
    End Sub

    ''' <summary>
    ''' CONFIGURA BOTÕES DE ENDEREÇO
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub SetButtomEndereco()
        If dgvEndereco.RowCount = 0 Then
            btnDelEnd.Enabled = False
            btnEditEnd.Enabled = False
        Else
            btnDelEnd.Enabled = True
            btnEditEnd.Enabled = True
        End If
    End Sub

    ''' <summary>
    ''' CARREGA CONTATOS DO CLIENTE
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Private Sub CarregaContatosCliente(ByVal idCliente As Integer)
        bdsContato.DataSource = DML.FeedDataGridView("c.telefone Telefone,c.ramal Ramal,c.contato Contato," _
                                                   & "c.departamento Departamento,c.email Email," _
                                                   & "t.descricao Tipo,c.status Status," _
                                                   & "c.dtCadastro 'Data de Cadastro',u.login 'Alterado por'," _
                                                   & "1,c.idTipoContatoCliente", _
                                                     "contato_cliente c, tipo_contato_cliente t, usuario u ", _
                                                     "c.idCliente = " & idCliente & " AND " _
                                                   & "c.idTipoContatoCliente = t.idTipoContatoCliente " _
                                                   & "AND u.idusuario = c.idUsuario")

        With dgvContato()
            .DataSource = bdsContato
            .Columns(6).Visible = False 'status
            .Columns(9).Visible = False '1
            .Columns(10).Visible = False 'tipo
            .Columns(0).HeaderText = "Telefone"
            .Columns(1).HeaderText = "Ramal"
            .Columns(2).HeaderText = "Contato"
            .Columns(3).HeaderText = "Departamento"
            .Columns(4).HeaderText = "Email"
            .Columns(5).HeaderText = "Tipo"
            .Columns(7).HeaderText = "Data Alteração"
            .Columns(8).HeaderText = "Criado/Alterado"
            .Columns(2).AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill
            .Columns(4).AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill
        End With
        SetButtomContato()
    End Sub

    ''' <summary>
    ''' CONFIGURA BOTÕES DE CONTATO
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub SetButtomContato()
        If dgvContato.RowCount = 0 Then
            btnDelCont.Enabled = False
            btnEditCont.Enabled = False
        Else
            btnDelCont.Enabled = True
            btnEditCont.Enabled = True
        End If
    End Sub

    ''' <summary>
    ''' CARREGA FINANCEIRO DO CLIENTE
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Private Sub CarregaFinanceiroCliente(ByVal idCliente As Integer)
        bdsFinanceiro.DataSource = DML.FeedDataGridView("cf.banco 'Banco' , cf.agencia 'Agencia'," _
                                                      & "cf.conta 'Conta', cf.tel 'Tel', cf.contato 'Contato'," _
                                                      & "cf.idClienteFinanceiro,cf.dtCadastro 'Data de Cadastro'," _
                                                      & "u.login 'Criado por'", _
                                                        "cliente_financeiro cf " _
                                                      & "INNER JOIN cliente c ON c.idCliente = cf.idCliente " _
                                                      & "INNER JOIN usuario u ON u.idUsuario = cf.idUsuario", _
                                                        "cf.idCliente = " & idCliente & "")
        dgvFinanceiro.DataSource = bdsFinanceiro
        dgvFinanceiro.Columns(5).Visible = False
        SetButtomFinanceiro()
    End Sub

    ''' <summary>
    ''' CONFIGURA BOTÕES DE FINANCEIRO
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub SetButtomFinanceiro()
        If dgvFinanceiro.RowCount > 0 Then
            btnDelFin.Enabled = True
            btnEditFin.Enabled = True
        Else
            btnDelFin.Enabled = False
            btnEditFin.Enabled = False
        End If
    End Sub

    ''' <summary>
    ''' CARREGA OS COMBOBOX DO FORMULÁRIO
    ''' </summary>
    ''' <remarks></remarks>
    Public Sub CarregaComboBox()

        cboTipoEndereco.Items.Clear()
        cboTipoEndereco.Items.AddRange(FeedsLists("descricao", "tipo_endereco_cliente", "status = 1 ORDER BY descricao"))

        cboTipoContato.Items.Clear()
        cboTipoContato.Items.AddRange(FeedsLists("descricao", "tipo_contato_cliente", "status = 1 ORDER BY descricao"))

        cboAtividadeEmpresa.Items.Clear()
        cboAtividadeEmpresa.Items.AddRange(FeedsLists("descricao", "tipo_atividade_clientex", "status = 1 ORDER BY descricao"))

        cboGrupo.Items.Clear()
        cboGrupo.Items.AddRange(FeedsLists("descricao", "tipo_grupo_client", "status = 1 ORDER BY descricao"))

        cboFormaTransporte.Items.Clear()
        cboFormaTransporte.Items.AddRange(FeedsLists("descricao", "tipo_transporte_cliente", "status = 1 ORDER BY descricao"))

        cboFormaFaturamento.Items.Clear()
        cboFormaFaturamento.Items.AddRange(FeedsLists("descricao", "tipo_faturamento_client", "status = 1 ORDER BY descricao"))

        cboRegiaoCliente.Items.Clear()
        cboRegiaoCliente.Items.AddRange(FeedsLists("descricao", "regiao_cliente", "status = 1 ORDER BY descricao"))

        cboObsercaoPadrao.Items.Clear()
        cboObsercaoPadrao.Items.AddRange(FeedsLists("descricao", "tipo_obs_cliente", "status = 1 ORDER BY descricao"))
    End Sub
#End Region

#Region "Validacao"

    Private Sub mtbTelAgencia_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles mtbTelAgencia.Validating
        If Not valid.Telefone(mtbTelAgencia.Text) Then
            epvCadCliente.SetError(mtbTelAgencia, "Telefone Inválido")
            ValidatesOutPut = False
            blnValidaSubCadastros = False
            ErrorSavamento.Append("Telefone Inválido" & vbCrLf)
        Else
            epvCadCliente.SetError(mtbTelAgencia, "")
            ErrorSavamento.Replace("Telefone Inválido" & vbCrLf, "")
            ValidatesOutPut = True
            blnValidaSubCadastros = True
        End If
    End Sub

    Private Sub mtbTelAgencia_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mtbTelAgencia.TextChanged
        If mtbTelAgencia.Text(5) = "9" And Not block Then
            mtbTelAgencia.Mask = "(00) 00000-0000"
        Else
            mtbTelAgencia.Mask = "(00) 0000-0000"
        End If
    End Sub

    Private Sub mtbCep_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles mtbCep.Validating
        If Not valid.Cep(mtbCep.Text) Then
            epvCadCliente.SetError(mtbCep, "CEP Inválido")
            ValidatesOutPut = False
            blnValidaSubCadastros = False
            ErrorSavamento.Append("CEP Inválido" & vbCrLf)
        Else
            epvCadCliente.SetError(mtbCep, "")
            ErrorSavamento.Replace("CEP Inválido" & vbCrLf, "")
            ValidatesOutPut = True
            blnValidaSubCadastros = True
            Try
                Dim web As New WebService()
                If mtbCep.MaskFull Then
                    web.SearchAdress(mtbCep.Text)
                    txtLogradouro.Text = web.TipoLogradouro & " " & web.Logradouro
                    txtBairro.Text = web.Bairro
                    txtCidade.Text = web.Cidade
                    cboUf2.Text = web.UF
                End If
            Catch ex As System.Exception
                MessageBox.Show(ex.Message, Core.STR_NOME_SISTEMA, MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Try
        End If
    End Sub

    Private Sub mtbTel_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles mtbTel.Validating
        If Not valid.Telefone(mtbTel.Text) Then
            epvCadCliente.SetError(mtbTel, "Telefone Inválido")
            ValidatesOutPut = False
            blnValidaSubCadastros = False
            ErrorSavamento.Append("Telefone Inválido" & vbCrLf)
        Else
            epvCadCliente.SetError(mtbTel, "")
            ErrorSavamento.Replace("Telefone Inválido" & vbCrLf, "")
            ValidatesOutPut = True
            blnValidaSubCadastros = True
        End If
    End Sub

    Private Sub mtbTel_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mtbTel.TextChanged
        If mtbTel.Text.Length >= 5 And Not block Then
            If mtbTel.Text(5) = "9" Then
                mtbTel.Mask = "(00) 00000-0000"
            Else
                mtbTel.Mask = "(00) 0000-0000"
            End If
        End If
    End Sub

    Private Sub txtRamal_KeyPress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtRamal.KeyPress
        valid.InputInteiro(sender, e)
    End Sub

    Private Sub txtLimiteCredito_KeyPress(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyPressEventArgs) Handles txtLimiteCredito.KeyPress
        valid.InputDecimal(sender, e)
    End Sub

    Private Sub txtLimiteCredito_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles txtLimiteCredito.TextChanged
        moeda.TextBoxCurrency(txtLimiteCredito)
    End Sub

    Private Sub mtbCnpj_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles mtbCnpj.Validating
        If Not valid.Cnpj(mtbCnpj.Text) Then
            epvCadCliente.SetError(mtbCnpj, "CNPJ Inválido")
            ErrorSavamento.Replace("CNPJ Inválido" & vbCrLf, "")
            ValidatesOutPut = True
        Else
            epvCadCliente.SetError(mtbCnpj, "")
            ErrorSavamento.Replace("CNPJ Inválido" & vbCrLf, "")
            ValidatesOutPut = True
            Dim cliente As New Cliente(Me.mtbCnpj.Text)
            If cliente.Existe() And Me.novo Then
                MessageBox.Show(String.Format("O CNPJ {0} já está cadastrado como {1}, com o código de cadastro {2}. Não será possível cadastrá-lo novamente.", Me.mtbCnpj.Text, cliente.RazaoSocial, cliente.ID), Core.STR_NOME_SISTEMA)
                e.Cancel = True
            End If
        End If
    End Sub

    Private Sub mtbCpf_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles mtbCpf.Validating
        If Not valid.Cpf(mtbCpf.Text) Then
            epvCadCliente.SetError(mtbCpf, "CPF Inválido")
            ErrorSavamento.Replace("CPF Inválido" & vbCrLf, "")
            ValidatesOutPut = True
        Else
            epvCadCliente.SetError(mtbCpf, "")
            ErrorSavamento.Replace("CPF Inválido" & vbCrLf, "")
            ValidatesOutPut = True
            Dim cliente As New Cliente(Me.mtbCpf.Text)
            If cliente.Existe() And Me.novo Then
                MessageBox.Show(String.Format("O CNPF {0} já está cadastrado como {1}, com o código de cadastro {2:N0}. Não será possível cadastrá-lo novamente.", Me.mtbCpf.Text, cliente.RazaoSocial, cliente.ID), Core.STR_NOME_SISTEMA)
                e.Cancel = True
            End If
        End If
    End Sub

    Private Sub txtEmail_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles txtEmail.Validating
        If Not valid.Email(txtEmail.Text) Then
            epvCadCliente.SetError(txtEmail, "Email Inválido")
            ValidatesOutPut = False
            blnValidaSubCadastros = False
            ErrorSavamento.Append("Email Inválido" & vbCrLf)
        Else
            epvCadCliente.SetError(txtEmail, "")
            ErrorSavamento.Replace("Email Inválido" & vbCrLf, "")
            ValidatesOutPut = True
            blnValidaSubCadastros = True
        End If
    End Sub

    Private Sub txtHomePage_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles txtHomePage.Validating
        If Not valid.Url(txtHomePage.Text) Then
            epvCadCliente.SetError(lblHomePage, "Home Page Inválida")
            ValidatesOutPut = False
            ErrorSavamento.Append("Home Page Inválida" & vbCrLf)
        Else
            ValidatesOutPut = True
            epvCadCliente.SetError(lblHomePage, "")
            ErrorSavamento.Replace("Home Page Inválida" & vbCrLf, "")
        End If
        txtHomePage.Visible = False
        lklHomePage.Visible = True
        lklHomePage.Text = txtHomePage.Text
    End Sub

    Private Sub cboTipoPessoa_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTipoPessoa.SelectedIndexChanged
        If cboTipoPessoa.Text = "PF" Then
            lblRazaoSocial.Text = "Nome Completo"
            mtbCpf.Enabled = True
            mtbCnpj.Enabled = False
            mtbIm.Enabled = False
            txtRazaoSocial.Enabled = True
            txtNomeFantasia.Enabled = False
            mtbIe.Enabled = False
            mtbCnpj.Text = String.Empty
            mtbIe.Text = String.Empty
            mtbIm.Text = String.Empty
            txtNomeFantasia.Text = String.Empty
        ElseIf cboTipoPessoa.Text = "PJ" Then
            lblRazaoSocial.Text = "Razão Social"
            mtbCpf.Enabled = False
            mtbCnpj.Enabled = True
            mtbIm.Enabled = True
            txtRazaoSocial.Enabled = True
            txtNomeFantasia.Enabled = True
            mtbIe.Enabled = True
            mtbCpf.Text = String.Empty
        End If
    End Sub

    Private Sub chkInteressado_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles chkInteressado.CheckedChanged
        If Me.chkInteressado.Checked And Not Me.block Then
            If Me.cboAtividadeEmpresa.SelectedIndex = -1 Then Me.cboAtividadeEmpresa.SelectedIndex = 0
            If Me.cboGrupo.SelectedIndex = -1 Then Me.cboGrupo.SelectedIndex = 0
            If Me.cboFormaTransporte.SelectedIndex = -1 Then Me.cboFormaTransporte.SelectedIndex = 0
            If Me.cboFormaFaturamento.SelectedIndex = -1 Then Me.cboFormaFaturamento.SelectedIndex = 0
            If Me.cboObsercaoPadrao.SelectedIndex = -1 Then Me.cboObsercaoPadrao.SelectedIndex = 0
            If Me.cboRegiaoCliente.SelectedIndex = -1 Then Me.cboRegiaoCliente.SelectedIndex = 0
            If Me.cboTipoPessoa.SelectedIndex = -1 Then Me.cboTipoPessoa.SelectedIndex = 0
        End If
    End Sub
#End Region

#Region "Salvamento"

    Private Sub btnSalvar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnSalvar.Click
        Try
            Me.btnSalvar.Enabled = False
            CancelaEdicaoContato()
            CancelaEdicaoEndereco()
            CancelaEdicaoFinanceiro()
            If ValidSalvamento() Then
                SalvaDados()
            End If
        Catch ex As Exception
            My.Application.Log.WriteException(ex, Diagnostics.TraceEventType.Critical, ex.Message & vbCrLf & ex.StackTrace & vbCrLf & Date.Now)
            Core.SalvaTela()
            MessageBox.Show(ex.Message, Core.STR_NOME_SISTEMA)
        Finally
            Me.btnSalvar.Enabled = True
        End Try
    End Sub

    Private Function ValidSalvamento() As Boolean
        If ValidatesOutPut And IsNullField() Then
            Return True
        Else
            MessageBox.Show(ErrorSavamento.ToString() & FieldBlank.ToString() & "Por favor, verifique-os e tente novamente.", _
                            Core.STR_NOME_SISTEMA, MessageBoxButtons.OK, MessageBoxIcon.Error)
            ErrorSavamento = New System.Text.StringBuilder("Campos incorretos: " & vbCrLf)
            FieldBlank = New System.Text.StringBuilder("Os seguintes campos estão em braco e são obrigatórios: " & vbCrLf)
            Return False
        End If
    End Function

    Private Function IsNullField() As Boolean

        'TIPO DE PESSOA
        If cboTipoPessoa.Text = "" Then
            FieldBlank.Append("Tipo de Pessoa em branco" & vbCrLf)
            epvCadCliente.SetError(txtNomeFantasia, "Tipo de Pessoa em branco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Tipo de Pessoa em branco" & vbCrLf, "")
            epvCadCliente.SetError(txtNomeFantasia, "")
        End If

        'NOME COMPLETO
        If cboTipoPessoa.Text = "PF" Then
            If txtRazaoSocial.Text = "" Then
                FieldBlank.Append("Nome Completo" & vbCrLf)
                epvCadCliente.SetError(txtNomeFantasia, "Nome Completo em banco")
                Return False
            Else
                FieldBlank = FieldBlank.Replace("Nome Completo" & vbCrLf, "")
                epvCadCliente.SetError(txtNomeFantasia, "")
            End If

        ElseIf cboTipoPessoa.Text = "PJ" Then
            'NOME FANTASIA
            If txtNomeFantasia.Text = "" Then
                FieldBlank.Append("Nome Fantasia" & vbCrLf)
                epvCadCliente.SetError(txtNomeFantasia, "Nome Fantasia em banco")
                Return False
            Else
                FieldBlank = FieldBlank.Replace("Nome Fantasia" & vbCrLf, "")
                epvCadCliente.SetError(txtNomeFantasia, "")
            End If
        End If

        If cboTipoPessoa.Text = "PJ" Then
            'RAZÃO SOCIAL
            If txtRazaoSocial.Text = "" Then
                FieldBlank.Append("Razao Social" & vbCrLf)
                epvCadCliente.SetError(txtRazaoSocial, "Razao Social em banco")
                Return False
            Else
                FieldBlank = FieldBlank.Replace("Razao Social" & vbCrLf, "")
                epvCadCliente.SetError(txtRazaoSocial, "")
            End If
        End If

        'REGIÃO CLIENTE
        If cboRegiaoCliente.Text = "" Then
            FieldBlank.Append("Região" & vbCrLf)
            epvCadCliente.SetError(cboRegiaoCliente, "Região em banco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Região" & vbCrLf, "")
            epvCadCliente.SetError(cboRegiaoCliente, "")
        End If

        'CNPJ
        If cboTipoPessoa.Text = "PJ" Then
            If Not mtbCnpj.MaskFull And Not Me.chkInteressado.Checked Then
                FieldBlank.Append("CNPJ" & vbCrLf)
                epvCadCliente.SetError(cboTipoPessoa, "CNPJ em banco")
                Return False
            Else
                FieldBlank = FieldBlank.Replace("CNPJ" & vbCrLf, "")
                epvCadCliente.SetError(cboTipoPessoa, "")
            End If
        End If

        'CPF
        If cboTipoPessoa.Text = "PF" Then
            If Not mtbCpf.MaskFull And Not Me.chkInteressado.Checked Then
                FieldBlank.Append("CPF" & vbCrLf)
                epvCadCliente.SetError(cboTipoPessoa, "CPF em banco")
                Return False
            Else
                FieldBlank = FieldBlank.Replace("CPF" & vbCrLf, "")
                epvCadCliente.SetError(cboTipoPessoa, "")
            End If
        End If

        'ENDEREÇO
        If dgvEndereco.RowCount = 0 And Not Me.chkInteressado.Checked Then
            FieldBlank.Append("Endereço em branco" & vbCrLf)
            epvCadCliente.SetError(grbLocalizacao, "Endereço em banco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Endereço em branco" & vbCrLf, "")
            epvCadCliente.SetError(grbLocalizacao, "")
        End If

        'CONTATO
        If dgvContato.RowCount = 0 And Not Me.chkInteressado.Checked Then
            FieldBlank.Append("Contato em branco" & vbCrLf)
            epvCadCliente.SetError(grbContato, "Contato em banco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Contato em branco" & vbCrLf, "")
            epvCadCliente.SetError(cboAtividadeEmpresa, "")
        End If

        'ATIVIDADE DA EMPRESA
        If cboAtividadeEmpresa.Text = "" Then
            FieldBlank.Append("Ativiade da Empresa" & vbCrLf)
            epvCadCliente.SetError(cboAtividadeEmpresa, "Ativiade da Empresa em banco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Ativiade da Empresa" & vbCrLf, "")
            epvCadCliente.SetError(cboAtividadeEmpresa, "")
        End If

        'GRUPO DA EMPRESA
        If cboGrupo.Text = "" Then
            FieldBlank.Append("Grupo da Empresa" & vbCrLf)
            epvCadCliente.SetError(cboGrupo, "Grupo da Empresa em banco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Grupo da Empresa" & vbCrLf, "")
            epvCadCliente.SetError(cboGrupo, "")
        End If

        'GRUPO DA EMPRESA
        If cboObsercaoPadrao.Text = "" Then
            FieldBlank.Append("Observação padrão" & vbCrLf)
            epvCadCliente.SetError(cboObsercaoPadrao, "Observação padrão")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Observação padrão" & vbCrLf, "")
            epvCadCliente.SetError(cboObsercaoPadrao, "")
        End If

        'FATURAMENTO
        If cboFormaFaturamento.Text = "" Then
            FieldBlank.Append("Forma de faturamento em branco" & vbCrLf)
            epvCadCliente.SetError(cboFormaFaturamento, "Forma de faturamento em brabco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Forma de faturamento em brabco" & vbCrLf, "")
            epvCadCliente.SetError(cboFormaFaturamento, "")
        End If

        'FORMA DE TRANSPORTE
        If cboFormaTransporte.Text = "" Then
            FieldBlank.Append("Forma de transporte em branco" & vbCrLf)
            epvCadCliente.SetError(cboFormaTransporte, "Forma de transporte em branco")
            Return False
        Else
            FieldBlank = FieldBlank.Replace("Forma de transporte em branco" & vbCrLf, "")
            epvCadCliente.SetError(cboFormaTransporte, "")
        End If

        Return True
    End Function

    Private Sub SalvaDados()
        Dim strLimiteCredito As String = txtLimiteCredito.Text.Replace(".", "").Replace(",", ".")
        Dim strCnpjCpf As String = "NULL"
        Dim strIe As String = "NULL"
        Dim strIm As String = "NULL"
        Dim isPendencia As Boolean = False
        Dim isNegativado As Boolean = False
        Dim isSuspenso As Boolean = False
        Dim isNotPendencia As Boolean = False
        Dim isNotNegativado As Boolean = False
        Dim isNotSuspenso As Boolean = False
        If cboTipoPessoa.SelectedIndex = 0 Then
            If Me.mtbCnpj.MaskFull Then strCnpjCpf = "'" & mtbCnpj.Text & "'"
        Else
            If Me.mtbCpf.MaskFull Then strCnpjCpf = "'" & mtbCpf.Text & "'"
        End If
        If mtbIe.MaskFull Then strIe = "'" & mtbIe.Text & "'"
        If Not String.IsNullOrEmpty(mtbIm.Text) Then strIm = "'" & mtbIm.Text & "'"
        If cboTipoPessoa.SelectedIndex = 1 Then txtNomeFantasia.Text = txtRazaoSocial.Text

        If Me.novo Then
            txtCodCliente.Text = CStr(DML.NextPK("idCliente", "cliente"))
            If Not DML.Insert("cliente", _
                              "idCliente,idTipoObsCliente," _
                            & "idTipoFaturamentoCliente," _
                            & "idRegiaoCliente,idTipoGrupoCliente," _
                            & "idTipoTransporteCliente," _
                            & "idTipoAtividadeCliente,tipo," _
                            & "dtCadastro,status,cnpjCpf," _
                            & "ie,im,razaoSocialNome," _
                            & "nomeFantasia,homePage," _
                            & "limiteCredito,obs,fornecedor," _
                            & "icms,fabricante,stars,interessado," _
                            & "pendencia,negativado,avisos,suspenso", _
                              "" & txtCodCliente.Text & "," _
                            & "" & idTipoObsCliente & "," _
                            & "" & idTipoFaturamentoCliente & "," _
                            & "" & idRegiaoCliente & "," _
                            & "" & idTipoGrupoCliente & "," _
                            & "" & idTipoTransporteCliente & "," _
                            & "" & idTipoAtividadeCliente & "," _
                            & "'" & cboTipoPessoa.SelectedItem.ToString() & "'," _
                            & "CURRENT_DATE()," & Me.status & "," & strCnpjCpf & "," _
                            & "" & strIe & "," & strIm & "," _
                            & "'" & txtRazaoSocial.Text.Replace("'", "\'") & "'," _
                            & "'" & txtNomeFantasia.Text.Replace("'", "\'") & "'," _
                            & "'" & lklHomePage.Text.Replace("'", "\'") & "'," _
                            & "" & strLimiteCredito & "," _
                            & "'" & txtObs.Text.Replace("'", "\'") & "'," _
                            & "" & chkFornecedor.Checked & "," _
                            & "" & chkIcms.Checked & "," _
                            & "" & chkFabricante.Checked & "," _
                            & "" & Me.stars & "," _
                            & "" & Me.chkInteressado.Checked & "," _
                            & "" & Me.chkPedencia.Checked & "," _
                            & "" & Me.chkNegativado.Checked & "," _
                            & "'" & Me.txtAvisos.Text.Replace("'", "\'") & "'," _
                            & "" & chkSuspenso.Checked & "") Then
                Exit Sub
            End If
            Me.novo = False

            'ADICIONA ENDEREÇOS CLIENTE
            AdicionaEndereco(CInt(txtCodCliente.Text))

            'ADICONA CONTATOS AO CLIENTE
            AdicionaContato(CInt(txtCodCliente.Text))

            'ADICIONA FINANCEIRO
            AdicionaFinanceiro(CInt(txtCodCliente.Text))

            'ADICIONA HISTÓRICO CADASTRAL
            If AdicionaHistoricoCliente(HistoricoCadastral.TypeOfChanceRegistration.Criacao) Then
                If MessageBox.Show("Dados salvos com sucesso! Deseja continuar alterando?", Core.STR_NOME_SISTEMA, MessageBoxButtons.YesNo) = Windows.Forms.DialogResult.No Then
                    ListaComercial()
                Else
                    NovaInstancia()
                End If
            End If

            ' ALTERAR
        Else
            Dim cliente As New Cliente(CInt(txtCodCliente.Text))
            If Not cliente.IsPendencia And Me.chkPedencia.Checked Then isPendencia = True
            If Not cliente.IsNegativado And Me.chkNegativado.Checked Then isNegativado = True
            If Not cliente.IsSuspenso And Me.chkSuspenso.Checked Then isSuspenso = True
            If cliente.IsPendencia And Not Me.chkPedencia.Checked Then isNotPendencia = True
            If cliente.IsNegativado And Not Me.chkNegativado.Checked Then isNotNegativado = True
            If cliente.IsSuspenso And Not Me.chkSuspenso.Checked Then isNotSuspenso = True
            If Not DML.Update("cliente", _
                              "idTipoObsCliente=" & idTipoObsCliente & "," _
                            & "idTipoFaturamentoCliente=" & idTipoFaturamentoCliente & "," _
                            & "idRegiaoCliente=" & idRegiaoCliente & "," _
                            & "idTipoGrupoCliente=" & idTipoGrupoCliente & "," _
                            & "idTipoTransporteCliente=" & idTipoTransporteCliente & "," _
                            & "idTipoAtividadeCliente=" & idTipoAtividadeCliente & "," _
                            & "tipo = '" & cboTipoPessoa.SelectedItem.ToString() & "'," _
                            & "status=" & Me.status & "," _
                            & "razaoSocialNome='" & txtRazaoSocial.Text.Replace("'", "\'") & "'," _
                            & "nomeFantasia='" & txtNomeFantasia.Text.Replace("'", "\'") & "'," _
                            & "homePage='" & lklHomePage.Text.Replace("'", "\'") & "'," _
                            & "limiteCredito=" & strLimiteCredito & "," _
                            & "obs='" & txtObs.Text.Replace("'", "\'") & "'," _
                            & "fornecedor=" & chkFornecedor.Checked & "," _
                            & "icms=" & chkIcms.Checked & "," _
                            & "fabricante=" & chkFabricante.Checked & "," _
                            & "ie='" & Me.mtbIe.Text & "'," _
                            & "im='" & mtbIm.Text & "'," _
                            & "stars=" & Me.stars & "," _
                            & "cnpjCpf=" & strCnpjCpf & "," _
                            & "interessado=" & Me.chkInteressado.Checked & "," _
                            & "pendencia=" & Me.chkPedencia.Checked & "," _
                            & "negativado=" & Me.chkNegativado.Checked & "," _
                            & "avisos='" & Me.txtAvisos.Text.Replace("'", "\'") & "'," _
                            & "suspenso=" & chkSuspenso.Checked & "", _
                              "idCliente = " & txtCodCliente.Text & "") Then
                Exit Sub
            End If

            If isNegativado Then cliente.SendNotificacao(SGV.Cliente.TypeNotificacaoEnum.NEGATIVACAO_ATIVADA)
            If isPendencia Then cliente.SendNotificacao(SGV.Cliente.TypeNotificacaoEnum.PENDENCIA_ATIVADA)
            If isSuspenso Then cliente.SendNotificacao(SGV.Cliente.TypeNotificacaoEnum.SUSPENSO_ATIVADO)
            If isNotNegativado Then cliente.SendNotificacao(SGV.Cliente.TypeNotificacaoEnum.NEGATIVACAO_INATIVADA)
            If isNotPendencia Then cliente.SendNotificacao(SGV.Cliente.TypeNotificacaoEnum.PENDENCIA_INATIVADA)
            If isNotSuspenso Then cliente.SendNotificacao(SGV.Cliente.TypeNotificacaoEnum.SUSPENSO_INATIVADO)

            'ADICIONA ENDEREÇOS CLIENTE
            AdicionaEndereco(CInt(txtCodCliente.Text))

            'ADICONA CONTATOS AO CLIENTE
            AdicionaContato(CInt(txtCodCliente.Text))

            'ADICIONA FINANCEIRO
            AdicionaFinanceiro(CInt(txtCodCliente.Text))

            'ADICIONA HISTÓRICO CADASTRAL
            If AdicionaHistoricoCliente(HistoricoCadastral.TypeOfChanceRegistration.Alterar) Then
                If MessageBox.Show("Dados salvos com sucesso! Deseja continuar alterando?", Core.STR_NOME_SISTEMA, MessageBoxButtons.YesNo) = Windows.Forms.DialogResult.No Then
                    ListaComercial()
                Else
                    NovaInstancia()
                End If
            End If
        End If
    End Sub


    ''' <summary>
    ''' ADICIONA ENDEREÇOS
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Private Sub AdicionaEndereco(ByVal idCliente As Integer)
        For Each num As Integer In delEnderecos
            If Not DML.Delete("endereco_cliente", "idTipoEnderecoCliente = " & num & " AND idCliente = '" & idCliente & "'") Then
                Exit Sub
            End If
        Next
        delEnderecos.Clear()
        For Each row As DataGridViewRow In dgvEndereco.Rows
            If CInt(row.Cells(11).Value) = 0 Then
                If Not DML.Insert("endereco_cliente", _
                                  "idUsuario,idCliente,idTipoEnderecoCliente,cep," _
                                & "logradouro,endNumero,endComplemento,bairro," _
                                & "cidade,uf,status,dtCadastro", _
                                  "" & Core.Usuario.ID & "," _
                                & "" & txtCodCliente.Text & "," _
                                & "" & row.Cells(12).Value.ToString().Replace("'", "\'") & "," _
                                & "'" & row.Cells(4).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(0).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(1).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(2).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(3).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(5).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(6).Value.ToString().Replace("'", "\'") & "'," _
                                & "" & CBool(row.Cells(8).Value) & ",CURRENT_DATE()") Then
                    Exit Sub
                End If
                row.Cells(11).Value = 1
            Else
                If Not DML.Update("endereco_cliente", _
                                  "idTipoEnderecoCliente='" & row.Cells(12).Value.ToString().Replace("'", "\'") & "'," _
                                & "cep='" & row.Cells(4).Value.ToString().Replace("'", "\'") & "'," _
                                & "logradouro='" & row.Cells(0).Value.ToString().Replace("'", "\'") & "'," _
                                & "endNumero='" & row.Cells(1).Value.ToString().Replace("'", "\'") & "'," _
                                & "endComplemento='" & row.Cells(2).Value.ToString().Replace("'", "\'") & "'," _
                                & "bairro='" & row.Cells(3).Value.ToString().Replace("'", "\'") & "'," _
                                & "cidade='" & row.Cells(5).Value.ToString().Replace("'", "\'") & "'," _
                                & "uf='" & row.Cells(6).Value.ToString().Replace("'", "\'") & "'," _
                                & "status=" & CBool(row.Cells(8).Value) & "", _
                                  "idCliente = " & idCliente & " AND " _
                                & "idTipoEnderecoCliente=" & row.Cells(12).Value.ToString() & "") Then
                    Exit Sub
                End If
            End If
        Next
    End Sub

    ''' <summary>
    ''' ADICIONA CONTATOS
    ''' </summary>
    ''' <param name="idCliente">PK DO CLIENTE</param>
    ''' <remarks></remarks>
    Private Sub AdicionaContato(ByVal idCliente As Integer)
        For Each num As Integer In delContatos
            If Not DML.Delete("contato_cliente", "idTipoContatoCliente = " & num & " AND idCliente = '" & idCliente & "'") Then
                Exit Sub
            End If
        Next
        delContatos.Clear()
        For Each row As DataGridViewRow In dgvContato.Rows
            If CInt(row.Cells(9).Value) = 0 Then
                If Not DML.Insert("contato_cliente", _
                                  "idUsuario,idTipoContatoCliente,idCliente,telefone," _
                                & "ramal,contato,departamento,email,status,dtCadastro", _
                                  "" & Core.Usuario.ID & "," _
                                & "" & row.Cells(10).Value.ToString() & "," _
                                & "" & idCliente & "," _
                                & "'" & row.Cells(0).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(1).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(2).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(3).Value.ToString().Replace("'", "\'") & "'," _
                                & "'" & row.Cells(4).Value.ToString().Replace("'", "\'") & "'," _
                                & "" & CBool(row.Cells(6).Value) & "," & "CURRENT_DATE()") Then
                    Exit Sub
                End If
                row.Cells(9).Value = 1
            Else
                If Not DML.Update("contato_cliente", _
                                  "idTipoContatoCliente=" & row.Cells(10).Value.ToString() & "," _
                                & "telefone='" & row.Cells(0).Value.ToString().Replace("'", "\'") & "'," _
                                & "ramal='" & row.Cells(1).Value.ToString().Replace("'", "\'") & "'," _
                                & "contato='" & row.Cells(2).Value.ToString().Replace("'", "\'") & "'," _
                                & "departamento='" & row.Cells(3).Value.ToString().Replace("'", "\'") & "'," _
                                & "email='" & row.Cells(4).Value.ToString().Replace("'", "\'") & "'," _
                                & "status=" & CBool(row.Cells(6).Value) & "", _
                                  "idCliente = " & idCliente & " AND " _
                                & "idTipoContatoCliente=" & row.Cells(10).Value.ToString() & "") Then
                    Exit Sub
                End If
            End If
        Next
    End Sub

    ''' <summary>
    ''' ADICIONA DADOS FINANDEIROS
    ''' </summary>
    ''' <param name="idCliente">PK DA EMPRESA</param>
    ''' <remarks></remarks>
    Private Sub AdicionaFinanceiro(ByVal idCliente As Integer)
        For Each num As Integer In delFinanceiros
            If Not DML.Delete("cliente_financeiro", "idClienteFinanceiro = " & num & "") Then
                Exit Sub
            End If
        Next
        delFinanceiros.Clear()
        For Each rows As DataGridViewRow In dgvFinanceiro.Rows
            If CInt(rows.Cells(5).Value) = 0 Then
                rows.Cells(5).Value = DML.NextPK("idClienteFinanceiro", "cliente_financeiro")
                If Not DML.Insert("cliente_financeiro", _
                                  "idClienteFinanceiro,idCliente,banco,agencia," _
                                & "conta,tel,contato,idUsuario,dtCadastro", _
                                  "" & rows.Cells(5).Value.ToString() & "," _
                                & "" & idCliente & "," _
                                & "'" & rows.Cells(0).Value.ToString.Replace("'", "\'") & "'," _
                                & "'" & rows.Cells(1).Value.ToString.Replace("'", "\'") & "'," _
                                & "'" & rows.Cells(2).Value.ToString.Replace("'", "\'") & "'," _
                                & "'" & rows.Cells(3).Value.ToString.Replace("'", "\'") & "'," _
                                & "'" & rows.Cells(4).Value.ToString.Replace("'", "\'") & "'," _
                                & "" & Core.Usuario.ID & ", CURRENT_DATE()") Then
                    Exit Sub
                End If
            Else
                If Not DML.Update("cliente_financeiro", _
                                  "banco='" & rows.Cells(0).Value.ToString.Replace("'", "\'") & "'," _
                                & "agencia='" & rows.Cells(1).Value.ToString.Replace("'", "\'") & "'," _
                                & "conta = '" & rows.Cells(2).Value.ToString.Replace("'", "\'") & "'," _
                                & "tel='" & rows.Cells(3).Value.ToString.Replace("'", "\'") & "'," _
                                & "contato='" & rows.Cells(4).Value.ToString.Replace("'", "\'") & "'", _
                                  "idClienteFinanceiro = " & rows.Cells(5).Value.ToString() & "") Then
                    Exit Sub
                End If
            End If
        Next
    End Sub

    ''' <summary>
    ''' ADICIONA NO HIDTÓRICO DO CLIENTE
    ''' </summary>
    ''' <param name="intTipo">TIPO ALTERAÇÃO - VIDE ARQUIVO TIPOALTERAÇÃOCADASTRAL</param>
    ''' <returns>TRUE SALVO, FALSE nao salvo</returns>
    ''' <remarks></remarks>
    Private Function AdicionaHistoricoCliente(ByVal intTipo As HistoricoCadastral.TypeOfChanceRegistration) As Boolean
        Return DML.Insert("historico_cadastral_cliente", _
                          "idUsuario,idTipoAlteracaoCadastral,idCliente,data,hora", _
                          "" & Core.Usuario.ID & "," & intTipo & "," & txtCodCliente.Text & ",CURRENT_DATE(),CURTIME()")
    End Function


    ''' <summary>
    ''' Desabilita linklabel lklSiteSUporte
    ''' e habilita para edição Texbox txtSiteSuporte
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub lklHomePage_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lklHomePage.Click
        txtHomePage.Visible = True
        txtHomePage.Focus()
        lklHomePage.Visible = False
        txtHomePage.Text = lklHomePage.Text
    End Sub

    ''' <summary>
    ''' Abre página da web do suporte respectivo
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub AbrirToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AbrirToolStripMenuItem1.Click
        Process.Start(lklHomePage.Text)
    End Sub

    ''' <summary>
    ''' Copia o valor do linklabel 
    ''' para área de trasnferência
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub CopiarToolStripMenuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CopiarToolStripMenuItem1.Click
        Clipboard.SetDataObject(lklHomePage.Text, True)
    End Sub

    ''' <summary>
    ''' Desabilita linklabel lklSiteSUporte
    ''' e habilita para edição Texbox txtSiteSuporte
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub AlterarToolStripMenuItem_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles AlterarToolStripMenuItem.Click
        txtHomePage.Visible = True
        txtHomePage.Focus()
        lklHomePage.Visible = False
        txtHomePage.Text = lklHomePage.Text
    End Sub

    ''' <summary>
    ''' SAI
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnCancelar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelar.Click
        ListaComercial()
    End Sub

    Private Sub ListaComercial()
        ViewInicial.CloseMdiChildren(Me)
        Dim index As Integer = 0
        Dim b As Boolean = False
        For Each f As Form In ViewInicial.MdiChildren
            If TypeOf f Is PesquisaComercial Then
                If CType(f, PesquisaComercial).AbaSelecionada = PesquisaComercial.Abas.CLIENTE Then
                    ViewInicial.Abas.SelectedTab = CType(ViewInicial.Abas.Controls(index), TabPage)
                    b = True
                    Exit For
                End If
            End If
            index += 1
        Next
        If Not b Then
            Dim frm As New PesquisaComercial(PesquisaComercial.LastQueryCliente, PesquisaComercial.Abas.CLIENTE)
            frm.MdiParent = ViewInicial
            frm.Show()
        End If
    End Sub

    Private Sub NovaInstancia()
        Dim frm As New CadCliente(CInt(Me.txtCodCliente.Text))
        frm.MdiParent = ViewInicial
        frm.Show()
        ViewInicial.CloseMdiChildren(Me)
    End Sub
#End Region

#Region "Endereço"

    Private Sub CarregaCamposEndereco()
        If (Not dgvEndereco.CurrentRow Is Nothing) And btnNovoEnd.Enabled Then
            txtLogradouro.Text = dgvEndereco.CurrentRow.Cells(0).Value.ToString
            txtNumero.Text = dgvEndereco.CurrentRow.Cells(1).Value.ToString
            txtComplemento.Text = dgvEndereco.CurrentRow.Cells(2).Value.ToString
            txtBairro.Text = dgvEndereco.CurrentRow.Cells(3).Value.ToString
            mtbCep.Text = dgvEndereco.CurrentRow.Cells(4).Value.ToString
            txtCidade.Text = dgvEndereco.CurrentRow.Cells(5).Value.ToString
            cboUf2.SelectedItem = dgvEndereco.CurrentRow.Cells(6).Value.ToString
            cboTipoEndereco.SelectedItem = dgvEndereco.CurrentRow.Cells(7).Value.ToString
            If Not IsDBNull(dgvEndereco.CurrentRow.Cells(8).Value) Then
                If CBool(dgvEndereco.CurrentRow.Cells(8).Value) Then
                    cboStatusEnd.SelectedIndex = 0
                Else
                    cboStatusEnd.SelectedIndex = 1
                End If
            End If
        End If
    End Sub

    Private Sub ColorGridEndereco()
        Dim x As Integer = 0
        For Each col As DataGridViewRow In dgvEndereco.Rows
            If Not CBool(col.Cells(8).Value) Then
                dgvEndereco.Rows(x).DefaultCellStyle.ForeColor = Color.Red
            End If
            x += 1
        Next
    End Sub

    Private Function AddRowInDataGridEndereco() As Boolean

        Dim strMesageErro As String = "Há campos que faltam ser preenchidos ou estão incorretos."
        If Not (String.IsNullOrEmpty(txtLogradouro.Text) _
             Or String.IsNullOrEmpty(txtNumero.Text) Or _
                String.IsNullOrEmpty(txtBairro.Text) Or _
                String.IsNullOrEmpty(mtbCep.Text) Or _
                String.IsNullOrEmpty(txtCidade.Text) Or _
                String.IsNullOrEmpty(cboUf2.Text) Or _
                String.IsNullOrEmpty(cboTipoEndereco.Text) Or _
                String.IsNullOrEmpty(cboStatusEnd.Text)) And _
                blnValidaSubCadastros Then


            'VERIFICA SE JÁ HÁ O TIPO DE ENDEREÇO CADASTRADO
            For Each cel As DataGridViewRow In dgvEndereco.Rows
                If btnAceitaEnd.Enabled Then
                    Exit For
                End If

                If cel.Cells(7).Value.ToString = cboTipoEndereco.SelectedItem.ToString Then
                    epvCadCliente.SetError(btnAddEnd, "Tipo de Endereço já cadastrado")
                    Return False
                End If
            Next

            CleanSQLInjection(CType(pnlEnderecos, Control))
            dgvEndereco.CurrentRow.Cells(0).Value = txtLogradouro.Text
            dgvEndereco.CurrentRow.Cells(1).Value = txtNumero.Text
            dgvEndereco.CurrentRow.Cells(2).Value = txtComplemento.Text
            dgvEndereco.CurrentRow.Cells(3).Value = txtBairro.Text
            dgvEndereco.CurrentRow.Cells(4).Value = mtbCep.Text
            dgvEndereco.CurrentRow.Cells(5).Value = txtCidade.Text
            dgvEndereco.CurrentRow.Cells(6).Value = cboUf2.SelectedItem
            dgvEndereco.CurrentRow.Cells(7).Value = cboTipoEndereco.SelectedItem
            dgvEndereco.CurrentRow.Cells(9).Value = CurrentDate()
            dgvEndereco.CurrentRow.Cells(10).Value = ViewLogin
            dgvEndereco.CurrentRow.Cells(12).Value = idTipoEndereco

            Select Case cboStatusEnd.SelectedIndex
                Case 0
                    dgvEndereco.CurrentRow.Cells(8).Value = 1
                Case 1
                    dgvEndereco.CurrentRow.Cells(8).Value = 0
            End Select

            If Not btnAceitaEnd.Enabled Then
                dgvEndereco.CurrentRow.Cells(11).Value = 0
            End If

            epvCadCliente.SetError(btnAddEnd, "")

            Return True

        Else
            epvCadCliente.SetError(btnAddEnd, strMesageErro)
            Return False
        End If
    End Function

    Private Sub CancelaEdicaoEndereco()
        Me.bdsEndereco.CancelEdit()
        CleanFields(CType(pnlEnderecos, Control))
        OffFields(CType(pnlEnderecos, Control))
        epvCadCliente.SetError(btnAddEnd, "")
        epvCadCliente.SetError(btnAceitaEnd, "")
        btnNovoEnd.Enabled = True
        btnCancelaEnd.Enabled = False
        btnAddEnd.Enabled = False
        btnAceitaEnd.Enabled = False
        blnValidaSubCadastros = True
        dgvEndereco.Enabled = True
        SetButtomEndereco()
        CarregaCamposEndereco()
    End Sub

    Private Sub btnEditEnd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEditEnd.Click
        ActiveFields(CType(pnlEnderecos, Control))
        btnNovoEnd.Enabled = False
        btnAceitaEnd.Enabled = True
        btnEditEnd.Enabled = False
        btnCancelaEnd.Enabled = True
        btnAddEnd.Enabled = False
        btnDelEnd.Enabled = False
        dgvEndereco.Enabled = False
        cboTipoEndereco.Enabled = False
    End Sub

    Private Sub btnAceitaEnd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAceitaEnd.Click
        If AddRowInDataGridEndereco() Then
            bdsEndereco.EndEdit()
            CleanFields(CType(pnlEnderecos, Control))
            OffFields(CType(pnlEnderecos, Control))
            ColorGridEndereco()
            btnAceitaEnd.Enabled = False
            btnCancelaEnd.Enabled = False
            btnAddEnd.Enabled = False
            btnNovoEnd.Enabled = True
            btnEditEnd.Enabled = True
            btnDelEnd.Enabled = True
            dgvEndereco.Enabled = True
            CarregaCamposEndereco()
        End If
    End Sub

    Private Sub btnCancelaEnd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelaEnd.Click
        CancelaEdicaoEndereco()
    End Sub

    Private Sub btnNovoEnd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNovoEnd.Click
        Me.block = True
        Me.bdsEndereco.AddNew()
        CleanFields(CType(pnlEnderecos, Control))
        ActiveFields(CType(pnlEnderecos, Control))
        btnAceitaEnd.Enabled = False
        btnNovoEnd.Enabled = False
        btnAddEnd.Enabled = True
        btnCancelaEnd.Enabled = True
        btnEditEnd.Enabled = False
        btnDelEnd.Enabled = False
        dgvEndereco.Enabled = False
        cboStatusEnd.SelectedIndex = 0
        If cboTipoEndereco.Items.Count > 0 Then cboTipoEndereco.SelectedIndex = 0
        Me.block = False
    End Sub

    Private Sub btnAddEnd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddEnd.Click
        If AddRowInDataGridEndereco() Then
            bdsEndereco.EndEdit()
            OffFields(CType(pnlEnderecos, Control))
            CleanFields(CType(pnlEnderecos, Control))
            ColorGridEndereco()
            btnNovoEnd.Enabled = True
            btnAddEnd.Enabled = False
            btnCancelaEnd.Enabled = False
            btnDelEnd.Enabled = True
            btnEditEnd.Enabled = True
            CarregaCamposEndereco()
        End If
    End Sub

    Private Sub btnDelEnd_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelEnd.Click
        delEnderecos.Add(CInt(dgvEndereco.CurrentRow.Cells(12).Value))
        If RemoveRowInDataGrid(dgvEndereco) Then
            CleanFields(CType(pnlEnderecos, Control))
            CarregaCamposEndereco()
            ColorGridEndereco()
            SetButtomEndereco()
        Else
            delEnderecos.Remove(CInt(dgvEndereco.CurrentRow.Cells(12).Value))
        End If
    End Sub

    Private Sub dgvEndereco_CurrentCellChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles dgvEndereco.CurrentCellChanged
        If Not Me.block Then CarregaCamposEndereco()
    End Sub

    Private Sub dgvLocalizacoes_ColumnDividerDoubleClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs) Handles dgvEndereco.ColumnDividerDoubleClick
        ColorGridContato()
    End Sub

    Private Sub dgvLocalizacoes_ColumnHeaderMouseClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles dgvEndereco.ColumnHeaderMouseClick
        ColorGridContato()
    End Sub

    Private Sub dgvLocalizacoes_ColumnHeaderMouseDoubleClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellMouseEventArgs) Handles dgvEndereco.ColumnHeaderMouseDoubleClick
        ColorGridContato()
    End Sub

#End Region

#Region "Contatos"
    Private Sub CarregaCamposContato()
        If (Not dgvContato.CurrentRow Is Nothing) And btnNovoCont.Enabled Then
            If mtbTel.Text(5) = "9" Then
                mtbTel.Mask = "(00) 00000-0000"
            Else
                mtbTel.Mask = "(00) 0000-0000"
            End If
            block = True
            mtbTel.Text = dgvContato.CurrentRow.Cells(0).Value.ToString
            block = False
            txtRamal.Text = dgvContato.CurrentRow.Cells(1).Value.ToString
            txtContato.Text = dgvContato.CurrentRow.Cells(2).Value.ToString
            txtDepartamento.Text = dgvContato.CurrentRow.Cells(3).Value.ToString
            txtEmail.Text = dgvContato.CurrentRow.Cells(4).Value.ToString
            cboTipoContato.SelectedItem = dgvContato.CurrentRow.Cells(5).Value.ToString
            If Not IsDBNull(dgvContato.CurrentRow.Cells(6).Value) Then
                If CBool(dgvContato.CurrentRow.Cells(6).Value) Then
                    cboStatusCont.SelectedIndex = 0
                Else
                    cboStatusCont.SelectedIndex = 1
                End If
            End If
        End If
    End Sub

    Private Function AddRowInDataGridContato() As Boolean

        Dim strMesageErro As String = "Há campos que faltam ser preenchidos ou estão incorretos"

        If cboStatusCont.SelectedIndex > -1 _
           And cboTipoContato.SelectedIndex > -1 _
           And blnValidaSubCadastros And mtbTel.MaskFull Then

            'VERIFICA SE JÁ HÁ O TIPO DE CONTATO CADASTRADO
            For Each cel As DataGridViewRow In dgvContato.Rows
                If btnAceitaCont.Enabled Then
                    Exit For
                End If
                If cel.Cells(5).Value.ToString = cboTipoContato.SelectedItem.ToString Then
                    epvCadCliente.SetError(btnAddCont, "Tipo de Contato já cadastrado")
                    Exit Function
                End If
            Next

            dgvContato.CurrentRow.Cells(0).Value = mtbTel.Text
            dgvContato.CurrentRow.Cells(1).Value = txtRamal.Text
            dgvContato.CurrentRow.Cells(2).Value = txtContato.Text
            dgvContato.CurrentRow.Cells(3).Value = txtDepartamento.Text
            dgvContato.CurrentRow.Cells(4).Value = txtEmail.Text
            dgvContato.CurrentRow.Cells(5).Value = cboTipoContato.SelectedItem
            dgvContato.CurrentRow.Cells(7).Value = CurrentDate()
            dgvContato.CurrentRow.Cells(8).Value = ViewLogin
            dgvContato.CurrentRow.Cells(10).Value = idTipoContato

            Select Case cboStatusCont.SelectedIndex
                Case 0
                    dgvContato.CurrentRow.Cells(6).Value = 1
                Case 1
                    dgvContato.CurrentRow.Cells(6).Value = 0
            End Select

            If Not btnAceitaCont.Enabled Then
                dgvContato.CurrentRow.Cells(9).Value = 0
            End If

            epvCadCliente.SetError(btnAddCont, "")
            Return True

        Else
            epvCadCliente.SetError(btnAddCont, strMesageErro)
            Return False
        End If
    End Function

    Private Sub ColorGridContato()
        Dim x As Integer = 0
        For Each col As DataGridViewRow In dgvContato.Rows
            If Not CBool(col.Cells(6).Value) Then
                dgvContato.Rows(x).DefaultCellStyle.ForeColor = Color.Red
            End If
            x += 1
        Next
    End Sub

    Private Sub CancelaEdicaoContato()
        Me.bdsContato.CancelEdit()
        CleanFields(CType(pnlContatos, Control))
        OffFields(CType(pnlContatos, Control))
        epvCadCliente.SetError(btnAddCont, "")
        epvCadCliente.SetError(btnAceitaCont, "")
        blnValidaSubCadastros = True
        btnNovoCont.Enabled = True
        btnCancelaCont.Enabled = False
        btnAddCont.Enabled = False
        btnAceitaCont.Enabled = False
        dgvContato.Enabled = True
        SetButtomContato()
        CarregaCamposContato()
    End Sub

    Private Sub btnEditCont_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEditCont.Click
        ActiveFields(CType(pnlContatos, Control))
        btnNovoCont.Enabled = False
        btnAceitaCont.Enabled = True
        btnEditCont.Enabled = False
        btnCancelaCont.Enabled = True
        dgvContato.Enabled = False
        btnAddCont.Enabled = False
        btnDelCont.Enabled = False
        cboTipoContato.Enabled = False
    End Sub

    Private Sub btnAceitaCont_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAceitaCont.Click
        If AddRowInDataGridContato() Then
            bdsContato.EndEdit()
            CleanFields(CType(pnlContatos, Control))
            OffFields(CType(pnlContatos, Control))
            btnAceitaCont.Enabled = False
            btnCancelaCont.Enabled = False
            btnAddCont.Enabled = False
            btnNovoCont.Enabled = True
            btnEditCont.Enabled = True
            dgvContato.Enabled = True
            CarregaCamposContato()
        End If
    End Sub

    Private Sub btnCancelaCont_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelaCont.Click
        CancelaEdicaoContato()
    End Sub

    Private Sub btnNovoCont_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNovoCont.Click
        Me.block = True
        Me.bdsContato.AddNew()
        CleanFields(CType(pnlContatos, Control))
        ActiveFields(CType(pnlContatos, Control))
        btnNovoCont.Enabled = False
        btnAddCont.Enabled = True
        btnCancelaCont.Enabled = True
        btnEditCont.Enabled = False
        btnDelCont.Enabled = False
        dgvContato.Enabled = False
        cboStatusCont.SelectedIndex = 0
        If cboTipoContato.Items.Count > 0 Then cboTipoContato.SelectedIndex = 0
        Me.block = False
    End Sub

    Private Sub btnAddCont_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddCont.Click
        If AddRowInDataGridContato() Then
            bdsContato.EndEdit()
            OffFields(CType(pnlContatos, Control))
            CleanFields(CType(pnlContatos, Control))
            CarregaCamposContato()
            ColorGridContato()
            btnNovoCont.Enabled = True
            btnAddCont.Enabled = False
            btnCancelaCont.Enabled = False
            btnDelCont.Enabled = True
            btnEditCont.Enabled = True
            dgvContato.Enabled = True
        End If
    End Sub

    Private Sub btnDelCont_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelCont.Click
        delContatos.Add(CInt(dgvContato.CurrentRow.Cells(10).Value))
        If RemoveRowInDataGrid(dgvContato) Then
            CleanFields(CType(pnlContatos, Control))
            CarregaCamposContato()
            ColorGridContato()
            SetButtomContato()
        Else
            delContatos.Remove(CInt(dgvContato.CurrentRow.Cells(10).Value))
        End If
    End Sub

    Private Sub dgvContato_CurrentCellChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles dgvContato.CurrentCellChanged
        If Not Me.block Then CarregaCamposContato()
    End Sub


#End Region

#Region "Financeiro"

    ''' <summary>
    ''' CARREGA CAMPOS DE CADASTRO FINANCEIRO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub CarregaCamposFinanceiro()

        If (Not dgvFinanceiro.CurrentRow Is Nothing) And btnNovoFin.Enabled Then

            txtBanco.Text = dgvFinanceiro.CurrentRow.Cells(0).Value.ToString
            txtAgencia.Text = dgvFinanceiro.CurrentRow.Cells(1).Value.ToString
            txtConta.Text = dgvFinanceiro.CurrentRow.Cells(2).Value.ToString
            txtContatoFin.Text = dgvFinanceiro.CurrentRow.Cells(4).Value.ToString

            If mtbTelAgencia.Text(5) = "9" And Not block Then
                mtbTelAgencia.Mask = "(00) 00000-0000"
            Else
                mtbTelAgencia.Mask = "(00) 0000-0000"
            End If

            block = True
            mtbTelAgencia.Text = dgvFinanceiro.CurrentRow.Cells(3).Value.ToString
            block = False

        End If

    End Sub

    ''' <summary>
    ''' ADICIIONA LINHAS AO DATAGRIDVIEW FINANCEIRO
    ''' </summary>
    ''' <returns>TRUE ADICIONOU / FALSE NÃO ADICIONOU</returns>
    ''' <remarks></remarks>
    Private Function AddRowInDataGridFinanceiro() As Boolean

        Dim strMesageErro As String = "Há campos que faltam ser preenchidos ou estão incorretos."
        epvCadCliente.Clear()

        'VERIFICA SE CONTA CORRENTE JA FOI CADASTRADA
        For Each rows As DataGridViewRow In dgvFinanceiro.Rows

            If Not btnAddFin.Enabled Then
                Exit For
            End If

            If Not IsDBNull(rows.Cells(0).Value) Then
                If txtConta.Text = rows.Cells(2).Value.ToString Then
                    epvCadCliente.SetError(btnAddFin, "C/C já cadastrada.")
                    Return False
                End If
            End If
        Next

        'ADICIONA
        If Not (String.IsNullOrEmpty(txtBanco.Text) Or _
                String.IsNullOrEmpty(txtAgencia.Text) Or _
                String.IsNullOrEmpty(txtConta.Text) Or _
                Not mtbTelAgencia.MaskFull) _
                And blnValidaSubCadastros Then

            If dgvFinanceiro.CurrentRow IsNot Nothing Then

                CleanSQLInjection(CType(pnlFinanceiro, Control))
                dgvFinanceiro.CurrentRow.Cells(0).Value = txtBanco.Text
                dgvFinanceiro.CurrentRow.Cells(1).Value = txtAgencia.Text
                dgvFinanceiro.CurrentRow.Cells(2).Value = txtConta.Text
                dgvFinanceiro.CurrentRow.Cells(3).Value = mtbTelAgencia.Text
                dgvFinanceiro.CurrentRow.Cells(4).Value = txtContatoFin.Text
                dgvFinanceiro.CurrentRow.Cells(6).Value = CurrentDate()
                dgvFinanceiro.CurrentRow.Cells(7).Value = ViewLogin

                If btnAddFin.Enabled Then
                    dgvFinanceiro.CurrentRow.Cells(5).Value = 0
                End If

                Return True
            End If

        Else
            epvCadCliente.SetError(btnAddFin, strMesageErro)
            Return False
        End If

    End Function


    ''' <summary>
    ''' CANCELA EDIÇÃO DO FINANCEIRO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub CancelaEdicaoFinanceiro()
        Me.bdsFinanceiro.CancelEdit()
        OffFields(CType(pnlFinanceiro, Control))
        CleanFields(CType(pnlFinanceiro, Control))
        epvCadCliente.Clear()
        btnAddFin.Enabled = False
        btnNovoFin.Enabled = True
        btnCancelaFin.Enabled = False
        btnEditFin.Enabled = True
        btnAceitaFin.Enabled = False
        dgvFinanceiro.Enabled = True
        SetButtomFinanceiro()
        CarregaCamposFinanceiro()
    End Sub

    ''' <summary>
    ''' EDITA
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnEditFin_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEditFin.Click
        ActiveFields(CType(pnlFinanceiro, Control))
        btnNovoFin.Enabled = False
        btnAceitaFin.Enabled = True
        btnEditFin.Enabled = False
        btnCancelaFin.Enabled = True
        dgvFinanceiro.Enabled = False
    End Sub

    ''' <summary>
    ''' ACEITA
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnAceitaFin_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAceitaFin.Click
        If AddRowInDataGridFinanceiro() Then
            bdsFinanceiro.EndEdit()
            CleanFields(CType(pnlFinanceiro, Control))
            OffFields(CType(pnlFinanceiro, Control))
            bdsFinanceiro.EndEdit()
            btnAceitaFin.Enabled = False
            btnCancelaFin.Enabled = False
            btnAddFin.Enabled = False
            btnNovoFin.Enabled = True
            btnEditFin.Enabled = True
            dgvFinanceiro.Enabled = True
            CarregaCamposFinanceiro()
        End If
    End Sub

    ''' <summary>
    ''' CANCELA
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnCancelaFin_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelaFin.Click
        CancelaEdicaoFinanceiro()
    End Sub

    ''' <summary>
    ''' NOVO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnNovoFin_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNovoFin.Click
        CleanFields(CType(pnlFinanceiro, Control))
        ActiveFields(CType(pnlFinanceiro, Control))
        Me.bdsFinanceiro.AddNew()
        btnAddFin.Enabled = True
        btnNovoFin.Enabled = False
        btnCancelaFin.Enabled = True
        btnEditFin.Enabled = False
        dgvFinanceiro.Enabled = False
    End Sub

    ''' <summary>
    ''' ADICIONA
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnAddFin_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddFin.Click
        If AddRowInDataGridFinanceiro() Then
            bdsFinanceiro.EndEdit()
            OffFields(CType(pnlFinanceiro, Control))
            CleanFields(CType(pnlFinanceiro, Control))
            btnAddFin.Enabled = False
            btnNovoFin.Enabled = True
            btnCancelaFin.Enabled = False
            btnDelFin.Enabled = True
            btnEditFin.Enabled = True
            dgvFinanceiro.Enabled = True
            CarregaCamposFinanceiro()
        End If
    End Sub

    ''' <summary>
    ''' DELETA
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnDelFin_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelFin.Click
        delFinanceiros.Add(CInt(dgvFinanceiro.CurrentRow.Cells(5).Value))
        If RemoveRowInDataGrid(dgvFinanceiro) Then
            CleanFields(CType(pnlFinanceiro, Control))
            CarregaCamposFinanceiro()
            SetButtomFinanceiro()
        Else
            delFinanceiros.Remove(CInt(dgvFinanceiro.CurrentRow.Cells(5).Value))
        End If
    End Sub

    ''' <summary>
    '''  ALIEMNTA CAMPOS AO CLICAR NO GRID
    ''' </summary>
    Private Sub dgvFinanceiro_CurrentCellChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles dgvFinanceiro.CurrentCellChanged
        CarregaCamposFinanceiro()
    End Sub
#End Region

#Region "Buscas"

    Private Sub cboTipoEnd_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTipoEndereco.SelectedIndexChanged
        If cboTipoEndereco.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoEnderecoCliente", "tipo_endereco_cliente", "descricao = '" & cboTipoEndereco.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoEndereco = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboTipoContato_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboTipoContato.SelectedIndexChanged
        If cboTipoContato.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoContatoCliente", "tipo_contato_cliente", "descricao = '" & cboTipoContato.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoContato = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboRegiaoCliente_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboRegiaoCliente.SelectedIndexChanged
        If cboRegiaoCliente.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idRegiaoCliente", "regiao_cliente", "descricao = '" & cboRegiaoCliente.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idRegiaoCliente = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboAtivEmpresa_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboAtividadeEmpresa.SelectedIndexChanged
        If cboAtividadeEmpresa.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoAtividadeCliente", "tipo_atividade_clientex", "descricao = '" & cboAtividadeEmpresa.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoAtividadeCliente = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboGrupo_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboGrupo.SelectedIndexChanged
        If cboGrupo.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoGrupoCliente", "tipo_grupo_client", "descricao = '" & cboGrupo.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoGrupoCliente = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboFormaTransporte_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboFormaTransporte.SelectedIndexChanged
        If cboFormaTransporte.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoTransporteCliente", "tipo_transporte_cliente", "descricao = '" & cboFormaTransporte.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoTransporteCliente = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboFormaFaturamento_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboFormaFaturamento.SelectedIndexChanged
        If cboFormaFaturamento.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoFaturamentoCliente", "tipo_faturamento_client", "descricao = '" & cboFormaFaturamento.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoFaturamentoCliente = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub cboObsercaoPad_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles cboObsercaoPadrao.SelectedIndexChanged
        If cboObsercaoPadrao.SelectedIndex > -1 Then
            Connection.ConnectionMysql()
            MyData = DML.Select("idTipoObsCliente", "tipo_obs_cliente", "descricao = '" & cboObsercaoPadrao.SelectedItem.ToString() & "'")
            If MyData.Read() Then
                idTipoObsCliente = MyData.GetInt32(0)
            End If
            Connection.DisconnectMySQL()
            MyData.Dispose()
        End If
    End Sub

    Private Sub btnBuscaCnpj_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnBuscaCnpj.Click
        If mtbCnpj.MaskFull Then
            Dim frm As New ViewConsultaCNPJ(ViewConsultaCNPJ.TipoImportacao.Cliente, mtbCnpj.Text, Me)
            CancelaEdicaoContato()
            CancelaEdicaoEndereco()
            If frm.ShowDialog() = Windows.Forms.DialogResult.OK Then
                LimpaGrids()
                CarregaCamposEndereco()
                CancelaEdicaoContato()
            Else
                bdsEndereco.CancelEdit()
                bdsContato.CancelEdit()
            End If
            frm.Dispose()
            epvCadCliente.SetError(mtbCnpj, "")
        Else
            epvCadCliente.SetError(mtbCnpj, "Preencha corretamento o CNPJ")
        End If
    End Sub

    Private Sub LimpaGrids()
        Dim b As Boolean
        For Each colums As DataGridViewColumn In Me.dgvEndereco.Columns
            If Me.dgvEndereco.CurrentRow Is Nothing Then Exit For
            If IsDBNull(Me.dgvEndereco.CurrentRow.Cells(colums.Index).Value) Then
                b = True
            End If
        Next
        If b Then
            Core.RemoveRowInDataGrid(Me.dgvEndereco)
        End If
        b = False
        For Each colums As DataGridViewColumn In Me.dgvContato.Columns
            If Me.dgvContato.CurrentRow Is Nothing Then Exit For
            If IsDBNull(Me.dgvContato.CurrentRow.Cells(colums.Index).Value) Then
                b = True
            End If
        Next
        If b Then
            Core.RemoveRowInDataGrid(Me.dgvContato)
        End If
    End Sub
#End Region

#Region "STARS"
    Private Sub lblStar00_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lblStar00.Click
        If Me.stars >= 1 Then
            Stars0()
            Me.stars = 0
        ElseIf Me.stars = 0 Then
            Stars1()
            Me.stars = 1
        End If
    End Sub

    Private Sub lblStar01_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lblStar01.Click
        If Me.stars >= 2 Then
            Stars1()
            Me.stars = 1
        ElseIf Me.stars <= 1 Then
            Stars2()
            Me.stars = 2
        End If
    End Sub

    Private Sub lblStar02_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lblStar02.Click
        If Me.stars >= 3 Then
            Stars2()
            Me.stars = 2
        ElseIf Me.stars <= 2 Then
            Stars3()
            Me.stars = 3
        End If
    End Sub

    Private Sub lblStar03_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lblStar03.Click
        If Me.stars >= 4 Then
            Stars3()
            Me.stars = 3
        ElseIf Me.stars <= 3 Then
            Stars4()
            Me.stars = 4
        End If
    End Sub

    Private Sub lblStar04_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles lblStar04.Click
        If Me.stars = 5 Then
            Stars4()
            Me.stars = 4
        ElseIf Me.stars <= 4 Then
            Stars5()
            Me.stars = 5
        End If
    End Sub

    Private Sub ConfiguraStars()
        Select Case Me.stars
            Case 0
                Stars0()
            Case 1
                Stars1()
            Case 2
                Stars2()
            Case 3
                Stars3()
            Case 4
                Stars4()
            Case 5
                Stars5()
        End Select
    End Sub

    Private Sub Stars0()
        lblStar00.Image = My.Resources.imsStarBlack
        lblStar01.Image = My.Resources.imsStarBlack
        lblStar02.Image = My.Resources.imsStarBlack
        lblStar03.Image = My.Resources.imsStarBlack
        lblStar04.Image = My.Resources.imsStarBlack
    End Sub

    Private Sub Stars1()
        lblStar00.Image = My.Resources.imsStar
        lblStar01.Image = My.Resources.imsStarBlack
        lblStar02.Image = My.Resources.imsStarBlack
        lblStar03.Image = My.Resources.imsStarBlack
        lblStar04.Image = My.Resources.imsStarBlack
    End Sub

    Private Sub Stars2()
        lblStar00.Image = My.Resources.imsStar
        lblStar01.Image = My.Resources.imsStar
        lblStar02.Image = My.Resources.imsStarBlack
        lblStar03.Image = My.Resources.imsStarBlack
        lblStar04.Image = My.Resources.imsStarBlack
    End Sub

    Private Sub Stars3()
        lblStar00.Image = My.Resources.imsStar
        lblStar01.Image = My.Resources.imsStar
        lblStar02.Image = My.Resources.imsStar
        lblStar03.Image = My.Resources.imsStarBlack
        lblStar04.Image = My.Resources.imsStarBlack
    End Sub

    Private Sub Stars4()
        lblStar00.Image = My.Resources.imsStar
        lblStar01.Image = My.Resources.imsStar
        lblStar02.Image = My.Resources.imsStar
        lblStar03.Image = My.Resources.imsStar
        lblStar04.Image = My.Resources.imsStarBlack
    End Sub

    Private Sub Stars5()
        lblStar00.Image = My.Resources.imsStar
        lblStar01.Image = My.Resources.imsStar
        lblStar02.Image = My.Resources.imsStar
        lblStar03.Image = My.Resources.imsStar
        lblStar04.Image = My.Resources.imsStar
    End Sub
#End Region




End Class