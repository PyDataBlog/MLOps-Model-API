Public Class VBPong

    Dim PlayerScore As Integer = 0
    Dim ComputerScore As Integer = 0
    Dim TopBottomSpeed As Integer = 7
    Dim ComputerPaddleSpeed As Integer = 5
    Dim BallBounceDistance As Integer = 5
    Dim MoveUp As Boolean = False
    Dim MoveLeft As Boolean = False
    Dim Hard As Integer = 1
    Dim Random As New Random
    Dim LeftRightSpeed As Integer = Random.Next(3) + 7

    Private Sub Pong_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        lblWinLose.Text = "VBPong"
        lblComputerScore.Hide()
        lblPlayerScore.Hide()
        StartScreen()
    End Sub

    Private Function StartScreen()
        picBall.Hide()
        lblWinLose.Show()
        btnAgain.Show()
        btnAgainMedium.Show()
        btnAgainHard.Show()
        picComputerPaddle.Hide()
        picPlayerPaddle.Hide()
        TopBottomSpeed = 0
    End Function

    Private Function AdjustForDifficulty()
        If Hard = 2 Then
            TopBottomSpeed += 3
            ComputerPaddleSpeed += 3
            LeftRightSpeed += 3
        ElseIf Hard = 3 Then
            TopBottomSpeed += 7
            ComputerPaddleSpeed += 7
            LeftRightSpeed += 7
        End If
    End Function

    Private Function BounceFromWall()
        If MoveLeft = True Then
            MoveLeft = False
        Else
            MoveLeft = True
        End If
    End Function

    Private Function BounceFromPaddle()
        If MoveUp = False Then
            MoveUp = True
        Else
            MoveUp = False
        End If
        TopBottomSpeed = 9
        ComputerPaddleSpeed = 7
        LeftRightSpeed = Random.Next(3) + 7
        AdjustForDifficulty()
    End Function

    Private Sub tmrWait_Tick(sender As Object, e As EventArgs) Handles tmrWait.Tick
        TopBottomSpeed = 8
        ComputerPaddleSpeed = 8
        AdjustForDifficulty()
        tmrWait.Enabled = False
    End Sub

    Private Function ResetBall()
        picBall.Top = Me.Height / 2
        picBall.Left = Me.Width / 2
        picPlayerPaddle.Top = Me.Height - 60
        lblComputerScore.Text = ComputerScore
        lblPlayerScore.Text = PlayerScore
        TopBottomSpeed = 0
        LeftRightSpeed = 0
        ComputerPaddleSpeed = 0
        tmrWait.Enabled = True
    End Function

    Private Sub Pong_SizeChanged(sender As Object, e As EventArgs) Handles MyBase.SizeChanged
        ResetBall()
    End Sub

    Private Sub Pong_MouseMove(sender As Object, e As MouseEventArgs) Handles MyBase.MouseMove
        picPlayerPaddle.Left = Cursor.Position.X - Me.Bounds.Location.X - picPlayerPaddle.Width / 2
    End Sub

    Private Sub tmrTimer_Tick(sender As Object, e As EventArgs) Handles tmrTimer.Tick
        If Hard Then
            BallBounceDistance = 22
        Else
            BallBounceDistance = 20
        End If
        If MoveUp = True Then
            picBall.Top += TopBottomSpeed
        Else
            picBall.Top -= TopBottomSpeed
        End If
        If MoveLeft = True Then
            picBall.Left += LeftRightSpeed
        Else
            picBall.Left -= LeftRightSpeed
        End If
        If picBall.Top <= picTop.Top + picTop.Height Then
            PlayerScore += 1
            MoveUp = True
            ResetBall()
        ElseIf picBall.Top >= picBottom.Top - picBall.Height Then
            ComputerScore += 1
            MoveUp = False
            ResetBall()
        End If
        If picPlayerPaddle.Left - picBall.Width <= picBall.Left And picPlayerPaddle.Left + 100 >= picBall.Left And picBall.Top >= picPlayerPaddle.Top - 20 Then
            BounceFromPaddle()
        End If
        If picComputerPaddle.Left - picBall.Width <= picBall.Left And picComputerPaddle.Left + 100 >= picBall.Left And picBall.Top <= picComputerPaddle.Top + BallBounceDistance Then
            BounceFromPaddle()
        End If
        If picBall.Left <= 0 Then
            BounceFromWall()
        ElseIf picBall.Left >= Me.Width - picBall.Width Then
            BounceFromWall()
        End If
        If picComputerPaddle.Left > picBall.Left Then
            picComputerPaddle.Left -= ComputerPaddleSpeed
        Else
            picComputerPaddle.Left += ComputerPaddleSpeed
        End If
        If PlayerScore > 10 Then
            StartScreen()
            lblWinLose.Text = "You Win"
        ElseIf ComputerScore > 10 Then
            StartScreen()
            lblWinLose.Text = "You Lose"
        End If
    End Sub

    Private Function StartGame()
        PlayerScore = 0
        ComputerScore = 0
        btnAgain.Hide()
        btnAgainMedium.Hide()
        btnAgainHard.Hide()
        lblWinLose.Hide()
        picBall.Show()
        picComputerPaddle.Show()
        picPlayerPaddle.Show()
        lblPlayerScore.Show()
        lblComputerScore.Show()
        ResetBall()
    End Function

    Private Sub btnAgain_Click(sender As Object, e As EventArgs) Handles btnAgain.Click
        StartGame()
        Hard = False
    End Sub

    Private Sub btnAgainMedium_Click(sender As Object, e As EventArgs) Handles btnAgainMedium.Click
        StartGame()
        Hard = 2
    End Sub

    Private Sub btnAgainHard_Click(sender As Object, e As EventArgs) Handles btnAgainHard.Click
        StartGame()
        Hard = 3
    End Sub

End Class