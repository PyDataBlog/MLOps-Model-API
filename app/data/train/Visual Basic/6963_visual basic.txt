' ______________________________________________________________________
'|																		|
'|                         Created by Ryan Bush							|
'|                    Copyright (C) Ryan Bush 2014						|
'|                            ryanbush.info								|
'|______________________________________________________________________|

'Load information for MySQL Connection
Imports MySql.Data.MySqlClient

Public Class adminPanel

    Private Sub adminPanel_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        'Set a text label to display the currently logged in name
        loggedInAs.Text = "You are currently logged in as: " & loginPanel.adminName & ""
    End Sub

    Private Sub btnAddAdmin_Click(sender As Object, e As EventArgs) Handles btnAddAdmin.Click
        'Create a new object called addAdmin
        Dim addAdmin As Object
        'Create message, title and default ID as strings
        Dim message, title, defaultID As String
        'Set message to the text
        message = "Please confirm the Admin password you wish to add. Please note that the password will not be hidden."
        'Set the title to the text
        title = "Confirm Password"
        'Set the default ID to 0
        defaultID = ""
        'Put the result of the InputBox to the object
        addAdmin = InputBox(message, title, defaultID)
        'If the inputted password is the same as the textbox password then continue
        If addAdmin = txtPassword.Text Then
            'Get the MySQL Connection Details
            conn = GetConnect()
            Try
                'Open the MySQL Connection
                conn.Open()

                'Uses the string as a new MySQLCommand
                Using sqlCommand As New MySqlCommand("INSERT INTO admin (`username`, `password`) VALUES(@username, @password)")
                    'Binds the connection information to the SQLCommand
                    sqlCommand.Connection = conn
                    'Adds txtUsername into the parameter name
                    sqlCommand.Parameters.AddWithValue("@username", txtUsername.Text)
                    'Adds txtUsername into the parameter name
                    sqlCommand.Parameters.AddWithValue("@password", txtPassword.Text)
                    'Executes the Query
                    sqlCommand.ExecuteNonQuery()
                End Using

                'Set the Username Textbox to Empty
                txtUsername.Text = ""
                'Set the Password Testbox to Empty
                txtPassword.Text = ""
                'Display information stating that the execution was successful
                lblAddAdminSuccess.Text = "You have sucessfully added an admin with the name: " & txtUsername.Text & " and the password: " & txtPassword.Text & ""
                'Show the label
                lblAddAdminSuccess.Visible = True
                'Start the timer to remove the label in 5 seconds
                timerRemoveSuccessFailLabels.Start()
            Catch ex As Exception
                'Send any errors to a message box
                MsgBox(ErrorToString)
            End Try
        Else
            'If the password do not match, then a label will be shown explaining this
            lblAddAdminFail.Text = "The Admin password you entered and the confirm password were not the same. Please Try Again."
            'Show the label
            lblAddAdminFail.Visible = True
            'Start the timer to remove the label in 5 seconds
            timerRemoveSuccessFailLabels.Start()
        End If

    End Sub

    Private Sub btnChangePassword_Click(sender As Object, e As EventArgs) Handles btnChangePassword.Click
        'Create a new object called addAdminPassword
        Dim changeAdminPassword As String
        'Create message, title and default ID as strings
        Dim message, title, defaultID As String
        'Set message to the text
        message = "Please confirm your new password. Please note that the password will not be hidden."
        'Set the title to the text
        title = "Confirm Password"
        'Set the default ID to 0
        defaultID = ""
        'Put the result of the InputBox to the object
        changeAdminPassword = InputBox(message, title, defaultID)
        'If the inputted password is the same as the textbox password then continue
        If changeAdminPassword = txtNewPassword.Text Then
            'Get the MySQL Connection Details
            conn = GetConnect()
            Try
                'Open the MySQL Connection
                conn.Open()

                'Uses the string as a new MySQLCommand
                Using sqlCommand As New MySqlCommand("UPDATE admin SET password=@newpassword WHERE username=@adminname")
                    'Binds the connection information to the SQLCommand
                    sqlCommand.Connection = conn
                    'Adds txtNewPassword into the parameter password
                    sqlCommand.Parameters.AddWithValue("@newpassword", txtNewPassword.Text)
                    'Adds the variable adminName into the parameter adminnane
                    sqlCommand.Parameters.AddWithValue("@adminname", loginPanel.adminName)
                    sqlCommand.ExecuteNonQuery()
                End Using

                'Set the new password textbox to Empty
                txtNewPassword.Text = ""
                'Display information stating that the execution was successful
                lblChangePasswordSuccess.Text = "You have sucessfully changed your password to:" & txtNewPassword.Text & ""
                'Show the label
                lblChangePasswordSuccess.Visible = True
                'Start the timer to remove the label in 5 seconds
                timerRemoveSuccessFailLabels.Start()
            Catch ex As Exception
                'Send any errors to a message box
                MsgBox(ErrorToString)
            End Try
        Else
            'If the password do not match, then a label will be shown explaining this
            lblChangePasswordFail.Text = "The password you entered and the confirm password were not the same. Please Try Again."
            'Show the label
            lblChangePasswordFail.Visible = True
            'Start the timer to remove the label in 5 seconds
            timerRemoveSuccessFailLabels.Start()
        End If
    End Sub

    Private Sub btnRemoveFeedback_Click(sender As Object, e As EventArgs) Handles btnRemoveFeedback.Click
        'Create a new object called removeFeedbackID
        Dim removeFeedbackID As Object
        'Create message, title and default ID as strings
        Dim message, title, defaultID As String
        'Set message to the text
        message = "Please confirm the Feedback ID you wish to delete."
        'Set the title to the text
        title = "Remove Feedback"
        'Set the default ID to 0
        defaultID = 0
        'Put the result of the InputBox to the object
        removeFeedbackID = InputBox(message, title, defaultID)
        'If the inputted name is the same as the textbox name then continue
        If removeFeedbackID = txtFeedbackID.Text Then
            'Get the MySQL Connection Details
            conn = GetConnect()
            Try
                'Open the MySQL Connection
                conn.Open()

                'Uses the string as a new MySQLCommand
                Using sqlCommand As New MySqlCommand("DELETE FROM feedback WHERE id=@id")
                    'Binds the connection information to the SQLCommand
                    sqlCommand.Connection = conn
                    'Adds txtFeedbackID into the parameter id
                    sqlCommand.Parameters.AddWithValue("@id", txtFeedbackID.Text)
                    'Executes the Query
                    sqlCommand.ExecuteNonQuery()
                End Using

                'Set the Feedback Textbox to Empty
                txtFeedbackID.Text = ""
                'Display information stating that the execution was successful
                lblRemoveFeedbackSuccess.Text = "You have sucessfully removed feedback ID: " & txtFeedbackID.Text & ""
                'Show the label
                lblRemoveFeedbackSuccess.Visible = True
                'Start the timer to remove the label in 5 seconds
                timerRemoveSuccessFailLabels.Start()
            Catch ex As Exception
                'Send any errors to a message box
                MsgBox(ErrorToString)
            End Try
        Else
            'If the password do not match, then a label will be shown explaining this
            lblRemoveAdminFail.Text = "The ID you entered and the confirm ID were not the same. Please Try Again."
            'Show the label
            lblRemoveAdminFail.Visible = True
            'Set the Feedback ID textbox to Empty
            txtFeedbackID.Text = ""
            'Start the timer to remove the label in 5 seconds
            timerRemoveSuccessFailLabels.Start()
        End If
    End Sub

    Private Sub btnRemoveAdmin_Click(sender As Object, e As EventArgs) Handles btnRemoveAdmin.Click
        'Create a new object called adminRemoveName
        Dim adminRemoveName As Object
        'Create message, title and default ID as strings
        Dim message, title, defaultID As String
        'Set message to the text
        message = "Please confirm the Admin name you wish to delete."
        'Set the title to the text
        title = "Remove Admin"
        'Set the default ID to 0
        defaultID = 0
        'Put the result of the InputBox to the object
        adminRemoveName = InputBox(message, title, defaultID)
        'If the inputted password is the same as the textbox password then continue
        If adminRemoveName = txtRemoveAdmin.Text Then
            'Get the MySQL Connection Details
            conn = GetConnect()
            Try
                'Open the MySQL Connection
                conn.Open()

                'Uses the string as a new MySQLCommand
                Using sqlCommand As New MySqlCommand("DELETE FROM admin WHERE username=@removeadmin")
                    'Binds the connection information to the SQLCommand
                    sqlCommand.Connection = conn
                    'Adds txtRemoveAdmin into the parameter removeadmin
                    sqlCommand.Parameters.AddWithValue("@removeadmin", txtRemoveAdmin.Text)
                    'Executes the Query
                    sqlCommand.ExecuteNonQuery()
                End Using

                'Set the Username Textbox to Empty
                txtNewPassword.Text = ""
                'Display information stating that the execution was successful
                lblRemoveAdminSuccess.Text = "You have sucessfully removed an admin with the name: " & txtRemoveAdmin.Text & ""
                'Show the label
                lblRemoveAdminSuccess.Visible = True
                'Start the timer to remove the label in 5 seconds
                timerRemoveSuccessFailLabels.Start()
            Catch ex As Exception
                'Send any errors to a message box
                MsgBox(ErrorToString)
            End Try
        Else
            'If the password do not match, then a label will be shown explaining this
            lblRemoveAdminFail.Text = "The Admin name you entered and the confirm name were not the same. Please Try Again."
            'Show the label
            lblRemoveAdminFail.Visible = True
            'Start the timer to remove the label in 5 seconds
            timerRemoveSuccessFailLabels.Start()
        End If

    End Sub

    Private Sub timerRemoveFeedbackRemoveLabel_Tick(sender As Object, e As EventArgs) Handles timerRemoveSuccessFailLabels.Tick
        'Clear the label for FeedbackFail
        lblRemoveFeedbackFail.Text = ""
        'Set lblRemoveFeedbackSuccess hidden
        lblRemoveFeedbackFail.Visible = False
        'Clear the label for FeedbackSuccess
        lblRemoveFeedbackSuccess.Text = ""
        'Set lblRemoveFeedbackSuccess hidden
        lblRemoveFeedbackSuccess.Visible = False
        'Clear the label for RemoveAdminFail
        lblRemoveAdminFail.Text = ""
        'Set lblRemoveAdminFail hidden
        lblRemoveAdminFail.Visible = False
        'Clear the label for RemoveAdminSuccess
        lblRemoveAdminSuccess.Text = ""
        'Set lblRemoveAdminSuccess hidden
        lblRemoveAdminSuccess.Visible = False
        'Clear the label for AddAdminFail
        lblAddAdminFail.Text = ""
        'Set lblAddAdminFail hidden
        lblAddAdminFail.Visible = False
        'Clear the label for AddAdminSuccess
        lblAddAdminSuccess.Text = ""
        'Set lblAddAdminSuccess hidden
        lblAddAdminSuccess.Visible = False
        'Clear the label for ChangePasswordFail
        lblChangePasswordFail.Text = ""
        'Set lblChangePasswordFail hidden
        lblChangePasswordFail.Visible = False
        'Clear the label for ChangePasswordSuccess
        lblChangePasswordSuccess.Text = ""
        'Set lblChangePasswordSuccess hidden
        lblChangePasswordSuccess.Visible = False
    End Sub

    Private Sub btnRestart_Click(sender As Object, e As EventArgs) Handles btnRestart.Click
        'Restarts the Application
        Application.Restart()
    End Sub

    Private Sub btnExit_Click(sender As Object, e As EventArgs) Handles btnExit.Click
        'Exits the Application
        Application.Exit()
    End Sub
End Class