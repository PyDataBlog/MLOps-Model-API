Imports System
Imports System.Collections.Generic
Imports System.Runtime.InteropServices

Namespace Examples
    Friend Class Program
        <STAThread>
        Shared Sub Main(ByVal args() As String)
            Dim application As SolidEdgeFramework.Application = Nothing
            Dim documents As SolidEdgeFramework.Documents = Nothing
            Dim partDocument As SolidEdgePart.PartDocument = Nothing
            Dim refPlanes As SolidEdgePart.RefPlanes = Nothing
            Dim profileSets As SolidEdgePart.ProfileSets = Nothing
            Dim profileSet As SolidEdgePart.ProfileSet = Nothing
            Dim profiles As SolidEdgePart.Profiles = Nothing
            Dim profile As SolidEdgePart.Profile = Nothing
            Dim dimensions As SolidEdgeFrameworkSupport.Dimensions = Nothing
            Dim dimension As SolidEdgeFrameworkSupport.Dimension = Nothing
            Dim lines2d As SolidEdgeFrameworkSupport.Lines2d = Nothing
            Dim relations2d As SolidEdgeFrameworkSupport.Relations2d = Nothing
            Try
                ' See "Handling 'Application is Busy' and 'Call was Rejected By Callee' errors" topic.
                OleMessageFilter.Register()

                ' Attempt to connect to a running instance of Solid Edge.
                application = DirectCast(Marshal.GetActiveObject("SolidEdge.Application"), SolidEdgeFramework.Application)
                documents = application.Documents
                partDocument = CType(documents.Add("SolidEdge.PartDocument"), SolidEdgePart.PartDocument)
                refPlanes = partDocument.RefPlanes
                profileSets = partDocument.ProfileSets
                profileSet = profileSets.Add()
                profiles = profileSet.Profiles
                profile = profiles.Add(refPlanes.Item(1))
                lines2d = profile.Lines2d
                dimensions = CType(profile.Dimensions, SolidEdgeFrameworkSupport.Dimensions)
                relations2d = CType(profile.Relations2d, SolidEdgeFrameworkSupport.Relations2d)

                lines2d.AddBy2Points(0, 0, 0.01, 0)
                lines2d.AddBy2Points(0.01, 0, 0.01, 0.01)
                lines2d.AddBy2Points(0.01, 0.01, 0.04, 0.01)
                lines2d.AddBy2Points(0.04, 0.01, 0.04, 0.04)
                lines2d.AddBy2Points(0.04, 0.04, 0, 0.04)
                lines2d.AddBy2Points(0, 0.04, 0, 0)

                Dim Index1 = CInt(Math.Truncate(SolidEdgeConstants.KeypointIndexConstants.igLineEnd))
                Dim Index2 = CInt(Math.Truncate(SolidEdgeConstants.KeypointIndexConstants.igLineStart))

                relations2d.AddKeypoint(lines2d.Item(1), Index1, lines2d.Item(2), Index2)
                relations2d.AddKeypoint(lines2d.Item(2), Index1, lines2d.Item(3), Index2)
                relations2d.AddKeypoint(lines2d.Item(3), Index1, lines2d.Item(4), Index2)
                relations2d.AddKeypoint(lines2d.Item(4), Index1, lines2d.Item(5), Index2)
                relations2d.AddKeypoint(lines2d.Item(5), Index1, lines2d.Item(6), Index2)
                relations2d.AddKeypoint(lines2d.Item(6), Index1, lines2d.Item(1), Index2)

                dimension = dimensions.AddCoordinate(lines2d.Item(3), 0.01, 0.01, 0, True, lines2d.Item(5), 0.04, 0.04, 0, True)
            Catch ex As System.Exception
                Console.WriteLine(ex)
            Finally
                OleMessageFilter.Unregister()
            End Try
        End Sub
    End Class
End Namespace