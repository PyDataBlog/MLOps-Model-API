Public Class GOGButton

    ' The font colors.
    Private Shared ReadOnly cFontColorGreen As Color = System.Drawing.Color.White
    Private Shared ReadOnly cFontColorGray As Color = System.Drawing.Color.FromArgb(CType(CType(26, Byte), Integer), CType(CType(26, Byte), Integer), CType(CType(26, Byte), Integer))

    ' An artificial mouse click event, used when needing to trigger a mouse click event after certain keys are pressed.
    Private Shared ReadOnly cMouseClickEventArgs As New MouseEventArgs(Windows.Forms.MouseButtons.Left, 1, 0, 0, 0)

    ' The color of the button.
    Private mColor As ButtonColor = ButtonColor.Green

    ' Subclasses must fill these properties with their appropriate values.
    Protected Property ImagesGreen As Image()
    Protected Property ImagesGray As Image()
    Protected Property FontGreen As Font
    Protected Property FontGray As Font

    ' Redeclare some events to raise them appropriately.
    Public Shadows Event MouseClick(sender As Object, e As MouseEventArgs)
    Public Shadows Event Paint(sender As Object, e As PaintEventArgs)

    ' Enum of the valid colors for buttons.
    Public Enum ButtonColor
        Green
        Gray
    End Enum

    Public Shadows Property Caption As String
        Get
            Return Label.Text
        End Get
        Set(value As String)
            Label.Text = value
        End Set
    End Property

    Public Property Loading As Boolean
        Get
            Return LoadSpinner.Visible
        End Get
        Set(value As Boolean)
            ' When loading, the spinner is visible. When not loading, the label is visible.
            LoadSpinner.Visible = value
            Label.Visible = Not value
        End Set
    End Property

    Public Property Color As ButtonColor
        Get
            Return mColor
        End Get
        Set(value As ButtonColor)
            mColor = value

            ' Update button color, font and font color.
            Select Case mColor
                Case ButtonColor.Green
                    PictureBackground.Image = ImagesGreen(ImageIndex.Idle)
                    Label.Font = FontGreen
                    Label.ForeColor = cFontColorGreen
                Case ButtonColor.Gray
                    PictureBackground.Image = ImagesGray(ImageIndex.Idle)
                    Label.Font = FontGray
                    Label.ForeColor = cFontColorGray
            End Select
        End Set
    End Property

    Private Sub Label_MouseDown() Handles Label.MouseDown
        ' When the mouse is pressed, the button will receive the focus.
        Me.Focus()
    End Sub

    Private Sub UpdateBackground() Handles Label.MouseEnter, Label.MouseDown, Label.MouseUp, Label.MouseMove, Label.MouseLeave, Me.GotFocus, Me.LostFocus, Me.EnabledChanged
        ' Get the images corresponding to the current button color.
        Dim currentImages As Image()
        Select Case mColor
            Case ButtonColor.Green
                currentImages = ImagesGreen
            Case ButtonColor.Gray
                currentImages = ImagesGray
            Case Else
                Return
        End Select

        ' Is the button disabled?
        If (Not Me.Enabled) Then
            ' When the button is not enabled, there is only one valid image.
            PictureBackground.Image = currentImages(ImageIndex.Disabled)
            Return
        End If

        ' Is the control orphan?
        If (Me.Parent Is Nothing) Then
            Return
        End If

        ' Is the mouse within the boundaries of the button?
        If (IsMouseWithinControl(Me)) Then
            ' Is the left button pressed?
            If (Control.MouseButtons = Windows.Forms.MouseButtons.Left) Then
                PictureBackground.Image = currentImages(ImageIndex.Pressed)
            Else
                PictureBackground.Image = currentImages(ImageIndex.Hover)
            End If

            Return
        End If

        ' Does the control have the focus?
        If (Me.Focused) Then
            PictureBackground.Image = currentImages(ImageIndex.Hover)
        Else
            PictureBackground.Image = currentImages(ImageIndex.Idle)
        End If
    End Sub

    Private Sub GOGButton_KeyUp(sender As Object, e As KeyEventArgs) Handles Me.KeyUp
        ' Were the space or enter key pressed?
        If (e.KeyCode = Keys.Space OrElse e.KeyCode = Keys.Enter) Then
            ' That's like a mouse click.
            Label_MouseClick(e, cMouseClickEventArgs)
        End If
    End Sub

    Private Sub Label_MouseClick(sender As Object, e As MouseEventArgs) Handles Label.MouseClick
        ' Raise the click event for the outside world.
        RaiseEvent MouseClick(Me, e)
    End Sub

    Private Sub PictureBackground_Paint(sender As Object, e As PaintEventArgs) Handles PictureBackground.Paint
        ' Raise the paint event for the outside world.
        RaiseEvent Paint(Me, e)
    End Sub

    ' Enum used to access the images arrays.
    Private Enum ImageIndex
        Idle = 0
        Hover = 1
        Pressed = 2
        Disabled = 3
    End Enum
End Class
