Imports KOTSMSAPI
Imports System.Text.RegularExpressions
Imports EDM.Holmes.Cust
Imports System.Collections.ObjectModel
Imports System.Collections.Generic
Imports System.Text
Imports EDM.Holmes.VO.User
Imports EDM.Holmes.Tools
Imports EDM.Holmes.VO.Work
Imports EDM.Holmes.Mail
Imports EDM.Holmes.Mail.SendType
Imports EDM.Holmes.VO.Sample
Imports System.Configuration
Imports EDM.Holmes.Sms

''' <summary>
''' Goverment SMS
''' </summary>
''' <remarks></remarks>
Public Class SMS

    '¿ï¾Üªº½d¥»¦WºÙ
    Private selectedSampName As String
    '¿ï¾Üªº½d¥»ID
    Private selectedSampId As String
    '¿ï¾Üªº½d¥»¤º®e
    Private selectedSampContent As String
    '¿ï¾Üªº±M®×¦WºÙ
    Private selectedPrjName As String
    '¿ï¾Üªº«È¤á¼Æ¥Ø
    Private CustCnt As Integer

    'Àx¦s¤â¾÷²M³æ
    'Private custMobileLst As Collection(Of String)
    Private custMobileLst As Collection

    'Àx¦s¾úµ{¬ö¿ý
    Public workHistory As New WorkHistory

    'Àx¦sSQL SERVERªºSerial record
    Private ReturnSerial As Integer

    'if lbl_PrjName value changed
    Public Event PrjName_Chg(ByVal prjName As String)

    Public Event CustCnt_Chg(ByVal cnt As Integer)

    'Àx¦sÁ`µ²ªG
    Dim sb As StringBuilder

   

    Private Sub SMS_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load


        Me.lbl_PrjName.Text = Me._SelectedPrjName

        Me.lbl_SampName.Text = Me._SelectedSampName


    End Sub

    Private Sub SMS_CustCnt_Chg(ByVal cnt As Integer) Handles Me.CustCnt_Chg

        'Me.lbl_CustCnt.Visible = True

        'Me.lbl_CustCnt.Text = String.Format("({0})¦W«È¤á", cnt)

        Dim msg As MsgBoxResult = MsgBox(String.Format("µo°eÂ²°T²M³æ¦@¦³{0}¦W«È¤á,½ÐÄ~Äò¿é¤JÂ²°T¤º®e", cnt))

        

    End Sub


    ''' <summary>
    ''' ±Ò°Êµo°ÊÂ²°T
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub BackgroundWorker1_DoWork(ByVal sender As Object, ByVal e As System.ComponentModel.DoWorkEventArgs) Handles BackgroundWorker1.DoWork


        If Me._CustMobileLst.Count > 0 Then

            Me.SendSMS()



            'Àx¦s¦Ü±H¥ó³Æ¥÷--------------------------------------
            Dim bp As New EDM.Holmes.Mail.MailBp(Me.lbl_PrjName.Text.Trim, Me.txt_Content.Text.Trim, "")

            bp.SaveToSms()
            '----------------------------------------------------


        Else
            MsgBox("¨S¦³¥ô¦ó³q°T¦W³æ!")
            Exit Sub
        End If

    End Sub


    ''' <summary>
    ''' Send
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub btn_Send_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Send.Click

        Dim msg As MsgBoxResult = MsgBox("½T©w­n±HµoÂ²°T¶Ü?", MsgBoxStyle.YesNo)

        If msg = MsgBoxResult.Yes Then

            '¬O§_¦s¤J±Æµ{©ÎªÌ½d¥»
            IsSaveToWorkArrangeOrSamp()

            '¤¹³\¦^³ø¶i«×
            BackgroundWorker1.WorkerReportsProgress = True
            '¤¹³\¨ú®ø
            BackgroundWorker1.WorkerSupportsCancellation = True

            '±Ò°Ê­I´º§@·~
            If Me.BackgroundWorker1.IsBusy Then
                MsgBox("¤u§@¤w¦b¶i¦æ¤¤.....")
                Exit Sub
            Else


                Dim ret As Collection = Me._CustMobileLst

               
                If ret.Count > 0 Then

                    Me.progress.Maximum = ret.Count - 1

                End If

                BackgroundWorker1.RunWorkerAsync()

            End If

        End If




    End Sub


    ''' <summary>
    ''' ±H¥XÂ²°T 2011/11/06 
    ''' </summary>

    Public Sub SendSMS()

       
        'add evt handler if application happend to close
        'AddHandler Application.ApplicationExit, AddressOf AppExit


        '¶}©l®É¶¡-----------------------------
        workHistory._StartTime = DateTime.Now
        workHistory._PrjName = DateTime.Now & "±HµoSMS"
        workHistory._BpType = SendTypeFactory.SendSms
        '-------------------------------------


        'Àx¦sµ²ªG
        sb = New StringBuilder



        '­pºâ±H¥XÁ`¼Æ not use
        Dim cnt As Integer


        '---------------¨ú±oSMS±b±K-------------------
        Dim y As New User

        y = y.getUserSMS(User.LoginId, User.LoginPwd)

        Dim x As New KOT_SMSAPI
        x.username = y._SMSLoginId
        x.password = y._SMSLoginPwd

        If String.IsNullOrEmpty(x.username) Or String.IsNullOrEmpty(x.password) Then
            MsgBox("½Ð³]©wÂ²°T±b¸¹±K½X")
            Exit Sub
        End If

        '---------------¨ú±oSMS±b±K-------------------

        'WorkHistory-----------------------------
        '¹w©w¶Ç°eµ§¼Æ()
        workHistory._PlanTotalCnt = Me._CustMobileLst.count

        '---------------¶Ç°e¸ê®Æ¨ìSQL Server-------------------------------------
        Dim smsWs As New EDM.SmsWs.SMS
        ReturnSerial = smsWs.InsertSMS("sp", _
        "Á`³¡", _
        workHistory._PrjName, _
        workHistory._StartTime, _
        workHistory._PlanTotalCnt)

        '------------------------------------------------------------------------
        ' Judge which instance in the collection , govermentsms or shopsms?
        Dim ret As Collection = Me._CustMobileLst

        Dim sms As MySMS = Nothing

        If ret.Count > 0 Then
            sms = MySMS.SmsFactory(ret.Item(1))
        End If



        'Try
        sms.Send(ret, Me.txt_Content.Text, sb, x, workHistory, cnt, Me.BackgroundWorker1)
        'Catch ex As Exception
        '¤£¥i¥H°µÄÀ©ñ¸ê·½°Ê§@,§_«h·|¼vÅT¨ì±µ¤U¨Óªº±Hµo°Ê§@
        'sb = Nothing
        'x = Nothing
        'workHistory = Nothing
        'smsWs = Nothing
        'End Try


    End Sub


    ''' <summary>
    ''' µo°eÂ²°T§¹¦¨«á
    ''' ¬°Á×§K¤¤Â_,¨Ï¥Îtry catch ¨Ó§PÂ_,¨Ã¥B¼g¤J°T®§,¦Ó¤£¥Îmsgbox¥´Â_
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub BackgroundWorker1_RunWorkerCompleted(ByVal sender As Object, ByVal e As System.ComponentModel.RunWorkerCompletedEventArgs) Handles BackgroundWorker1.RunWorkerCompleted


        'Àx¦sµ²§ô®É¶¡
        workHistory._EndTime = DateTime.Now


        'Àx¦s¤u§@¾úµ{---------------------------------------------------
        Try
            workHistory.Save()
            'workHistory = Nothing  ' fuck you
        Catch ex As Exception
            sb.Append("Error_Code:281_SMS_Error" & vbCrLf & ex.Message)

        End Try
        'Àx¦s¤u§@¾úµ{---------------------------------------------------



        'Send data to Sql server---------------------------------------
        Try
            Dim smsWs As New EDM.SmsWs.SMS

            smsWs.UptSMS(Me.ReturnSerial, workHistory._EndTime, workHistory._SuccessCnt, workHistory._FailCnt)
            smsWs = Nothing
        Catch ex As Exception
            sb.Append("Error_Code:253_SMS_Error" & vbCrLf & ex.Message)

        End Try
        'Send data to Sql server---------------------------------------


        'test 
        'Dim test As String = sb.ToString

        '-------«È»s°T®§-----------------------------------------------------------
        'ex:
        '0919xxxxxx  ¦¨¥\
        '0919xxxxxx  ¥¢±Ñ
        'Á`µ§¼Æ:
        '¦¨¥\µ§¼Æ:
        '¥¢±Ñµ§¼Æ:
        '---------------------------------------------------------------------------
        '¹w³] Message Form ªº message and hash field
        'My.Forms.Message.txt_Message.Text = sb.ToString & vbCrLf & "Á`µ§¼Æ:" & _
        'workHistory._SuccessCnt + workHistory._FailCnt & vbCrLf & _
        '"¦¨¥\µ§¼Æ" & workHistory._SuccessCnt & _
        'vbCrLf & "¥¢±Ñµ§¼Æ:" & workHistory._FailCnt & _
        'vbCrLf
        '2011/11/10
        'My.Forms.Message.txt_Message.Text = "Á`µ§¼Æ:" & _
        'workHistory._SuccessCnt + workHistory._FailCnt & vbCrLf & _
        '"¦¨¥\µ§¼Æ" & workHistory._SuccessCnt & _
        'vbCrLf & "¥¢±Ñµ§¼Æ:" & workHistory._FailCnt & _
        'vbCrLf
        '---------------------------------------------------------------------------
        '¶Ç­Èµ¹Message Form·Ç³Æ°µ¦ô»ù³æ²Î­p
        'My.Forms.Message._Hash = CustomMsg(sb.ToString)

        'My.Forms.Message._Message = sb.ToString
        'My.Forms.Message.txt_Message.Text = sb.ToString

        MsgBox("¤u§@¤w§¹¦¨")

        Me.progress.Value = 0


        My.Forms.Message.Show()


        'Me._CustMobileLst = Nothing

        'workHistory = Nothing



    End Sub

    ''' <summary>
    ''' µ²§ô¤u§@«á²£¥Íªº°T®§®æ¦¡
    ''' </summary>
    ''' <param name="msg"></param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Private Function CustomMsg(ByVal msg As String) As Hashtable

        '¤T¥Á©±/097056432/¶Ç°e¦¨¥\¡A§Ç¸¹¬°¡G33865190
        '¤T¥Á©±/097056432/-5:B Number¹H¤Ï³W«h ±µ¦¬ºÝ ªù¸¹¿ù»~

        Dim hash As New Hashtable

        Dim shopname As String = ""

        Dim key As String = ""

        Dim myRegex As New Regex("^\w{3}\/[0-9]*\/¶Ç°e¦¨¥\", RegexOptions.Multiline)

        'Dim msg2 As String() = msg.Split(vbCrLf)

        Dim msg2 As String() = Split(msg, vbCrLf)

        For Each msg3 As String In msg2

            Try
                If Not String.IsNullOrEmpty(msg3) Then

                    '§PÂ_¦³µL²Å¦X¦Û­q®æ¦¡,¥H¨¾¤¤¶¡·|¦³Exceptionµ¥¿ù»~°T®§
                    '¥u­p¤J¦¨¥\¦¸¼Æ
                    If myRegex.IsMatch(msg3) Then

                        msg3 = msg3.Trim

                        Dim index2 As Integer = msg3.IndexOf("/")

                        '§ä¥X¦Û­q®æ¦¡ªº¤À©±¦WºÙ
                        If Not index2 = -1 Then
                            shopname = msg3.Substring(0, index2)
                        End If

                        'find sms id
                        Dim index As Integer = msg3.IndexOf("¡G")

                        If Not index = -1 Then

                            key = msg3.Substring(index + 1)

                        End If

                        If hash.ContainsKey(key) Then

                        Else
                            hash.Add(key, shopname)
                        End If

                    End If
                End If

            Catch ex As Exception

                MsgBox("Error_Code:420_SMS_Error" & vbCrLf & ex.Message)

            End Try
        Next

        '2011/11/7
        'Dim hash As New Hashtable

        'Dim myRegex As New Regex("^\w{3}\/[0-9]*\/¶Ç°e¦¨¥\", RegexOptions.Multiline)

        'Dim msg2 As String() = msg.Split(vbCrLf)

        'For Each msg3 As String In msg2

        '    '§PÂ_¦³µL²Å¦X¶Ç°e¦¨¥\ªº®æ¦¡,¥H¨¾¤¤¶¡·|¦³Exceptionµ¥¿ù»~°T®§
        '    '¥u­p¤J¦¨¥\¦¸¼Æ
        '    If myRegex.IsMatch(msg3) Then
        '        '¨¾¤î²Ä¤@¦C³£·|²£¥Í¦h¾lªÅ®æ
        '        msg3 = msg3.Trim

        '        Dim index As Integer = msg3.IndexOf("/")

        '        '§ä¥X°T®§¸Ìªº¤À©±¦WºÙ
        '        Dim shopname As String = msg3.Substring(0, index)

        '        '­Y¤w¸g¦³³o¤À©±ºÙ¦s¦b,«h¨ú¥X­È¨Ã¥[1,­YµL,«h·s¼W¤À©±¦WºÙªº key
        '        If hash.ContainsKey(shopname) Then
        '            Dim i As Integer = hash.Item(shopname)
        '            i = i + 1
        '            hash.Item(shopname) = i
        '        Else
        '            hash.Add(shopname, 1)

        '        End If

        '    End If
        'Next

        Return hash

    End Function


    ''' <summary>
    ''' when form closed
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub SMS_FormClosed(ByVal sender As Object, ByVal e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed

        Dim msg As MsgBoxResult = Nothing

        '±Ò°Ê­I´º§@·~
        If Me.BackgroundWorker1.IsBusy Then
            msg = MsgBox("¤u§@¶i¦æ¤¤,±z½T©w­n¨ú®ø¶Ü?", MsgBoxStyle.YesNoCancel)

            If msg = MsgBoxResult.Yes Then

                Me.BackgroundWorker1.CancelAsync()

                Me.Close()

            End If

        End If

    End Sub


    Private Sub BackgroundWorker1_ProgressChanged(ByVal sender As Object, ByVal e As System.ComponentModel.ProgressChangedEventArgs) Handles BackgroundWorker1.ProgressChanged


        ''­I´º§@·~¶i«×¦^³øµ{§Ç()

        'txt_Message.Text = e.UserState                             '§e²{¶Ç°e°T®§   
        'Label9.Text = "¤w¶Ç°e " & e.ProgressPercentage & "µ§"          '§e²{¶Ç°eµ§¼Æ   

        '¨ú±o±H¥XÁ`¼Æ
        'workHistory._TotalCnt = e.ProgressPercentage

        Me.progress.Increment(e.ProgressPercentage)

    End Sub



    '¤¤¤î§@·~
    Private Sub btn_Cancel_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_Cancel.Click


        If Me.BackgroundWorker1.CancellationPending Then
            Me.BackgroundWorker1.CancelAsync()
            Me.Close()
        Else

            Me.Close()

        End If


    End Sub


    '­pºâ¼Æ¦r¦h¹è
    Private Sub txt_Content_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_Content.TextChanged


        Me.lbl_Strlength.Text = "¦r¼Æ" & txt_Content.Text.Length.ToString


    End Sub


    ''' <summary>
    ''' Åã¥Ü¬O§_¤u§@¬O§_¦s¤J±Æµ{©ÎªÌ½d¥»
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub IsSaveToWorkArrangeOrSamp()

        'Dim btn As Button = My.Forms.IsSaveToWorkOrSamp.btn_AddSamp

        'Dim btn1 As Button = My.Forms.IsSaveToWorkOrSamp.btn_AddWork

        'AddHandler btn.Click, AddressOf AddSample

        'AddHandler btn1.Click, AddressOf AddWork

        'My.Forms.IsSaveToWorkOrSamp.Show()


    End Sub

    '·s¼W½d¥»
    Private Sub AddSample(ByVal sender As Object, ByVal e As EventArgs)

        Dim samp As New Saple
        samp._SampName = DateTime.Now.ToString
        samp._SampContent = Me.txt_Content.Text.Trim
        samp._SampCat = Saple.SmsSamp

        Try
            samp.AddSamp(samp)
        Catch ex As Exception
            MsgBox("Error_Code:460_SMS_Error" & vbCrLf & ex.Message)
            Exit Sub
        End Try

        My.Forms.IsSaveToWorkOrSamp.Close()


    End Sub


    '·s¼W±Æµ{
    Private Sub AddWork(ByVal sender As Object, ByVal e As EventArgs)

        My.Forms.AddWork.Show()

        My.Forms.IsSaveToWorkOrSamp.Close()


    End Sub


    ''' <summary>
    '''¿ï¾Ü³q°T¿ý
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_ShowPrj.Click

        My.Forms.AddProject.TopMost = True
        My.Forms.AddProject.Show()
        My.Forms.AddProject.StartPosition = FormStartPosition.CenterScreen

        'My.Forms.AddProject.btn_ImportCust.Visible = False
        'Â²°T«ö¶s
        'My.Forms.AddProject.ToolStripButton1.Visible = False

        'remove button named close
        My.Forms.AddProject.ToolStrip2.Items.RemoveAt(2)

        'add Button named ±H¥XÂ²°T-----------------------------------------------------
        Dim control As New ControlTool

        Dim btn As ToolStripButton = control.AddToolsBtn("±H¥XÂ²°T", ControlTool.ImgButton, "Images\Email.png")


        My.Forms.AddProject.ToolStrip2.Items.Add(btn)

        AddHandler btn.Click, AddressOf AddPrj_Click
        '-----------------------------------------------------

        'add Button named close ------------------------------
        Dim btn2 As ToolStripButton = control.AddToolsBtn("Ãö³¬", ControlTool.ImgButton, "Images\Delete.png")

        My.Forms.AddProject.ToolStrip2.Items.Add(btn2)

        AddHandler btn2.Click, AddressOf CloseAddPrject_Click
        '-----------------------------------------------------

    End Sub

    ''' <summary>
    ''' close AddProject Form
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub CloseAddPrject_Click(ByVal sender As Object, ByVal e As EventArgs)

        My.Forms.AddProject.Close()

    End Sub

 
    ''' <summary>
    ''' ¥[¤J³q°T¿ý¨ì¥Ø«eªº±HµoÂ²°T¦W³æ 
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub AddPrj_Click(ByVal sender As Object, ByVal e As EventArgs)

        'Reset-------------------------
        'Me._CustMobileLst = Nothing

        'Me._CustCnt = 0
        'Reset-------------------------



        '¨ú±o¦óºØÃþ«¬«È¤á
        Dim cust As OrginCust = CustFactory.getCustTpe(CustFactory.goverment)

        '®Ú¾Ú«È¤áÃþ«¬¨ú±o¦óºØÂ²°TÃþ«¬
        Dim sms As MySMS = MySMS.SmsFactory(cust)

        'Dim ret As Collection(Of GovermentCust) = cust.getCheckedMobileLst(My.Forms.AddProject.DataGridView1)

        'Dim sms As MySMS = MySMS.SmsFactory(cust)

        Dim ret As Collection = sms.getMobileLst(My.Forms.AddProject.DataGridView1)


        Dim receiver As String = sms.mobileLstToString


        '²Ö¥[³q°T²M³æ,2012/2/6 §ï¦¨¤£²Ö¥[
        Me._SelectedPrjName = receiver

        Me._CustMobileLst = ret

        Me._CustCnt = ret.Count

        'RaiseEvent CustCnt_Chg(ret.Count)

        My.Forms.AddProject.Close()

    End Sub

  
    ''' <summary>
    ''' «ö¤U¿ï¾Ü±M®×ªí³æ«áªº°Ê§@,³]©wCust Mobile List
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub getCustLst(ByVal sender As Object, ByVal e As EventArgs)

        Dim cust As EDM.Holmes.Cust.Cust

        Dim ret As Collection(Of String) = Nothing

        If Not String.IsNullOrEmpty(Me.lbl_PrjId.Text) Then

            cust = New EDM.Holmes.Cust.Cust
            ret = cust.getMobilelst(Me.lbl_PrjId.Text)


            Me._CustMobileLst = ret


        End If

    End Sub

    ''' <summary>
    ''' ¿ï¾Ü½d¥»
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub ToolStripButton1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_ChooseSamp.Click

        'My.Forms.SampleMaintain.Show()
        My.Forms.SMSSamp.Show()

    End Sub


    ''' <summary>
    ''' ¿ï¾Ü©Ò¦³«È¤á
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub btn_AllCust_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_AllCust.Click

        Dim ret As Collection(Of String) = Nothing


        Dim sb As New StringBuilder

        Dim cust As OrginCust = CustFactory.getCustTpe(CustFactory.goverment)

        Try
            ret = cust.getCustMobile

        Catch ex As Exception

            MsgBox("Error_Code:463_SMS_Error")
            Exit Sub

        End Try

        For Each mobile As String In ret

            sb.Append(IIf(mobile <> "", mobile & ",", ""))
        Next

        Me._CustCnt = ret.Count

        'RaiseEvent CustCnt_Chg(ret.Count)

        'Me.lbl_PrjName.Text = String.Format("({0}):{1}", ret.Count, sb.ToString)

        Me.lbl_PrjName.Text = sb.ToString

        'Me._SelectedPrjName = sb.ToString

    End Sub

    ''' <summary>
    ''' when contact list has changed
    ''' </summary>
    ''' <param name="prjName"></param>
    ''' <remarks></remarks>
    Private Sub SMS_PrjName_Chg(ByVal prjName As String) Handles Me.PrjName_Chg

        'Me.lbl_PrjName.Text = String.Format("({0}):{1}", custCnt, prjName)

        Me.lbl_PrjName.Text = prjName

    End Sub


    ''' <summary>
    ''' clear contact list
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub btn_ClearContact_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btn_ClearContact.Click

        Me.lbl_PrjName.Text = ""


        'Me.custMobileLst.Clear()

        Me._SelectedPrjName = ""

        RaiseEvent CustCnt_Chg(0)

    End Sub


    Public Property _SelectedSampName()
        Get
            Return Me.selectedSampName
        End Get
        Set(ByVal value)
            Me.selectedSampName = value
        End Set
    End Property

    Public Property _SelectedSampId()
        Get
            Return Me.selectedSampId
        End Get
        Set(ByVal value)
            Me.selectedSampId = value
        End Set
    End Property

    Public Property _SelectedSampContent()
        Get
            Return Me.selectedSampContent
        End Get
        Set(ByVal value)
            Me.selectedSampContent = value
        End Set
    End Property

    Public Property _SelectedPrjName()
        Get
            Return Me.selectedPrjName
        End Get
        Set(ByVal value)
            Me.selectedPrjName = value
            RaiseEvent PrjName_Chg(Me.selectedPrjName)
        End Set
    End Property

    Public Property _CustMobileLst()
        Get
            Return Me.custMobileLst
        End Get
        Set(ByVal value)
            Me.custMobileLst = value
        End Set
    End Property

    Public Property _CustCnt()
        Get
            Return Me.CustCnt
        End Get
        Set(ByVal value)
            'Dim oldvalue As Integer = 0
            'oldvalue = Me.CustCnt
            Me.CustCnt = value
            RaiseEvent CustCnt_Chg(value)
        End Set
    End Property


  

    ''' <summary>
    ''' ¥[¤J«È¤á
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub ToolStripButton2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripButton2.Click

        Try

            Me.AddPrj_Click(sender, e)

        Catch ex As Exception

            'Á×§Kµo¥ÍµLÅª¨ú¨ì«È¤áÀÉ®×ªº¿ù»~
            MsgBox(ex.Message)

            Exit Sub

        End Try

    End Sub


    ''' <summary>
    ''' ¬d¸ß¾ú¥v°O¿ý
    ''' </summary>
    ''' <param name="sender"></param>
    ''' <param name="e"></param>
    ''' <remarks></remarks>
    Private Sub ToolStripButton1_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ToolStripButton1.Click

        My.Forms.Message.StartPosition = FormStartPosition.CenterScreen

        My.Forms.Message.ShowDialog()

    End Sub
End Class