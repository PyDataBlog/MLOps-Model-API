Imports MySql.Data.MySqlClient

Module functions
    Public conn As MySqlConnection
    Public aplha As Integer = 1
    Public beta As Integer = 0
    Public connectStatus As Integer = 0
    Public reportDirectory As String = ""

    Public Function GetConnect()
        Try
            conn = New MySqlConnection
            'conn.ConnectionString = "SERVER=92.222.164.53;DATABASE=bqddbaaf_computing;user id=bqddbaaf_test;password=xs7-kW9-FbM-YXv;Convert Zero Datetime=True;Allow Zero Datetime=True"
            conn.ConnectionString = "SERVER=ryanbush.org;DATABASE=computing;user id=computing;password=bushy12;Convert Zero Datetime=True;Allow Zero Datetime=True"
        Catch ex As Exception
            LogError(101, ErrorToString)
        End Try
        Return conn
    End Function

    Public Function getMD5Hash(ByVal strToHash As String) As String
        Dim md5Obj As New System.Security.Cryptography.MD5CryptoServiceProvider()
        Dim bytesToHash() As Byte = System.Text.Encoding.ASCII.GetBytes(strToHash)

        bytesToHash = md5Obj.ComputeHash(bytesToHash)

        Dim strResult As String = ""
        Dim b As Byte

        For Each b In bytesToHash
            strResult += b.ToString("x2")
        Next

        Return strResult
    End Function

    Public Function GetRandom(ByVal Min As Integer, ByVal Max As Integer) As Integer
        Dim Generator As System.Random = New System.Random()
        Return Generator.Next(Min, Max)
    End Function

    Public Function ShowError(ByVal ErrorId As Integer)
        Select Case ErrorId
            Case 101 ' Error 101
                ShowMessageBox("Error: 101", "There was an error while submitting your details to our database. Please try again later.", 1)
            Case 102 ' Error 102
                ShowMessageBox("Error: 102", "The passwords you have entered do not match.", 1)
            Case 103 ' Error 103
                ShowMessageBox("Error: 103", "You have not submitted the required information to continue.", 1)
            Case 104 ' Error 104
                ShowMessageBox("Error: 104", "The school you have entered already exists.", 1)
            Case 105 ' Error 105
                ShowMessageBox("Error: 105", "You are not authorised to access this area.", 1)
            Case 106 ' Error 106
                ShowMessageBox("Error: 106", "The details you have provided are incorrect. Please try again.", 1)
            Case 107 ' Error 107
                ShowMessageBox("Error: 107", "The username you have specified is already taken.", 1)
            Case 108 ' Error 108
                ShowMessageBox("Error: 108", "There was an error connecting to our database. Please try again later.", 1)
            Case 109 ' Error 109
                ShowMessageBox("Error: 109", "The name you have supplied does not exist.", 1)
            Case 110 ' Error 110
                ShowMessageBox("Error: 110", "No information was submitted. Please try again later.", 1)
            Case 111 ' Error 111
                ShowMessageBox("Error: 111", "The area you are trying to access is not available at this time. Please try again later.", 1)
            Case 112 ' Error 112
                ShowMessageBox("Error: 112", "There was an error while connecting to the FTP Server. Please try uploading the file later.", 1)
            Case 113 ' Error 113
                ShowMessageBox("Error: 113", "The Authentication Code you have provided has already been used.", 1)
            Case 114 ' Error 114
                ShowMessageBox("Error: 114", "The Authentication Code you have provided is not valid.", 1)
            Case 115 ' Error 115
                ShowMessageBox("Error: 115", "The password you have provided must be over 5 characters long.", 1)
            Case 116 ' Error 116
                ShowMessageBox("Error: 116", "The Authentication Code you have provided is not 20 characters long.", 1)
            Case 117 ' Error 117
                ShowMessageBox("Error: 117", "The Authentication Code you have provided is already in use.", 1)
            Case 118 ' Error 118
                ShowMessageBox("Error: 118", "You must search for more than 3 characters.", 1)
        End Select
        Return 1
    End Function

    Public Function ShowMessageBox(ByVal Title As String, ByVal Message As String, ByVal Type As Integer)
        If Type = 1 Then
            frmError.errorStatus = 1
        ElseIf Type = 2 Then
            frmError.errorStatus = 2
        ElseIf Type = 3 Then
            frmError.errorStatus = 3
        End If
        frmError.lblErrorTitle.Text = Title
        frmError.lblErrorMessage.Text = Message
        frmError.Show()
        Return 1
    End Function

    Public Function AdminCheck()
        conn = GetConnect()
        Try
            conn.Open()
            Using sqlCommand As New MySqlCommand("SELECT * FROM users WHERE username = @username AND school = @school AND admin = @admin")
                sqlCommand.Connection = conn

                sqlCommand.Parameters.AddWithValue("@username", My.Settings.userName)
                'sqlCommand.Parameters.AddWithValue("@password", My.Settings.userPassword)
                sqlCommand.Parameters.AddWithValue("@school", My.Settings.schoolName)
                sqlCommand.Parameters.AddWithValue("@admin", 1)
                LogError("SQL QUERY", "SELECT * FROM users WHERE username = " & My.Settings.userName & " AND school = " & My.Settings.schoolName & " AND admin = 1")
                Dim sqlReader As MySqlDataReader = sqlCommand.ExecuteReader()
                While sqlReader.Read()
                    Return 1
                End While
            End Using
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            ShowError(101)
            LogError(101, ErrorToString)
            Return 0
        End Try
    End Function

    Public Function LogErrorCode(ByVal errorID As Integer)
        Select Case errorID
            Case 101 ' Error 101
                LogError(101, "There was an error while submitting your details to our database. Please try again later.")
            Case 102 ' Error 102
                LogError(102, "The passwords you have entered do not match.")
            Case 103 ' Error 103
                LogError(103, "You have not submitted the required information to continue.")
            Case 104 ' Error 104
                LogError(104, "The school you have entered already exists.")
            Case 105 ' Error 105
                LogError(105, "You are not authorised to access this area.")
            Case 106 ' Error 106
                LogError(106, "The details you have provided are incorrect. Please try again.")
            Case 107 ' Error 107
                LogError(107, "The username you have specified is already taken.")
            Case 108 ' Error 108
                LogError(108, "There was an error connecting to our database. Please try again later.")
            Case 109 ' Error 109
                LogError(109, "The name you have supplied does not exist.")
            Case 110 ' Error 110
                LogError(110, "No information was submitted. Please try again later.")
            Case 111 ' Error 111
                LogError(111, "The area you are trying to access is not available at this time. Please try again later.")
            Case 112 ' Error 112
                LogError(112, "There was an error while connecting to the FTP Server. Please try uploading the file later.")
            Case 113 ' Error 113
                LogError(113, "The Authentication Code you have provided has already been used.")
            Case 114 ' Error 114
                LogError(114, "The Authentication Code you have provided is not valid.")
            Case 115 ' Error 115
                LogError(115, "The password you have provided must be over 5 characters long.")
            Case 116 ' Error 116
                LogError(116, "The Authentication Code you have provided is not 20 characters long.")
            Case 117 ' Error 117
                LogError(117, "The Authentication Code you have provided is already in use.")
            Case 118 ' Error 118
                LogError(118, "You must search for more than 3 characters.")
        End Select
        Return 0
    End Function

    Public Function LogError(ByVal errorID As String, ByVal errorInfo As String)
        If My.Settings.logStatus = 0 Then
            conn = GetConnect()
            Try
                conn.Open()
                Using sqlCommand As New MySqlCommand("INSERT INTO errorlog(`errorid`, `school`, `username`, `errorinfo`) VALUES (@errorid, @school, @username, @errorinfo)")
                    sqlCommand.Connection = conn
                    sqlCommand.Parameters.AddWithValue("@errorid", errorID)
                    If My.Settings.schoolName = "" Then
                        sqlCommand.Parameters.AddWithValue("@school", " ")
                    Else
                        sqlCommand.Parameters.AddWithValue("@school", My.Settings.schoolName)
                    End If
                    If My.Settings.userName = "" Then
                        sqlCommand.Parameters.AddWithValue("@username", System.Environment.UserName)
                    Else
                        sqlCommand.Parameters.AddWithValue("@username", My.Settings.userName)
                    End If
                    sqlCommand.Parameters.AddWithValue("@errorinfo", errorInfo)
                    sqlCommand.ExecuteNonQuery()
                End Using
                conn.Close()
                conn.Dispose()
            Catch ex As Exception
                MsgBox(ErrorToString)
            End Try
            Dim path As String = System.Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)
            Dim FILE_NAME As String = path & "\School Self-Evaluation Tool\error.log"
            If System.IO.File.Exists(FILE_NAME) = True Then
                Dim objWriter As New System.IO.StreamWriter(FILE_NAME, IO.FileMode.Append)
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [WARNING] [" & errorID & "] [" & errorInfo & "]")
                objWriter.Close()
            Else
                My.Computer.FileSystem.CreateDirectory(path & "\School Self-Evaluation Tool")
                Dim objWriter As IO.StreamWriter
                objWriter = IO.File.CreateText(FILE_NAME)
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [WARNING] [" & errorID & "] [" & errorInfo & "]")
                objWriter.Close()
            End If
        ElseIf My.Settings.logStatus = 1 Then
            Return 0
        End If
        Return 0
    End Function

    Function ConnectionAttempt()
        conn = GetConnect()
        Try
            conn.Open()
            LogError("SQL Connection", "Database: " & conn.Database)
            conn.Close()
            conn.Dispose()
            connectStatus = 1
        Catch ex As Exception
            connectStatus = 2
        End Try
        Return 1
    End Function

    Function LogInfo(ByVal action As String, ByVal info As String)
        conn = GetConnect()
        Try
            conn.Open()
            Using sqlCommand As New MySqlCommand("INSERT INTO log(`school`, `name`, `action`, `info`) VALUES (@school, @name, @action, @info)")
                sqlCommand.Connection = conn
                sqlCommand.Parameters.AddWithValue("@school", My.Settings.schoolName)
                sqlCommand.Parameters.AddWithValue("@name", System.Environment.UserName)
                sqlCommand.Parameters.AddWithValue("@action", action)
                sqlCommand.Parameters.AddWithValue("@info", info)
                sqlCommand.ExecuteNonQuery()
                LogError("SQL QUERY", "INSERT INTO log(`school`, `name`, `action`, `info`) VALUES (" & My.Settings.schoolName & ", " & System.Environment.UserName & ", " & action & ", " & info & ")")
            End Using
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            LogError(101, ErrorToString)
        End Try
        Return 0
    End Function

    Function PopulateEditReports()
        conn = GetConnect()
        Try
            conn.Open()
            Using sqlCommand As New MySqlCommand("SELECT * FROM reports WHERE school = @school AND finished = 0")
                sqlCommand.Connection = conn

                sqlCommand.Parameters.AddWithValue("@school", My.Settings.schoolName)
                LogError("SQL QUERY", "SELECT * FROM reports WHERE school = " & My.Settings.schoolName & " AND finished = 0")
                Dim sqlReader As MySqlDataReader = sqlCommand.ExecuteReader()
                While sqlReader.Read()
                    frmMain.editReportsGridView.Rows.Add(New String() {sqlReader("id"), sqlReader("dateStart").ToString, sqlReader("startUser"), sqlReader("dateEdit").ToString, sqlReader("lastUser"), sqlReader("percentComplete")})
                End While
            End Using
            conn.Close()
            conn.Dispose()
        Catch ex As Exception
            ShowError(101)
            LogError(101, ErrorToString)
        End Try
        Return 1
    End Function

    Function addBug()
        Dim inputBug As Object = InputBox("Enter the details of the bug", "Bug Report")
        If inputBug = "" Then
            Return 0
        Else
            conn = GetConnect()
            Try
                conn.Open()
                Using sqlCommand As New MySqlCommand("INSERT INTO bugreports(`username`, `machinename`, `osversion`, `processorcount`, `userdomainname`, `message`, `softwareversion`) VALUES (@username, @machinename, @osversion, @processorcount, @userdomainname, @message, @softwareversion)")
                    sqlCommand.Connection = conn
                    sqlCommand.Parameters.AddWithValue("@username", System.Environment.UserName)
                    sqlCommand.Parameters.AddWithValue("@machinename", System.Environment.MachineName)
                    sqlCommand.Parameters.AddWithValue("@osversion", System.Environment.OSVersion)
                    sqlCommand.Parameters.AddWithValue("@processorcount", System.Environment.ProcessorCount)
                    sqlCommand.Parameters.AddWithValue("@userdomainname", System.Environment.UserDomainName)
                    sqlCommand.Parameters.AddWithValue("@message", inputBug)
                    If aplha = 1 Then
                        sqlCommand.Parameters.AddWithValue("@softwareversion", My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
                    ElseIf beta = 1 Then
                        sqlCommand.Parameters.AddWithValue("@softwareversion", My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "b")
                    Else
                        sqlCommand.Parameters.AddWithValue("@softwareversion", My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision)
                    End If
                    sqlCommand.ExecuteNonQuery()

                End Using
                conn.Close()
                conn.Dispose()
            Catch ex As Exception
                LogError(101, ErrorToString)
            End Try
        End If
        Return 1
    End Function

    Function InitiateSoftware()
        Dim path As String = System.Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)
        Dim FILE_NAME As String = path & "\School Self-Evaluation Tool\error.log"
        If System.IO.File.Exists(FILE_NAME) = True Then
            Dim objWriter As New System.IO.StreamWriter(FILE_NAME, IO.FileMode.Append)
            objWriter.WriteLine("-------------------------------------------------")
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Started")
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Computer Username: " & System.Environment.UserName)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Machine Name:" & System.Environment.MachineName)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Operating System Version: " & System.Environment.OSVersion.ToString)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Operating System 64 Bit: " & System.Environment.Is64BitOperatingSystem)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] User Domain Name: " & System.Environment.UserDomainName)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Initializing...")
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: TAPS Self-Evaluation Tool (C) 2014-2015 Ryan Bush")
            If aplha = 1 Then
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Using Software Version " & My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
            ElseIf beta = 1 Then
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Using Software Version " & My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
            Else
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Using Software Version " & My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
            End If
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Loading SplashScreen")
            objWriter.Close()
        Else
            My.Computer.FileSystem.CreateDirectory(path & "\School Self-Evaluation Tool")
            Dim objWriter As IO.StreamWriter
            objWriter = IO.File.CreateText(FILE_NAME)
            objWriter.WriteLine("-------------------------------------------------")
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Started")
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Computer Username: " & System.Environment.UserName)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Machine Name:" & System.Environment.MachineName)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Operating System Version: " & System.Environment.OSVersion.ToString)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] Operating System 64 Bit: " & System.Environment.Is64BitOperatingSystem)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [LOG] User Domain Name: " & System.Environment.UserDomainName)
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Initializing...")
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: TAPS Self-Evaluation Tool (C) 2014-2015 Ryan Bush")
            If aplha = 1 Then
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Using Software Version " & My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
            ElseIf beta = 1 Then
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Using Software Version " & My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
            Else
                objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Using Software Version " & My.Application.Info.Version.Major & "." & My.Application.Info.Version.Minor & "." & My.Application.Info.Version.Build & "." & My.Application.Info.Version.Revision & "a")
            End If
            objWriter.WriteLine("[" & DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss") & "] [SOFTWARE INITIATE] [MAIN] Main: Loading SplashScreen")
            objWriter.Close()
        End If
        Return 1
    End Function
End Module

BEGIN
'If any of the text boxes are empty then the user is alerted.
	If Password provided = Nothing Or School = Nothing Or Username = Nothing Then
		Show Error Code with no data provided
	Else
'SQL connection is loaded
		Load the SQL Connection
		Try
'An attempt to connect to the SQL database is made
			Attempt to open the SQL Connection
'The information required is selected from the database
            Select all data from the SQL database where the username equals the username provided and the password equals the password provided and the school equals the school provided.
'The password provided is hashed
            Hash the password
'The data being sent to the SQL database is protected from SQL injection
            Protect the data from SQL Injection
'The query is executed
            Execute the Reader
'The query is logged to file
            Log the query to the log file
'If the user wants their login details remembered then then information is saved to the application settings.
            If Login Remember = Checked Then
	            Save the username and password to the settings
            Else
	            Remove the username and password from the settings
            End If
'Sets a login variable to 1
            Set login successful variable to 1
'Adds a line to the log stating that the user has logged in
            Log Info that the user has logged in
'The main form is shown
            Show the main form
'The login form closes
            Close this form.
		Catch
'An error message is shown alerting the user of the problem.
			Show error code 101 and log the error info to the file
		End Try
'If the login was unsucessful then the user is alerted.
		If login successful = 0 Then
			Show error that login was unsuccessful
			Log to Info File
		End If
	End If
END
