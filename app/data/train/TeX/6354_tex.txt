\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}
\usepackage{graphicx}
\usepackage{wrapfig}
\usepackage{amssymb}
\usepackage{mathrsfs} % mathscr calligr
\usepackage[mathscr]{eucal} % mathscr usual
\usepackage{eufrak} % mathfrak
\usepackage{amsfonts} % mathbb

\sloppy

\binoppenalty=10000
\relpenalty=10000
\graphicspath{.}

\title{Задание 4}
\author{Евгений Шлыков}
\date{Дедлайн 16.05.2016}

\begin{document}

\maketitle

\par \textbf{Задача 1}. Дан взвешенный граф $G = (V, E )$ с неотрицательными весами. Требуется сделать так, чтобы расстояние между вершинами $s$ и $t$ было как можно меньше; для этого разрешается добавить в граф одно ребро; варианты находятся в списке ребер $E^\prime$. Сложность не более $\mathcal{O}((|E| + |E^\prime| + |V|) \log{|V|})$.
\par \textit{Решение}. Воспользуемся алгоритмом Дейкстры и посчитаем расстояние от $s$ до всех вершин и от $t$ до всех вершин, запишем расстояние до вершины $u$ как $\delta(s, u)$ и $\delta(t, u)$ соответственно, искомое кратчайшее расстояние между $s$ и $t$ как $\rho$. Пусть теперь мы добавили в граф ребро $(u, v)$ веса $w$, а расстоние изменилось. Это значит, что кратчайший путь проходит через добавленное ребро, значит, разумеется, и через вершины $u$ и $v$ тоже. Все ребра неотрицательные, откуда следует, что в кратчайшем пути нет циклов, значит, по каждому ребру мы прошлись единожды. Следовательно, расстояние до $u$ либо до $v$ является кратчайшим хотя до какой-то вершин $s$ и $t$. Тогда будет достаточно релаксировать $\rho$ через $\mathrm{min}\{\delta(s, u) + \delta(t, v), \delta(s, v) + \delta(t, u)\} + w$. Сложность $\mathcal{O}((|E|+|V|)\log{|V|}+|E^\prime|)$.
\\
\par \textbf{Задача 2}. Дана система неравенств вида $x_i \leqslant x_j + w_{ij}$, где $x_i$, $x_j$ --- переменные, $w_{ij}$ --- некое заданное число. Выведите одно из решений такой системы, либо установите, что таких решений не существует. Сложность $\mathcal{O}(\mbox{кол-во\_переменных} \cdot \mbox{кол-во\_неравенств} )$.
\par \textit{Решение}. Пусть $n$ переменных и $m$ неравенств. Рассмотрим граф, в котором вершины будут обозначать переменные, а ребра --- ограничения: если $x_i \leqslant x_j + w_{ij}$, то существует ребро $(v_j, v_i)$ веса $w_{ij}$, и обратно. Кроме того, в графе есть специальная вершина $v_0$ такая, что $\forall i ( i \in [n] \to ( \exists (v_0, v_i) ( w_{i0} = 0 ))) $. Обозначим также кратчайший путь между вершинами $v_i$ и $v_j$ как число $s_{ij}$. Докажем, что решение системы ограничений существует тогда и только тогда, когда в графе ограничений нет циклов отрицательного веса и, более того, одним из решений будет $x_i = s_{0i}$.
\par Пусть в графе нет циклов отрицательного веса. Тогда рассмотрим решение, образованное кратчайшими путями. Из нераветсва треугольника напрямую следует, что $x_i = s_{0i}$ подходит: рассмотрим произвольное ребро $(v_i, v_j )$, тогда $s_{0j} \leqslant s_{0i} + w_{ji}$. Теперь допустим, что существует цикл отрицательного веса $ (u_1, \ldots, u_k)$, здесь $u_1 = u_k$. Рассмотрим тогда систему неравенств $u_{i+1} \leqslant u_i + w_{(i + 1)i}$ по всем $i \in [k - 1]$ и сложим все неравенства: получим $0 \leqslant \sum_{i=1}^{k-1} w_{(i+1)i} < 0$ --- противоречие.
\par Значит, можно создать граф, запустить алгоритм Форда-Беллмана с проверкой на наличие цикла отрицательного веса, и посчитать кратчайшие пути от $v_0$. Сложность $\mathcal{O}(nm)$.
\\
\par \textbf{Задача 3}. Дан взвешенный ориентированный граф на $V$ вершинах и $Е$ ребрах без циклов отрицательного веса. Требуется отвечать на $K$ запросов следующего вида: каков будет кратчайший путь между вершинами $u$ и $v$, если к весу ребра между вершинами $u^\prime$ и $v^\prime$ добавить некое неотрицательное число $k$? Сложность $\mathcal{O}(E(V + K \log{V}))$.
\par \textit{Решение}. Воспользуемся частично алгоритмом Джонсона и модернизируем граф. Добавим в него вершину $s \notin V$ и ребра $(s, v)$ для каждой $v \in V$ веса 0. Теперь определим для каждой вершины $v \in V$ величину $h(v) = \rho(s, v)$ и переопределим веса ребер как $w^\prime(u, w) = w(u, v) + h(u) - h(v) \geqslant 0$ (по неравенству треугольника).
\par Чтобы посчитать $h$, запустим алгоритм Форда-Беллмана из вершины $s$. Далее пересчитаем веса ребер. Теперь все веса неотрицательны, а значит, применим алгоритм Дейкстры. После прибавления веса (за число ребер) все останется неотрицательно. Потом пересчитаем расстояние обратным преобразованием (величины $h$ для промежуточных вершин сократяться, так что нужно будет учесть лишь начало и конец). Будем выполнять его на каждый запрос. Итого $\mathcal{O}(VE+KE\log{V})$

\end{document}