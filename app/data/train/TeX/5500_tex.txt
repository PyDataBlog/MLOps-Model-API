\documentclass[a4paper]{article}
\usepackage{graphicx}
\usepackage{fullpage}
%\usepackage{parskip}
\usepackage{color}
\usepackage[ngerman]{babel}
\usepackage{hyperref}
\usepackage{calc} 
\usepackage{enumitem}
\usepackage{titlesec}
\usepackage[export]{adjustbox}
%\pagestyle{headings}

\titleformat{name=\section,numberless}
  {\normalfont\Large\bfseries}
  {}
  {0pt}
  {}
\date{\vspace{-3ex}}
\begin{document}

\title{
    \vspace{-30pt}
	\includegraphics*[width=0.1\textwidth,left]{images/hu_logo2.png}\\
	\vspace{-10pt}
	Einf"uhrung in die Philosophie}
\author{Lennard Wolf\\
        \small{\href{mailto:lennard.wolf@student.hu-berlin.de}{lennard.wolf@student.hu-berlin.de}}}
\maketitle
\vspace{0pt}

\section*{AB 4: Is Justified True Belief Knowledge?}
\large

\vspace{10pt}
\noindent\textbf{(1)}\\
Ein Beispiel f"ur einen Gettier Fall war das Milgram-Experiment\footnote{Siehe \url{https://de.wikipedia.org/wiki/Milgram-Experiment}} von 1961. 

In dieser Studie wurden Probanden aufgefordert, einer Person, die sich hinter einer Wand befand, Elektroschocks zu geben, wenn sie bei dem Beantworten einer Frage einen Fehler gemacht hat. Regelm"a"sig sollten die Probanden die St"arke der Schocks erh"ohen, und durch die Wand konnten sie jedesmal Schreie h"oren. Die Versuchsleiter versicherten den Probanden aber, dass die Person hinter der Wand kein Schaden zugef"ugt wird. Daher waren die Probanden gerechtfertigt in der Annahme, dass sie niemandem schaden. 

Tats"achlich befand sich aber ein Schauspieler hinter der Wand und die Elektroschocks waren nur simuliert. So lagen die Probanden richtig in ihrer gerechtfertigten Annahme, dass sie niemandem schaden, jedoch aus einem falschen Grund. 

\vspace{8pt}
\noindent\textbf{(2)}\\
Im Folgenden m"ochte ich anhand einer Analogie begr"unden, weshalb konstruierte, und unter Umst"anden lebensfern wirkende Beispiele eine argumentative Rolle spielen.

In der Softwareentwicklung ist es eine Tugend, sogenannte \emph{Tests} f"ur die geschriebenen Programme zu kreieren. Diese sind kleine Skripte, in denen jeweils ein Szenario aufgestellt wird, mit welchem das zu testende Programm dann konfrontiert wird, und das daraufhin gezeigte Verhalten mit dem gew"unschten verglichen wird. Da im Entwicklungsprozess "Anderungen an einer Stelle im Code Einfluss auf andere Stellen haben k"onnen, ist es von Vorteil, sich durch Testl"aufe zu versichern, dass das gew"unschte Verhalten weiterhin beibehalten wird. 

Die f"ur die Tests erstellten Szenarien sind in der Form meist sehr "ahnlich, doch inhaltlich k"onnen sie stark auseinander gehen. So werden typische Standardsituationen f"ur die Software erstellt, aber auch Extremf"alle, die m"oglicherweise bei der Inbetriebnahme so tats"achlich nie auftreten w"urden. Doch diese Extremf"alle sind von gro"ser Wichtigkeit, da durch sie gezeigt werden kann, wie stabil das System in seiner G"anze wirklich ist. Denn eine Software, die nur eine enge, vorbestimmte Menge an Szenarien bearbeiten kann, l"asst sich als weniger n"utzlich bezeichnen im Vergleich zu einer, die in alle (theoretisch) m"oglichen Situationen Anwendung findet.

Analog verh"alt es sich zu Theorien in der Philosophie. Eine Theorie, die lebensferne Grenzf"alle nicht einkalkuliert, ist schlechter als eine, die auch auf solche anwendbar ist. Durch solche konstruierten Beispiele lassen sich Denkanst"o"se zum Hinterfragen von geltenden Theorien geben, was f"ur die Weiterentwicklung der Philosophie von essentieller Bedeutung ist.

\end{document}
