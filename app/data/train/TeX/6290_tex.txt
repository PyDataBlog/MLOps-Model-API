\hypertarget{mg__bsd_8h}{
\section{/home/doki/AGCS/src/mmanager/alloc/mg\_\-bsd.h File Reference}
\label{mg__bsd_8h}\index{/home/doki/AGCS/src/mmanager/alloc/mg\_\-bsd.h@{/home/doki/AGCS/src/mmanager/alloc/mg\_\-bsd.h}}
}


\subsection{Detailed Description}
Header for \hyperlink{mg__bsd_8c}{mmanager/alloc/mg\_\-bsd.c}. 

\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2005-10-23\end{Desc}
\begin{Desc}
\item[Warning:]None so far.\end{Desc}
\begin{Desc}
\item[\hyperlink{bug__bug000033}{Bug}]There are no known bugs. \end{Desc}


Definition in file \hyperlink{mg__bsd_8h-source}{mg\_\-bsd.h}.

{\tt \#include $<$stdlib.h$>$}\par
{\tt \#include \char`\"{}context.h\char`\"{}}\par
\subsection*{Enumerations}
\begin{CompactItemize}
\item 
enum \hyperlink{mg__bsd_8h_24b83cf54963575556a664442636a58b}{ret\_\-\_\-mg\_\-bsd\_\-is\_\-block\_\-free} \{ \textbf{RET\_\-\_\-MG\_\-BSD\_\-IS\_\-BLOCK\_\-FREE\_\-\_\-FREE\_\-BLOCK} = 1, 
\textbf{RET\_\-\_\-MG\_\-BSD\_\-IS\_\-BLOCK\_\-FREE\_\-\_\-USED\_\-BLOCK}
 \}
\begin{CompactList}\small\item\em Return values for mg\_\-bsd\_\-is\_\-block\_\-free. \item\end{CompactList}\item 
enum \hyperlink{mg__bsd_8h_0eb5741fb438244807816e98837a7693}{ret\_\-\_\-mg\_\-bsd\_\-is\_\-block\_\-used} \{ \textbf{RET\_\-\_\-MG\_\-BSD\_\-IS\_\-BLOCK\_\-USED\_\-\_\-USED\_\-BLOCK} = 1, 
\textbf{RET\_\-\_\-MG\_\-BSD\_\-IS\_\-BLOCK\_\-USED\_\-\_\-FREE\_\-BLOCK}
 \}
\begin{CompactList}\small\item\em Return values for mg\_\-bsd\_\-is\_\-block\_\-used. \item\end{CompactList}\end{CompactItemize}
\subsection*{Functions}
\begin{CompactItemize}
\item 
void \hyperlink{mg__bsd_8h_eca9e371c28f46d6f582a8f797e6f6b1}{mg\_\-bsd\_\-init} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Initializes memory. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_49bbeb520f12821829a1eedfcdf60eb1}{mg\_\-bsd\_\-drop} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Drops the memory. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_53dfd5536d5e4b67981cf684e3e7a473}{mg\_\-bsd\_\-morecore} (int bucket, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Allocate more memory to the indicated bucket. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_74a5f9045db595fe7612e84c7b3c5030}{mg\_\-bsd\_\-sbrk} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Sbrk adjustments. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_60fd48d88108d2983c1e7a60a7101b87}{mg\_\-bsd\_\-alloc} (size\_\-t size, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Allocates memory block. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_1c3fa243c85f4d7f7bf51262e4d7e0ef}{mg\_\-bsd\_\-free} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Frees given memory block. \item\end{CompactList}\item 
unsigned int \hyperlink{mg__bsd_8h_ca3e37517cd57338063f340a59861d48}{mg\_\-bsd\_\-get\_\-unused\_\-bits\_\-num} (void)
\begin{CompactList}\small\item\em This function returns the number of unused bits in the algorithm headers. \item\end{CompactList}\item 
unsigned int \hyperlink{mg__bsd_8h_e12ed248a07ad3fd6ae6ebed96a41425}{mg\_\-bsd\_\-get\_\-unused\_\-bits} (void $\ast$ptr)
\begin{CompactList}\small\item\em This function returns unused bits for given $\ast$USED$\ast$ memory block. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_5390ef2a166f690ef415483ed7d6ef8a}{mg\_\-bsd\_\-set\_\-unused\_\-bits} (unsigned int bits, void $\ast$ptr)
\begin{CompactList}\small\item\em This function sets unused bits in given $\ast$USED$\ast$ memory block. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_0d9df1b88f7ae6d1b64d30c6e968cc35}{mg\_\-bsd\_\-get\_\-first\_\-used\_\-block} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches first used block from simulator's memory. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_6e79c1723cc41da433d99609a5f0c67f}{mg\_\-bsd\_\-get\_\-next\_\-used\_\-block} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches used block following the given one. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_8bda956f229d3009a12002f6d171a978}{mg\_\-bsd\_\-get\_\-first\_\-free\_\-block} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches first free block from simulator's memory. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_2e0e6a84c0ed8269011a5af2f60012b6}{mg\_\-bsd\_\-get\_\-next\_\-free\_\-block} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches free block following the given one. \item\end{CompactList}\item 
unsigned int \hyperlink{mg__bsd_8h_176f0c86e8536ee1bffb58645894a91d}{mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function returns the number of used blocks. \item\end{CompactList}\item 
unsigned long int \hyperlink{mg__bsd_8h_dab0e824e91c75f61215aeafd392c2b0}{mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function returns the sum of sizes of used blocks. \item\end{CompactList}\item 
unsigned int \hyperlink{mg__bsd_8h_4b63c24fe7cace482c4cae51921c8c22}{mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function returns the number of free blocks. \item\end{CompactList}\item 
unsigned long int \hyperlink{mg__bsd_8h_1a567cc44ece29e162f9a772dd7cbbd0}{mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function returns the sum of sizes of free blocks. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_b602a1bbfae7bfa20e8ec8598344f41a}{mg\_\-bsd\_\-get\_\-first\_\-block} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches the first block from simulator's memory. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_f5d3f9cb158be249bbb39131f36568e1}{mg\_\-bsd\_\-get\_\-next\_\-block} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches the block following the given one. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_c4af17f0f255438098abfa552edde6a2}{mg\_\-bsd\_\-get\_\-last\_\-block} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches the last block (top) from simulator's memory. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_0076b50773ca86e3d0f596576ba0d99a}{mg\_\-bsd\_\-get\_\-prev\_\-block} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function fetches the block preceding the given one. \item\end{CompactList}\item 
size\_\-t \hyperlink{mg__bsd_8h_7d4be9768028a2a877333107fa5a71d0}{mg\_\-bsd\_\-get\_\-block\_\-size} (void $\ast$ptr, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function returns the usable bytes in current block. \item\end{CompactList}\item 
enum \hyperlink{mg__bsd_8h_24b83cf54963575556a664442636a58b}{ret\_\-\_\-mg\_\-bsd\_\-is\_\-block\_\-free} \hyperlink{mg__bsd_8h_62051c8be00483bb0aa24d26b74e9785}{mg\_\-bsd\_\-is\_\-block\_\-free} (void $\ast$ptr)
\begin{CompactList}\small\item\em This function returns the status of the block - free or used. \item\end{CompactList}\item 
enum \hyperlink{mg__bsd_8h_0eb5741fb438244807816e98837a7693}{ret\_\-\_\-mg\_\-bsd\_\-is\_\-block\_\-used} \hyperlink{mg__bsd_8h_98a8804682ef2b0ce410b02faae54272}{mg\_\-bsd\_\-is\_\-block\_\-used} (void $\ast$ptr)
\begin{CompactList}\small\item\em This function returns the status of the block - free or used. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_18be95075270ead608c7966b2af9d700}{mg\_\-bsd\_\-block\_\-copy} (void $\ast$dst, void $\ast$src, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function is used to copy memory block. \item\end{CompactList}\item 
void $\ast$ \hyperlink{mg__bsd_8h_de0fcc21048bec30acd80fb848cccb34}{mg\_\-bsd\_\-block\_\-move} (void $\ast$dst, void $\ast$src, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function is used to move memory block. \item\end{CompactList}\item 
int \hyperlink{mg__bsd_8h_957828725785686337fa347fee36ecdb}{mg\_\-bsd\_\-get\_\-allocator\_\-state} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function returns the state of the allocator. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_181ba598cab8b5c442e27742f5069238}{mg\_\-bsd\_\-set\_\-allocator\_\-state} (int state, \hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em This function sets the state of the allocator. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_0135006e405db12271c3496350783170}{mg\_\-bsd\_\-print\_\-stat} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Print statistics. \item\end{CompactList}\item 
void \hyperlink{mg__bsd_8h_6c56a04436773bf195942b56becb9677}{mg\_\-bsd\_\-mem\_\-dump} (\hyperlink{structstr____ctx}{str\_\-\_\-ctx} $\ast$ctx)
\begin{CompactList}\small\item\em Dumps memory. \item\end{CompactList}\end{CompactItemize}


\subsection{Function Documentation}
\hypertarget{mg__bsd_8h_eca9e371c28f46d6f582a8f797e6f6b1}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-init@{mg\_\-bsd\_\-init}}
\index{mg\_\-bsd\_\-init@{mg\_\-bsd\_\-init}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-init (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_eca9e371c28f46d6f582a8f797e6f6b1}


Initializes memory. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory space. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 259 of file mg\_\-bsd.c.

References str\_\-\_\-ctx::alloc\_\-step\_\-size, context, str\_\-\_\-ctx::cur\_\-mem\_\-size, cur\_\-mem\_\-size, EXP, fatal(), get\_\-num\_\-of\_\-bytes\_\-to\_\-page\_\-boundary, NBUCKETS, PAGE\_\-SIZE, reset\_\-alloc\_\-counter, reset\_\-free\_\-counter, reset\_\-sbrk\_\-counter, reset\_\-total\_\-alloc\_\-timer, reset\_\-total\_\-free\_\-timer, reset\_\-total\_\-sbrk\_\-timer, str\_\-\_\-ctx::sysmem\_\-block, and t\_\-reset\_\-timer().

\begin{Code}\begin{verbatim}262 {
263     union overhead *op;
264     int bucket;
265     ssize_t n;
266     size_t amt;
267     
268     /* allocate memory for alloc's context */
269     ctx -> alloc_algo_ctx = malloc (sizeof (str__mg_bsd_alloc_algo_ctx));
270 
271     /* allocated? */
272     if (NULL == ctx -> alloc_algo_ctx)
273     {
274         fatal (MSG__MG_BSD__MG_BSD_INIT__NOT_ENOUGH_SYSTEM_MEMORY
275                 , EXIT_CODE__MG_BSD__MG_BSD_INIT__NOT_ENOUGH_SYSTEM_MEMORY
276                 , ctx);
277     }   
278         
279     /*
280      * First time malloc is called, setup page size and
281      * align break pointer so all data will be page aligned.
282      */
283 
284     context->page_size = PAGE_SIZE;
285     
286     /* minimal allocation step for BSD allocator is page size */
287     if (ctx->alloc_step_size < context->page_size)
288     {
289         ctx->alloc_step_size = context->page_size;
290     }
291     
292     op = ptr;
293     n = get_num_of_bytes_to_page_boundary(op);
294     
295     if (n < 0)
296         n += context->page_size;
297     
298     if (n)
299     {
300         /* not enough initial memory to be page-aligned */
301         if ((size_t)n < ctx->cur_mem_size)
302         {
303             ctx->cur_mem_size += n;
304         }
305             
306         /* set brk page-aligned */
307         context->brk = context->bottom = context->top = ctx->sysmem_block + n;      
308     }
309     
310     bucket = 0;
311     amt = (1UL << EXP);
312     while (context->page_size > amt)
313     {
314         amt <<= 1;
315         bucket++;
316     }
317     context->page_bucket = bucket;
318     
319     int i;
320     for (i = 0; i < NBUCKETS; i++)
321         context->next_free[i] = NULL;
322     
323     reset_total_alloc_timer;
324     reset_alloc_counter;
325     reset_total_free_timer;
326     reset_free_counter;
327     reset_total_sbrk_timer;
328     reset_sbrk_counter;
329 
330     t_reset_timer (&(context -> TIMER));
331 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_49bbeb520f12821829a1eedfcdf60eb1}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-drop@{mg\_\-bsd\_\-drop}}
\index{mg\_\-bsd\_\-drop@{mg\_\-bsd\_\-drop}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-drop ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_49bbeb520f12821829a1eedfcdf60eb1}


Drops the memory. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-12-25 \end{Desc}


Definition at line 344 of file mg\_\-bsd.c.

\begin{Code}\begin{verbatim}346 {
347     /* allocated? */
348     if (NULL != ctx -> alloc_algo_ctx)
349     {
350         free (ctx -> alloc_algo_ctx);
351     }
352 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_53dfd5536d5e4b67981cf684e3e7a473}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-morecore@{mg\_\-bsd\_\-morecore}}
\index{mg\_\-bsd\_\-morecore@{mg\_\-bsd\_\-morecore}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-morecore (int {\em bucket}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_53dfd5536d5e4b67981cf684e3e7a473}


Allocate more memory to the indicated bucket. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em bucket}]Index of bucket. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 655 of file mg\_\-bsd.c.

References context, str\_\-\_\-ctx::cur\_\-mem\_\-size, EXP, overhead::next, and str\_\-\_\-ctx::sysmem\_\-block.

Referenced by mg\_\-bsd\_\-alloc().

\begin{Code}\begin{verbatim}658 {
659     union overhead *    op;
660     size_t          sz;         /* size of desired block */
661     ssize_t         amt;            /* amount to allocate */
662     long            nblks;          /* how many blocks we get */
663 
664     sz = 1UL << (bucket + EXP);
665     if (sz == 0)
666         return;
667     
668     if (sz < context->page_size)
669     {
670         amt = context->page_size;
671         nblks = amt / sz;
672     }
673     else
674     {
675         amt = sz + context->page_size;
676         nblks = 1;
677     }
678     /* is there enough room? */
679     if (context->brk + amt > ctx->sysmem_block + ctx->cur_mem_size)
680         return;
681     
682     /* set new block(s) start and move brk */
683     op = (union overhead *)context->brk;
684     context->brk += amt;
685     
686     /*
687      * Add new memory allocated to that on
688      * free list for this hash bucket.
689      */
690     context->next_free[bucket] = op;
691     while (--nblks > 0)
692     {
693         op->next = (union overhead *)((char *)op + sz);
694         op = (union overhead *)((char *)op + sz);
695     }
696     op->next = NULL;
697     context->top = op;
698 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_74a5f9045db595fe7612e84c7b3c5030}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-sbrk@{mg\_\-bsd\_\-sbrk}}
\index{mg\_\-bsd\_\-sbrk@{mg\_\-bsd\_\-sbrk}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-sbrk ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_74a5f9045db595fe7612e84c7b3c5030}


Sbrk adjustments. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 711 of file mg\_\-bsd.c.

References add\_\-to\_\-total\_\-sbrk\_\-timer, inc\_\-sbrk\_\-counter, t\_\-start\_\-timer(), and t\_\-stop\_\-timer().

Referenced by i\_\-sbrk().

\begin{Code}\begin{verbatim}713 {
714     str__timer  timer;
715 
716     /* let's time this stuff */
717     t_start_timer (&timer);
718     
719     
720     /* stop timing */
721     t_stop_timer (&timer, ctx);
722     add_to_total_sbrk_timer (&timer);
723     inc_sbrk_counter;
724 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_60fd48d88108d2983c1e7a60a7101b87}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-alloc@{mg\_\-bsd\_\-alloc}}
\index{mg\_\-bsd\_\-alloc@{mg\_\-bsd\_\-alloc}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-alloc (size\_\-t {\em size}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_60fd48d88108d2983c1e7a60a7101b87}


Allocates memory block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em size}]Size of memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 586 of file mg\_\-bsd.c.

References add\_\-to\_\-total\_\-alloc\_\-timer, context, EXP, IN\_\-USE, inc\_\-alloc\_\-counter, overhead::index, overhead::inuse, mg\_\-bsd\_\-morecore(), overhead::next, t\_\-start\_\-timer(), t\_\-stop\_\-timer(), and overhead::ubits.

Referenced by i\_\-alloc().

\begin{Code}\begin{verbatim}589 {
590     union overhead *    op;
591     int         bucket;
592     size_t          n;
593     size_t          amt;
594     str__timer      timer;
595 
596     /* let's time this stuff */
597     t_start_timer (&timer);
598         
599     /*
600      * Convert amount of memory requested into closest block size
601      * stored in hash buckets which satisfies request.
602      * Account for space used per block for accounting.
603      */
604     if (size <= (n = context->page_size - sizeof (*op))) {
605         amt = (1UL << EXP); /* size of first bucket */
606         bucket = 0;
607         n = -(ssize_t)(sizeof (*op));
608     } else {
609         amt = context->page_size;
610         bucket = context->page_bucket;
611     }
612     while (size > amt + n) {
613         amt <<= 1;
614         if (amt == 0)
615             return (NULL);
616         bucket++;
617     }
618     /*
619      * If nothing in hash bucket right now, request more memory.
620      */
621     if ((op = context->next_free[bucket]) == NULL) {
622         mg_bsd_morecore(bucket, ctx);
623         if ((op = context->next_free[bucket]) == NULL)
624         {
625             return (NULL);
626         }
627     }
628     
629     /* remove from linked list */
630     context->next_free[bucket] = op->next;
631     op->inuse = IN_USE;
632     op->index = (unsigned char)bucket;
633     op->ubits = 0;
634     
635     /* stop timing */
636     t_stop_timer (&timer, ctx);
637     add_to_total_alloc_timer (&timer);
638     inc_alloc_counter;
639     
640     return (op + 1);
641 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_1c3fa243c85f4d7f7bf51262e4d7e0ef}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-free@{mg\_\-bsd\_\-free}}
\index{mg\_\-bsd\_\-free@{mg\_\-bsd\_\-free}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-free (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_1c3fa243c85f4d7f7bf51262e4d7e0ef}


Frees given memory block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 739 of file mg\_\-bsd.c.

References add\_\-to\_\-total\_\-free\_\-timer, context, IN\_\-USE, inc\_\-free\_\-counter, overhead::index, overhead::inuse, mem\_\-to\_\-chunk, overhead::next, t\_\-start\_\-timer(), and t\_\-stop\_\-timer().

Referenced by i\_\-free().

\begin{Code}\begin{verbatim}742 {
743     int         bin;
744     union overhead      *op;
745     str__timer      timer;
746 
747     /* let's time this stuff */
748     t_start_timer (&timer);
749     
750     if (ptr != NULL)
751     {
752         op = mem_to_chunk(ptr);
753         
754         if (op->inuse == IN_USE)            /* previously freed? */
755         {
756             bin = op->index;
757             op->next = context->next_free[bin]; /* also clobbers inuse */
758             context->next_free[bin] = op;
759         }
760     }
761     
762     /* stop timing */
763     t_stop_timer (&timer, ctx);
764     add_to_total_free_timer (&timer);
765     inc_free_counter;
766 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_ca3e37517cd57338063f340a59861d48}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-unused\_\-bits\_\-num@{mg\_\-bsd\_\-get\_\-unused\_\-bits\_\-num}}
\index{mg\_\-bsd\_\-get\_\-unused\_\-bits\_\-num@{mg\_\-bsd\_\-get\_\-unused\_\-bits\_\-num}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}unsigned int mg\_\-bsd\_\-get\_\-unused\_\-bits\_\-num (void)}}
\label{mg__bsd_8h_ca3e37517cd57338063f340a59861d48}


This function returns the number of unused bits in the algorithm headers. 

\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 777 of file mg\_\-bsd.c.

References NUMBER\_\-OF\_\-UNUSED\_\-BITS\_\-IN\_\-USED\_\-BLOCK\_\-HEADER.

Referenced by i\_\-get\_\-unused\_\-bits\_\-num().

\begin{Code}\begin{verbatim}778 {
779     return (NUMBER_OF_UNUSED_BITS_IN_USED_BLOCK_HEADER);
780 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_e12ed248a07ad3fd6ae6ebed96a41425}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-unused\_\-bits@{mg\_\-bsd\_\-get\_\-unused\_\-bits}}
\index{mg\_\-bsd\_\-get\_\-unused\_\-bits@{mg\_\-bsd\_\-get\_\-unused\_\-bits}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}unsigned int mg\_\-bsd\_\-get\_\-unused\_\-bits (void $\ast$ {\em ptr})}}
\label{mg__bsd_8h_e12ed248a07ad3fd6ae6ebed96a41425}


This function returns unused bits for given $\ast$USED$\ast$ memory block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]unsigned int.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 793 of file mg\_\-bsd.c.

References mem\_\-to\_\-chunk, and overhead::ubits.

Referenced by i\_\-get\_\-unused\_\-bits().

\begin{Code}\begin{verbatim}795 {
796     union overhead  *op;
797     
798     op = mem_to_chunk(ptr);
799 
800     return op->ubits;
801 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_5390ef2a166f690ef415483ed7d6ef8a}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-set\_\-unused\_\-bits@{mg\_\-bsd\_\-set\_\-unused\_\-bits}}
\index{mg\_\-bsd\_\-set\_\-unused\_\-bits@{mg\_\-bsd\_\-set\_\-unused\_\-bits}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-set\_\-unused\_\-bits (unsigned int {\em bits}, \/  void $\ast$ {\em ptr})}}
\label{mg__bsd_8h_5390ef2a166f690ef415483ed7d6ef8a}


This function sets unused bits in given $\ast$USED$\ast$ memory block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em bits}]Bits to be set. \item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 815 of file mg\_\-bsd.c.

References mem\_\-to\_\-chunk, and overhead::ubits.

Referenced by i\_\-set\_\-unused\_\-bits().

\begin{Code}\begin{verbatim}818 {
819     union overhead  *op;
820     
821     op = mem_to_chunk(ptr);
822     
823     op->ubits = bits;
824 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_0d9df1b88f7ae6d1b64d30c6e968cc35}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-first\_\-used\_\-block@{mg\_\-bsd\_\-get\_\-first\_\-used\_\-block}}
\index{mg\_\-bsd\_\-get\_\-first\_\-used\_\-block@{mg\_\-bsd\_\-get\_\-first\_\-used\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-first\_\-used\_\-block ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_0d9df1b88f7ae6d1b64d30c6e968cc35}


This function fetches first used block from simulator's memory. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 839 of file mg\_\-bsd.c.

References get\_\-in\_\-use\_\-this, mem\_\-to\_\-chunk, mg\_\-bsd\_\-get\_\-first\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-block().

Referenced by mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks(), and mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks().

\begin{Code}\begin{verbatim}841 {
842     void    *block;
843 
844     block = mg_bsd_get_first_block(ctx);
845     do
846     {
847         if (get_in_use_this(mem_to_chunk(block)))
848             return block;
849     }
850     while ((block = mg_bsd_get_next_block(block, ctx)) != NULL);
851             
852     return NULL;    
853 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_6e79c1723cc41da433d99609a5f0c67f}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-next\_\-used\_\-block@{mg\_\-bsd\_\-get\_\-next\_\-used\_\-block}}
\index{mg\_\-bsd\_\-get\_\-next\_\-used\_\-block@{mg\_\-bsd\_\-get\_\-next\_\-used\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-next\_\-used\_\-block (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_6e79c1723cc41da433d99609a5f0c67f}


This function fetches used block following the given one. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 869 of file mg\_\-bsd.c.

References get\_\-in\_\-use\_\-this, mem\_\-to\_\-chunk, and mg\_\-bsd\_\-get\_\-next\_\-block().

Referenced by mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks(), and mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks().

\begin{Code}\begin{verbatim}872 {
873     void    *block;
874 
875     block = ptr;    
876     while ((block = mg_bsd_get_next_block(block, ctx)) != NULL)
877     {
878         if (get_in_use_this(mem_to_chunk(block)))
879             return block;
880     }
881     
882     return NULL;
883 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_8bda956f229d3009a12002f6d171a978}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-first\_\-free\_\-block@{mg\_\-bsd\_\-get\_\-first\_\-free\_\-block}}
\index{mg\_\-bsd\_\-get\_\-first\_\-free\_\-block@{mg\_\-bsd\_\-get\_\-first\_\-free\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-first\_\-free\_\-block ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_8bda956f229d3009a12002f6d171a978}


This function fetches first free block from simulator's memory. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 898 of file mg\_\-bsd.c.

References get\_\-in\_\-use\_\-this, mem\_\-to\_\-chunk, mg\_\-bsd\_\-get\_\-first\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-block().

Referenced by mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks(), and mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks().

\begin{Code}\begin{verbatim}900 {
901     void    *block;
902 
903     block = mg_bsd_get_first_block(ctx);
904     do
905     {
906         if (!get_in_use_this(mem_to_chunk(block)))
907             return block;
908     }
909     while ((block = mg_bsd_get_next_block(block, ctx)) != NULL);
910     
911     return NULL;
912 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_2e0e6a84c0ed8269011a5af2f60012b6}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-next\_\-free\_\-block@{mg\_\-bsd\_\-get\_\-next\_\-free\_\-block}}
\index{mg\_\-bsd\_\-get\_\-next\_\-free\_\-block@{mg\_\-bsd\_\-get\_\-next\_\-free\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-next\_\-free\_\-block (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_2e0e6a84c0ed8269011a5af2f60012b6}


This function fetches free block following the given one. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 928 of file mg\_\-bsd.c.

References get\_\-in\_\-use\_\-this, mem\_\-to\_\-chunk, and mg\_\-bsd\_\-get\_\-next\_\-block().

Referenced by mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks(), and mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks().

\begin{Code}\begin{verbatim}931 {
932     void    *block;
933 
934     block = ptr;    
935     while ((block = mg_bsd_get_next_block(block, ctx)) != NULL)
936     {
937         if (!get_in_use_this(mem_to_chunk(block)))
938             return block;
939     }
940     
941     return NULL;
942 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_176f0c86e8536ee1bffb58645894a91d}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks@{mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks}}
\index{mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks@{mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}unsigned int mg\_\-bsd\_\-get\_\-num\_\-of\_\-used\_\-blocks ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_176f0c86e8536ee1bffb58645894a91d}


This function returns the number of used blocks. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]unsigned int.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 957 of file mg\_\-bsd.c.

References mg\_\-bsd\_\-get\_\-first\_\-used\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-used\_\-block().

\begin{Code}\begin{verbatim}959 {
960     void        *block;
961     unsigned int    i;
962 
963     for
964     (
965         i = 0,
966         block = mg_bsd_get_first_used_block (ctx);
967 
968         block != NULL;
969 
970         i++,
971         block = mg_bsd_get_next_used_block (block, ctx)
972     )
973     {
974     }
975 
976     return (i); 
977 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_dab0e824e91c75f61215aeafd392c2b0}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks@{mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks}}
\index{mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks@{mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}unsigned long int mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_dab0e824e91c75f61215aeafd392c2b0}


This function returns the sum of sizes of used blocks. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]unsigned int.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 992 of file mg\_\-bsd.c.

References mg\_\-bsd\_\-get\_\-block\_\-size(), mg\_\-bsd\_\-get\_\-first\_\-used\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-used\_\-block().

\begin{Code}\begin{verbatim}994 {
995     void                *block;
996     unsigned long int   i;
997 
998     for
999     (
1000         i = 0,
1001         block = mg_bsd_get_first_used_block (ctx);
1002 
1003         block != NULL;
1004         
1005         i += mg_bsd_get_block_size(block, ctx),
1006         block = mg_bsd_get_next_used_block (block, ctx)
1007     )
1008     {
1009     }
1010 
1011     return (i);
1012 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_4b63c24fe7cace482c4cae51921c8c22}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks@{mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks}}
\index{mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks@{mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}unsigned int mg\_\-bsd\_\-get\_\-num\_\-of\_\-free\_\-blocks ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_4b63c24fe7cace482c4cae51921c8c22}


This function returns the number of free blocks. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]unsigned int.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1027 of file mg\_\-bsd.c.

References mg\_\-bsd\_\-get\_\-first\_\-free\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-free\_\-block().

\begin{Code}\begin{verbatim}1029 {
1030     void        *block;
1031     unsigned int    i;
1032     
1033     for
1034     (
1035         i = 0,
1036         block = mg_bsd_get_first_free_block (ctx);
1037         
1038         block != NULL;
1039         
1040         i++,
1041         block = mg_bsd_get_next_free_block (block, ctx)
1042     )
1043     {
1044     }
1045 
1046     return (i);
1047 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_1a567cc44ece29e162f9a772dd7cbbd0}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks@{mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks}}
\index{mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks@{mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}unsigned long int mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_1a567cc44ece29e162f9a772dd7cbbd0}


This function returns the sum of sizes of free blocks. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context with command line params.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]unsigned int.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1062 of file mg\_\-bsd.c.

References mg\_\-bsd\_\-get\_\-block\_\-size(), mg\_\-bsd\_\-get\_\-first\_\-free\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-free\_\-block().

\begin{Code}\begin{verbatim}1064 {
1065     void                *block;
1066     unsigned long int   i;
1067 
1068     for
1069     (
1070         i = 0,
1071         block = mg_bsd_get_first_free_block (ctx);
1072         
1073         block != NULL;
1074 
1075         i += mg_bsd_get_block_size(block, ctx),
1076         block = mg_bsd_get_next_free_block (block, ctx)
1077     )
1078     {
1079     }
1080 
1081     return (i);
1082 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_b602a1bbfae7bfa20e8ec8598344f41a}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-first\_\-block@{mg\_\-bsd\_\-get\_\-first\_\-block}}
\index{mg\_\-bsd\_\-get\_\-first\_\-block@{mg\_\-bsd\_\-get\_\-first\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-first\_\-block ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_b602a1bbfae7bfa20e8ec8598344f41a}


This function fetches the first block from simulator's memory. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1097 of file mg\_\-bsd.c.

References chunk\_\-to\_\-mem, and context.

Referenced by mg\_\-bsd\_\-get\_\-first\_\-free\_\-block(), mg\_\-bsd\_\-get\_\-first\_\-used\_\-block(), and mg\_\-bsd\_\-get\_\-prev\_\-block().

\begin{Code}\begin{verbatim}1099 {
1100     return (chunk_to_mem (context -> bottom));
1101 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_f5d3f9cb158be249bbb39131f36568e1}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-next\_\-block@{mg\_\-bsd\_\-get\_\-next\_\-block}}
\index{mg\_\-bsd\_\-get\_\-next\_\-block@{mg\_\-bsd\_\-get\_\-next\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-next\_\-block (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_f5d3f9cb158be249bbb39131f36568e1}


This function fetches the block following the given one. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1136 of file mg\_\-bsd.c.

References mg\_\-bsd\_\-get\_\-block\_\-size(), and mg\_\-bsd\_\-get\_\-last\_\-block().

Referenced by mg\_\-bsd\_\-get\_\-first\_\-free\_\-block(), mg\_\-bsd\_\-get\_\-first\_\-used\_\-block(), mg\_\-bsd\_\-get\_\-next\_\-free\_\-block(), and mg\_\-bsd\_\-get\_\-next\_\-used\_\-block().

\begin{Code}\begin{verbatim}1139 {
1140     /* is this the last block? */
1141     if (ptr == mg_bsd_get_last_block (ctx))
1142     {
1143         return (NULL);
1144     }
1145 
1146     /* this is not the last one! */
1147     else
1148     {
1149         return (ptr + mg_bsd_get_block_size(ptr, ctx) + sizeof(union overhead));
1150     }
1151 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_c4af17f0f255438098abfa552edde6a2}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-last\_\-block@{mg\_\-bsd\_\-get\_\-last\_\-block}}
\index{mg\_\-bsd\_\-get\_\-last\_\-block@{mg\_\-bsd\_\-get\_\-last\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-last\_\-block ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_c4af17f0f255438098abfa552edde6a2}


This function fetches the last block (top) from simulator's memory. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1116 of file mg\_\-bsd.c.

References chunk\_\-to\_\-mem, and context.

Referenced by mg\_\-bsd\_\-get\_\-next\_\-block().

\begin{Code}\begin{verbatim}1118 {
1119     return (chunk_to_mem (context -> top));
1120 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_0076b50773ca86e3d0f596576ba0d99a}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-prev\_\-block@{mg\_\-bsd\_\-get\_\-prev\_\-block}}
\index{mg\_\-bsd\_\-get\_\-prev\_\-block@{mg\_\-bsd\_\-get\_\-prev\_\-block}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-get\_\-prev\_\-block (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_0076b50773ca86e3d0f596576ba0d99a}


This function fetches the block preceding the given one. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]void $\ast$.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1167 of file mg\_\-bsd.c.

References chunk\_\-to\_\-mem, mg\_\-bsd\_\-get\_\-block\_\-size(), and mg\_\-bsd\_\-get\_\-first\_\-block().

\begin{Code}\begin{verbatim}1170 {
1171     /* is this the first block? */
1172     if (ptr == mg_bsd_get_first_block (ctx))
1173     {
1174         return (NULL);
1175     }
1176 
1177     /* no, it's not the first one! */
1178     else
1179     {
1180         void *this;
1181         
1182         for
1183         (
1184                    this = mg_bsd_get_first_block(ctx);
1185                    this + mg_bsd_get_block_size(chunk_to_mem(this), ctx) < ptr;
1186                    this += mg_bsd_get_block_size(chunk_to_mem(this), ctx)
1187         )
1188         {
1189         }
1190         
1191         return this;
1192     }
1193 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_7d4be9768028a2a877333107fa5a71d0}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-block\_\-size@{mg\_\-bsd\_\-get\_\-block\_\-size}}
\index{mg\_\-bsd\_\-get\_\-block\_\-size@{mg\_\-bsd\_\-get\_\-block\_\-size}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}size\_\-t mg\_\-bsd\_\-get\_\-block\_\-size (void $\ast$ {\em ptr}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_7d4be9768028a2a877333107fa5a71d0}


This function returns the usable bytes in current block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block. \item[\mbox{$\leftarrow$} {\em ctx}]Simulator context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Size of the block.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1209 of file mg\_\-bsd.c.

References context, EXP, get\_\-in\_\-use\_\-this, index, mem\_\-to\_\-chunk, and NBUCKETS.

Referenced by mg\_\-bsd\_\-get\_\-next\_\-block(), mg\_\-bsd\_\-get\_\-prev\_\-block(), mg\_\-bsd\_\-get\_\-size\_\-of\_\-free\_\-blocks(), and mg\_\-bsd\_\-get\_\-size\_\-of\_\-used\_\-blocks().

\begin{Code}\begin{verbatim}1212 {
1213     union overhead *this = mem_to_chunk(ptr), *orig;
1214     int i;
1215     size_t size;
1216 
1217     if (get_in_use_this(this))
1218     {
1219         size = 1 << (this->index + EXP);
1220         if (size >= context->page_size)
1221         {
1222             size += context->page_size;
1223         }
1224     
1225         return (size - sizeof(union overhead));
1226     }
1227     else
1228     {
1229         orig = this;
1230         for (i = 0; i < NBUCKETS; i++)
1231         {
1232             for (this = context->next_free[i]; this; this = this->next)
1233             {
1234                 if (this == orig)
1235                 {
1236                     size = 1UL << (i + EXP);
1237                     if (size >= context->page_size)
1238                         size += context->page_size;
1239             
1240                     return (size - sizeof(union overhead));
1241                 }
1242             }
1243         }
1244         
1245         /* not found in any bin! */
1246         return (-1);
1247     }
1248 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_62051c8be00483bb0aa24d26b74e9785}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-is\_\-block\_\-free@{mg\_\-bsd\_\-is\_\-block\_\-free}}
\index{mg\_\-bsd\_\-is\_\-block\_\-free@{mg\_\-bsd\_\-is\_\-block\_\-free}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}enum {\bf ret\_\-\_\-mg\_\-bsd\_\-is\_\-block\_\-free} mg\_\-bsd\_\-is\_\-block\_\-free (void $\ast$ {\em ptr})}}
\label{mg__bsd_8h_62051c8be00483bb0aa24d26b74e9785}


This function returns the status of the block - free or used. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]ret\_\-\_\-mg\_\-bsd\_\-is\_\-free.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1263 of file mg\_\-bsd.c.

References get\_\-in\_\-use\_\-this, and mem\_\-to\_\-chunk.

\begin{Code}\begin{verbatim}1265 {
1266     union overhead *this;
1267     
1268     this = mem_to_chunk(ptr);
1269     if (!get_in_use_this(this))
1270         return (RET__MG_BSD_IS_BLOCK_FREE__FREE_BLOCK);
1271     else
1272         return (RET__MG_BSD_IS_BLOCK_FREE__USED_BLOCK);
1273 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_98a8804682ef2b0ce410b02faae54272}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-is\_\-block\_\-used@{mg\_\-bsd\_\-is\_\-block\_\-used}}
\index{mg\_\-bsd\_\-is\_\-block\_\-used@{mg\_\-bsd\_\-is\_\-block\_\-used}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}enum {\bf ret\_\-\_\-mg\_\-bsd\_\-is\_\-block\_\-used} mg\_\-bsd\_\-is\_\-block\_\-used (void $\ast$ {\em ptr})}}
\label{mg__bsd_8h_98a8804682ef2b0ce410b02faae54272}


This function returns the status of the block - free or used. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ptr}]Pointer to memory block.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]ret\_\-\_\-mg\_\-bsd\_\-is\_\-used.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1288 of file mg\_\-bsd.c.

References get\_\-in\_\-use\_\-this, and mem\_\-to\_\-chunk.

\begin{Code}\begin{verbatim}1290 {
1291     union overhead *this;
1292     
1293     this = mem_to_chunk(ptr);
1294     if (get_in_use_this(this))
1295         return (RET__MG_BSD_IS_BLOCK_USED__USED_BLOCK);
1296     else
1297         return (RET__MG_BSD_IS_BLOCK_USED__FREE_BLOCK);
1298 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_18be95075270ead608c7966b2af9d700}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-block\_\-copy@{mg\_\-bsd\_\-block\_\-copy}}
\index{mg\_\-bsd\_\-block\_\-copy@{mg\_\-bsd\_\-block\_\-copy}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-block\_\-copy (void $\ast$ {\em dst}, \/  void $\ast$ {\em src}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_18be95075270ead608c7966b2af9d700}


This function is used to copy memory block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context. \item[\mbox{$\leftarrow$} {\em dst}]Pointer to the destination block. \item[\mbox{$\leftarrow$} {\em src}]Pointer to the source block.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Pointer to the destination block.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1315 of file mg\_\-bsd.c.

Referenced by i\_\-block\_\-copy().

\begin{Code}\begin{verbatim}1319 {
1320     /* next two lines are for compiler to skip the warnings about unused variables */
1321     ctx = (str__ctx *) dst;
1322     ctx = (str__ctx *) src;
1323     
1324     /* we have no implementation for this! yet! :-) */
1325     return (NULL);
1326 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_de0fcc21048bec30acd80fb848cccb34}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-block\_\-move@{mg\_\-bsd\_\-block\_\-move}}
\index{mg\_\-bsd\_\-block\_\-move@{mg\_\-bsd\_\-block\_\-move}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void$\ast$ mg\_\-bsd\_\-block\_\-move (void $\ast$ {\em dst}, \/  void $\ast$ {\em src}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_de0fcc21048bec30acd80fb848cccb34}


This function is used to move memory block. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context. \item[\mbox{$\leftarrow$} {\em dst}]Pointer to the destination block. \item[\mbox{$\leftarrow$} {\em src}]Pointer to the source block.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Pointer to the destination block.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1343 of file mg\_\-bsd.c.

Referenced by i\_\-block\_\-move().

\begin{Code}\begin{verbatim}1347 {
1348     /* next two lines are for compiler to skip the warnings about unused variables */
1349     ctx = (str__ctx *) dst;
1350     ctx = (str__ctx *) src;
1351     
1352     /* we have no implementation for this! yet! :-) */
1353     return (NULL);
1354 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_957828725785686337fa347fee36ecdb}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-get\_\-allocator\_\-state@{mg\_\-bsd\_\-get\_\-allocator\_\-state}}
\index{mg\_\-bsd\_\-get\_\-allocator\_\-state@{mg\_\-bsd\_\-get\_\-allocator\_\-state}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}int mg\_\-bsd\_\-get\_\-allocator\_\-state ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_957828725785686337fa347fee36ecdb}


This function returns the state of the allocator. 

As we don't have states, we return 0.

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]0.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1370 of file mg\_\-bsd.c.

Referenced by i\_\-get\_\-allocator\_\-state().

\begin{Code}\begin{verbatim}1372 {
1373     /* next line is here just to avoid compiler warnings! */
1374     ctx = ctx;
1375     
1376     return (0);
1377 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_181ba598cab8b5c442e27742f5069238}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-set\_\-allocator\_\-state@{mg\_\-bsd\_\-set\_\-allocator\_\-state}}
\index{mg\_\-bsd\_\-set\_\-allocator\_\-state@{mg\_\-bsd\_\-set\_\-allocator\_\-state}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-set\_\-allocator\_\-state (int {\em state}, \/  {\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_181ba598cab8b5c442e27742f5069238}


This function sets the state of the allocator. 

As we don't have states, it does nothing!

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator context. \item[\mbox{$\leftarrow$} {\em state}]Desired state.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-02-20 \end{Desc}


Definition at line 1394 of file mg\_\-bsd.c.

Referenced by i\_\-set\_\-allocator\_\-state().

\begin{Code}\begin{verbatim}1397 {
1398     /* next two lines are here just to avoid compiler warnings! */
1399     ctx = ctx;
1400     state = 0;
1401 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_0135006e405db12271c3496350783170}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-print\_\-stat@{mg\_\-bsd\_\-print\_\-stat}}
\index{mg\_\-bsd\_\-print\_\-stat@{mg\_\-bsd\_\-print\_\-stat}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-print\_\-stat ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_0135006e405db12271c3496350783170}


Print statistics. 

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Marko Grbic \href{mailto:marko.grbic@optimit.hr}{\tt marko.grbic@optimit.hr} \end{Desc}
\begin{Desc}
\item[Date:]2006-12-25 \end{Desc}


Definition at line 367 of file mg\_\-bsd.c.

References context, get\_\-alloc\_\-counter, get\_\-free\_\-counter, get\_\-sbrk\_\-counter, get\_\-total\_\-alloc\_\-timer, get\_\-total\_\-free\_\-timer, get\_\-total\_\-sbrk\_\-timer, t\_\-avg\_\-timer(), t\_\-copy\_\-timers(), t\_\-print\_\-all(), T\_\-PRINT\_\-ALL\_\-\_\-OUTPUT\_\-CYCLES, T\_\-PRINT\_\-ALL\_\-\_\-OUTPUT\_\-SYSTEM, T\_\-PRINT\_\-ALL\_\-\_\-OUTPUT\_\-USER, and T\_\-PRINT\_\-ALL\_\-\_\-PRINT\_\-LABELS.

\begin{Code}\begin{verbatim}369 {
370     str__timer                      alloc_avg;
371     str__timer                      sbrk_avg;
372     str__timer                      free_avg;
373 
374     if (0 != ctx -> statistics)
375     {
376         printf ("\n");
377         printf ("MG Kingsley BSD statistics:\n");
378         printf ("---------------------------\n");
379     }
380 
381 
382     if (1 == ctx -> statistics)
383     {
384 #ifdef HAVE_TSC
385 
386         printf (" Number of calls to alloc:                            %ld\n"
387                 , get_alloc_counter);
388 
389         t_print_all (&get_total_alloc_timer
390                 , "Cycles spent while allocating:                    "
391                 , 1
392                         , 3
393                                 , T_PRINT_ALL__OUTPUT_CYCLES
394                 );
395 
396         if (0 < get_alloc_counter)
397         {
398             t_copy_timers (&alloc_avg, &get_total_alloc_timer);
399             t_avg_timer (&alloc_avg, get_alloc_counter);
400             t_print_all (&alloc_avg
401                     , "Average number of cycles spent per call to alloc: "
402                     , 1
403                             , 3
404                                     , T_PRINT_ALL__OUTPUT_CYCLES
405                     );
406         }
407 
408 
409         printf (" Number of calls to sbrk:                             %ld\n"
410                 , get_sbrk_counter);
411 
412         t_print_all (&get_total_sbrk_timer
413                 , "Cycles spent in sbrk:                             "
414                 , 1
415                         , 3
416                                 , T_PRINT_ALL__OUTPUT_CYCLES
417                 );
418 
419         if (0 < get_sbrk_counter)
420         {
421             t_copy_timers (&sbrk_avg, &get_total_sbrk_timer);
422             t_avg_timer (&sbrk_avg, get_sbrk_counter);
423             t_print_all (&sbrk_avg
424                     , "Average number of cycles spent per call in sbrk:  "
425                     , 1
426                             , 3
427                                     , T_PRINT_ALL__OUTPUT_CYCLES
428                     );
429         }
430 
431 
432         printf (" Number of calls to free:                             %ld\n"
433                 , get_free_counter);
434 
435         t_print_all (&get_total_free_timer
436                 , "Cycles spent while freeing:                       "
437                 , 1
438                         , 3
439                                 , T_PRINT_ALL__OUTPUT_CYCLES
440                 );
441 
442         if (0 < get_free_counter)
443         {
444             t_copy_timers (&free_avg, &get_total_free_timer);
445             t_avg_timer (&free_avg, get_free_counter);
446             t_print_all (&free_avg
447                     , "Average number of cycles spent per call to free:  "
448                     , 1
449                             , 3
450                                     , T_PRINT_ALL__OUTPUT_CYCLES
451                     );
452         }
453 
454         t_print_all (&(context -> TIMER)
455                 , "User TIMER:                                       "
456                 , 1
457                         , 3
458                                 , T_PRINT_ALL__OUTPUT_CYCLES
459                 );
460 
461 #endif /* #ifdef HAVE_TSC */
462     }
463 
464     else if (2 == ctx -> statistics)
465     {
466         printf (" Number of calls to alloc: %ld\n"
467                 , get_alloc_counter);
468 
469         t_print_all (&get_total_alloc_timer
470                 , "Cycles spent while allocaing: \n"
471                 , 1
472                         , 3
473                                 , T_PRINT_ALL__OUTPUT_USER
474                                         | T_PRINT_ALL__OUTPUT_SYSTEM
475                                         | T_PRINT_ALL__OUTPUT_CYCLES
476                                         | T_PRINT_ALL__PRINT_LABELS
477                 );
478 
479         if (0 < get_alloc_counter)
480         {
481             t_copy_timers (&alloc_avg, &get_total_alloc_timer);
482             t_avg_timer (&alloc_avg, get_alloc_counter);
483             t_print_all (&alloc_avg
484                     , "Average number of cycles spent per call to alloc: \n"
485                     , 1
486                             , 3
487                                     , T_PRINT_ALL__OUTPUT_USER
488                                         | T_PRINT_ALL__OUTPUT_SYSTEM
489                                         | T_PRINT_ALL__OUTPUT_CYCLES
490                                         | T_PRINT_ALL__PRINT_LABELS
491                     );
492         }
493 
494 
495         printf (" Number of calls to sbrk: %ld\n"
496                 , get_sbrk_counter);
497 
498         t_print_all (&get_total_sbrk_timer
499                 , "Cycles spent in sbrk: \n"
500                 , 1
501                         , 3
502                                 , T_PRINT_ALL__OUTPUT_USER
503                                         | T_PRINT_ALL__OUTPUT_SYSTEM
504                                         | T_PRINT_ALL__OUTPUT_CYCLES
505                                         | T_PRINT_ALL__PRINT_LABELS
506                 );
507 
508         if (0 < get_sbrk_counter)
509         {
510             t_copy_timers (&sbrk_avg, &get_total_sbrk_timer);
511             t_avg_timer (&sbrk_avg, get_sbrk_counter);
512             t_print_all (&sbrk_avg
513                     , "Average number of cycles spent per call in sbrk: \n"
514                     , 1
515                             , 3
516                                     , T_PRINT_ALL__OUTPUT_USER
517                                         | T_PRINT_ALL__OUTPUT_SYSTEM
518                                         | T_PRINT_ALL__OUTPUT_CYCLES
519                                         | T_PRINT_ALL__PRINT_LABELS
520                     );
521         }
522 
523 
524         printf (" Number of calls to free: %ld\n"
525                 , get_free_counter);
526 
527         t_print_all (&get_total_free_timer
528                 , "Cycles spent while freeing: \n"
529                 , 1
530                         , 3
531                                 , T_PRINT_ALL__OUTPUT_USER
532                                         | T_PRINT_ALL__OUTPUT_SYSTEM
533                                         | T_PRINT_ALL__OUTPUT_CYCLES
534                                         | T_PRINT_ALL__PRINT_LABELS
535                 );
536 
537         if (0 < get_free_counter)
538         {
539             t_copy_timers (&free_avg, &get_total_free_timer);
540             t_avg_timer (&free_avg, get_free_counter);
541             t_print_all (&free_avg
542                     , "Average number of cycles spent per call to free: \n"
543                     , 1
544                             , 3
545                                     , T_PRINT_ALL__OUTPUT_USER
546                                         | T_PRINT_ALL__OUTPUT_SYSTEM
547                                         | T_PRINT_ALL__OUTPUT_CYCLES
548                                         | T_PRINT_ALL__PRINT_LABELS
549                     );
550         }
551     }
552 }
\end{verbatim}
\end{Code}


\hypertarget{mg__bsd_8h_6c56a04436773bf195942b56becb9677}{
\index{mg\_\-bsd.h@{mg\_\-bsd.h}!mg\_\-bsd\_\-mem\_\-dump@{mg\_\-bsd\_\-mem\_\-dump}}
\index{mg\_\-bsd\_\-mem\_\-dump@{mg\_\-bsd\_\-mem\_\-dump}!mg_bsd.h@{mg\_\-bsd.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void mg\_\-bsd\_\-mem\_\-dump ({\bf str\_\-\_\-ctx} $\ast$ {\em ctx})}}
\label{mg__bsd_8h_6c56a04436773bf195942b56becb9677}


Dumps memory. 

To be done!

\begin{Desc}
\item[Parameters:]
\begin{description}
\item[\mbox{$\leftarrow$} {\em ctx}]Simulator's context.\end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]Nothing.\end{Desc}
\begin{Desc}
\item[See also:]\hyperlink{structstr____ctx}{str\_\-\_\-ctx}\end{Desc}
\begin{Desc}
\item[Author:]Dorian Ivancic \href{mailto:dorian.ivancic@gmail.com}{\tt dorian.ivancic@gmail.com} \end{Desc}
\begin{Desc}
\item[Date:]2009-01-20 \end{Desc}


Definition at line 567 of file mg\_\-bsd.c.

Referenced by i\_\-alloc\_\-mem\_\-dump().

\begin{Code}\begin{verbatim}569 {
570     /* did on purpose to avoid compiler warnings */
571     ctx = ctx;
572 }
\end{verbatim}
\end{Code}


