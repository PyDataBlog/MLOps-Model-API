\hypertarget{namespaceCqrs_1_1Events}{}\doxysection{Cqrs.\+Events Namespace Reference}
\label{namespaceCqrs_1_1Events}\index{Cqrs.Events@{Cqrs.Events}}
\doxysubsection*{Classes}
\begin{DoxyCompactItemize}
\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1DefaultEventBuilder}{Default\+Event\+Builder}}
\begin{DoxyCompactList}\small\item\em Builds \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}} from various input formats serialising as J\+S\+ON. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1DefaultJsonSerializerSettings}{Default\+Json\+Serializer\+Settings}}
\begin{DoxyCompactList}\small\item\em Default settings for J\+S\+ON serialisation and deserialisation. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1DefaultSnapshotBuilder}{Default\+Snapshot\+Builder}}
\begin{DoxyCompactList}\small\item\em Builds \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}} from various input formats serialising as J\+S\+ON. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1DtoAggregateEvent}{Dto\+Aggregate\+Event}}
\begin{DoxyCompactList}\small\item\em A I\+Event$<$\+T\+Authentication\+Token$>$ for I\+Dto objects \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1DuplicateCreateCommandEvent}{Duplicate\+Create\+Command\+Event}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that informs the system that an operation resulted in a duplicate. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventBuilder}{Event\+Builder}}
\begin{DoxyCompactList}\small\item\em Builds \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}} from various input formats. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}}
\begin{DoxyCompactList}\small\item\em Captures all the data relevant to an I\+Event$<$\+T\+Authentication\+Token$>$ for an I\+Event\+Store$<$\+T\+Authentication\+Token$>$ to persist. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventDataResolver}{Event\+Data\+Resolver}}
\begin{DoxyCompactList}\small\item\em Resolves \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}}, Service\+Request\+With\+Data$<$\+T\+Authentication\+Token, Guid$>$ and Service\+Response\+With\+Result\+Data$<$\+I\+Enumerable\+Event\+Data$>$ parameter types when serialising with W\+CF. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventDeserialiser}{Event\+Deserialiser}}
\begin{DoxyCompactList}\small\item\em Deserialises I\+Event$<$\+T\+Authentication\+Token$>$ from a serialised state. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventExtensions}{Event\+Extensions}}
\begin{DoxyCompactList}\small\item\em A set of extension method for I\+Event$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventStore}{Event\+Store}}
\begin{DoxyCompactList}\small\item\em Stores instances of I\+Event$<$\+T\+Authentication\+Token$>$ for replay, I\+Aggregate\+Root$<$\+T\+Authentication\+Token$>$ and I\+Saga$<$\+T\+Authentication\+Token$>$ rehydration. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1EventStoreRetentionLevelAttribute}{Event\+Store\+Retention\+Level\+Attribute}}
\begin{DoxyCompactList}\small\item\em Provides a mechanism to configure different I\+Event\+Store$<$\+T\+Authentication\+Token$>$ instances to save the event to. This is useful if you have events that should be in hot storage with quick loads and events that should be in cold storage and are unlikely to be reloaded and use slower cheaper storage. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ represents something that took place in the domain. They are always named with a past-\/participle verb, such as Order\+Confirmed. It\textquotesingle{}s not unusual, but not required, for an I\+Event$<$\+T\+Authentication\+Token$>$ to name an I\+Aggregate\+Root$<$\+T\+Authentication\+Token$>$ or I\+Entity that it relates to; let the domain language be your guide. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventBuilder}{I\+Event\+Builder}}
\begin{DoxyCompactList}\small\item\em Builds \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}} from various input formats. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventDeserialiser}{I\+Event\+Deserialiser}}
\begin{DoxyCompactList}\small\item\em Deserialises I\+Event$<$\+T\+Authentication\+Token$>$ from a serialised state. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventHandler}{I\+Event\+Handler}}
\begin{DoxyCompactList}\small\item\em Responds to or \char`\"{}\+Handles\char`\"{} a {\itshape T\+Event} . \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventPublisher}{I\+Event\+Publisher}}
\begin{DoxyCompactList}\small\item\em Publishes an I\+Event$<$\+T\+Authentication\+Token$>$ \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}}
\begin{DoxyCompactList}\small\item\em Receives instances of a I\+Event$<$\+T\+Authentication\+Token$>$ from the event bus. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventStore}{I\+Event\+Store}}
\begin{DoxyCompactList}\small\item\em Stores instances of I\+Event$<$\+T\+Authentication\+Token$>$ for replay, I\+Aggregate\+Root$<$\+T\+Authentication\+Token$>$ and I\+Saga$<$\+T\+Authentication\+Token$>$ rehydration. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEventWithIdentity}{I\+Event\+With\+Identity}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that can identify an \mbox{\hyperlink{}{aggregate}}. The \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1IEvent_a2974e13d307c62c5cc438d668ff1783b_a2974e13d307c62c5cc438d668ff1783b}{I\+Event$<$\+T\+Authentication\+Token$>$.\+Id}} is specifically the identifier for the individual I\+Event$<$\+T\+Authentication\+Token$>$ itself, not the \mbox{\hyperlink{}{aggregate}} being targeted. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1InProcessEventStore}{In\+Process\+Event\+Store}}
\begin{DoxyCompactList}\small\item\em An I\+Event\+Store$<$\+T\+Authentication\+Token$>$ that uses a local (non-\/static) I\+Dictionary$<$\+T\+Key,\+T\+Value$>$. This does not manage memory in any way and will continue to grow. Mostly suitable for running tests or short lived processes. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1ISagaEvent}{I\+Saga\+Event}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ used specifically by a I\+Saga$<$\+T\+Authentication\+Token$>$ \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1ISnapshotBuilder}{I\+Snapshot\+Builder}}
\begin{DoxyCompactList}\small\item\em Builds \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}} from various input formats. \end{DoxyCompactList}\item 
interface \mbox{\hyperlink{interfaceCqrs_1_1Events_1_1ISnapshotDeserialiser}{I\+Snapshot\+Deserialiser}}
\begin{DoxyCompactList}\small\item\em Deserialises Snapshot from a serialised state. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1MemoryCacheEventStore}{Memory\+Cache\+Event\+Store}}
\begin{DoxyCompactList}\small\item\em A, \mbox{\hyperlink{classCqrs_1_1Events_1_1EventStore_a6346cb2aea4c5b4e740dc6cfb15abab8_a6346cb2aea4c5b4e740dc6cfb15abab8}{Event\+Store$<$\+T\+Authentication\+Token$>$}} that uses a Memory\+Cache implementation, flushing out data (I.\+E. it\textquotesingle{}s not persisted) \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1NotifyCallerEventAttribute}{Notify\+Caller\+Event\+Attribute}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that should be sent back to the person who was authenticated when sending the request via SignalR. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1NotifyEveryoneEventAttribute}{Notify\+Everyone\+Event\+Attribute}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that should be sent to all connected people via SignalR. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1NotifyEveryoneExceptCallerEventAttribute}{Notify\+Everyone\+Except\+Caller\+Event\+Attribute}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that should be sent to all connected people except the person who was authenticated when sending the request via SignalR. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1PrivateEventAttribute}{Private\+Event\+Attribute}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that should be sent via the private I\+Event\+Publisher$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1PublicEventAttribute}{Public\+Event\+Attribute}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ that should be sent via the public I\+Event\+Publisher$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1ReplicatedSqlEventStore}{Replicated\+Sql\+Event\+Store}}
\begin{DoxyCompactList}\small\item\em A simplified Sql\+Server based \mbox{\hyperlink{classCqrs_1_1Events_1_1EventStore_a6346cb2aea4c5b4e740dc6cfb15abab8_a6346cb2aea4c5b4e740dc6cfb15abab8}{Event\+Store$<$\+T\+Authentication\+Token$>$}} that uses Linq\+To\+Sql and follows a rigid schema that also replicates to multiple connections, but only reads from one connection. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1SagaEvent}{Saga\+Event}}
\begin{DoxyCompactList}\small\item\em An I\+Event$<$\+T\+Authentication\+Token$>$ used specifically by a I\+Saga$<$\+T\+Authentication\+Token$>$ \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1SnapshotBuilder}{Snapshot\+Builder}}
\begin{DoxyCompactList}\small\item\em Builds \mbox{\hyperlink{classCqrs_1_1Events_1_1EventData}{Event\+Data}} from various input formats. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1SnapshotDeserialiser}{Snapshot\+Deserialiser}}
\begin{DoxyCompactList}\small\item\em Deserialises Snapshot from a serialised state. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1SqlEventStore}{Sql\+Event\+Store}}
\begin{DoxyCompactList}\small\item\em A simplified Sql\+Server based \mbox{\hyperlink{classCqrs_1_1Events_1_1EventStore_a6346cb2aea4c5b4e740dc6cfb15abab8_a6346cb2aea4c5b4e740dc6cfb15abab8}{Event\+Store$<$\+T\+Authentication\+Token$>$}} that uses Entity Framework and follows a rigid schema. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1SqlEventStoreDataContext}{Sql\+Event\+Store\+Data\+Context}}
\begin{DoxyCompactList}\small\item\em A custom Db\+Context that supports specifying a table name. \end{DoxyCompactList}\item 
class \mbox{\hyperlink{classCqrs_1_1Events_1_1SqlSnapshotStore}{Sql\+Snapshot\+Store}}
\begin{DoxyCompactList}\small\item\em Stores the most recent \mbox{\hyperlink{}{snapshots}} for replay and I\+Aggregate\+Root$<$\+T\+Authentication\+Token$>$ rehydration on a Snapshot\+Aggregate\+Root$<$\+T\+Authentication\+Token,\+T\+Snapshot$>$ in Sql\+Server that uses Linq\+To\+Sql and follows a rigid schema. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Enumerations}
\begin{DoxyCompactItemize}
\item 
enum \mbox{\hyperlink{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39a}{Dto\+Aggregate\+Event\+Type}} \{ \mbox{\hyperlink{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa88183b946cc5f0e8c96b2e66e1c74a7e}{Dto\+Aggregate\+Event\+Type.\+Unknown}} = 0, 
\mbox{\hyperlink{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa0eceeb45861f9585dd7a97a3e36f85c6}{Dto\+Aggregate\+Event\+Type.\+Created}} = 1, 
\mbox{\hyperlink{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aaff0a3b7f3daef040faf89a88fdac01b7}{Dto\+Aggregate\+Event\+Type.\+Updated}} = 3, 
\mbox{\hyperlink{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa5fe6005bf6e415c950c011fb65f12b8f}{Dto\+Aggregate\+Event\+Type.\+Deleted}} = 4
 \}
\begin{DoxyCompactList}\small\item\em The type of C\+R\+UD operation. \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Enumeration Type Documentation}
\mbox{\Hypertarget{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39a}\label{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39a}} 
\index{Cqrs.Events@{Cqrs.Events}!DtoAggregateEventType@{DtoAggregateEventType}}
\index{DtoAggregateEventType@{DtoAggregateEventType}!Cqrs.Events@{Cqrs.Events}}
\doxysubsubsection{\texorpdfstring{DtoAggregateEventType}{DtoAggregateEventType}}
{\footnotesize\ttfamily enum \mbox{\hyperlink{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39a}{Cqrs.\+Events.\+Dto\+Aggregate\+Event\+Type}}\hspace{0.3cm}{\ttfamily [strong]}}



The type of C\+R\+UD operation. 

\begin{DoxyEnumFields}{Enumerator}
\raisebox{\heightof{T}}[0pt][0pt]{\index{Unknown@{Unknown}!Cqrs.Events@{Cqrs.Events}}\index{Cqrs.Events@{Cqrs.Events}!Unknown@{Unknown}}}\mbox{\Hypertarget{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa88183b946cc5f0e8c96b2e66e1c74a7e}\label{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa88183b946cc5f0e8c96b2e66e1c74a7e}} 
Unknown&An unknown C\+R\+UD operations. \\
\hline

\raisebox{\heightof{T}}[0pt][0pt]{\index{Created@{Created}!Cqrs.Events@{Cqrs.Events}}\index{Cqrs.Events@{Cqrs.Events}!Created@{Created}}}\mbox{\Hypertarget{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa0eceeb45861f9585dd7a97a3e36f85c6}\label{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa0eceeb45861f9585dd7a97a3e36f85c6}} 
Created&The Create C\+R\+UD operations. \\
\hline

\raisebox{\heightof{T}}[0pt][0pt]{\index{Updated@{Updated}!Cqrs.Events@{Cqrs.Events}}\index{Cqrs.Events@{Cqrs.Events}!Updated@{Updated}}}\mbox{\Hypertarget{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aaff0a3b7f3daef040faf89a88fdac01b7}\label{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aaff0a3b7f3daef040faf89a88fdac01b7}} 
Updated&The Update C\+R\+UD operations. \\
\hline

\raisebox{\heightof{T}}[0pt][0pt]{\index{Deleted@{Deleted}!Cqrs.Events@{Cqrs.Events}}\index{Cqrs.Events@{Cqrs.Events}!Deleted@{Deleted}}}\mbox{\Hypertarget{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa5fe6005bf6e415c950c011fb65f12b8f}\label{namespaceCqrs_1_1Events_a2a32e13adeac92f5a93966cd8ee2d39a_a2a32e13adeac92f5a93966cd8ee2d39aa5fe6005bf6e415c950c011fb65f12b8f}} 
Deleted&The Delete C\+R\+UD operations. \\
\hline

\end{DoxyEnumFields}
