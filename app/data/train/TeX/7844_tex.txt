\hypertarget{main_8cpp}{}\section{Lab4/main.cpp File Reference}
\label{main_8cpp}\index{Lab4/main.\+cpp@{Lab4/main.\+cpp}}
{\ttfamily \#include \char`\"{}Barrier.\+h\char`\"{}}\\*
{\ttfamily \#include $<$thread$>$}\\*
{\ttfamily \#include $<$vector$>$}\\*
Include dependency graph for main.\+cpp\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{main_8cpp_a96ca7eba915789dab4c11886f423c42b}{task} (std\+::shared\+\_\+ptr$<$ \hyperlink{class_barrier}{Barrier} $>$ barrier\+Obj)
\item 
int \hyperlink{main_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{main} (void)
\end{DoxyCompactItemize}


\subsection{Function Documentation}
\index{main.\+cpp@{main.\+cpp}!main@{main}}
\index{main@{main}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{main(void)}{main(void)}}]{\setlength{\rightskip}{0pt plus 5cm}int main (
\begin{DoxyParamCaption}
\item[{void}]{}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a840291bc02cba5474a4cb46a9b9566fe}{}\label{main_8cpp_a840291bc02cba5474a4cb46a9b9566fe}
$<$ An array of threads

$<$ Pointer to barrier object

sets the count in the barrier class \index{main.\+cpp@{main.\+cpp}!task@{task}}
\index{task@{task}!main.\+cpp@{main.\+cpp}}
\subsubsection[{\texorpdfstring{task(std\+::shared\+\_\+ptr$<$ Barrier $>$ barrier\+Obj)}{task(std::shared_ptr< Barrier > barrierObj)}}]{\setlength{\rightskip}{0pt plus 5cm}void task (
\begin{DoxyParamCaption}
\item[{std\+::shared\+\_\+ptr$<$ {\bf Barrier} $>$}]{barrier\+Obj}
\end{DoxyParamCaption}
)}\hypertarget{main_8cpp_a96ca7eba915789dab4c11886f423c42b}{}\label{main_8cpp_a96ca7eba915789dab4c11886f423c42b}
displays the first function in the barrier being executed this calls the function in the barrier to wait on all of the threads before moving on 