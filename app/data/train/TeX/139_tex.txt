%\documentclass[a4paper, 10pt]{article}
%\documentclass[paper=a4, fontsize=11pt]{article}
\documentclass[11pt]{article}

\usepackage[brazil]{babel}
\usepackage[utf8]{inputenc}
\usepackage{listings}
\usepackage{color}
\usepackage{amsthm}
\usepackage{graphicx}

\usepackage{schemabloc}

\usepackage{cite}

\usepackage{hyperref}

\usetikzlibrary{circuits}

\setlength{\parindent}{0pt}
\setlength{\parskip}{18pt}


\title{Prática 1 - Memórias não voláteis e voláteis}
\author{Felipe Bandeira da Silva}

%\date{}

\begin{document}

\maketitle
\begin{figure}[!t]
    \centering
    \includegraphics[scale=.5]{logounifor.png}
\end{figure}

\newpage

\section{Introdução}

O primeiro laboratório de microprocessadores aborda
um componente vital para o funcionamento de um 
sistema processado digitalmente. As famosas memorias,
usadas para os diversos fins. Seja no armazenamento
do programa ou de uma informação constante durante 
a execução do programa. Podendo também ser utilizada,
apos as artimanhas na programação, como memoria RAM.
Observando que tal operação, pode gerar overhead 
do software. Já que o acesso a uma memoria ROM é
algo demorado. 

\subsection{Questões}

\textsc{1. Determine qual o tamanho da memória e sua largura
em bits. Verifique se a quantidade de pinos de endereço
e de dados é correspondente ao tamanho descrito.}

\textbf{RES:} A memoria escolhida foi \textbf{28C512},
uma memoria EEPROM, trabalha com tensão de alimentação
de 5 volts. A pinagem utilizada para o endereçamento
é para uma memoria de $2^{16} = 512 K$. O barramento
utilizado para o dados é de apenas 8 bits. 

\textsc{2. Identifique os sinais de controle desta memória. 
Verifique também o diagrama de tempo desta memória 
e identifique o tempo de acesso da mesma.}

\textbf{RES:} O sinais de controle são: CE, OE, WE 
todos barrados. O tempo de acesso para a memoria 
é de 90 ns. O datasheet para o X28C512 informa que 
é possível acessar uma pagina de 128 bytes, com
tempo de acesso de 39 us/byte no ciclo de escrita. 
No total é necessário apenas 2.5 segundos para 
a escrita total na memória. 

\textsc{3. Utilizando o gravador de memórias, verifique se
esta memória está apagada. Caso não esteja utilize
o apagador de EPROM's, expondo a mesma por um tempo
de 5 minutos.}

\textbf{RES:} NÃO FOI FEITO. 

\textsc{4. Utilizando o programador do gravador, edite nas
posições iniciais da memória a palavra "CAFE". 
Grave a memória e depois leia o conteúdo para 
se certificar da gravação. }

\textbf{RES:} NÃO FOI FEITO. 

\section{Sub Relatório}

OBS: O sub relatório não segue o padrão adotado na
sala de aula, já que a parte prática foi incluída
no relatório. 

\textsc{1. Pesquise sobre o arquivo .HEX e explique 
o seu formato.}

O arquivo hex informa as principais informações
a serem dadas para o programador da memoria
de tal forma que a mesma saiba, qual a posição
da memoria e o dado, se a memoria não é de apenas
de 8 bits e sim de 32 bits. Qual a forma que 
o bloco de memória será gravada.

\textbf{RES:} De acordo com ~\cite{hex} o formato
padrão para o arquivo hex para uma memória é

RECORD MARK / LOAD RECLEN / OFFSET / RECTYP / INFO OR DATA / CHKSUM

O inicio do arquivo hex deve ter o caractere ``:'' que 
corresponde 03AH. Em \textbf{RECLEN} é informado 
a contagem de bytes de uma data, corresponde
a dois caracteres. O proximo campo informa o 
endereço da memória e correspodne a 4 caracteres.
O quarto campo informa o tipo de gravação que 
vaid e '00' a '05', em ~\cite{hex} pode ser visto
as possibilidades para este campo. O quinto
campo informa a informação com 2 caracteres. 
O ultimo e sexto campo corresponde ao checksum
do programa e não do arquivo. Corresponde 
a dois caracteres. 
O checksum é feito somando dos os valores
de cada campo e finalmente com a aplicação
do complemento de 2. 
Exemplo: seja um campo qualquer ``:10010000214601360121470136007EFE09D2190140'', o checksum é feito;

        0x10 + 0x01 + 0x00 + 0x00 + 0x21 + 0x46 +  0x01 + 0x36 + 
        0x01 + 0x21 + 0x47 + 0x01 + 0x36 + 0x00 + 0x7E + 0xFE + 
        0x09 + 0xD2 + 0x19 + 0x01 = 0x3C0

Aplicando o complemento de 2 gera 0x40, combinando perfeitamente 
com o dois ultimos caracteres do campo utilizado.


\textsc{2. Fale sobre o gang programmer.}

\textbf{RES:} O gang programmer é utilizado para a gravação
de memórias e até mesmo de microprocessadores com memórias
internas. Um gravador antigo, requerendo uma porta paralela
para a comunicação do computador com ele.

\textsc{3. Explique o processo de gravação de memorias EPROM, EEPROM}

\textbf{RES:} A memória EPROM é limpa através de luz ultra violeta, tal ato
de ``limpeza'' torna todas as posições de memória com o valor
0xFF. Com isso a gravação desta memória consiste apenas 
em zerar determinados bits. Ou seja, se o valor inicial é 0xFF
é possível obter todas as 256 combinações de um byte. Caso
o valor seja 0x0F é possível apenas crias a 127 combinações 
possíveis. 

\textsc{4. Escolha uma EPROM/EEPROM especifica e fale sobre suas
características funcionais e elétricas.}

\textbf{RES:} Este item foi respondido no começo do relatório.

\bibliography{referencias}{}
\bibliographystyle{plain}

\end{document}

% biografia
% formato hex, http://www.interlog.com/~speff/usefulinfo/Hexfrmt.pdf


