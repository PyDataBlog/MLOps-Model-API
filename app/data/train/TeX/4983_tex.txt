\chapter{Como empezar con Emacs en Ubuntu}

En este capítulo se hace una breve explicación de conceptos básicos para empezar a redactar un documento a LaTeX en Emacs y con Haskell a la vez, así como ir actualizando los archivos junto con la plataforma Github. Comenzaremos explicando como realizar la instalación de Ubuntu 16.04 en un PC con windows 10.\\

\section{Instalar Ubuntu 16.04 junto a windows 10}\label{aped.A}

Para realizar la instalación de Ubuntu junto a windows necesitaremos los siguientes programas:
\begin{itemize}
\item \href{https://rufus.akeo.ie/?locale=es_ES}{Rufus-2.17}

\item \href{https://www.ubuntu.com/download/desktop}{Ubuntu 16.04}

\end{itemize}
También necesitaremos un pen drive para usarlo de instalador.\\

\begin{itemize}
\item \textbf{Paso 1:}\\
Descargamos Ubuntu 16.04 y rufus-2.17 desde sus respectivas web (o enlaces dados anteriormente).\\
Necesitamos saber que tipo tiene nuestro disco duro, esto lo podemos ver haciendo click derecho sobre el icono de windows (abajo izquierda) y le damos a administrador de equipos -> administrador de discos, y nos aparecerá nuestro disco duro con todas sus subparticiones internas, en el general nos pondrá si es NTFS o MBR.\\

\item \textbf{Paso 2:}
\begin{itemize}
\item Conectamos el pen al PC y abrimos el programa rufus, el propio programa reconocerá el pen, sino en la pestaña de dispositivo marcamos el pen.

\item En Tipo de partición si nuestro disco es NTFS marcamos GPT para UEFI, en caso contrario uno de los otros dos MBR.

\item En la parte de opciones de formateo marcamos (aunque deben de venir marcadas): Formateo rápido

\item Crear disco de arranque con -> seleccionamos imagen ISO y hacemos click en el icono de la derecha para adjuntar la imagen ISO de Ubuntu que hemos descargado anteriormente.

\item Añadir etiquetas extendidas e iconos.

\item Seleccionamos empezar.\\
\end{itemize}

\item \textbf{Paso 3:}\\
Dejamos el pen conectado al PC y reiniciamos el ordenador, al reiniciar justo antes de que cargue pulsamos F2 (o F1 según el PC) para acceder a la bios del PC y aqui nos vamos a la zona de arranque de cada sistema (esto cada bios es diferente). Tenemos que colocar el pen en la primera posición, que en esta debe estar windows, de esta forma iniciamos con el pen y comenzamos a instalar Ubuntu. Seguimos los pasos que el programa de instalación nos indica, solo tenemos que marcar España cuando nos lo pida y dar el espacio que queramos a Ubuntu (con unos 40 GB es suficiente), el propio programa se encarga de hacer la partición del disco duro.\\

\item \textbf{Paso 4:}\\
Una vez instalado Ubuntu, nos vamos al icono naranjita que se llama software de Ubuntu y actualizamos.\\

Tras realizar todos estos pasos, cuando iniciemos el PC nos debe dar a elegir entre iniciar con Ubuntu o con Windows 10. Recomiendo buscar en youtube un video tutorial de como instalar Ubuntu junto a windows 10.\\
\end{itemize}

\section{Iniciar un Capítulo}

El editor de Emacs podemos descargarlo de su página web, la instalación es muy sencilla y guiada. Del mismo modo, instalamos Haskell 8.0.2. Una vez tenemos ambos programas instalados, procedemos a iniciar un capítulo en Haskell literario.
\begin{itemize}

\item \textbf{Paso 1:}\\
Abrimos el directorio desde Emacs con \fbox{Ctrl+x+d} y accedemos a la carpeta de texto para crear el archivo nuevo .tex sin espacios. Aquí escribiremos la introducción a nuestro capítulo y secciones. Desde este fichero .tex se importarán los módulos.

\item \textbf{Paso 2:}\\
Hacemos lo mismo pero en la carpeta código y guardamos el archivo con la abreviatura que hemos usado en el .tex, el archivo lo guardamos como .lhs para tener ahí el código necesario de Haskell. Estos serán los módulos donde desarrollaremos las secciones con Haskell literario, es decir, escribiremos a Latex y a su vez tendremos el código de Haskell.\\

\item \textbf{Paso 3:}\\
Al acabar el capitulo hay que añadir el capítulo al resto del trabajo. Para ello, nos vamos al archivo que contiene todo el trabajo que en nuestro caso se llama 'TFG.tex' , importante coger el de la extensión .tex, nos vamos a la zona donde incluimos los capitulos y usamos el comando de LaTeX con el nombre que le dimos en la carpeta de texto:\\

\fbox{\ include\{'nombre sin el .tex'\}}\\

\end{itemize}

\section{Abreviaciones de Emacs}\label{aped.B}\\

La tecla ctrl se denominara C y la tecla alt M, son las teclas mas utilizadas, pues bien ahora explicamos los atajos más importantes y seguiremos la misma nomenclatura de la guía para las teclas:\\

ctrl es llamada C y alt M.\\

Para abrir o crear un archivo:\\
\fbox{C + x + C + f}\\

Para guardar un archivo:\\
\fbox{C + x + C + s}\\

Para guardar un archivo (guardar como):\\
\fbox{C + x + C + w}\\

Si abriste mas de un archivo puedes recorrerlos diferentes buffers con\\
\fbox{C + x + ← o →}\\

Emacs se divide y maneja en buffers y puedes ver varios buffers a la vez (los buffers son como una especie de ventanas).\\

Para tener 2 buffers horizontales:\\
\fbox{C + x + 2}\\

Para tener 2 buffers verticales:\\
\fbox{C + x + 3}\\

Para cambiar el puntero a otro buffer:\\
\fbox{C + x + o}\\

Para tener un solo buffer:\\
\fbox{C + x + 1}\\

Para cerrar un buffer:\\
\fbox{C + x + k}\\

Si por ejemplo nos equivocamos en un atajo podemos cancelarlo con:\\
\fbox{C + g}\\

Para cerrar emacs basta con:\\
\fbox{C + x + C + C}\\

Para suspenderlo:\\
\fbox{C + z}\\

\section{Push and Pull de Github con Emacs}\label{aped.C}

Vamos a mostrar como subir y actualizar los archivos en la web de Github desde la Consola (o Terminal). Lo primero que debemos hacer es abrir la Consola:\\

\fbox{Ctrl+Alt+T}\\

Escribimos los siguientes comandos en orden para subir los archivos:\\

\fbox{cd 'directorio de la carpeta en la que se encuentran las subcarpetas de código y texto'} ejemplo: cd Escritorio/AlgebraConEnHaskell/ \\

\fbox{git add .} (de esta forma seleccionamos todo)\\

\fbox{git commit -m 'nombre del cambio que hemos hecho'}\\

\fbox{git push origin master}\\

A continuación, nos pedirá el nombre de usuario de GitHub, lo ponemos y seguidamente nos pedirá la contraseña, al ponerla se subirán los archivos a la plataforma de GitHub.


Para descargar los archivos hacemos lo mismo cambiando el último paso por:\\

\fbox{git pull origin master}\\


%%% Local Variables:
%%% mode: latex
%%% TeX-master: "TFG"
%%% End: