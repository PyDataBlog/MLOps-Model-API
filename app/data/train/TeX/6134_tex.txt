\documentclass{ximera}



\title{Python}

\begin{document}

\begin{abstract}
  Python provides a playground for multivariable functions.
\end{abstract}
\maketitle

We can use Python to experiment a bit with multivariable functions.

\begin{question}
  \begin{solution}
    Model the function $f(x) = x^2$ as a python function.

    \begin{hint}
    \begin{warning}
      Python does not use \verb|^| for exponentiation; it denotes this by \verb|**|
    \end{warning}
    \end{hint}

    \begin{hint}
      Try using \verb|return x**2|
    \end{hint}
    \begin{python}
def f(x):
  return #your code here

def validator():
  return (f(4) == 16) and (f(-5) == 25)
    \end{python}
  \end{solution}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  \begin{solution}
    Model the function \(g(x)=\begin{cases} -1 & \text{if $x \leq 0$} \\ 1 & \text{if $x>0$}\end{cases}\) as a Python function.

    \begin{hint}
      Try using an \verb|if|
    \end{hint}

    \begin{python}
def g(x):
  # your code here
  return # the value of g(x)

def validator():
  return (g(0) == -1) and (g(-17) == -1) and (g(25) == 1)
    \end{python}
  \end{solution}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  \begin{solution}
Model the function \(h(x,y) = \begin{cases} x/(1+y) & \text{if $y \neq -1$} \\ 0 & \text{if $y = -1$}\end{cases}\) as a Python function.

    \begin{python}
def h(x,y):
  # your code here
  return # the value of h(x,y)

def validator():
  return (h(6,2) == 2) and (h(17,-1) == 0) and (h(-24,5) == -4)
    \end{python}
  \end{solution}
\end{question}
	
\end{document}

%%% Local Variables: 
%%% mode: latex
%%% TeX-master: t
%%% End: 
