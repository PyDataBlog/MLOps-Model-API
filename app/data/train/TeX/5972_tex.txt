\hypertarget{class_fractal_tree_1_1_moving_branch_impl}{}\section{Fractal\+Tree.\+Moving\+Branch\+Impl Class Reference}
\label{class_fractal_tree_1_1_moving_branch_impl}\index{Fractal\+Tree.\+Moving\+Branch\+Impl@{Fractal\+Tree.\+Moving\+Branch\+Impl}}


Extends a normal branch and adds spring functionality. Force can be applied to the start and end point of the branch.  


Inheritance diagram for Fractal\+Tree.\+Moving\+Branch\+Impl\+:\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=2.871795cm]{class_fractal_tree_1_1_moving_branch_impl}
\end{center}
\end{figure}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
override void \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a52861b34bb8a9550c6790bab90509660}{Setup} (\hyperlink{interface_fractal_tree_1_1_branch}{Branch} owner, Vector2 end, float thickness, Color \hyperlink{class_fractal_tree_1_1_stationary_branch_a265ca67d50299986adb192386fc7b932}{color})
\begin{DoxyCompactList}\small\item\em Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch. \end{DoxyCompactList}\item 
override void \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a73649451c7fbfa0793e0a1528e301215}{Setup} (\hyperlink{interface_fractal_tree_1_1_branch}{Branch} owner, Vector2 end, float thickness, Color \hyperlink{class_fractal_tree_1_1_stationary_branch_a265ca67d50299986adb192386fc7b932}{color}, bool auto\+Mass)
\begin{DoxyCompactList}\small\item\em Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width. \end{DoxyCompactList}\item 
override void \hyperlink{class_fractal_tree_1_1_moving_branch_impl_aeea52b05117e613e0dd6c9ee5fbafb58}{Setup} (Vector2 start, Vector2 end, float thickness, Color \hyperlink{class_fractal_tree_1_1_stationary_branch_a265ca67d50299986adb192386fc7b932}{color})
\begin{DoxyCompactList}\small\item\em Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch. \end{DoxyCompactList}\item 
override void \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a4e7cde65899abaf121a906d06874c330}{Setup} (Vector2 start, Vector2 end, float width, Color \hyperlink{class_fractal_tree_1_1_stationary_branch_a265ca67d50299986adb192386fc7b932}{color}, bool auto\+Mass)
\begin{DoxyCompactList}\small\item\em Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width. \end{DoxyCompactList}\item 
new T \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a7f7776446fa70aac8efb669f9e41a4af}{Do\+Branching$<$ T $>$} (float angle)
\begin{DoxyCompactList}\small\item\em Returns a new branch based on current branch angle plus parameter angle. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Protected Member Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_adf817bef89fca3d8a86c9c6197cb0f95}\label{class_fractal_tree_1_1_moving_branch_impl_adf817bef89fca3d8a86c9c6197cb0f95}} 
override void {\bfseries Awake} ()
\end{DoxyCompactItemize}
\subsection*{Properties}
\begin{DoxyCompactItemize}
\item 
\hyperlink{class_fractal_tree_1_1_point_mass}{Point\+Mass} \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a360370cd5f0fb613596cb8d0fe942ffe}{start\+Point}\hspace{0.3cm}{\ttfamily  \mbox{[}get\mbox{]}}
\begin{DoxyCompactList}\small\item\em Gets the start point mass. Used to add spring force \end{DoxyCompactList}\item 
\hyperlink{class_fractal_tree_1_1_point_mass}{Point\+Mass} \hyperlink{class_fractal_tree_1_1_moving_branch_impl_aa2f492300936b8d8ce786050a5b7f2df}{end\+Point}\hspace{0.3cm}{\ttfamily  \mbox{[}get\mbox{]}}
\begin{DoxyCompactList}\small\item\em Gets the end point mass. Used to add spring force. \end{DoxyCompactList}\item 
override Vector2 \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a520d7fca22147e6a552b4c4f2b946259}{start\+Pos}\hspace{0.3cm}{\ttfamily  \mbox{[}get\mbox{]}}
\begin{DoxyCompactList}\small\item\em Gets the start position. \end{DoxyCompactList}\item 
override Vector2 \hyperlink{class_fractal_tree_1_1_moving_branch_impl_a76ba4f9f3d3cad097bfa39f423775423}{end\+Pos}\hspace{0.3cm}{\ttfamily  \mbox{[}get\mbox{]}}
\begin{DoxyCompactList}\small\item\em Gets the end position. \end{DoxyCompactList}\end{DoxyCompactItemize}
\subsection*{Additional Inherited Members}


\subsection{Detailed Description}
Extends a normal branch and adds spring functionality. Force can be applied to the start and end point of the branch. 



\subsection{Member Function Documentation}
\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a7f7776446fa70aac8efb669f9e41a4af}\label{class_fractal_tree_1_1_moving_branch_impl_a7f7776446fa70aac8efb669f9e41a4af}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!Do\+Branching$<$ T $>$@{Do\+Branching$<$ T $>$}}
\index{Do\+Branching$<$ T $>$@{Do\+Branching$<$ T $>$}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{Do\+Branching$<$ T $>$()}{DoBranching< T >()}}
{\footnotesize\ttfamily new T Fractal\+Tree.\+Moving\+Branch\+Impl.\+Do\+Branching$<$ T $>$ (\begin{DoxyParamCaption}\item[{float}]{angle }\end{DoxyParamCaption})}



Returns a new branch based on current branch angle plus parameter angle. 

\begin{DoxyReturn}{Returns}
The branching.
\end{DoxyReturn}

\begin{DoxyParams}{Parameters}
{\em angle} & Angle.\\
\hline
\end{DoxyParams}

\begin{DoxyTemplParams}{Template Parameters}
{\em T} & The 1st type parameter.\\
\hline
\end{DoxyTemplParams}


Implements \hyperlink{interface_fractal_tree_1_1_branch_ad3240d5e5d13df2ee22e55892f9c03cd}{Fractal\+Tree.\+Branch}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T} : {\em Branch}]\end{description}
\end{Desc}
\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a52861b34bb8a9550c6790bab90509660}\label{class_fractal_tree_1_1_moving_branch_impl_a52861b34bb8a9550c6790bab90509660}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!Setup@{Setup}}
\index{Setup@{Setup}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{Setup()}{Setup()}\hspace{0.1cm}{\footnotesize\ttfamily [1/4]}}
{\footnotesize\ttfamily override void Fractal\+Tree.\+Moving\+Branch\+Impl.\+Setup (\begin{DoxyParamCaption}\item[{\hyperlink{interface_fractal_tree_1_1_branch}{Branch}}]{owner,  }\item[{Vector2}]{end,  }\item[{float}]{thickness,  }\item[{Color}]{color }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch. 


\begin{DoxyParams}{Parameters}
{\em owner} & The attached branch.\\
\hline
{\em end} & End.\\
\hline
{\em thickness} & Thickness.\\
\hline
{\em color} & Color.\\
\hline
\end{DoxyParams}


Reimplemented from \hyperlink{class_fractal_tree_1_1_stationary_branch_acaa0bef74389db9f1a2f57af38557000}{Fractal\+Tree.\+Stationary\+Branch}.

\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a73649451c7fbfa0793e0a1528e301215}\label{class_fractal_tree_1_1_moving_branch_impl_a73649451c7fbfa0793e0a1528e301215}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!Setup@{Setup}}
\index{Setup@{Setup}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{Setup()}{Setup()}\hspace{0.1cm}{\footnotesize\ttfamily [2/4]}}
{\footnotesize\ttfamily override void Fractal\+Tree.\+Moving\+Branch\+Impl.\+Setup (\begin{DoxyParamCaption}\item[{\hyperlink{interface_fractal_tree_1_1_branch}{Branch}}]{owner,  }\item[{Vector2}]{end,  }\item[{float}]{thickness,  }\item[{Color}]{color,  }\item[{bool}]{auto\+Mass }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width. 


\begin{DoxyParams}{Parameters}
{\em owner} & Owner.\\
\hline
{\em end} & End.\\
\hline
{\em thickness} & Thickness.\\
\hline
{\em color} & Color.\\
\hline
{\em auto\+Mass} & If set to {\ttfamily true} auto mass.\\
\hline
\end{DoxyParams}


Reimplemented from \hyperlink{class_fractal_tree_1_1_stationary_branch_a262c5810fadbd2c8aea1f2afdca57126}{Fractal\+Tree.\+Stationary\+Branch}.

\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_aeea52b05117e613e0dd6c9ee5fbafb58}\label{class_fractal_tree_1_1_moving_branch_impl_aeea52b05117e613e0dd6c9ee5fbafb58}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!Setup@{Setup}}
\index{Setup@{Setup}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{Setup()}{Setup()}\hspace{0.1cm}{\footnotesize\ttfamily [3/4]}}
{\footnotesize\ttfamily override void Fractal\+Tree.\+Moving\+Branch\+Impl.\+Setup (\begin{DoxyParamCaption}\item[{Vector2}]{start,  }\item[{Vector2}]{end,  }\item[{float}]{thickness,  }\item[{Color}]{color }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch. 


\begin{DoxyParams}{Parameters}
{\em owner} & The attached branch.\\
\hline
{\em end} & End.\\
\hline
{\em thickness} & Thickness.\\
\hline
{\em color} & Color.\\
\hline
{\em start} & Start.\\
\hline
\end{DoxyParams}


Reimplemented from \hyperlink{class_fractal_tree_1_1_stationary_branch_a62e1aa7062ef70a8726dfe21a9e28d76}{Fractal\+Tree.\+Stationary\+Branch}.

\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a4e7cde65899abaf121a906d06874c330}\label{class_fractal_tree_1_1_moving_branch_impl_a4e7cde65899abaf121a906d06874c330}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!Setup@{Setup}}
\index{Setup@{Setup}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{Setup()}{Setup()}\hspace{0.1cm}{\footnotesize\ttfamily [4/4]}}
{\footnotesize\ttfamily override void Fractal\+Tree.\+Moving\+Branch\+Impl.\+Setup (\begin{DoxyParamCaption}\item[{Vector2}]{start,  }\item[{Vector2}]{end,  }\item[{float}]{width,  }\item[{Color}]{color,  }\item[{bool}]{auto\+Mass }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Setup the specified owner, end, thickness and color. Used to create a branch that is attached to another branch that has its mass autogenerated based on line width. 


\begin{DoxyParams}{Parameters}
{\em owner} & Owner.\\
\hline
{\em end} & End.\\
\hline
{\em thickness} & Thickness.\\
\hline
{\em color} & Color.\\
\hline
{\em start} & Start.\\
\hline
{\em width} & Width.\\
\hline
{\em auto\+Mass} & If set to {\ttfamily true} auto mass.\\
\hline
\end{DoxyParams}


Reimplemented from \hyperlink{class_fractal_tree_1_1_stationary_branch_a61cfd43bb83cf63bf1ad25f339866d7a}{Fractal\+Tree.\+Stationary\+Branch}.



\subsection{Property Documentation}
\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_aa2f492300936b8d8ce786050a5b7f2df}\label{class_fractal_tree_1_1_moving_branch_impl_aa2f492300936b8d8ce786050a5b7f2df}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!end\+Point@{end\+Point}}
\index{end\+Point@{end\+Point}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{end\+Point}{endPoint}}
{\footnotesize\ttfamily \hyperlink{class_fractal_tree_1_1_point_mass}{Point\+Mass} Fractal\+Tree.\+Moving\+Branch\+Impl.\+end\+Point\hspace{0.3cm}{\ttfamily [get]}}



Gets the end point mass. Used to add spring force. 

The end point.\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a76ba4f9f3d3cad097bfa39f423775423}\label{class_fractal_tree_1_1_moving_branch_impl_a76ba4f9f3d3cad097bfa39f423775423}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!end\+Pos@{end\+Pos}}
\index{end\+Pos@{end\+Pos}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{end\+Pos}{endPos}}
{\footnotesize\ttfamily override Vector2 Fractal\+Tree.\+Moving\+Branch\+Impl.\+end\+Pos\hspace{0.3cm}{\ttfamily [get]}}



Gets the end position. 

The end position.\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a360370cd5f0fb613596cb8d0fe942ffe}\label{class_fractal_tree_1_1_moving_branch_impl_a360370cd5f0fb613596cb8d0fe942ffe}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!start\+Point@{start\+Point}}
\index{start\+Point@{start\+Point}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{start\+Point}{startPoint}}
{\footnotesize\ttfamily \hyperlink{class_fractal_tree_1_1_point_mass}{Point\+Mass} Fractal\+Tree.\+Moving\+Branch\+Impl.\+start\+Point\hspace{0.3cm}{\ttfamily [get]}}



Gets the start point mass. Used to add spring force 

The start point.\mbox{\Hypertarget{class_fractal_tree_1_1_moving_branch_impl_a520d7fca22147e6a552b4c4f2b946259}\label{class_fractal_tree_1_1_moving_branch_impl_a520d7fca22147e6a552b4c4f2b946259}} 
\index{Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}!start\+Pos@{start\+Pos}}
\index{start\+Pos@{start\+Pos}!Fractal\+Tree\+::\+Moving\+Branch\+Impl@{Fractal\+Tree\+::\+Moving\+Branch\+Impl}}
\subsubsection{\texorpdfstring{start\+Pos}{startPos}}
{\footnotesize\ttfamily override Vector2 Fractal\+Tree.\+Moving\+Branch\+Impl.\+start\+Pos\hspace{0.3cm}{\ttfamily [get]}}



Gets the start position. 

The start position.

The documentation for this class was generated from the following file\+:\begin{DoxyCompactItemize}
\item 
F\+T/\+Scripts/\+Branch/Moving\+Branch\+Impl.\+cs\end{DoxyCompactItemize}
