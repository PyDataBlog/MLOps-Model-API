\chapter[Theory]{Theory of NGS-Quality Issues}
\label{theory}

\section{Intro}

Let 
\begin{tikzpicture}[xscale=0.015, yscale=0.01]
 % Draw the zero line
 \draw[line width=3mm, black!50] (1,0)--(100,0) node[pos=-0.2, black] {$5'$} node[pos=1.2, black]{$3'$};
 % Draw adaptor
 %\draw[line width=3mm, red!50] (100,0)--(130,0);
 
\end{tikzpicture} be our sequence of interest, also called the ``integrate''. And \begin{tikzpicture}[xscale=0.015, yscale=0.01]
 %\node[above] {$5'$};
 % Draw the zero line
 \draw[line width=3mm, black!50] (1,0)--(100,0) node[pos=-0.2, black] {$5'$};
 % Draw adaptor
 %\draw(100,0)--(130,0) \node[pos=0.9] {0};
 \draw[line width=3mm, red!50] (100,0) -- (130,0) node[pos=2, black]{$3'$};
\end{tikzpicture} this sequence with an adaptor; actually consisting of two sections:

Adaptors consist of FP1 or FP2', which allow hybridisation of the ligated template molecules to the flowcell surface, and R1 or R2', which allow hybridisation of sequencing primer (see for example \cite{Kozarewa2009}.

However, we want to get rid of all \begin{tikzpicture}[xscale=0.015, yscale=0.01]
 % Draw adaptor
 %\draw(100,0)--(130,0) \node[pos=0.9] {0};
 \draw[line width=3mm, red!50] (100,0) -- (130,0) node[pos=-0.5, black] {$5'$} node[pos=2, black]{$3'$};
\end{tikzpicture} nucleotides and just them. Some trimming takes place inherently by vendor software, however to accomplish this basic goal we implemented three algorithms:

\section{Algorithms}

\subsection{Alignments}
\label{theory:alignments}

\subsubsection{The ``Word''-Algorithm}

The algorithm essentially works as follows:

\begin{algorithmic}
\State $i\gets 0$
\State $n\gets minimummatchsize$
\For{$i \leq n$ }
    \State $chunk\gets A[i:i+minimummatchsize]$
    \State $hitpos \gets$ \Call{chunkinseq}{chunk,seq}
    \If {$hitpos \neq 0$}
       \Call{trim}{$hitpos - i$}
       \State break
    \EndIf
    \State $i\gets i+1$
\EndFor
\end{algorithmic}

Here, $minimummatchsize$ is the user requested minimum match size, see \ref{usage:commandline}, and $A$ shall be our adaptor sequence. In addition the pseudo function ``trim'' is actually not present. The actual code adjusts a pointer accoringly and performs trimming after all work has been done.

\subsection{Quality Filtering}
\label{theory:quality}

In ideal world we would not have quality issues, but usually there are issues to be solved:

\begin{itemize}
 \item Let us assume you want to perform a very rigid quality trimming, where each drop in quality cases a read to be trimmed, like at the position of the little red dod, here \begin{sparkline}{20}
 %\sparkrectangle 0.1 1
 \sparkdot 0.8 0.2 red
 \sparkdot 0.7 0.8 blue
 \spark 0 0.95 0.1 0.95  0.2 0.8  0.3 0.98  0.4 0.99  0.5 0.7
        0.6 0.7   0.7 0.88  0.8 0.2  0.9 0.7  1 0.9 /
\end{sparkline}
, where everything is alright except this little bump. This is the case of \textit{pointwise} quality trimming (see \ref{usage:op:quality_filtering}). If choosen, the read will be trimmed one base $5'$ to the base below the given threshold (in our example at the blue dot.

 \item In contrast to this very rigid approach, \texttt{ncap} offers to trim the read because of low quality. \newline For example  
 \begin{sparkline}{20}
 \sparkrectangle 0 0.6
 \sparkdot 0.5 0.7 blue
 \sparkdot 0.6 0.8 red
 \sparkdot 0.9 0.4 red
 \spark 0 0.95 0.1 0.95  0.2 0.8  0.3 0.98  0.4 0.99  0.5 0.7
        0.6 0.8   0.7 0.5  0.8 0.4  0.9 0.4  1 0.6 /
  \end{sparkline}
  if a moving average dropps below a given threshold (gray) and the window ranges between the red dot, the last remaining base at the $5'$ end would be denoted by the blue dot -- regardless of (anyway unlikely) quality improvements towards the $3'$ end.
  \item Finally, \texttt{ncap} offers \textit{Score Based Window Filtering} as introduced by \texttt{trimmomatic}, because we find this approach convincing. In contrast to the previous case the blue base \newline
  \begin{sparkline}{20}
 %\sparkrectangle 0 0.6
 \sparkdot 0.6 0.8 blue
 \sparkdot 0.7 0.5 red
 \spark 0 0.95 0.1 0.95  0.2 0.8  0.3 0.98  0.4 0.99  0.5 0.7
        0.6 0.8   0.7 0.5  0.8 0.4  0.9 0.4  1 0.6 /
  \end{sparkline}
  will be included in any case, but even the following red (bases) might be included, as they too contribute to the information content of the read:
  \begin{equation}
 Score(l) = \frac{1}{1 + e^{t-l}} \cdot l^{l-s} \cdot \left\lgroup \prod{Y^l}{_{i=1}} P_{corr,1} \right\rgroup^s 
\end{equation}
  
  \end{itemize}




