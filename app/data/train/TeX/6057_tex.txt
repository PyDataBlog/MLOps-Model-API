\hypertarget{classCqrs_1_1Bus_1_1RouteManager}{}\doxysection{Cqrs.\+Bus.\+Route\+Manager Class Reference}
\label{classCqrs_1_1Bus_1_1RouteManager}\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}


Manages \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{routes}}.  


Inheritance diagram for Cqrs.\+Bus.\+Route\+Manager\+:\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=2.000000cm]{classCqrs_1_1Bus_1_1RouteManager}
\end{center}
\end{figure}
\doxysubsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_abcc8a62319ac7a6edd38ed2d26ef5234_abcc8a62319ac7a6edd38ed2d26ef5234}{Route\+Manager}} ()
\begin{DoxyCompactList}\small\item\em Instantiates a new instance of \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager}{Route\+Manager}}. \end{DoxyCompactList}\item 
virtual void \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a5a01e8a6c9ae6311bca2d9e5cb75a7b9_a5a01e8a6c9ae6311bca2d9e5cb75a7b9}{Register\+Handler$<$ T\+Message $>$}} (Action$<$ T\+Message $>$ handler, Type targeted\+Type, bool hold\+Message\+Lock=true)
\begin{DoxyCompactList}\small\item\em Register an event or command handler that will listen and respond to events or commands. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_aeb620222dd0351a6d3848caf93e29954_aeb620222dd0351a6d3848caf93e29954}{Register\+Handler$<$ T\+Message $>$}} (Action$<$ T\+Message $>$ handler, bool hold\+Message\+Lock=true)
\begin{DoxyCompactList}\small\item\em Register an event or command handler that will listen and respond to events or commands. \end{DoxyCompactList}\item 
void \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a1f8fb95b11955aa0762a76f9b39233ec_a1f8fb95b11955aa0762a76f9b39233ec}{Register\+Global\+Event\+Handler$<$ T\+Message $>$}} (Action$<$ T\+Message $>$ handler, bool hold\+Message\+Lock=true)
\begin{DoxyCompactList}\small\item\em Register an event handler that will listen and respond to all events. \end{DoxyCompactList}\item 
\mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a1fafb5abc81384949c51b1d8887a7921_a1fafb5abc81384949c51b1d8887a7921}{Get\+Single\+Handler$<$ T\+Message $>$}} (bool throw\+Exception\+On\+No\+Route\+Handlers=true)
\begin{DoxyCompactList}\small\item\em Gets the single \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} expected for handling {\itshape T\+Message} . \end{DoxyCompactList}\item 
\mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_aa681cc48828440452f6984f198369e69_aa681cc48828440452f6984f198369e69}{Get\+Single\+Handler$<$ T\+Message $>$}} (T\+Message message, bool throw\+Exception\+On\+No\+Route\+Handlers=true)
\begin{DoxyCompactList}\small\item\em Gets the single \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} expected for handling {\itshape T\+Message} . \end{DoxyCompactList}\item 
I\+Enumerable$<$ \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} $>$ \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a738be20bb4ad702f7689e2aad70a9dc5_a738be20bb4ad702f7689e2aad70a9dc5}{Get\+Handlers$<$ T\+Message $>$}} (T\+Message message, bool throw\+Exception\+On\+No\+Route\+Handlers=true)
\begin{DoxyCompactList}\small\item\em Gets the collection \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} that are expected for handling {\itshape T\+Message} . \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Protected Member Functions}
\begin{DoxyCompactItemize}
\item 
virtual bool \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a1ee8d583bb5d75a54cdac03c8e84b8d9_a1ee8d583bb5d75a54cdac03c8e84b8d9}{Is\+A\+Command$<$ T\+Message $>$}} (T\+Message message)
\begin{DoxyCompactList}\small\item\em Checks if the provided {\itshape message}  is an I\+Command$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\item 
virtual bool \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a7b7bfc4db30cc5956c4acd6a342e9159_a7b7bfc4db30cc5956c4acd6a342e9159}{Is\+A\+Command}} (Type message\+Type)
\begin{DoxyCompactList}\small\item\em Checks if the provided {\itshape message\+Type}  implements I\+Command$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\item 
virtual bool \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a7e5099741cd4b3e538599c771581a4b6_a7e5099741cd4b3e538599c771581a4b6}{Is\+An\+Event$<$ T\+Message $>$}} (T\+Message message)
\begin{DoxyCompactList}\small\item\em Checks if the provided {\itshape message}  is an I\+Event$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\item 
virtual bool \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a7b9b2ad8b9f5d7761b0f45c033b96101_a7b9b2ad8b9f5d7761b0f45c033b96101}{Is\+An\+Event}} (Type message\+Type)
\begin{DoxyCompactList}\small\item\em Checks if the provided {\itshape message\+Type}  implements I\+Event$<$\+T\+Authentication\+Token$>$. \end{DoxyCompactList}\end{DoxyCompactItemize}
\doxysubsection*{Properties}
\begin{DoxyCompactItemize}
\item 
I\+Dictionary$<$ Type, \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} $>$ \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_ad6a3c8e41e10f62d075e52d08d817cee_ad6a3c8e41e10f62d075e52d08d817cee}{Routes}}\hspace{0.3cm}{\ttfamily  \mbox{[}get\mbox{]}}
\begin{DoxyCompactList}\small\item\em The \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} to execute per Type \end{DoxyCompactList}\item 
\mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a083b3775e28b500eca7351c9990e15a3_a083b3775e28b500eca7351c9990e15a3}{Global\+Event\+Route}}\hspace{0.3cm}{\ttfamily  \mbox{[}get\mbox{]}}
\begin{DoxyCompactList}\small\item\em A \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} to execute for all I\+Event$<$\+T\+Authentication\+Token$>$ \end{DoxyCompactList}\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Manages \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{routes}}. 



\doxysubsection{Constructor \& Destructor Documentation}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_abcc8a62319ac7a6edd38ed2d26ef5234_abcc8a62319ac7a6edd38ed2d26ef5234}\label{classCqrs_1_1Bus_1_1RouteManager_abcc8a62319ac7a6edd38ed2d26ef5234_abcc8a62319ac7a6edd38ed2d26ef5234}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!RouteManager@{RouteManager}}
\index{RouteManager@{RouteManager}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{RouteManager()}{RouteManager()}}
{\footnotesize\ttfamily Cqrs.\+Bus.\+Route\+Manager.\+Route\+Manager (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}



Instantiates a new instance of \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager}{Route\+Manager}}. 



\doxysubsection{Member Function Documentation}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a738be20bb4ad702f7689e2aad70a9dc5_a738be20bb4ad702f7689e2aad70a9dc5}\label{classCqrs_1_1Bus_1_1RouteManager_a738be20bb4ad702f7689e2aad70a9dc5_a738be20bb4ad702f7689e2aad70a9dc5}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!GetHandlers$<$ TMessage $>$@{GetHandlers$<$ TMessage $>$}}
\index{GetHandlers$<$ TMessage $>$@{GetHandlers$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{GetHandlers$<$ TMessage $>$()}{GetHandlers< TMessage >()}}
{\footnotesize\ttfamily I\+Enumerable$<$\mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}}$>$ Cqrs.\+Bus.\+Route\+Manager.\+Get\+Handlers$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{T\+Message}]{message,  }\item[{bool}]{throw\+Exception\+On\+No\+Route\+Handlers = {\ttfamily true} }\end{DoxyParamCaption})}



Gets the collection \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} that are expected for handling {\itshape T\+Message} . 


\begin{DoxyTemplParams}{Template Parameters}
{\em T\+Message} & The Type of I\+Message to find a \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} for.\\
\hline
\end{DoxyTemplParams}

\begin{DoxyParams}{Parameters}
{\em message} & The {\itshape T\+Message}  to find a \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} for. \\
\hline
{\em throw\+Exception\+On\+No\+Route\+Handlers} & If true will throw an Exception if no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} found.\\
\hline
\end{DoxyParams}

\begin{DoxyExceptions}{Exceptions}
{\em No\+Command\+Handler\+Registered\+Exception} & If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is an I\+Command$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
{\em No\+Event\+Handler\+Registered\+Exception} & If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is an I\+Event$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
{\em No\+Handler\+Registered\+Exception} & If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is not either an I\+Command$<$\+T\+Authentication\+Token$>$ or an I\+Event$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
\end{DoxyExceptions}
\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Message} : {\em I\+Message}]\end{description}
\end{Desc}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a1fafb5abc81384949c51b1d8887a7921_a1fafb5abc81384949c51b1d8887a7921}\label{classCqrs_1_1Bus_1_1RouteManager_a1fafb5abc81384949c51b1d8887a7921_a1fafb5abc81384949c51b1d8887a7921}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!GetSingleHandler$<$ TMessage $>$@{GetSingleHandler$<$ TMessage $>$}}
\index{GetSingleHandler$<$ TMessage $>$@{GetSingleHandler$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{GetSingleHandler$<$ TMessage $>$()}{GetSingleHandler< TMessage >()}\hspace{0.1cm}{\footnotesize\ttfamily [1/2]}}
{\footnotesize\ttfamily \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} Cqrs.\+Bus.\+Route\+Manager.\+Get\+Single\+Handler$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{bool}]{throw\+Exception\+On\+No\+Route\+Handlers = {\ttfamily true} }\end{DoxyParamCaption})}



Gets the single \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} expected for handling {\itshape T\+Message} . 


\begin{DoxyTemplParams}{Template Parameters}
{\em T\+Message} & The Type of I\+Message to find a \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} for.\\
\hline
\end{DoxyTemplParams}

\begin{DoxyParams}{Parameters}
{\em throw\+Exception\+On\+No\+Route\+Handlers} & If true will throw an Exception if no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} found.\\
\hline
\end{DoxyParams}

\begin{DoxyExceptions}{Exceptions}
{\em Multiple\+Command\+Handlers\+Registered\+Exception} & If more than one \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is an I\+Command$<$\+T\+Authentication\+Token$>$.\\
\hline
{\em No\+Command\+Handler\+Registered\+Exception} & If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is an I\+Command$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
{\em Invalid\+Operation\+Exception} & If more than one \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is not an I\+Command$<$\+T\+Authentication\+Token$>$ OR If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is not an I\+Command$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
\end{DoxyExceptions}
\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Message} : {\em I\+Message}]\end{description}
\end{Desc}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_aa681cc48828440452f6984f198369e69_aa681cc48828440452f6984f198369e69}\label{classCqrs_1_1Bus_1_1RouteManager_aa681cc48828440452f6984f198369e69_aa681cc48828440452f6984f198369e69}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!GetSingleHandler$<$ TMessage $>$@{GetSingleHandler$<$ TMessage $>$}}
\index{GetSingleHandler$<$ TMessage $>$@{GetSingleHandler$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{GetSingleHandler$<$ TMessage $>$()}{GetSingleHandler< TMessage >()}\hspace{0.1cm}{\footnotesize\ttfamily [2/2]}}
{\footnotesize\ttfamily \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} Cqrs.\+Bus.\+Route\+Manager.\+Get\+Single\+Handler$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{T\+Message}]{message,  }\item[{bool}]{throw\+Exception\+On\+No\+Route\+Handlers = {\ttfamily true} }\end{DoxyParamCaption})}



Gets the single \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} expected for handling {\itshape T\+Message} . 


\begin{DoxyTemplParams}{Template Parameters}
{\em T\+Message} & The Type of I\+Message to find a \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} for.\\
\hline
\end{DoxyTemplParams}

\begin{DoxyParams}{Parameters}
{\em message} & The {\itshape T\+Message}  to find a \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} for. \\
\hline
{\em throw\+Exception\+On\+No\+Route\+Handlers} & If true will throw an Exception if no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} found.\\
\hline
\end{DoxyParams}

\begin{DoxyExceptions}{Exceptions}
{\em Multiple\+Command\+Handlers\+Registered\+Exception} & If more than one \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is an I\+Command$<$\+T\+Authentication\+Token$>$.\\
\hline
{\em No\+Command\+Handler\+Registered\+Exception} & If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is an I\+Command$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
{\em Invalid\+Operation\+Exception} & If more than one \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is not an I\+Command$<$\+T\+Authentication\+Token$>$ OR If no \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteHandlerDelegate}{Route\+Handler\+Delegate}} is found and {\itshape T\+Message}  is not an I\+Command$<$\+T\+Authentication\+Token$>$ and {\itshape throw\+Exception\+On\+No\+Route\+Handlers}  is true.\\
\hline
\end{DoxyExceptions}
\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Message} : {\em I\+Message}]\end{description}
\end{Desc}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a7b7bfc4db30cc5956c4acd6a342e9159_a7b7bfc4db30cc5956c4acd6a342e9159}\label{classCqrs_1_1Bus_1_1RouteManager_a7b7bfc4db30cc5956c4acd6a342e9159_a7b7bfc4db30cc5956c4acd6a342e9159}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!IsACommand@{IsACommand}}
\index{IsACommand@{IsACommand}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{IsACommand()}{IsACommand()}}
{\footnotesize\ttfamily virtual bool Cqrs.\+Bus.\+Route\+Manager.\+Is\+A\+Command (\begin{DoxyParamCaption}\item[{Type}]{message\+Type }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [protected]}, {\ttfamily [virtual]}}



Checks if the provided {\itshape message\+Type}  implements I\+Command$<$\+T\+Authentication\+Token$>$. 


\begin{DoxyParams}{Parameters}
{\em message\+Type} & The Type of object to check.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
true if {\itshape message\+Type}  implements I\+Command$<$\+T\+Authentication\+Token$>$.
\end{DoxyReturn}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a1ee8d583bb5d75a54cdac03c8e84b8d9_a1ee8d583bb5d75a54cdac03c8e84b8d9}\label{classCqrs_1_1Bus_1_1RouteManager_a1ee8d583bb5d75a54cdac03c8e84b8d9_a1ee8d583bb5d75a54cdac03c8e84b8d9}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!IsACommand$<$ TMessage $>$@{IsACommand$<$ TMessage $>$}}
\index{IsACommand$<$ TMessage $>$@{IsACommand$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{IsACommand$<$ TMessage $>$()}{IsACommand< TMessage >()}}
{\footnotesize\ttfamily virtual bool \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a7b7bfc4db30cc5956c4acd6a342e9159_a7b7bfc4db30cc5956c4acd6a342e9159}{Cqrs.\+Bus.\+Route\+Manager.\+Is\+A\+Command}}$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{T\+Message}]{message }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [protected]}, {\ttfamily [virtual]}}



Checks if the provided {\itshape message}  is an I\+Command$<$\+T\+Authentication\+Token$>$. 


\begin{DoxyTemplParams}{Template Parameters}
{\em T\+Message} & The Type of I\+Message to check.\\
\hline
\end{DoxyTemplParams}

\begin{DoxyParams}{Parameters}
{\em message} & The {\itshape T\+Message}  to check. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
true if {\itshape message}  is an I\+Command$<$\+T\+Authentication\+Token$>$.
\end{DoxyReturn}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a7b9b2ad8b9f5d7761b0f45c033b96101_a7b9b2ad8b9f5d7761b0f45c033b96101}\label{classCqrs_1_1Bus_1_1RouteManager_a7b9b2ad8b9f5d7761b0f45c033b96101_a7b9b2ad8b9f5d7761b0f45c033b96101}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!IsAnEvent@{IsAnEvent}}
\index{IsAnEvent@{IsAnEvent}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{IsAnEvent()}{IsAnEvent()}}
{\footnotesize\ttfamily virtual bool Cqrs.\+Bus.\+Route\+Manager.\+Is\+An\+Event (\begin{DoxyParamCaption}\item[{Type}]{message\+Type }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [protected]}, {\ttfamily [virtual]}}



Checks if the provided {\itshape message\+Type}  implements I\+Event$<$\+T\+Authentication\+Token$>$. 


\begin{DoxyParams}{Parameters}
{\em message\+Type} & The Type of object to check.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
true if {\itshape message\+Type}  implements I\+Event$<$\+T\+Authentication\+Token$>$.
\end{DoxyReturn}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a7e5099741cd4b3e538599c771581a4b6_a7e5099741cd4b3e538599c771581a4b6}\label{classCqrs_1_1Bus_1_1RouteManager_a7e5099741cd4b3e538599c771581a4b6_a7e5099741cd4b3e538599c771581a4b6}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!IsAnEvent$<$ TMessage $>$@{IsAnEvent$<$ TMessage $>$}}
\index{IsAnEvent$<$ TMessage $>$@{IsAnEvent$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{IsAnEvent$<$ TMessage $>$()}{IsAnEvent< TMessage >()}}
{\footnotesize\ttfamily virtual bool \mbox{\hyperlink{classCqrs_1_1Bus_1_1RouteManager_a7b9b2ad8b9f5d7761b0f45c033b96101_a7b9b2ad8b9f5d7761b0f45c033b96101}{Cqrs.\+Bus.\+Route\+Manager.\+Is\+An\+Event}}$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{T\+Message}]{message }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [protected]}, {\ttfamily [virtual]}}



Checks if the provided {\itshape message}  is an I\+Event$<$\+T\+Authentication\+Token$>$. 


\begin{DoxyTemplParams}{Template Parameters}
{\em T\+Message} & The Type of I\+Message to check.\\
\hline
\end{DoxyTemplParams}

\begin{DoxyParams}{Parameters}
{\em message} & The {\itshape T\+Message}  to check. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
true if {\itshape message}  is an I\+Event$<$\+T\+Authentication\+Token$>$.
\end{DoxyReturn}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a1f8fb95b11955aa0762a76f9b39233ec_a1f8fb95b11955aa0762a76f9b39233ec}\label{classCqrs_1_1Bus_1_1RouteManager_a1f8fb95b11955aa0762a76f9b39233ec_a1f8fb95b11955aa0762a76f9b39233ec}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!RegisterGlobalEventHandler$<$ TMessage $>$@{RegisterGlobalEventHandler$<$ TMessage $>$}}
\index{RegisterGlobalEventHandler$<$ TMessage $>$@{RegisterGlobalEventHandler$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{RegisterGlobalEventHandler$<$ TMessage $>$()}{RegisterGlobalEventHandler< TMessage >()}}
{\footnotesize\ttfamily void Cqrs.\+Bus.\+Route\+Manager.\+Register\+Global\+Event\+Handler$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{Action$<$ T\+Message $>$}]{handler,  }\item[{bool}]{hold\+Message\+Lock = {\ttfamily true} }\end{DoxyParamCaption})}



Register an event handler that will listen and respond to all events. 

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Message} : {\em I\+Message}]\end{description}
\end{Desc}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_aeb620222dd0351a6d3848caf93e29954_aeb620222dd0351a6d3848caf93e29954}\label{classCqrs_1_1Bus_1_1RouteManager_aeb620222dd0351a6d3848caf93e29954_aeb620222dd0351a6d3848caf93e29954}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!RegisterHandler$<$ TMessage $>$@{RegisterHandler$<$ TMessage $>$}}
\index{RegisterHandler$<$ TMessage $>$@{RegisterHandler$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{RegisterHandler$<$ TMessage $>$()}{RegisterHandler< TMessage >()}\hspace{0.1cm}{\footnotesize\ttfamily [1/2]}}
{\footnotesize\ttfamily void Cqrs.\+Bus.\+Route\+Manager.\+Register\+Handler$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{Action$<$ T\+Message $>$}]{handler,  }\item[{bool}]{hold\+Message\+Lock = {\ttfamily true} }\end{DoxyParamCaption})}



Register an event or command handler that will listen and respond to events or commands. 



Implements \mbox{\hyperlink{interfaceCqrs_1_1Bus_1_1IHandlerRegistrar_a07792dcc9a8b272709ff2e2dd336a642_a07792dcc9a8b272709ff2e2dd336a642}{Cqrs.\+Bus.\+I\+Handler\+Registrar}}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Message} : {\em I\+Message}]\end{description}
\end{Desc}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a5a01e8a6c9ae6311bca2d9e5cb75a7b9_a5a01e8a6c9ae6311bca2d9e5cb75a7b9}\label{classCqrs_1_1Bus_1_1RouteManager_a5a01e8a6c9ae6311bca2d9e5cb75a7b9_a5a01e8a6c9ae6311bca2d9e5cb75a7b9}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!RegisterHandler$<$ TMessage $>$@{RegisterHandler$<$ TMessage $>$}}
\index{RegisterHandler$<$ TMessage $>$@{RegisterHandler$<$ TMessage $>$}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{RegisterHandler$<$ TMessage $>$()}{RegisterHandler< TMessage >()}\hspace{0.1cm}{\footnotesize\ttfamily [2/2]}}
{\footnotesize\ttfamily virtual void Cqrs.\+Bus.\+Route\+Manager.\+Register\+Handler$<$ T\+Message $>$ (\begin{DoxyParamCaption}\item[{Action$<$ T\+Message $>$}]{handler,  }\item[{Type}]{targeted\+Type,  }\item[{bool}]{hold\+Message\+Lock = {\ttfamily true} }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Register an event or command handler that will listen and respond to events or commands. 



Implements \mbox{\hyperlink{interfaceCqrs_1_1Bus_1_1IHandlerRegistrar_ab6ca4dfdc54a5aeebe4651dbdb479f55_ab6ca4dfdc54a5aeebe4651dbdb479f55}{Cqrs.\+Bus.\+I\+Handler\+Registrar}}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Message} : {\em I\+Message}]\end{description}
\end{Desc}


\doxysubsection{Property Documentation}
\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_a083b3775e28b500eca7351c9990e15a3_a083b3775e28b500eca7351c9990e15a3}\label{classCqrs_1_1Bus_1_1RouteManager_a083b3775e28b500eca7351c9990e15a3_a083b3775e28b500eca7351c9990e15a3}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!GlobalEventRoute@{GlobalEventRoute}}
\index{GlobalEventRoute@{GlobalEventRoute}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{GlobalEventRoute}{GlobalEventRoute}}
{\footnotesize\ttfamily \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} Cqrs.\+Bus.\+Route\+Manager.\+Global\+Event\+Route\hspace{0.3cm}{\ttfamily [get]}}



A \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} to execute for all I\+Event$<$\+T\+Authentication\+Token$>$ 

\mbox{\Hypertarget{classCqrs_1_1Bus_1_1RouteManager_ad6a3c8e41e10f62d075e52d08d817cee_ad6a3c8e41e10f62d075e52d08d817cee}\label{classCqrs_1_1Bus_1_1RouteManager_ad6a3c8e41e10f62d075e52d08d817cee_ad6a3c8e41e10f62d075e52d08d817cee}} 
\index{Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}!Routes@{Routes}}
\index{Routes@{Routes}!Cqrs.Bus.RouteManager@{Cqrs.Bus.RouteManager}}
\doxysubsubsection{\texorpdfstring{Routes}{Routes}}
{\footnotesize\ttfamily I\+Dictionary$<$Type, \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}}$>$ Cqrs.\+Bus.\+Route\+Manager.\+Routes\hspace{0.3cm}{\ttfamily [get]}, {\ttfamily [protected]}}



The \mbox{\hyperlink{classCqrs_1_1Bus_1_1Route}{Route}} to execute per Type 

