\hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{}\section{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher$<$ T\+Authentication\+Token $>$ Interface Template Reference}
\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}\index{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher$<$ T\+Authentication\+Token $>$@{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher$<$ T\+Authentication\+Token $>$}}


Publishes an I\+Command$<$\+T\+Authentication\+Token$>$  


Inheritance diagram for Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher$<$ T\+Authentication\+Token $>$\+:\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=3.000000cm]{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}
\end{center}
\end{figure}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_a19ffb318c830e9f05d4adae985232f30}{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$} (T\+Command command, \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$ event\+Receiver=null)
\begin{DoxyCompactList}\small\item\em Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  \end{DoxyCompactList}\item 
T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_ad3761879cf9e09c9e89cabf8067b6de4}{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$} (T\+Command command, int milliseconds\+Timeout, \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$ event\+Receiver=null)
\begin{DoxyCompactList}\small\item\em Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. \end{DoxyCompactList}\item 
T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_a02ef39482cb50e6e15e06144adca1ed5}{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$} (T\+Command command, Time\+Span timeout, \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$ event\+Receiver=null)
\begin{DoxyCompactList}\small\item\em Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. \end{DoxyCompactList}\item 
T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_a83e4480bf8cd6015254d700056cf1647}{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$} (T\+Command command, Func$<$ I\+Enumerable$<$ \hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}$<$ T\+Authentication\+Token $>$$>$, T\+Event $>$ condition, \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$ event\+Receiver=null)
\begin{DoxyCompactList}\small\item\em Publishes the provided {\itshape command}  and waits until the specified condition is satisfied an event of {\itshape T\+Event}  \end{DoxyCompactList}\item 
T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_a4b6636f2dba029321c62a78c473590be}{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$} (T\+Command command, Func$<$ I\+Enumerable$<$ \hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}$<$ T\+Authentication\+Token $>$$>$, T\+Event $>$ condition, int milliseconds\+Timeout, \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$ event\+Receiver=null)
\begin{DoxyCompactList}\small\item\em Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. \end{DoxyCompactList}\item 
T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_a0460fc2091d52ba3463973fea5028bc6}{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$} (T\+Command command, Func$<$ I\+Enumerable$<$ \hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}$<$ T\+Authentication\+Token $>$$>$, T\+Event $>$ condition, Time\+Span timeout, \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$ event\+Receiver=null)
\begin{DoxyCompactList}\small\item\em Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Publishes an I\+Command$<$\+T\+Authentication\+Token$>$ 


\begin{DoxyTemplParams}{Template Parameters}
{\em T\+Authentication\+Token} & \\
\hline
\end{DoxyTemplParams}


\subsection{Member Function Documentation}
\mbox{\Hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_a19ffb318c830e9f05d4adae985232f30}\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a19ffb318c830e9f05d4adae985232f30_a19ffb318c830e9f05d4adae985232f30}} 
\index{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}!Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}}
\index{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}!Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}}
\subsubsection{\texorpdfstring{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$()}{PublishAndWait< TCommand, TEvent >()}\hspace{0.1cm}{\footnotesize\ttfamily [1/6]}}
{\footnotesize\ttfamily T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher}$<$ T\+Authentication\+Token $>$.Publish\+And\+Wait$<$ T\+Command, T\+Event $>$ (\begin{DoxyParamCaption}\item[{T\+Command}]{command,  }\item[{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$}]{event\+Receiver = {\ttfamily null} }\end{DoxyParamCaption})}



Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  


\begin{DoxyParams}{Parameters}
{\em command} & The {\itshape T\+Command}  to publish.\\
\hline
{\em event\+Receiver} & If provided, is the \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver$<$\+T\+Authentication\+Token$>$} that the event is expected to be returned on.\\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classCqrs_1_1Bus_1_1InProcessBus_a38c0684e313f42bfb36b40703db94ccb_a38c0684e313f42bfb36b40703db94ccb}{Cqrs.\+Bus.\+In\+Process\+Bus$<$ T\+Authentication\+Token $>$}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Command} : {\em I\+Command$<$T\+Authentication\+Token$>$}]\end{description}
\end{Desc}
\mbox{\Hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_ad3761879cf9e09c9e89cabf8067b6de4}\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_ad3761879cf9e09c9e89cabf8067b6de4_ad3761879cf9e09c9e89cabf8067b6de4}} 
\index{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}!Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}}
\index{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}!Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}}
\subsubsection{\texorpdfstring{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$()}{PublishAndWait< TCommand, TEvent >()}\hspace{0.1cm}{\footnotesize\ttfamily [2/6]}}
{\footnotesize\ttfamily T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher}$<$ T\+Authentication\+Token $>$.Publish\+And\+Wait$<$ T\+Command, T\+Event $>$ (\begin{DoxyParamCaption}\item[{T\+Command}]{command,  }\item[{int}]{milliseconds\+Timeout,  }\item[{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$}]{event\+Receiver = {\ttfamily null} }\end{DoxyParamCaption})}



Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. 


\begin{DoxyParams}{Parameters}
{\em command} & The {\itshape T\+Command}  to publish.\\
\hline
{\em milliseconds\+Timeout} & The number of milliseconds to wait, or F\+:\+System.\+Threading.\+Timeout.\+Infinite (-\/1) to wait indefinitely.\\
\hline
{\em event\+Receiver} & If provided, is the \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver$<$\+T\+Authentication\+Token$>$} that the event is expected to be returned on.\\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classCqrs_1_1Bus_1_1InProcessBus_a977e49340f771248ddf485eeee650e04_a977e49340f771248ddf485eeee650e04}{Cqrs.\+Bus.\+In\+Process\+Bus$<$ T\+Authentication\+Token $>$}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Command} : {\em I\+Command$<$T\+Authentication\+Token$>$}]\end{description}
\end{Desc}
\mbox{\Hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_a02ef39482cb50e6e15e06144adca1ed5}\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a02ef39482cb50e6e15e06144adca1ed5_a02ef39482cb50e6e15e06144adca1ed5}} 
\index{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}!Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}}
\index{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}!Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}}
\subsubsection{\texorpdfstring{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$()}{PublishAndWait< TCommand, TEvent >()}\hspace{0.1cm}{\footnotesize\ttfamily [3/6]}}
{\footnotesize\ttfamily T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher}$<$ T\+Authentication\+Token $>$.Publish\+And\+Wait$<$ T\+Command, T\+Event $>$ (\begin{DoxyParamCaption}\item[{T\+Command}]{command,  }\item[{Time\+Span}]{timeout,  }\item[{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$}]{event\+Receiver = {\ttfamily null} }\end{DoxyParamCaption})}



Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. 


\begin{DoxyParams}{Parameters}
{\em command} & The {\itshape T\+Command}  to publish.\\
\hline
{\em timeout} & A T\+:\+System.\+Time\+Span that represents the number of milliseconds to wait, or a Time\+Span that represents -\/1 milliseconds to wait indefinitely.\\
\hline
{\em event\+Receiver} & If provided, is the \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver$<$\+T\+Authentication\+Token$>$} that the event is expected to be returned on.\\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classCqrs_1_1Bus_1_1InProcessBus_a4178bdc4e17f28b0b89e11611693ab14_a4178bdc4e17f28b0b89e11611693ab14}{Cqrs.\+Bus.\+In\+Process\+Bus$<$ T\+Authentication\+Token $>$}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Command} : {\em I\+Command$<$T\+Authentication\+Token$>$}]\end{description}
\end{Desc}
\mbox{\Hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_a83e4480bf8cd6015254d700056cf1647}\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a83e4480bf8cd6015254d700056cf1647_a83e4480bf8cd6015254d700056cf1647}} 
\index{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}!Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}}
\index{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}!Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}}
\subsubsection{\texorpdfstring{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$()}{PublishAndWait< TCommand, TEvent >()}\hspace{0.1cm}{\footnotesize\ttfamily [4/6]}}
{\footnotesize\ttfamily T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher}$<$ T\+Authentication\+Token $>$.Publish\+And\+Wait$<$ T\+Command, T\+Event $>$ (\begin{DoxyParamCaption}\item[{T\+Command}]{command,  }\item[{Func$<$ I\+Enumerable$<$ \hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}$<$ T\+Authentication\+Token $>$$>$, T\+Event $>$}]{condition,  }\item[{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$}]{event\+Receiver = {\ttfamily null} }\end{DoxyParamCaption})}



Publishes the provided {\itshape command}  and waits until the specified condition is satisfied an event of {\itshape T\+Event}  


\begin{DoxyParams}{Parameters}
{\em command} & The {\itshape T\+Command}  to publish.\\
\hline
{\em condition} & A delegate to be executed over and over until it returns the {\itshape T\+Event}  that is desired, return null to keep trying.\\
\hline
{\em event\+Receiver} & If provided, is the \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver$<$\+T\+Authentication\+Token$>$} that the event is expected to be returned on.\\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classCqrs_1_1Bus_1_1InProcessBus_aad4ec1abb47389db59034e5d7d1aa322_aad4ec1abb47389db59034e5d7d1aa322}{Cqrs.\+Bus.\+In\+Process\+Bus$<$ T\+Authentication\+Token $>$}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Command} : {\em I\+Command$<$T\+Authentication\+Token$>$}]\end{description}
\end{Desc}
\mbox{\Hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_a4b6636f2dba029321c62a78c473590be}\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a4b6636f2dba029321c62a78c473590be_a4b6636f2dba029321c62a78c473590be}} 
\index{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}!Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}}
\index{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}!Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}}
\subsubsection{\texorpdfstring{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$()}{PublishAndWait< TCommand, TEvent >()}\hspace{0.1cm}{\footnotesize\ttfamily [5/6]}}
{\footnotesize\ttfamily T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher}$<$ T\+Authentication\+Token $>$.Publish\+And\+Wait$<$ T\+Command, T\+Event $>$ (\begin{DoxyParamCaption}\item[{T\+Command}]{command,  }\item[{Func$<$ I\+Enumerable$<$ \hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}$<$ T\+Authentication\+Token $>$$>$, T\+Event $>$}]{condition,  }\item[{int}]{milliseconds\+Timeout,  }\item[{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$}]{event\+Receiver = {\ttfamily null} }\end{DoxyParamCaption})}



Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. 


\begin{DoxyParams}{Parameters}
{\em command} & The {\itshape T\+Command}  to publish.\\
\hline
{\em condition} & A delegate to be executed over and over until it returns the {\itshape T\+Event}  that is desired, return null to keep trying.\\
\hline
{\em milliseconds\+Timeout} & The number of milliseconds to wait, or F\+:\+System.\+Threading.\+Timeout.\+Infinite (-\/1) to wait indefinitely.\\
\hline
{\em event\+Receiver} & If provided, is the \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver$<$\+T\+Authentication\+Token$>$} that the event is expected to be returned on.\\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classCqrs_1_1Bus_1_1InProcessBus_addd5bfd0feddfad326e63a548e7eb679_addd5bfd0feddfad326e63a548e7eb679}{Cqrs.\+Bus.\+In\+Process\+Bus$<$ T\+Authentication\+Token $>$}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Command} : {\em I\+Command$<$T\+Authentication\+Token$>$}]\end{description}
\end{Desc}
\mbox{\Hypertarget{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_a0460fc2091d52ba3463973fea5028bc6}\label{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher_a0460fc2091d52ba3463973fea5028bc6_a0460fc2091d52ba3463973fea5028bc6}} 
\index{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}!Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}}
\index{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$@{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$}!Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher@{Cqrs\+::\+Commands\+::\+I\+Publish\+And\+Wait\+Command\+Publisher}}
\subsubsection{\texorpdfstring{Publish\+And\+Wait$<$ T\+Command, T\+Event $>$()}{PublishAndWait< TCommand, TEvent >()}\hspace{0.1cm}{\footnotesize\ttfamily [6/6]}}
{\footnotesize\ttfamily T\+Event \hyperlink{interfaceCqrs_1_1Commands_1_1IPublishAndWaitCommandPublisher}{Cqrs.\+Commands.\+I\+Publish\+And\+Wait\+Command\+Publisher}$<$ T\+Authentication\+Token $>$.Publish\+And\+Wait$<$ T\+Command, T\+Event $>$ (\begin{DoxyParamCaption}\item[{T\+Command}]{command,  }\item[{Func$<$ I\+Enumerable$<$ \hyperlink{interfaceCqrs_1_1Events_1_1IEvent}{I\+Event}$<$ T\+Authentication\+Token $>$$>$, T\+Event $>$}]{condition,  }\item[{Time\+Span}]{timeout,  }\item[{\hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver}$<$ T\+Authentication\+Token $>$}]{event\+Receiver = {\ttfamily null} }\end{DoxyParamCaption})}



Publishes the provided {\itshape command}  and waits for an event of {\itshape T\+Event}  or exits if the specified timeout is expired. 


\begin{DoxyParams}{Parameters}
{\em command} & The {\itshape T\+Command}  to publish.\\
\hline
{\em condition} & A delegate to be executed over and over until it returns the {\itshape T\+Event}  that is desired, return null to keep trying.\\
\hline
{\em timeout} & A T\+:\+System.\+Time\+Span that represents the number of milliseconds to wait, or a Time\+Span that represents -\/1 milliseconds to wait indefinitely.\\
\hline
{\em event\+Receiver} & If provided, is the \hyperlink{interfaceCqrs_1_1Events_1_1IEventReceiver}{I\+Event\+Receiver$<$\+T\+Authentication\+Token$>$} that the event is expected to be returned on.\\
\hline
\end{DoxyParams}


Implemented in \hyperlink{classCqrs_1_1Bus_1_1InProcessBus_ae818b3610165e0036bca718f97349641_ae818b3610165e0036bca718f97349641}{Cqrs.\+Bus.\+In\+Process\+Bus$<$ T\+Authentication\+Token $>$}.

\begin{Desc}
\item[Type Constraints]\begin{description}
\item[{\em T\+Command} : {\em I\+Command$<$T\+Authentication\+Token$>$}]\end{description}
\end{Desc}
