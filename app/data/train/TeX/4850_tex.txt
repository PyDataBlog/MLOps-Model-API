\chapter{Conclusion}
The project set out to create an e-commerce application using a microservice orientated architecture, with a focus on resilience and availability.

Containerizing Spring Boot applications with Docker, first on PC and then on the Raspberry Pi gave small headaches because Docker claims to run anywhere but in fact one still have to take the architecture of the processor into account.

The product of the project is a highly scalable web application running in Kubernetes. Browsing products, adding products to a cart and purchasing products are possible through the front-end AngularJS application. Load testing clearly show that resilience is highly improved when replicating services in Kubernetes. When going from a single pod to just three pods, heavy load errors where eliminated and response-times were clearly improved.

In the process of implementing the application, knowledge about how distributed systems work and experience with Spring, Docker and Kubernetes were gained and the clear advantages of this new way of thinking showed up when resilience testing came into the picture.
