\documentclass[dvipdfmx]{beamer}
\usepackage{pxjahyper}
\renewcommand{\kanjifamilydefault}{\gtdefault}
\usepackage{appendixnumberbeamer}
\usetheme{Madrid}
\usecolortheme{whale}
\setbeamertemplate{navigation symbols}{}
%\setbeamertemplate{footline}[frame number]
\setbeamertemplate{caption}[numbered]
\setbeamertemplate{bibliography item}[text]

\usepackage{graphicx}
\usepackage{algorithm,algpseudocode}
\usepackage[newfloat]{minted}

\renewcommand{\figurename}{図}
\renewcommand{\tablename}{表}
\renewcommand{\appendixname}{}
\floatname{algorithm}{アルゴリズム}
\SetupFloatingEnvironment{listing}{
  name=プログラムコード,
  listname=プログラムコードリスト
}
\renewcommand{\algorithmicrequire}{\textbf{Input:}}
\renewcommand{\algorithmicensure}{\textbf{Output:}}
%\logo{\includegraphics[width=2cm]{django-pony.png}}

\usepackage{booktabs}
\usepackage{array}
\usepackage{subcaption}

\title[Graph Golf 01]{Graph Golf}
\subtitle[Introduction]{イントロダクション}

\author{里谷 佳紀}
\institute{高橋研究室}
\date{2017年5月29日}

\begin{document}
\begin{frame}
  \maketitle
\end{frame}

\begin{frame}{概要}
  \tableofcontents
\end{frame}

\section{大会説明}
\begin{frame}{大会概要}
  \begin{itemize}
  \item 国立情報学研究所が主催するグラフ理論とプログラミングの大会
  \item 目的
    \begin{itemize}
    \item 与えられた頂点数/次数をもち制約条件を満たす，直径や平均頂点間距離が
      小さいグラフを見つける
    \item 得られたグラフや知見をもとに，将来のスーパーコンピュータやデータセンタに
      活用することが目的
    \end{itemize}
  \item 2つの部門 - 制約条件が異なる
    \begin{itemize}
    \item General Graph Category \\
      正則グラフであることを除いて，制約条件はなし
    \item Grid Graph Category \\
      頂点を格子状に配置し，格子上の距離が小さい頂点同士が隣接できる
    \end{itemize}
  \item 2つの賞
    \begin{itemize}
    \item Widest Improvement Award - よいグラフを多く構築する
    \item Deepest Improvement Award - 理論限界に近づける
    \end{itemize}
  \end{itemize}
\end{frame}

\begin{frame}{General Graph Category}
  制約条件
  \begin{enumerate}
  \item 与えられた頂点数/次数をもつ正則グラフ
  \end{enumerate}
  対象となる頂点数/次数の組は次のとおり．
  \begin{table}
    \centering
    \caption{General Graph Categoryで対象となる頂点数/次数の組}
    \begin{minipage}[t]{0.45\linewidth}
      \centering
      \begin{tabular}[t]{rr} \toprule
        頂点数 & 次数 \\ \midrule
        32 & 5 \\ \hline
        256 & 18 \\ \hline
        576 & 30 \\ \hline
        1344 & 30 \\ \hline
        4896 & 24 \\ \hline
        9344 & 10 \\ \hline
      \end{tabular}
    \end{minipage}
    \begin{minipage}[t]{0.45\linewidth}
      \centering
      \begin{tabular}[t]{rr} \toprule
        頂点数 & 次数 \\ \midrule
        88128 & 12 \\ \hline
        98304 & 10 \\ \hline
        100000 & 32 \\ \hline
        100000 & 64 \\ \bottomrule
      \end{tabular}
    \end{minipage}
  \end{table}
\end{frame}

\begin{frame}{Grid Graph Category}
  制約条件
  \begin{enumerate}
  \item 与えられた頂点数(n)/次数をもつ正則グラフ
  \item 隣接できる頂点は，頂点を$\sqrt{n}\times\sqrt{n}$の格子状
    に並べて，与えられた長さ以下の範囲にある頂点のみ
  \item 実際にネットワークを構築する際の，ケーブルの長さの制約
    \cite{nakano2016randomly}
    \begin{itemize}
    \item 長さは，マンハッタン距離($L1$ノルム)で定義する
    \end{itemize}
  \end{enumerate}
  \begin{figure}
    \centering
    \resizebox{.4\textwidth}{!}{\input{n16d3r2.pdf_tex}}
    \caption{頂点数16,次数3,長さ2を満たすグラフの例}
  \end{figure}
\end{frame}

\begin{frame}{Grid Graph Category}
  対象となる頂点数/次数/長さの組は次のとおり．
  \begin{table}
    \centering
    \caption{Grid Graph Categoryで対象となる頂点数/次数/長さ}
    \begin{minipage}[t]{0.45\linewidth}
      \centering
      \begin{tabular}[t]{rrr} \toprule
        頂点数 & 次数 & 長さ \\ \midrule
        16 & 3 & 2 \\ \hline
        256 & 3 & 3 \\ \hline
        256 & 3 & 4 \\ \hline
        256 & 3 & 15 \\ \hline
        256 & 6 & 3 \\ \hline
        256 & 6 & 4 \\ \hline
        256 & 6 & 15 \\ \hline
        256 & 15 & 3 \\ \hline
        256 & 15 & 4 \\ \hline
        256 & 15 & 15 \\ \bottomrule
      \end{tabular}
    \end{minipage}
    \begin{minipage}[t]{0.45\linewidth}
      \centering
    \begin{tabular}[t]{rrr} \toprule
      頂点数 & 次数 & 長さ \\ \midrule
      10000 & 3 & 6 \\ \hline
      10000 & 3 & 18 \\ \hline
      10000 & 3 & 33 \\ \hline
      10000 & 9 & 6 \\ \hline
      10000 & 9 & 18 \\ \hline
      10000 & 9 & 33 \\ \hline
      10000 & 28 & 6 \\ \hline
      10000 & 28 & 18 \\ \hline
      10000 & 28 & 33 \\ \bottomrule
    \end{tabular}
    \end{minipage}
  \end{table}
\end{frame}

\begin{frame}{Widest Improvement Award}
  \begin{itemize}
  \item 対象となる頂点数/次数の組で，1位のグラフを多く構築したチームが優勝
  \item 制約条件を満たすグラフ2個について，
    \begin{enumerate}
    \item 直径が小さいグラフの方が順位は上
    \item 直径が同じなら，平均頂点間距離が小さいグラフの方が順位は上
    \end{enumerate}
  \item 内部的に，順位は
    \[ score(G) = 100000 \times diam(G) + aspl(G) \]
    で定義されるグラフ$G$のスコアで決まる($diam(G)$は$G$の直径，$aspl(G)$は
    $G$の平均頂点間距離)
  \end{itemize}
\end{frame}

\begin{frame}{順位づけの例}
  \begin{table}
    \centering
    \caption{頂点数36,次数3の3つのグラフの順位づけ}
    \begin{tabular}{m{3cm}m{1cm}m{3cm}m{1cm}} \toprule
      \multicolumn{1}{c}{グラフ} &
      \multicolumn{1}{c}{直径} &
      \multicolumn{1}{c}{平均頂点間距離} &
      \multicolumn{1}{c}{順位} \\ \midrule
      \resizebox{.2\textwidth}{!}{\input{n36d3r1.pdf_tex}} &
      4 & 3.067$\ldots$ & 1 \\ \hline
      \resizebox{.2\textwidth}{!}{\input{n36d3r2.pdf_tex}} &
      5 & 3.060$\ldots$ & 2 \\ \hline
      \resizebox{.2\textwidth}{!}{\input{n36d3r3.pdf_tex}} &
      5 & 3.1 & 3 \\ \bottomrule
    \end{tabular}
  \end{table}
\end{frame}

\begin{frame}{Deepest Improvement Award}
  すべての頂点数/次数(/長さ)の組について，
  \begin{itemize}
    \item $l$を構築したグラフの平均頂点間距離
    \item $L$をその頂点数/次数をもつ正則グラフの平均頂点間距離の
      下界\cite{cerf1974lower}
  \end{itemize}
  として，
  \[ gap = \frac{l-L}{L} \]
  で定義される$gap$が最小のグラフを構築したチームが優勝
\end{frame}

\begin{frame}{スケジュール}
  \begin{itemize}
    \item 2017-03-06: 解答受け付け開始
    \item 2017-06-26: 解答公開期間開始
    \item 2017-09-24: 解答提出締切り(期限: 2017-09-24 23:59:59 UTC)
    \item 2017-10-02: 受賞者発表
    \item 2017-11-19 から 22: CANDAR'17でのワークショップ(予定)
  \end{itemize}
\end{frame}

\section{進捗状況}
\begin{frame}{進捗概要}
  \begin{enumerate}
  \item 2016年度
    \begin{itemize}
    \item 2-optアルゴリズムによる最適化
    \item 閉路長に着目した構築
    \end{itemize}
  \item 2017年度
    \begin{itemize}
    \item 正則グラフの元となる全域木の構築
    \item 閉路と直径，平均頂点間距離との関係の模索
    \end{itemize}
  \end{enumerate}
\end{frame}

\begin{frame}{2-optアルゴリズム}
  \begin{itemize}
  \item 2-switchを適応し，スコアが小さくなれば現在の解を更新する
  \item 頂点数36，次数3の条件で大会記録のグラフが構築できた
  \item 藤田らの研究\cite{fujita2015}と同じ考え方
  \end{itemize}
  \begin{figure}
    \centering
    \begin{minipage}[t]{0.3\linewidth}
      \centering
      \raisebox{-0.5\height}{
        \resizebox{\textwidth}{!}{\input{2-opt-before.pdf_tex}}}
    \end{minipage}
    \begin{minipage}{0.2\linewidth}
      \centering\raisebox{-0.5\height}{\Large$\rightarrow$}
    \end{minipage}
    \begin{minipage}[t]{0.3\linewidth}
      \centering
      \raisebox{-0.5\height}{
        \resizebox{\textwidth}{!}{\input{2-opt-after.pdf_tex}}}
    \end{minipage}
    \caption{2-switchの概念図}
  \end{figure}
\end{frame}

\begin{frame}{閉路長に着目した構築}
  \begin{itemize}
  \item グラフが短い閉路をもつ $\Rightarrow$ 直径が長くなる
    ことは(経験的に)成り立つ
  \item なので，短い閉路ができないように頂点を隣接させる
  \item 全探索がベース
  \end{itemize}
  \begin{figure}
    \centering
    \begin{minipage}[t]{\linewidth}
      \centering
      \resizebox{0.27\textwidth}{!}{\input{brute-force-0.pdf_tex}}
      \subcaption{もとの平衡木}
      \label{fig:brute-force-0}
    \end{minipage}
    \begin{minipage}[t]{.45\linewidth}
      \centering
      \resizebox{0.6\textwidth}{!}{\input{brute-force-1.pdf_tex}}
      \subcaption{図\ref{fig:brute-force-0}に3-閉路を加えたグラフ}
    \end{minipage}
    \begin{minipage}[t]{.45\linewidth}
      \centering
      \resizebox{0.6\textwidth}{!}{\input{brute-force-2.pdf_tex}}
      \subcaption{図\ref{fig:brute-force-0}に5-閉路を加えたグラフ}
    \end{minipage}
    \caption{構築の様子}
  \end{figure}
\end{frame}

\begin{frame}{全域木の構築}
  山本の方法\cite{yamamoto2016}を参考に，次の方法で構築
  \begin{enumerate}
  \item 与えられた次数をもとに，平衡木を構築
  \item 山本の構築法と同様の方法で頂点にラベルをつける
  \item ラベルを10進数とみなして，ラベルが大きい葉頂点から，
    目的の頂点数になるまで頂点を削除する
  \end{enumerate}
  頂点数36,次数3の正則グラフにおいて，構築された全域木から，
  大会記録のグラフを生成できることを確認した
  \begin{figure}
    \centering
    \resizebox{0.8\textwidth}{!}{\input{spanning-tree.pdf_tex}}
    \caption{頂点数18,次数3の全域木の作成方法}
  \end{figure}
\end{frame}

\begin{frame}{閉路と直径，平均頂点間距離との関係の模索}
  特別な閉路を定義
  \begin{block}{特別な閉路}
    閉路上のすべての頂点間距離$d(u,v)$について，閉路グラフ上での距離$d_C(u,v)$は，
    もとのグラフ上での距離$d_G(u,v)$より大きくならない
  \end{block}
  \begin{figure}
    \centering
    \resizebox{0.2\textwidth}{!}{\input{minimal-cycle.pdf_tex}}
    \caption{特別な閉路を含むグラフ}
  \end{figure}
  閉路$u\rightarrow w\rightarrow v\rightarrow y\rightarrow x$と頂点対$(u,v)$
  について
  \begin{itemize}
  \item 閉路上の$d_C(u,v)=2$
  \item グラフ上の$d_G(u,v)=1$
  \end{itemize}
  なので，この閉路はそのような閉路ではない
\end{frame}

\begin{frame}{閉路と直径，平均頂点間距離との関係の模索}
  \begin{itemize}
  \item 閉路を使って直径や平均頂点勘距離が表せるなら，"閉路長に着目した構築"を
    変形させ，効率よく(計算量自体は変わらないが)解けるのではないか？
  \item いくつかの仮説を立て，それらを検証
    \begin{enumerate}
    \item 頂点数と次数が同じならば，そのような閉路の数も同じ - 偽
    \item 頂点数と次数が同じならば，そのような閉路の長さの和も同じ - 偽
    \item 頂点数と次数が同じ，かつ，そのような閉路の長さの分布(ヒストグラム)
      も同じならば，直径と平均頂点間距離も同じ - 偽
    \end{enumerate}
  \begin{figure}
    \centering
    \resizebox{0.3\textwidth}{!}{\input{n14d3g1.pdf_tex}}
    \resizebox{0.3\textwidth}{!}{\input{n14d3g323.pdf_tex}}
    \caption{同じ閉路長ヒストグラムの異なる頂点間距離をもつグラフ}
  \end{figure}
  \end{itemize}
\end{frame}

\section{参考文献}
\begin{frame}[allowframebreaks]{参考文献}
  \bibliographystyle{jalpha}
  \bibliography{references}
\end{frame}

\appendix

\section{バックアップ}

\begin{frame}<handout:0>{頂点を接続したときの閉路の長さ}
  \begin{itemize}
  \item 頂点を接続したとき，頂点間の経路の数だけ閉路ができる
  \item すべての頂点間の最短距離を記録すると，頂点を接続したときに
    できる最小の閉路の長さが分かる
  \end{itemize}
  \begin{figure}
    \centering
    \resizebox{0.4\textwidth}{!}{\input{brute-force-3.pdf_tex}}
    \caption{辺(4,6)の追加によって閉路ができる例}
  \end{figure}
  \begin{itemize}
  \item $4\rightarrow 6$の経路は，$4\rightarrow 1\rightarrow 0\rightarrow
    2\rightarrow 6$と，$4\rightarrow 1\rightarrow 5\rightarrow 6$
    と，$4\rightarrow 5\rightarrow 6$の3本
  \item できる最小の閉路の長さは3
  \end{itemize}
\end{frame}

\begin{frame}<handout:0>[fragile]{閉路を列挙する方法}
  サイクル基底\cite{paton1969algorithm}
  (グラフ上のすべての閉路は基底の要素の和で表現できる)をもとにグラフの閉路を列挙する
  \begin{algorithm}[H]
    \caption{サイクル基底から閉路を列挙するアルゴリズム}
    \begin{algorithmic}
      \Require サイクル基底$C_{base}$
      \Ensure サイクル集合$C$
      \State{$C \gets \emptyset$}
      \ForAll{$C_{sub} \subseteq C_{base}, C_{sub}\neq\emptyset$}
      \State{$E_{C} \gets \emptyset$}
      \ForAll{$c \in C_{sub}$}
      \State{$E_{C} \gets E_{C} \cup E(c) - E_{C} \cap E(c)$}
      \EndFor
      \If{$E_{C}$が閉路グラフを構成する}
      \State{$C \gets C \cup \{E_{C}\}$}
      \EndIf
      \EndFor
    \end{algorithmic}
  \end{algorithm}
\end{frame}

\end{document}
