% chapx.tex
\ifx \allfiles \undefined
\documentclass[a4paper]{article}
%\usepackage[paperwidth=145mm,paperheight=99.5mm,text={134mm,120mm},left=6mm,top=-7mm]{geometry} % Ò³ÃæÉèÖÃ
\usepackage[left=30mm, right=30mm,top=30mm]{geometry} % Ò³ÃæÉèÖÃ
\usepackage{comment}
%\usepackage{ctex}
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{ctexcap}
\usepackage[labelfont=bf,labelsep=quad]{caption}
  \DeclareCaptionFont{kai}{\kaishu}
  \captionsetup{textfont=kai}
\usepackage{graphicx,floatrow,subfig}

\graphicspath{{./}{fig/}}

\begin{document}
\title{DirectFBÍ¼ÐÎÏµÍ³ºÍÍ¼ÐÎÇý¶¯±àÐ´}
\author{ÏòÙ© ÕÔ×Ô³É}
\date{}\maketitle
\else
\chapter{DirectFBÍ¼ÐÎÏµÍ³ºÍÍ¼ÐÎÇý¶¯±àÐ´}

\fi

\section{DirectFBÍ¼ÐÎÏµÍ³·ÖÎö£¿£¿£¨±¾ÕÂÏêÏ¸·ÖÎö£©}

\begin{verbatim}
¡¾±¾½ÚÄÚÈÝÍêÈ«À´×Ôhttp://blog.csdn.net/absurd/article/details/2596080£¬¿É²Î¿¼Õâ²¿·ÖÄÚÈÝÔÄ¶Á´úÂë¡¿

ÊÂÊµÉÏÎÒ¶ÔDirectFBµÄÀí½âÊÇ±È½Ï·ôÇ³µÄ£¬¼¸ÄêÇ°µÄÈ·»¨ÁËÒ»Ð©Ê±¼äÑÐ¾¿È¥DirectFBµÄÊµÏÖ£¬µ«Ö»ÊÇ¼¯ÖÐÔÚÒ»²¿·Ö¹¦ÄÜµÄ´úÂëÉÏ¡£ºóÀ´GUI(DirectFB/GTK)ÓÉÒ»Î»Í¬ÊÂ½ÓÊÖÁË£¬ÎÒ¾ÍÃ»ÓÐ»¨Ì«¶àÊ±¼äÔÚÉÏÃæÁË¡£¿ÉÄÜÊÇÒòÎªÇ°ÃæÐ´¹ý¼¸Æª¹ØÓÚDirectFBµÄÎÄÕÂ£¬½á¹û»¹ÕæÓÐ²»ÉÙÍøÓÑ°ÑÎÒµ±×¨¼ÒÁË¡£´ðÓ¦¹ýÒ»Î»ÍøÓÑÐ´Æª½éÉÜDirectFBÔËÐÐ»úÖÆµÄÎÄÕÂ£¬Õâ¸öÖÜÄ©»¨ÁËµãÊ±¼äÐ´ÁËÕâÆª¶ÌÎÄ£¬·ÅÔÚÕâÀï¹©ÓÐÐèÒªµÄÅóÓÑ²Î¿¼¡£ÎÄÖÐÈôÓÐ²»µ±Ö®´¦£¬Íû´ó¼Ò²»ÁßÖ¸Õý¡£

DirectFBInit Õâ¸öº¯ÊýÆäÊµ²¢Ã»ÓÐ×öÊ²Ã´ÌØÊâµÄ³õÊ¼»¯¹¤×÷£¬Ö»ÊÇ¼ÓÔØÁËÅäÖÃÎÄ¼þ¶øÒÑ¡£¼ÓÔØµÄË³ÐòÈçÏÂ£¬ÖØ¸´µÄÅäÖÃÄÚÈÝÒÔºó¼ÓÔØµÄÎªÓÅÏÈ£º

ÏµÍ³È«¾ÖÅäÖÃÎÄ¼þ£¬ÀÏ°æ±¾ÎÄ¼þÎª/etc/directfbrc£¬ÐÂ°æ±¾ÎÄ¼þÎªSYSCONFDIR"/directfbrc"
ÓÃ»§È«¾ÖÅäÖÃÎÄ¼þ£¬ÎÄ¼þÎª~/.directfbrc
(ÏµÍ³)Ó¦ÓÃ³ÌÐòÌØ¶¨µÄÅäÖÃÎÄ¼þ SYSCONFDIR"/directfbrc.Ó¦ÓÃ³ÌÐòÃû"
(ÓÃ»§)Ó¦ÓÃ³ÌÐòÌØ¶¨µÄÅäÖÃÎÄ¼þ ~/.directfbrc.Ó¦ÓÃ³ÌÐòÃû
ÃüÁîÐÐ²ÎÊý
DirectFBCreate ÕæÕýµÄ³õÊ¼»¯ÊÇÔÚÕâÀïÃæ½øÐÐµÄ£¬ÑÏ¸ñµÄËµÕâÒ²²»½Ð³õÊ¼»¯ÁË£¬ÒòÎªÕâÊÇ´´½¨DirectFB¶ÔÏó£¬¶ÔÏóµ±È»ÊÇ¿ÉÒÔ´´½¨/Ïú»Ù¶à´Î£¬¶ø³õÊ¼»¯Í¨³£Ö»ÄÜ×öÒ»´ÎÁË¡£¿¼ÂÇµ½ÔÚÒ»¸ö½ø³ÌÖÐDirectFBCreateÍ¨³£Ö»»áµ÷Ò»´Î£¬½ø³ÌÍË³öÊ±²ÅÏú»Ù£¬ËùÒÔÎÒÃÇ»¹ÊÇ°ÑËü¿´×÷³õÊ¼»¯¡£ÏÖÔÚÎÒÃÇÀ´¿´¿´DirectFBCreate×öÁËÊ²Ã´: direct_initialize¡¡directÊÇÒ»¸ö»ù´¡¿â£¬Õâ¸öº¯ÊýÖ÷Òª×öÁËÁ½¼þÊÂÇé£º
³õÊ¼»¯log¡£ directÊµÏÖÁËÈýÖÖLOG·½·¨£¬µÚÒ»ÖÖÊÇÊä³öµ½stderrÉÏ£¬µÚ¶þÖÖÊÇÊä³öµ½Ö¸¶¨µÄÎÄ¼þÀï£¬µÚÈýÖÖÊÇÍ¨¹ýUDPÊä³öµ½ÍøÂçÉÏ¡£ÕâÖÖ·½·¨¶ÔÇ¶ÈëÊ½»·¾³ÊÇÌØ±ðÓÐÓÃµÄ£¬ÒòÎªºÜ¶àÊ±ºòÃ»ÓÐ»ú»á¿´ÖÕ¶ËÉÏµÄÐÅÏ¢¡£
°²×°ÐÅºÅ´¦Àíº¯Êý¡£Ö÷ÒªÊÇÕë¶ÔÏñSIGTERMÕâÀà»áµ¼ÖÂ³ÌÐòÍË³öµÄSIGNAL£¬DirectFBÏ£ÍûÔÚ³ÌÐòÍË³öÖ®Ç°×öÐ©ÉÆºó´¦Àí¡£ÖµµÃÑ§Ï°µÄÊÇdirectÊÇÒ»¸ö»ù´¡¿â£¬Ëü²»ÄÜÖ±½Óµ÷ÓÃÉÏ²ã×é¼þµÄº¯Êý£¬ËùÒÔÌá¹©ÁËdirect_signal_handler_addÖ®ÀàµÄº¯ÊýÈÃÉÏ²ã×é¼þ×¢²á/×¢Ïú»Øµ÷º¯Êý£¬±ÜÃâÁËÏÂ²ãº¯ÊýÓëÉÏ²ãº¯ÊýµÄñîºÏ¡£
dfb_core_create ºËÐÄ×é¼þ³õÊ¼»¯¡£ºËÐÄ×é¼þ¶¼ÊÇÒÔ¹²Ïí¿âÐÎÊ½´æÔÚµÄ£¬ÕâÀïÖ÷ÒªÊÇ¼ÓÔØÕâÐ©¹²Ïí¿â£¬²¢µ÷ÓÃÏàÓ¦µÄ³õÊ¼»¯º¯Êý¡£ÎªÁË±ÜÃâ¿ò¼ÜÓë×é¼þÖ®¼äµÄñîºÏ£¬DirectFBÊÇÍ¨¹ý±éÀúÄ¿Â¼È¥¼ÓÔØµÄ£¬É¾³ý²»±ØÒª²å¼þ¿ÉÒÔÌá¸ß¼ÓÔØËÙ¶È¡£
dfb_system_lookup ÆäÊµsystemÔÚÕâÀï²¢Ã»ÓÐ±íÊ¾³öËüÕæÕýµÄÒâÒå£¬ÕâÀïµÄsystemÊµ¼ÊÉÏÊÇÖ¸ÏÔÊ¾·½Ê½£¬±ÈÈç»ùÓÚframebufferµÄfbdevºÍ»ùÓÚXWindowµÄx11µÈµÈ¡£ËüÏÈµ÷ÓÃdirect_modules_explore_directoryÔÚÕÒ³öÄ¿Â¼ÖÐËùÓÐµÄsystemÊµÏÖ£¬È»ºóÓëÅäÖÃÖÐÖ¸¶¨µÄÃû³ÆÆ¥Åä£¬ÕÒµ½Ö¸¶¨µÄsystemºóµ÷ÓÃGetSystemInfoµÃµ½Ò»Ð©systemÐÅÏ¢¡£
direct_find_best_memcpy ÒòÎªGUIÀïÃæmemcpyµÄÐ§ÂÊ¶ÔÏµÍ³ÕûÌåµÄÐ§ÂÊÓ°ÏìºÜ´ó£¬ËùÒÔDirectFBÕë¶Ô²»Í¬µÄÏµÍ³ÊµÏÖÁËÒ»Ð©ÓÅ»¯¹ýµÄmemcpyº¯Êý¡£
fusion_enter ³õÊ¼»¯fusion£¬fusionÊÇÓÃÓÚ½ø³Ì¼äÍ¨ÐÅµÄ»úÖÆ£¬/dev/fusion/nÊÇÓÃÓÚ½ø³Ì¼äÏûÏ¢´«µÝµÄÎÄ¼þ,Ã¿¸ö½ø³Ì¶¼ÓÐÕâÑùÒ»¸öÎÄ¼þ¡£ÔÚ±¾º¯ÊýÖÐ»á´ò¿ªÕâ¸öÎÄ¼þ£¬²¢ÓÃioctrl·¢ËÍFUSION_ENTERÃüÁî¡£ËæºóÓ³Éä/³õÊ¼¹²ÏíÄÚ´æ¡£×îºó´´½¨ÏûÏ¢·Ö·¢Ïß³Ì£¬ÆäÏß³ÌÈë¿Úº¯ÊýÎªfusion_dispatch_loop¡£
fusion_arena_enter ÎÒÃ»ÓÐÖ±½ÓÓÃ¹ýarena£¬ËüµÄÖ÷Òª¹¦ÄÜËÆºõÖ»ÊÇ¶Ô¹²ÏíÊý¾ÝµÄ¹ÜÀí£¬Í¨¹ýÒ»¸öÃû³ÆÓëÒ»¿éÊý¾Ý¹ØÁªÆðÀ´£¬·Åµ½hash±íÖÐ£¬Ã¿¸ö½ø³Ì¶¼¿ÉÒÔÍ¨¹ýÃû×ÖÈ¡ÏàÓ¦µÄÊý¾Ý¡£
IDirectFB_Construct¹¹ÔìÒ»¸öIDirectFB¶ÔÏó¡£
Í¨¹ýdfb_layer_at_translated»ñÈ¡primary layer.
Í¨¹ýdfb_layer_get_primary_context»ñÈ¡primary layer, CoreLayerContextÀïÃæ×îÖØÒªµÄ¶«Î÷¿ÉÄÜ¾ÍÊÇCoreWindowStack£¬CoreWindowStack¹ÜÀí×ÅËùÓÐ´°¿Ú£¬¶ÔÓ¦ÓÃ³ÌÐò²úÉúÖ±½ÓµÄÓ°Ïì¡£
Í¨¹ýdfb_layer_context_windowstack»ñÈ¡´°¿ÚÕ»¡£
³õÊ¼»¯IDirectFB½Ó¿ÚµÄÐéº¯Êý£¬ÈÃº¯ÊýÖ¸ÕëÖ¸µ½¾ßÌåµÄº¯ÊýÉÏ¡£Ëæ±ãËµÒ»¾ä£¬×î½ü»¹ÓÐÒ»Ð©Ã°³ä×¨¼ÒµÄÍâÐÐËµCÓïÑÔÖ»ÄÜ°´ÃæÏò¹ý³ÌµÄ·½·¨¿ª·¢Èí¼þ£¬ÉõÖÁËµCÓïÑÔÖ»ÊÊºÏ¿ª·¢Ð¡ÏîÄ¿£¬ÕæÊÇÎÞÓïÁË¡£½¨ÒéËûÃÇ¿´¿´DirectFBµÄ´úÂë£¬updateÒ»ÏÂËûÃÇ³Â¾ÉµÄ¹ÛÄî¡£
Èç¹ûÊÇmaster½ø³Ì£¬»¹Òªµ÷ÓÃInitLayers, ËüµÄÖ÷Òª¹¦ÄÜÊÇ¸ù¾ÝÅäÖÃ³õÊ¼»¯layer£¬°üÀ¨ÏÔÊ¾ÇøÓò´óÐ¡ £¬µ÷É«°å£¬Í¸Ã÷É«£¬´°¿ÚÕ»µÄÏÔÊ¾ÇøÓòºÍ»æÖÆ±³¾°(±³¾°Í¼Æ¬»òÕßÑÕÉ«Ìî³ä£©µÈµÈ¡£
dfb_wm_post_initÈç¹ûÊÇmaster½ø³Ì£¬»¹ÒªÖ´ÐÐ´°¿ÚÕ»µÄPostInit£¬ÎÒ¿´ÁË¼¸¸ö´°¿Ú¹ÜÀíÆ÷µÄÊµÏÖ£¬Õâ¸öº¯Êý¶¼ÊÇ¿ÕµÄ¡£ dfb_core_activate³õÊ¼»¯Íê³Éºó¼¤»îdfb_core¡£ÕâÒ²ÊÇºÜÖØÒªµÄ£¬¿ÉÒÔ±ÜÃâ³õÊ¼»¯Íê³ÉÖ®Ç°dfb_core±»ÆäËüÏß³ÌÊ¹ÓÃ¡£ IDirectFB_CreateInputEventBufferÕâ¸öº¯Êý´´½¨Ò»¸öEventBuffer£¬Í¨¹ýEventBuffer¿ÉÒÔ»ñÈ¡ÊäÈëÊÂ¼þ£¬²»¹ýÍ¨³£Ó¦¸ÃÍ¨¹ýWindowÈ¥´´½¨EventBuffer£¬ÄÇÑù¿ÉÒÔÊÕµ½¸ü¸ß²ãµÄÊÂ¼þ¡£InputEventBufferÊµ¼ÊÉÏÖ÷ÒªÊÇ¶ÔInputDeviceµÄ°ü×°£¬²»ÒªÐ¡¿´Õâ¸ö°ü×°£¬°ü×°ºóÓÐÈý¸öÖØÒª±ä»¯£º
Event±»»º³å,²»ÓÃµ£ÐÄÊÂ¼þ¶ªÊ§»òÕß×èÈûÇý¶¯³ÌÐò¡£°ü×°Ç°µÄInputDeviceÊÂ¼þÊÇÀ´Ò»¸ö´¦ÀíÒ»¸ö£¬°ü×°ºóÔòÊÇÏÈ·Åµ½»º³åÖÐ£¬È»ºóÒ»¸öÒ»¸öµÄ´¦Àí¡£
ÓÉ±»¶¯±äÎªÖ÷¶¯£¬¸ü·ûºÏGUIµÄÊÂ¼þ´¦ÀíµÄ¹ßÀý¡£°ü×°Ç°ÊÇÉÏ²ãÉèÖÃ»Øµ÷º¯Êý£¬ÔÚÊÂ¼þµ½À´Ê±»Øµ÷º¯Êý±»ÏÂ²ãµ÷ÓÃ£¬°ü×°ºóÊÇÉÏ²ãÖ÷¶¯µ÷ÓÃGetEvevnt »ñÈ¡ÊÂ¼þ¡£
ÓÉ¶àÏß³Ì±äÎªµ¥Ïß³Ì£¬¼ò»¯ÁË´¦Àí¡£°ü×°Ç°ÊÇÓÉÊäÈëÏß³Ì»Øµ÷ÉÏ²ãÉèÖÃµÄ»Øµ÷º¯Êý£¬Ã¿¸öÊäÈëÉè±¸¶¼ÊÇÒ»¸ö¶ÀÁ¢µÄÏß³Ì£¬ËùÒÔ»Øµ÷º¯ÊýÒª¿¼ÂÇ¶àÏß³Ì²¢·¢Ö´ÐÐµÄÎÊÌâ£¬°ü×°ºó¶àÏß³ÌÎÊÌâÓÉEventBuffer´¦ÀíµôÁË£¬ÉÏ²ãÍ¨¹ýGetEvent»ñÈ¡ÊÂ¼þ²¢´¦Àí£¬´¦Àíº¯ÊýÊ¼ÖÕÊÇÔÚÖ÷Ïß³ÌÖÐÖ´ÐÐµÄ£¬ËùÒÔ²»ÓÃ¿¼ÂÇÓëÊäÈëÏß³ÌµÄ²¢·¢ÎÊÌâÁË¡£
IDirectFB_SetCooperativeLevelÉèÖÃÖ¸¶¨µÄIDirectFB¶ÔÏóÓëÆäËüIDirectFB¶ÔÏóµÄÐ­×÷¼¶±ð£¬DFSCL_FULLSCREENºÍDFSCL_EXCLUSIVEµÄ´¦Àí·½Ê½ÊÇÒ»ÑùµÄ£¬ÓëDFSCL_NORMALµÄ²î±ðÊÇËüÃÇÓÐ×Ô¼º¶ÀÁ¢µÄContext£¬Ò²¾ÍÊÇËµÉèÖÃÎªDFSCL_FULLSCREENµÄDirectFB¶ÔÏó×Ô³ÉÒ»¸öÌåÏµ£¬²»»áÓëÆäËüDirectFB¶ÔÏó¸ÉÈÅ¡£ÔÚ¶à½ø³ÌÇé¿öÏÂ£¬Ò»°ãÊÇÉèÖÃÎªDFSCL_NORMALµÄ£¬Ëü±£Ö¤ËùÓÐ´°¿ÚÓÉÍ¬Ò»¸ö´°¿ÚÆ÷¹ÜÀí¡£(ÌâÍâ»°£¬Õâ¸öº¯ÊýÀïµ÷ÓÃÁËdrop_windowº¯Êý£¬drop_windowµÄÊµÏÖÊÇÓÐµãÎÊÌâµÄ£¬ËüÊ¼ÖÕµ÷ÓÃdfb_windowstack_cursor_enableÈ¥´ò¿ª¹â±ê£¬ÕâÊÇ²»¶ÔµÄ£¬Ó¦¸Ã¸ù¾Ý¾ÝÇé¿ö¶ø¶¨£¬ÔÚIDirectFB_DestructÀïµ÷ÓÃÊ±¾Í²»Ó¦¸Ã´ò¿ª¹â±ê£¬ÒòÎªÕâ¿ÉÄÜ»áÔì³É³ÌÐò²»Õý³£ÍË³ö¡£)

ÊäÈëÉè±¸ÊÂ¼þËùÓÐGUIÏµÍ³¶¼ÊÇ»ùÓÚÊÂ¼þÇý¶¯Ä£ÐÍµÄ£¬¸ãÇå³þDirectFBÊÂ¼þ´¦Àí¹ý³Ì¶ÔÀí½âDirectFBÊÇºÜÓÐ°ïÖúµÄ¡£ÕâÀï½éÉÜÒ»ÏÂDirectFBµÄÊäÈëÊÂ¼þ´¦Àí¡£

ÊäÈëÉè±¸Çý¶¯³ÌÐò ÊäÈëÉè±¸Çý¶¯³ÌÐòµÄ´úÂëÊÇ·ÅÔÚinputdriversÄ¿Â¼ÖÐµÄ£¬±àÒëÖ®ºó°²×°µ½$(PREFIX)/lib/directfb-1.1-0/inputdriversÖÐ¡£ÔËÐÐÊ±Ã¿¸öÇý¶¯³ÌÐò¶¼»á´´½¨Ò»¸öÏß³Ì£¬ËüÃÇÍ¨³£¶¼ÊÇ¹ÒÔÚÉè±¸ÎÄ¼þÉÏ£¬µ±ÓÐÊäÈëÊÂ¼þÊ±¾Í»á±»»½ÐÑ¡£»½ÐÑºóÏÈ¶ÁÈ¡ÊäÈëÊÂ¼þ£¬È»ºóµ÷ÓÃdfb_input_dispatch°ÑÊÂ¼þ·Ö·¢¸øÉÏ²ã×é¼þ¡£
Òª×¢ÒâµÄÊÇ£¬ÊäÈëÉè±¸Ïß³ÌÊÇÔÚdriver_open_deviceÀï´´½¨µÄ£¬¶ødriver_open_deviceÊÇÔÚdfb_core_createº¯ÊýÀïµ÷ÓÃµÄ£¬Ò²¾ÍÊÇËµÏß³ÌÆðÀ´µÄÊ±ºòdfb_core¿ÉÄÜ»¹Ã»ÓÐÍê³É³õÊ¼»¯£¬Èç¹ûÔÚÕâ¸öÊ±ºòÓÐÊäÈëÊÂ¼þÉÏÀ´£¬¿ÉÒÔ»áÔì³É³ÌÐòËÀµô¡£ÎªÁË±ÜÃâÕâ¸öÎÊÌâ£¬Ó¦¸ÃÔÚdfb_input_dispatchÀï¼ì²éÒ»ÏÂdfb_core³õÊ¼»¯ÊÇ·ñÍê±Ï¡£

dfb_input_dispatchÏÈµ÷ÓÃfixup_xxxº¯Êý¶ÔÊäÈëÊÂ¼þ×öÐ©×ª»»ºÍÓ³Éä£¬ÔÙµ÷ÓÃcore_input_filter¶ÔÒ»Ð©ÌØÊâ¼ü´¦Àí£¬±ÈÈçÆÁÄ»½ØÍ¼µÈ£¬ÔÙµ÷ÓÃfusion_reactor_dispatch·Ö·¢ÊÂ¼þ¡£·Ö·¢Ê±ÏÈÍ¨¹ýº¯Êý_dfb_windowstack_inputdevice_listener°ÑÊÂ¼þ·Ö·¢¸ø´°¿Ú¹ÜÀí£¬È»ºóÔÙ·Ö·¢¸øÆäËüÈ«¾Ö»Øµ÷º¯Êý£¬×îºóÍ¨¹ýreactor°Ñ·Ö·¢¸øÓÃ»§×¢²áµÄ»Øµ÷º¯Êý¡£
_dfb_windowstack_inputdevice_listenerÍ¨¹ýdfb_wm_process_inputµ÷´°¿Ú¹ÜÀíÆ÷µÄwm_process_inputº¯Êý¡£default´°¿Ú¹ÜÀíÆ÷ÊÇÔÚÕâ¸öº¯ÊýÀï¶ÔÊäÈëÊÂ¼þ´¦ÀíµÄ£¬ËüµÄÊµÏÖ±È½Ï¼òµ¥£¬ÎÒÃÇÕâÀï²»ÌÖÂÛÁË¡£unique´°¿Ú¹ÜÀíÀïÈ´²»ÊÇÒÔÕâÖÖ·½Ê½ÊµÏÖµÄ£¬Ëüµ÷ÓÃdfb_input_add_global°Ñ_unique_device_listener×¢²áÎªÈ«¾ÖµÄÊäÈëÊÂ¼þµÄ»Øµ÷º¯Êý¡£ÆäÊµuniqueÒ²ÍêÈ«¿ÉÒÔÓÃdfb_wm_process_inputÀ´ÊµÏÖµÄ£¬¿ÉÄÜÊÇÊµÏÖÕßµÄÏë·¨²»Ò»Ñù¶øÒÑ¡£
_unique_device_listenerÔò°´ÊäÈëÉè±¸Àà±ð°ÑÊÂ¼þ·Ö·¢¸øÏàÓ¦µÄ´¦Àíº¯Êý£¬ÕâÐ©º¯ÊýÊÇÔÚdevicesÖÐÊµÏÖµÄ¡£ÎÒÃÇbronchoÆ½Ì¨µÄÊÖÐ´¾ÍÊÇÔÚpointer.cÖÐÀ¹½Ø±ÊµãÊÂ¼þµÄ£¬ÏÖÔÚÏëÀ´£¬ÊÖÐ´ÍêÈ«¿ÉÒÔ¶ÀÁ¢³öÀ´µÄ¡£ÕâÐ©º¯Êý°ÑDFBInputEventÊÂ¼þ×ª»»ÎªUniqueInputEventÊÂ¼þ£¬ÔÙµ÷ÓÃunique_device_dispatch·Ö·¢ÊÂ¼þ¡£
unique_device_dispatchÕâÀïÏûÏ¢·ÖÎªÁ½Â·£¬Ò»Â·¾­_unique_cursor_device_listenerÈ¥¸üÐÂµ±Ç°¹â±êµÄÎ»ÖÃ£¬Ò»Â·¾­_unique_input_switch_device_listener°ÑÏûÏ¢Í¶µÝµ½½¹µã´°¿Ú¡£
_unique_input_switch_device_listenerÏûÏ¢¾­unique_input_channel_dispatchµ½_unique_window_input_channel_listenerµ½dfb_window_post_eventµ½IDirectFBEventBuffer_WindowReactµ½IDirectFBEventBuffer_AddItem£¬×îºó·ÅÈëEventBufferÖÐ¡£µ±È»Èç¹ûÊÇ¶à½ø³ÌµÄÇé¿ö£¬Òª¾­¹ýÄÚºËÄ£¿éfusion²ÅÄÜµ½´ï½¹µã´°¿ÚµÄEventBuffer¡£
IDirectFBEventBuffer_GetEventÇ°ÃæµÄº¯Êý¶¼ÊÇ¶¼±»¶¯µ÷ÓÃ£¬ÓÉÊäÈëÏß³Ì»òÕßfusionÊÂ¼þÏß³Ìµ÷¹ýÀ´µÄ¡£GetEventÔòÊÇÉÏ²ãÖ÷¶¯µ÷ÓÃµÄ£¬Ëü´ÓEventBufferµÄÏûÏ¢¶ÓÁÐÖÐ»ñÈ¡ÊÂ¼þ£¬µ÷ÓÃÖ®Ç°×îºÃÏÈµ÷ÓÃWaitForEvent»òÕßWaitForEventWithTimeoutµÈ´ýÊÂ¼þ·¢Éú¡£
IDirectFBEventBuffer_CreateFileDescriptorÊäÈëÊÂ¼þ²¢²»ÊÇÎ¨Ò»µÄÊÂ¼þ£¬¿ÉÄÜ»¹ÓÐ¶¨Ê±Æ÷£¬¹ÜµÀºÍÍøÂçÊÂ¼þµÈ£¬WaitForEvent/WaitForEventWithTimeout»áÈÃÖ÷Ïß³Ì×èÈû£¬°´UnixÏÂÍ¨ÓÃµÄ×ö·¨ÊÇÓÃselect/poll¹ÒÔÚ¶àÊÂ¼þÔ´ÉÏ£¬Ö»ÒªÓÐÊÂ¼þ·¢Éúselect/poll¾Í»á»½ÐÑ£¬ÕâÑùµ¥Ïß³Ì¾Í¿ÉÒÔ´¦Àí¶àÊÂ¼þÔ´£¬CreateFileDescriptor´´½¨Ò»¸öÎÄ¼þÃèÊö·û£¬¿ÉÒÔÓÃselect/pollÀ´µÈ´ýÊÂ¼þ¡£
ÏÔÊ¾Êä³öDirectFB¿ÉÒÔÊä³öµ½²»Í¬µÄÄ¿±êÉÏÃæ£¬Õâ¸ö¿ÉÒÔÍ¨¹ýÅäÖÃÖÐµÄsystemÖ¸¶¨¡£

Surface SurfaceÊÇÒ»¸ö¸ÅÄî¼òµ¥¶øÊµÏÖ¸´ÔÓµÄ¶«Î÷£¬ËüÔÚ¹¦ÄÜÉÏºÍWindowsÖÐµÄDeviceContextÀàËÆ£¬Ìá¹©»ù±¾»æÍ¼¹¦ÄÜ¡£Ã¿¸ö´°¿Ú¶¼ºÍÒ»¸öSurface¹ØÁª£¬´°¿ÚÉÏµÄ¿Ø¼þÓëÒ»¸öSubSurface¹ØÁª¡£»æÖÆ½áÊøºóµ÷ÓÃFlip¸üÐÂµ½ÎïÀíÆÁÄ»ÉÏ¡£SurfaceÒ»°ãÊÇË«»º³å£¬ÕâÖ÷ÒªÊÇ±ÜÃâÉÁË¸£¬FlipÊ±²¢²»×ÜÊÇBACKºÍFRONT½»»»¡£Èç¹ûÖ»ÊÇ¸üÐÂÒ»¸öÇøÓòÔòÊÇÖ±½Ó´ÓBACKÏòFRONT¿½±´Õâ¸öÇøÓòµÄÄÚÈÝ¡£
IDirectFBSurface_Window_FlipÊµ¼ÊÉÏ£¬ÆÕÍ¨SurfaceÊÇ²»Ëæ±ãFlipµÄ£¬ÒòÎªËüÃ»ÓÐ²ã´Î¹ØÏµ£¬Ö±½ÓË¢ÐÂµ½ÆÁÄ»ÉÏ£¬Õû¸öÏÔÊ¾¾Í»áÂÒÁË£¬ËùÒÔÖ»ÓÐDSCAPS_FLIPPINGÄÜÁ¦µÄÌØÊâSurface²ÅÔÊÐíFlip¡£Óë´°¿Ú¹ØÁªµÄSurfaceÖØÔØÁËFlipº¯Êý£¬ÓÃIDirectFBSurface_Window_Flip´úÌæÁËIDirectFBSurface_Flip£¬ÕâÑùSurface FlipµÄÊ±ºò£¬Ëü»áµ÷ÓÃdfb_window_repaint¸üÐÂÕû¸ö´°¿ÚÕ»ÖÐµÄ´°¿Ú¡£
wm_update_windowÕâÊÇ´°¿ÚÕ»ÖÐµÄupdateº¯Êý£¬ÓÉdfb_window_repaintµ÷ÓÃ¹ýÀ´¡£Ëü»á¸ù¾Ý´°¿ÚÕ»ÖÐ´°¿ÚµÄ²ã´ÎºÍÎ»ÖÃ¹ØÏµ£¬¾ö¶¨ÄÄÐ©´°¿ÚµÄÇøÓòÒª¸üÐÂ£¬Õâ²¿·Ö´úÂëÏà¶ÔÀ´ËµÊÇÓÐµã¸´ÔÓµÄ¡£
dfb_layer_region_flip_updateÕâÊÇÕæÕýFlipÁË£¬Ëü»áµ÷ÓÃprimaryUpdateRegionÈ¥Flip¡£
Ë­ÄÜ¸üÐÂÎïÀíÆÁÄ»?¶ÔÓÚfbdev£¬masterºÍslave¶¼¿ÉÒÔ¸üÐÂ¡£¶ÔÓÚx11Ö»ÓÐmaster¿ÉÒÔ¸üÐÂ£¬slaveÍ¨¹ýfusion_call_executeÇëÇómaster¸üÐÂ¡£
\end{verbatim}


\section{Çý¶¯×ÜÌå½á¹¹}

\begin{figure}
  \centering
  % Requires \usepackage{graphicx}
  \includegraphics[scale=1.0]{directfbdriverarch}\\
  \caption{R600/R500 DirectFBÇý¶¯½á¹¹}\label{directfbdriverarch}
\end{figure}

Èç¹ûÃ»ÓÐÓ²¼þ¼ÓËÙ£¬directfb»áÊ¹ÓÃÈí¼þ²Ù×÷£¬directfbµÄ¼ÓËÙ²Ù×÷Ö÷Òª°üÀ¨»æÖÆÏß¶Î£¬Ìî³ä¾ØÐÎ£¬blit²Ù×÷£¬ÔÚradeonÏÔ¿¨ÉÏÈç¹û3D¹¦ÄÜÕý³£ÔËÐÐµÄ»­£¬»¹»áÓÐ»æÖÆÈý½ÇÐÎµÄ²Ù×÷¡£

ÕâÀïÏÈ¸ø³öÇý¶¯µÄÕûÌå½á¹¹Í¼£¬¼ûÍ¼\ref{directfbdriverarch}¡£

¹ØÓÚdirectfbÇý¶¯£¬ÎÒÃÇ¹ØÐÄÁ½²¿·ÖÄÚÈÝ£¬Ò»²¿·ÖÊÇsystem£¬Ò»²¿·ÖÊÇgfxdriver¡£

DirectFBµÄ¼ò³ÆÎª"Direct Framebuffer"£¬×î³õÒÀÀµframebufferÉè±¸Ìá¹©ÏÔÊ¾£¬ÕâÀï³ÆframebufferÎªÏÔÊ¾ºó¶Ë¡£

DirectFB¿ÉÒÔÊ¹ÓÃ¶àÖÖºó¶ËÏÔÊ¾Í¼ÐÎÊä³ö½á¹û£¬ÔÚÔ´ÂësystemÄ¿Â¼ÏÂÃæÓÐ¶à¸öºó¶Ë£º
\begin{description}
  \item[devmem] devmemºó¶Ë£¬ÏµÍ³Ö±½Ó²Ù×÷/dev/mem½Úµã²Ù×÷ÏÔ´æ
  \item[fbdev] Ê¹ÓÃframebufferºó¶Ë
  \item[osx] Ê¹ÓÃosx²Ù×÷ÏµÍ³×÷ÎªÍ¼ÐÎºó¶Ë
  \item[sdl] Ê¹ÓÃsdl×÷ÎªÍ¼ÐÎºó¶Ë
  \item[vnc] Ê¹ÓÃvnc×÷ÎªÍ¼ÐÎºó¶Ë
  \item[x11] Ê¹ÓÃXÍ¼ÐÎÏµÍ³×÷Îªºó¶Ë
\end{description}

¸ù¾ÝÎÒÃÇÏµÍ³»·¾³µÄÐèÒªºÍÆ½Ì¨µÄÌØµã£¬ÎÒÃÇÑ¡ÔñfbdevÏµÍ³¡£LinuxÄÚºËÖÐµÄdrmÇý¶¯Ìá¹©ÁËframebuffer£¬µ«ÊÇÕâÀïµÄframebuffer»ù±¾ÉÏÊÇdrmÇý¶¯µÄÒ»¸ö¸½¼Ó²úÆ·£¨ÔÚ¡°drm µÄframebufferÇý¶¯¡±ÖÐÎÒÃÇÌÖÂÛÁËÏà¹ØÎÊÌâ£©£¬¶øÇÒÄÚºËÖ»¸øÁËÕâÀïµÄframebufferÇý¶¯½ö¹©ÏÔÊ¾µÄÒ»Æ¬ÄÚ´æ£¬¶øÇÒÏÔ¿¨µÄÏÔ´æÍêÈ«ÊÇÓÉÄÚºËdrmÇý¶¯¹ÜÀíµÄ£¬µ«ÊÇdirectfb µÄradeonÏÔ¿¨Çý¶¯ÊÇ²»Ê¹ÓÃdrmµÄÄÇÒ»Ì×ÏÔ´æ¹ÜÀí·½Ê½µÄ£¨²Â²âÊÇÓÐdirectfbµÄÊ±ºòdrm »¹Ã»ÓÐ³öÏÖ£©¡£

Èç¹ûÊ¹ÓÃdrmµÄframebuffer»áÅöµ½Ò»Ð©ÎÊÌâ£º
\noindent 1£©directfbÇý¶¯»áÈÏÎªfbdevÓ³Éä³öÀ´µÄÄÚ´æ¾ÍÊÇ¿ÉÒÔÊ¹ÓÃµÄÈ«²¿ÏÔ´æ£¬¶øÇÒÔÚ¼ÈÓÐµÄdirectfbr100~r300Çý¶¯ÖÐ£¬ÊÇÃ»ÓÐÊ¹ÓÃµÚ¶þÕÂÎÒÃÇËµµÄGTTÄÚ´æµÄ£¬¶øÇÒÃ»ÓÐÆôÓÃÒ³±í»ùÖ·£¬×öËùÓÐ¼ÓËÙµÄÊ±ºòÖ»ÄÜÊ¹ÓÃvramÄÚ´æ£¬ÔÚÕâÖÖÇé¿öÏÂ£¬ÎÒÃÇ¿¼ÂÇÕâÑùÒ»¸öÇéÐÎ£º½øÐÐÓ²¼þ¼ÓËÙµÄblit²Ù×÷£¬ÎÒÃÇÓÐÒ»¸öÍ¼ÐÎÒª½øÐÐ¶à´Î¿½±´²Ù×÷£¬ÒªÒÆ¶¯µÄÔ´Êý¾Ý±ØÐë´æÔÚÓÚvram£¬ÏÔÊ¾ÇøÓòÊÇ×îÖÕºÏ³ÉµÄ£¬Ô´Êý¾ÝÐèÒª´æ´¢ÔÚ·ÇÏÔÊ¾µÄÇøÓòÖÐ£¬È»¶øµ¥´¿Ê¹ÓÃdrmµÄframebufferµÃµ½µÄvramÖ»ÓÐÏÔÊ¾²¿·ÖµÄÄÚ´æ£¬ÕâÑùÓ²¼þ¼ÓËÙ¾ÍÃ»°ì·¨×öÁË¡£[ºÃÏñËµµÄ²»ÊÇºÜÇå³þ£¿£¿]

\noindent 2£©ÁíÍâÒ»¸öÎÊÌâÊÇÎÒÃÇ×¢Òâµ½µØÖ·µÄÎÊÌâ£¬ÔÚµÚ2ÕÂÄÚ´æ¹ÜÀíÕÂ½Ú½×¶ÎÎÒÃÇÌáµ½¹ýVM\_FB\_LOCATION¼Ä´æÆ÷£¬Õâ¸ö¼Ä´æÆ÷¼ÇÂ¼ÁËvramÔÚGPUÐéÄâµØÖ·¿Õ¼äµÄÆðÊ¼µØÖ·£¨Í¨³£ÆðÊ¼µØÖ·ÅäÖÃÎª0x0£©ºÍ³¤¶È£¬ÔÚ¼ÈÓÐdirectfbµÄr100~r300Çý¶¯ÖÐ£¬¸ù¾ÝÕâ¸ö¼Ä´æÆ÷¶Á³öÀ´µÄµØÖ·×÷ÎªºóÐø½øÐÐÓ²¼þ¼ÓËÙÊ±Ê¹ÓÃvramµÄ»ùµØÖ·£¬¶øÇÒÈÏÎªÕâ¸öµØÖ·¿ªÊ¼´¦¾ÍÊÇÓÃÓÚÏÔÊ¾µÄÄÚ´æµÄµØÖ·£¬µ«ÊÇÔÚÄÚºËdrmÇý¶¯ÖÐ£¬vramµÄÇ°ÃæÒ»²¿·ÖÊÇÓÃÓÚÒ³±íÖ®ÀàµÄÓÃÓÚframebufferµÄÄÚ´æÊÇ´ÓµØÖ·0xc0000£¨R580ÏÔ¿¨ GPUµØÖ·£©¿ªÊ¼µÄ£¬µ«ÊÇdirectfb ÔÚ½øÐÐÓ²¼þ²Ù×÷µÄÊ±ºò¶Á³öÀ´µÄµØÖ·ÊÇ0x0£¬ÕâÑùGPU½øÐÐÓ²¼þ²Ù×÷µÄµØÖ·ºÍÓÃÓÚÏÔÊ¾µÄµØÖ·ÊÇ²»Í¬µÄ¡£GPUÈÏÎªÏÔÊ¾µÄµØÖ·ÊÇ0x0£¬¶øÊµ¼Êframebuffer´¦ÔÚ0xc0000 ´¦¡£

ÔÚÊ¹ÓÃdrmµÄframebufferµÄÇé¿öÏÂ£¬¿ÉÒÔÊ¹ÓÃÈçÏÂµÄ·½·¨½â¾öÉÏÃæÁ½¸öÎÊÌâ£º

µÚÒ»¸öÎÊÌâÒª½â¾öÏÔ´æ²»¹»µÄÎÊÌâ£¬ÔÚÄÚºËÖÐ£¬visiable vramÊÇÍ¨¹ý·ÃÎÊpciÅäÖÃ¿Õ¼ä»ñÈ¡µ½µÄ£¬ÔÚºËÍâ£¬¿ÉÒÔÊ¹ÓÃlibpciaccessÀ´¶ÁÈ¡pciÅäÖÃ¿Õ¼ä»ñÈ¡µ½È«²¿µÄvramºÍIO£¨Ä¬ÈÏÇé¿öÏÂfbdevÈÏÎªÍ¨¹ýmmapÒ³¿ÉÒÔÓ³ÉäIO£¬µ«ÊÇdrmµÄframebufferÊÇ²»Ìá¹©IOµÄÓ³ÉäµÄ£©¡£ÕâÑùÐèÒªÐÞ¸Äsystem/fbdev µÄ´úÂë¡£

µÚ¶þ¸öÎÊÌâ£¬¿ÉÒÔÍ¨¹ýÔÚdirectfbµÄradeonÖÐÖ±½ÓÐÞ¸ÄcrtcµÄ»ùÖ·¼Ä´æÆ÷£¬½«ÆäÄÚÈÝÐÞ¸ÄÎª0x0£¬ÕâÑùÊµ¼ÊµÄÏÔÊ¾ÇøÓòºÍ¼ÓËÙ²Ù×÷ÈÏÎªµÄÏÔÊ¾ÇøÓò¾Í¶¼ÊÇ0x0£¬µ«ÊÇÔÚ½øÐÐË«»º³åÇÐ»»µÄÊ±ºòÒ²»áÅöµ½Ò»Ð©ÎÊÌâ£¬fbdevµÄË«»º³åÊÇÍ¨¹ýPAN\_DISPLAYÀ´½øÐÐµÄ£¬PAN\_DISPLAYµ÷ÓÃºó£¬ÄÚºËdrmµÄframebufferÇý¶¯ÈÔÈ»»á½«crtc»ùµØÖ·ÉèÎªframebuffer Çý¶¯ÈÏÎªµÄµØÖ·£¬Òò¶øÕâÀïÎÒÃÇÒ²ÐèÒªÐÞ¸ÄÒ»ÏÂ¡£½â¾öµÚ¶þ¸öÎÊÌâµÄÁíÍâÒ»¸ö°ì·¨¾ÍÊÇÔÚ½øÐÐÓ²¼þ¼ÓËÙ²Ù×÷µÄÊ±ºòµØÖ·¶¼¼ÓÉÏ0xc0000ÕâÑùÒ»¸öÆ«ÒÆ£¬µ±È»Ò²Òª¿¼ÂÇË«»º³åÇÐ»»µÄÎÊÌâ¡£

ÉÏÃæÁ½¸öÎÊÌâÉÏÎÒÃÇÊÇÍ¨¹ýÐÞ¸Äfbdev£¬ÒÔÐÞÐÞ²¹²¹µÄ·½Ê½½â¾öÕâ¸öÎÊÌâµÄ£¬Êµ¼ÊÉÏ£¬ÉÏÃæµÄ°ì·¨»¹ÓÐÒ»¸öÎÊÌâÎÞ·¨½â¾ö£¬ÔÚ½øÐÐË«»º³åµÄÊ±ºò£¬Èç¹ûÊÇÔÚ³¡Í¬²½µÄÊ±ºòÇÐ»»£¬Ôò²»»á²úÉúÆÁÄ»ÉÁË¸µÄÇé¿ö£¬ÔÚ¡°ÖÐ¶Ï»úÖÆ¡±Ò»ÕÂÎÒÃÇ·ÖÎö¹ý£¬Èç¹ûvblankÖÐ¶Ï±»¿ªÆô£¬ÔòÔÚ³¡Í¬²½µÄÊ±ºòÓ²¼þ»á²úÉúvblankÖÐ¶ÏÍ¨ÖªÈí¼þ£¬µ«ÊÇÔÚ¼ÈÓÐµÄdirectfbµÄradeonÇý¶¯²»ÒÀÀµÈÎºÎÄÚºËÇý¶¯£¬Òò¶ø¾ÍÎÞ·¨»ñÈ¡ÖÐ¶Ï£¬¼ÈÓÐdirectfb radeonÇý¶¯Ê¹ÓÃÂÖÑ¯µÄ·½Ê½ÒÔ±È½Ï¸ßµÄÆµÂÊ£¨Ó¦µ±±£Ö¤ÂÖÑ¯µÄÊ±¼ä¼ä¸ôÐ¡ÓÚ³¡Í¬²½ÏÔÊ¾´¦ÓÚ¿Õ°×ÆÚµÄÊ±¼ä£©ÂÖÑ¯ÖÐ¶Ï×´Ì¬¼Ä´æÆ÷£¬Èç¹ûvblankµÄÎ»±»ÖÃÎ»£¬Ôò´¦ÓÚÏÔÊ¾¿Õ°×ÆÚ£¬ÕâÊ±ºò¿ÉÒÔ·¢ÉúÇÐ»»£¬ÇÐ»»Íê³Éºó½«×´Ì¬¼Ä´æÆ÷Çå³ý¡£È»¶øÔÚÓÐÄÚºËdrmÇý¶¯µÄÇé¿öÏÂ£¬ÄÚºËdrmÇý¶¯»á´¦ÀíÖÐ¶Ï£¬²¢ÔÚÖÐ¶Ï´¦Àíº¯ÊýÖÐ½«×´Ì¬¼Ä´æÆ÷Çå³ý£¬ÕâÑùºËÍâµÄ³ÌÐòºÜÄÑµÈµ½ÏÔÊ¾¿Õ°×µÄÊ±¼ä¡£

Òò´Ë¸üÎªÖ±½ÓµÄ·½Ê½ÊÇ½«ÄÚºËµÄdrmÇý¶¯ÈÓµô£¬×Ô¼ºÐ´Ò»¸öÇý¶¯²¢µ¼³öÒ»¸öframebufferÇý¶¯£¬ÓÚÊÇ¾ÍÓÐÁËÎÒÃÇÍ¼\ref{directfbdriverarch}ÖÐ¸ø³öµÄ³ÌÐò½á¹¹¡£

Ê×ÏÈÎÒÃÇµÄÄÚºËÇý¶¯Ä£¿é»áÍê³ÉÔ­ÓÐµÄdrmÇý¶¯Íê³ÉµÄËùÓÐÓ²¼þ³õÊ¼»¯£¬°üÀ¨ÏÔ´æµÄ³õÊ¼»¯ÒÔ¼°Ò³±í»úÖÆ£¬ÃüÁî»·»úÖÆµÈ¡£ÎÒÃÇ½«ÏÔÊ¾ÇøÓòµ÷Õûµ½0x0µÄÎ»ÖÃ£¬framebufferÇý¶¯½«Ê£ÓàµÄÈ«²¿vramÓ³Éä³öÀ´£¬²¢ÇÒÊ¹ÓÃframebufferÇý¶¯Ó³ÉäIO£¬ÕâÑù£¬directfbÖÐµÄfbdev²»ÐèÒª½øÐÐÈÎºÎÐÞ¸Ä£¬½«Ê£ÓàµÄvram½»¸ødirectfbÖ®ºó£¬directfb»áÓÐÒ»¸ö¼òµ¥µÄÏÔ´æ¹ÜÀí»úÖÆ£¬Òò¶øÔÚÄÚºËÖÐÎÒÃÇÎÞÐèµ£ÐÄ¶ÔÕâÆ¬ÄÚ´æµÄ¹ÜÀí¡£

ÓÉÓÚr500ÓÐµ¥¶À2DÒýÇæÖ»ÐèÒª¼òµ¥¶ÁÐ´¼Ä´æÆ÷¾Í¿ÉÒÔ£¬¶øÇÒ²¿·Ö´úÂë¿ÉÒÔ²Î¿¼¼ÈÓÐµÄR300´úÂë£¬ËùÒÔÕâ²¿·Ö´úÂëÒÀÈ»°´ÕÕMMIO µÄ·½Ê½£¬Òò´ËÕâÀïÃ»ÓÐÃüÁî´¦Àí£¬È«²¿Ó²¼þ²Ù×÷¶¼ÔÚVRAM ÉÏ½øÐÐ£¬Ã»ÓÐGTT£¬Òò´ËÏÔ´æ¹ÜÀí²¿·ÖµÄ´úÂëÒ²ºÜ¼òµ¥¡£

¶øR600Çé¿öÔò½ÏÎª¸´ÔÓ£¬R600±ØÐëÊ¹ÓÃ3DÓ²¼þÍê³É2D¼ÓËÙ²Ù×÷£¬ÄÜ¹»²Î¿¼µÄR600 EXAÇý¶¯¶¼ÊÇÊ¹ÓÃÃüÁî°ü²Ù×÷GPUºËÐÄµÄ¼Ä´æÆ÷¡¾ÊÇ±ØÐëÊ¹ÓÃÃüÁî°üÐ´¡¿£¬Òò´ËÕâÀï±ØÐë±àÐ´ÍêÕûµÄÏÔ´æ¹ÜÀíºÍÃüÁî´¦ÀíµÈ»úÖÆ¡£

\section{ÄÚºËFramebufferÇý¶¯}

µÚ\verb|\ref{ch1}|ÖÐÊ¹ÓÃÁËÒ»¶Î¼òµ¥µÄ´úÂëÑÝÊ¾ÁË¶ÔFramebufferÉè±¸µÄ²Ù×÷£¬ºËÄÚframebufferÇý¶¯±ØÐëÌá¹©ÏàÓ¦µÄ½Ó¿Ú£¬ºËÍâ³ÌÐò²ÅÄÜÕýÈ··ÃÎÊºÍ²Ù×÷framebuffer£¬±àÐ´Ò»¸öÊµÏÖ»ù±¾¹¦ÄÜµÄFramebufferÇý¶¯»¹ÊÇ±È½Ï¼òµ¥µÄ¡£
\begin{verbatim}
233 int register_fb(struct radeon_device *rdev)
234 {
235     struct fb_info  *fbinfo;
236     struct radeonfb_info  *info;
......
241     fbinfo = framebuffer_alloc(sizeof(struct radeonfb_info),
242                 &(rdev->pdev->dev));
243     info = fbinfo->par;
244     info->dev = &(rdev->pdev->dev);
245     info->fb = fbinfo;
......
256     fbinfo->fix = radeonfb_fix;
257     fbinfo->var = radeonfb_var;
258     fbinfo->fbops = &radeonfb_ops;
259     fbinfo->flags = FBINFO_FLAG_DEFAULT;
260     fbinfo->pseudo_palette = &info->pseudo_pal;
261
262     fbinfo->screen_base = rdev->fb_ptr;
263     fbinfo->fix.smem_len = DISPLAY_SIZE;[ºóÃæÐèÒªÐÞ¸Ä]
264     fbinfo->fix.smem_start = rdev->fb_phys;
......
271     ret = register_framebuffer(fbinfo);
......
279     return ret;
280 }
\end{verbatim}

ÉÏÃæÍê³ÉÁËframebufferµÄ×¢²á¹ý³Ì£¬241-242ÐÐ·ÖÅäÁËÒ»¸öframebuffer½á¹¹£¬271ÐÐ×¢²áframebufferÇý¶¯£¬ÖÐ¼äµÄ´úÂëÖ÷Ìî³äframebuffer½á¹¹¡£

256ÐÐ¾ÍÊÇ¹Ì¶¨²ÎÊý½á¹¹£¬257ÐÐÊÇ¿É±ä²ÎÊý½á¹¹£¬±¾½Ú¿ªÊ¼Ê¹ÓÃµÄÓ¦ÓÃ³ÌÐòÇëÇóµÄ¿É±äºÍ¹Ì¶¨²ÎÊý¾ÍÊÇÕâÁ½¸ö½á¹¹Ìå¡£

258ÐÐÊÇ¶ÔframebufferÇý¶¯µÄ²Ù×÷º¯Êý£¬±¾ÖÊÉÏframebufferÊÇlinuxÄÚºËÖÐµÄ×Ö·ûÇý¶¯£¬µ«ÊÇframebufferÇý¶¯Ïàµ±ÓÚÊÇ¶Ô×Ö·ûÇý¶¯µÄ·â×°¡£ÕâÀïµÄ²Ù×÷º¯ÊýºÍµ¥´¿µÄ×Ö·ûÉè±¸µÄ²Ù×÷º¯ÊýÊÇÓÐÇø±ðµÄ¡£ÔÚÄÚºËdrivers/video/fbmem.cÎÄ¼þÓÐÈçÏÂ´úÂë£º
\begin{verbatim}
1424 static const struct file_operations fb_fops = {
1425     .owner =    THIS_MODULE,
1426     .read =     fb_read,
1427     .write =    fb_write,
1428     .unlocked_ioctl = fb_ioctl,
1429 #ifdef CONFIG_COMPAT
1430     .compat_ioctl = fb_compat_ioctl,
1431 #endif
1432     .mmap =     fb_mmap,
1433     .open =     fb_open,
1434     .release =  fb_release,
1435 #ifdef HAVE_ARCH_FB_UNMAPPED_AREA
1436     .get_unmapped_area = get_fb_unmapped_area,
1437 #endif
1438 #ifdef CONFIG_FB_DEFERRED_IO
1439     .fsync =    fb_deferred_io_fsync,
1440 #endif
1441 };
\end{verbatim}

ÕâÐ©²ÅÊÇ×÷Îª×Ö·ûÉè±¸µÄ²Ù×÷º¯Êý£¬Ñ¡³öÆäÖÐÒ»¸öreadº¯Êý£º
\begin{verbatim}
 693 static ssize_t
 694 fb_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)
 695 {
......
 711     if (info->fbops->fb_read)
 712         return info->fbops->fb_read(info, buf, count, ppos);
\end{verbatim}

Ö»ÓÐµ±ÓÃ»§×Ô¼ºÊµÏÖÁËfb\_readº¯ÊýµÄÊ±ºò²Å»áµ÷ÓÃÓÃ»§×Ô¶¨ÒåµÄº¯Êý£¬·ñÔòÊ¹ÓÃÄÚºËÄ¬ÈÏµÄ²Ù×÷¡£

Êµ¼ÊÉÏ£¬´ó²¿·ÖframebufferµÄ²Ù×÷º¯Êý¶¼ÓÐÄ¬ÈÏµÄº¯£¬Èç¹ûÓÃ»§ÊµÏÖ.fb\_set\_par ºÍ.fb\_check\_var[mmapÒ²¿ÉÒÔÊ¹ÓÃÄÚºËÄ¬ÈÏµÄ²Ù×÷]Á½¸öº¯Êý¾Í»ù±¾ÉÏÄÜ¹»ÈÃÏÔ¿¨¹¤×÷ÁË£¨Ä¬ÈÏµÄ²Ù×÷º¯Êý´ó¶àÊÇÔËÐÐÔÚÓÐ×Ô´øÏÔ´æµÄÏÔ¿¨ÉÏµÄ£¬Èç¹ûÊÇÊ¹ÓÃÏµÍ³ÄÚ´æ×÷ÎªÏÔ´æµÄÇ¶ÈëÊ½ÏµÍ³£¬»¹ÐèÒªÌá¹©mmapº¯ÊýºÍ¶ÁÐ´²Ù×÷º¯Êý£©¡£fb\_set\_par¸ù¾Ý¿É±ä½á¹¹ÌåÖÐµÄÐÅÏ¢ÉèÖÃÓ²¼þ£¬Ö÷ÒªÊÇÐÞ¸Ä·Ö±æÂÊÒÔ¼°¸Ä±äµ±Ç°ÏÔÊ¾ÇøÓòÄÚ´æµÄÎ»ÖÃ¡£µ±È»£¬Èç¹ûÒªÊµÏÖÉÏÃæÓ¦ÓÃ³ÌÐòµÄPAN\_DISPLAY²Ù×÷£¬Ôò»¹ÐèÒªÌá¹©.pan\_displayº¯Êý¡£
¹ØÓÚ·Ö±æÂÊµÄÉèÖÃÍ¨³£ÊÇframebufferÇý¶¯ÖÐÒ»¸ö±È½ÏÖØÒªµÄÎÊÌâ£¬µ«ÊÇ¿¼ÂÇµ½ÊÇÇ¶ÈëÊ½ÏµÍ³£¬ÔÚ³õÊ¼»¯·Ö±æÂÊÖ®ºó£¬ºóÃæ»ù±¾ÉÏ²»»áÐÞ¸Ä£¬Òò¶øÕâÀïÎÒÃÇ²»»á¹ØÐÄÕâ·½ÃæµÄÎÊÌâ¡£

260ÐÐÉèÖÃÎ±µ÷É«°å£¬Î±µ÷É«°åÓÃÓÚconsole£¬linux consoleÔÚÏÔÊ¾ÄÚÈÝµÄÊ±ºò×î¶àÖ§³Ö16ÖÐÑÕÉ«£¬µ«ÊÇÍ¨³£Éè±¸¶¼Ö§³ÖµÄÑÕÉ«Ô¶³¬¹ýÕâÃ´¶à£¨±ÈÈçRGB24Î»É«ÉîÖ§³Ö224ÖÖÑÕÉ«£©£¬Òò¶øÔÚÎ±µ÷É«°åÖÐÉèÖÃ16ÖÐÑÕÉ«£¬console°´ÕÕÐèÒª´ÓÎ±ÑÕÉ«±íÖÐÈ¡ÑÕÉ«Öµ¡£[ÐèÒªÈ·ÈÏ£¿£¿]

262-264ÉèÖÃÖ¡»º³åÊ¹ÓÃµÄÄÚ´æ£¬ÕâÀï¼ÇÂ¼ÁËÁ½¸öµØÖ·£¬262ÊÇÄÚºËÐéÄâµØÖ·£¬Ó¦ÓÃ³ÌÐòÖ±½Ó¶ÁÈ¡Éè±¸½ÚµãµÄÊ±ºò£¬ÄÚºËÐèÒª½«ÏÔ´æµÄÊý¾Ý¿½±´µ½ÓÃ»§¿Õ¼ä£¬ÐèÒªÊ¹ÓÃÐéÄâµØÖ··ÃÎÊÏÔ´æ¡£264ÊÇÎïÀíµØÖ·£¬ÔÚ½«ÏÔ´æÓ³Éäµ½ÓÃ»§¿Õ¼äµÄÊ±ºò£¬ÐèÒªÊ¹ÓÃÎïÀíµØÖ·£¨×¼È·µÄËµÊÇÎïÀíÒ³Ö¡ºÅ£©¡£

ÔÚ½øÐÐË«»º³åÇÐ»»µÄ£¬ºËÍâ³ÌÐòÐèÒª×öÒ»¸öPAN\_DISPLAYµÄioctlµ÷ÓÃ£¬ÄÚºËframebufferÇý¶¯ÐèÒªÊµÏÖ.pan\_dispay¡£
\begin{verbatim}
347 static int radeonfb_pan_display(struct fb_var_screeninfo *var,struct fb_info *fb)
348 {
349     struct radeonfb_info *par = fb->par;
350     u32 xoffset, yoffset;
351     u32 offset;
352     u32 xres, yres;
353
354     xres = var->xres;
355     yres = var->yres;
356     xoffset = var->xoffset;
357     yoffset = var->yoffset;
358     if(xoffset+xres > var->xres_virtual || yoffset+yres > var->yres_virtual)
359         offset = 0;
360     else
361         offset =(yoffset * xres +  xoffset)*4;
362
363     *(unsigned int *)((( char *)(par->mmio_start))+0x6110)=offset;
364     offset = *(unsigned int *)((( char *)(par->mmio_start))+0x6110);
365     return 0;
366 }
\end{verbatim}
[364ºÍ363ÐÐÈÕºóÐèÒªÐÞ¸Ä£¬¶ÔÓ²¼þµÄ²Ù×÷²»·ÅÔÚframebufferÇý¶¯ÖÐ]¡£
ÕâÀïpan\_displayº¯Êý¸ù¾Ý´«½øÀ´µÄyoffsetÇÐ»»ÏÔÊ¾»­ÃæµÄÎ»ÖÃ¡£

ÓÉÓÚ»¹ÐèÒªÍ¨¹ýframebufferÇý¶¯Ó³ÉäÏÔ¿¨IO£¬Òò´ËÐèÒªÌá¹©×Ô¼ºµÄmmapº¯Êý£¬Ä¬ÈÏ²Ù×÷ÊÇ²»Ìá¹©IOÓ³ÉäµÄ¡£
\begin{verbatim}
296 static int radeonfb_mmap(struct fb_info *info,
297             struct vm_area_struct *vma)
298 {
299     unsigned long start = vma->vm_start;
300     unsigned long size = vma->vm_end - vma->vm_start;
301     unsigned long offset = vma->vm_pgoff << PAGE_SHIFT;
302     unsigned long pos;
303
304     if(offset == info->fix.smem_len){
305         size_t mmio_size = ((struct radeonfb_info*)info->par)->mmio_size;
306         pos = ((struct radeonfb_info*)info->par)->mmio_phys;
307         if(size >((struct radeonfb_info*)info->par)->mmio_size){
308             size = mmio_size;  // ok ??
309         }
310     }
311     else {
312         if (offset + size > info->fix.smem_len) {
313             return -EINVAL;
314         }
315         pos = info->fix.smem_start + offset;
316     }
317     while (size > 0) {
318         if (io_remap_pfn_range(AMD003AMD003vma, start, pos >> PAGE_SHIFT, PAGE_SIZE,
319                 PAGE_SHARED)) {
320             printk("[%s] mmap failed\n", __func__);
321             return -EAGAIN;
322         }
323         start += PAGE_SIZE;
324         pos += PAGE_SIZE;
325     if (size > PAGE_SIZE)
326         size -= PAGE_SIZE;
327     else
328         size = 0;
329     }
330     vma->vm_flags |= VM_RESERVED;
331     return 0;
332 }
\end{verbatim}

FramebufferÇý¶¯´ÓÏÔ¿¨Çý¶¯ÖÐµÃµ½ÁËÏÔ´æºÍ¼Ä´æÆ÷µÄÎïÀíÆðÊ¼µØÖ·¡£ÓÐÁËÎïÀíµØÖ·£¬È»ºóÕÒµ½Ò»¸ö¿ÕÏÐµÄÓÃ»§¿Õ¼äµØÖ·£¬½«ËûÃÇ¶ÔÓ¦Ð´ÈëÒ³±íÖÐ£¬¾Í½¨Á¢ÁËËûÃÇÖ®¼äµÄÓ³Éä¹ØÏµ£¬´Ó¶ø´ïµ½½«ÏÔ´æ»òÕß¼Ä´æÆ÷Ó³Éäµ½ÓÃ»§¿Õ¼äµÄÄ¿µÄ¡£Èç¹ûmmap´«ÈëµÄ²ÎÊýoffsetÎªfix.smem\_len£¬ÄÇ¾Í½«IOµØÖ·Ó³Éäµ½ÓÃ»§¿Õ¼ä£¬·ñÔò¾ÍÓ³ÉäÏÔ´æ¿Õ¼ä¡£

\subsection{ÏÔ´æµÄÊ¹ÓÃ}

×¢Òâµ½Çý¶¯µÄÖ÷Òª²¿·Ö¶¼ÔÚºËÍâ£¬ÏÔ´æÊÇÓ³Éäµ½ÓÃ»§¿Õ¼ä½øÐÐ²Ù×÷µÄ¡£

R500Çý¶¯Ö»Ê¹ÓÃVRAM£¬Òò´ËVRAMÖ±½ÓÍ¨¹ýFramebufferÇý¶¯Ó³Éä³öÀ´¾Í¿ÉÒÔÁË¡£

R600Çý¶¯Ê¹ÓÃ3D²¿¼þ½øÐÐ²Ù×÷£¬ÖÁÉÙÃüÁî»·»º³åÇø£¨Ring buffer£©¡¢¶¥µã»º³åÇø£¨Vertex buffer£©ÐèÒªÊ¹ÓÃGTTÄÚ´æ£¬GTT±ØÐëÊÇ¿ÉÒÔ½øÐÐDMA²Ù×÷µÄÄÚ´æ£¬Òò´Ë»¹±ØÐëÔÚÄÚºËÖÐ·ÖÅä²¢½øÐÐDMAÓ³Éä¡£¿¼ÂÇÔÚMesa»·¾³ÏÂ£¬Ó¦ÓÃ³ÌÐò»á¸ù¾ÝÐèÒªÇëÇóDMA GTTÄÚ´æ
£¨ÖÁÉÙÐèÒªVertex buffer£©£¬µ«ÊÇÔÚµ±Ç°µÄDirectFB R600Çý¶¯ÖÐ£¬Ò»´ÎÖ»ÓÐÒ»¸öÍêÕûµÄ»æÍ¼²Ù×÷£¬¶øÇÒÒ»´Î»æÍ¼²Ù×÷Ê±¼äºÜ¶Ì£¬²»»á±»ÆäËû»æÍ¼²Ù×÷´ò¶Ï¡£Òò´ËÕâÀï²»»áÓÐ¶¯Ì¬DMAÄÚ´æ·ÖÅäµÄÐèÇó£¬Ò»´Î·ÖÅä×ã¹»µÄDMAÄÚ´æ£¬È»ºóÈ«²¿Ó³Éä³öÀ´¾Í¿ÉÒÔÁË¡£

ÔÚR500Çý¶¯Àï£¬Ó³Éä³öÀ´µÄÄÚÈÝ·ÖÎªÁ½²¿·Ö£ºVRAMºÍ¼Ä´æÆ÷£¬fbdevÖÐÓÐÒ»Ì××Ô¼ºµÄÏÔ´æ·ÖÅä»úÖÆ£¬±»Ó³Éä³öÀ´µÄVRAM±»·Ö³ÉÁ½²¿·Ö£¬Ç°Ãæ²¿·Ö×÷ÎªÏÔÊ¾ÇøÓò£¨ÒªÍ¬ÄÚºËframebufferÇý¶¯Ô¼¶¨ºÃ£©£¬°üÀ¨µ±Ç°µÄÏÔÊ¾ÇøÓòÒÔ¼°ÓÃÓÚË«»·´æÇÐ»»µÄºó±¸»º´æ¡£ÔÚÓ²¼þ¼ÓËÙ²Ù×÷ÐèÒªÏÔ´æµÄÊ±ºò£¬fbdevµÄ·ÖÅäÆ÷´ÓÏÔ´æµÄÄ©¶ËÎ»ÖÃ¿ªÊ¼»®·ÖÄÚ´æ¡£

ÔÚR600Çý¶¯ÖÐ£¬»¹ÐèÒªÓ³ÉäGTTÄÚ´æ£¬°´ÕÕÎÒÃÇµÄÐèÇóÊÖ¶¯½«GTT·Ö³Éindex bufferºÍring bufferÁ½²¿·Ö¡£

\section{ºËÍâDirectFBÍ¼ÐÎÏµÍ³ÏÔ¿¨Çý¶¯£¨Çý¶¯ÔËÐÐÁ÷³Ì Êý¾Ý½á¹¹µÈµÈ£©}

\section{R500 DirectFB 2D¼ÓËÙÇý¶¯}
ÕâÀïµÄ2D¼ÓËÙÈ«²¿ÊÇÊ¹ÓÃÓ²¼þÉÏ2D²¿¼þ×öµÄ£¬2D²¿¼þÄÜ¹»Íê³É»ù±¾µÄ2D²Ù×÷£¬µ«ÊÇ²»ÄÜ¹»´¦ÀíÍ¸Ã÷¶ÈºÍÈý½ÇÐÎ»æÖÆ¡£

RadeonµÄ¼ÓËÙ³ÌÐòÎ»ÓÚdirectfbµÄgfxdriver/radoenÄ¿Â¼ÏÂ¡£±àÒëºó»áÉú³ÉÒ»¸ö¿âÎÄ¼þ£¬µ±ÐèÒª¼ÓÔØÓ²¼þ¼ÓËÙÊ±£¬dfb½«ËÑÑ°²¢¼ÓÔØÕâ¸ö¿â¡£ÕÒµ½¿âÎÄ¼þºó£¬Ê×ÏÈµ÷ÓÃradeon.cµÄº¯Êý£º
\begin{verbatim}
static int
driver_probe( CoreGraphicsDevice *device )
{
    switch (dfb_gfxcard_get_accelerator( device )) {
        case FB_ACCEL_ATI_RADEON:
            return 1;
        default:
            break;
    }
    return 0;
}
\end{verbatim}

Ö»ÓÐµ±º¯Êý·µ»Ø1Ê±£¬Õâ¸ö¿â²ÅËãÆ¥ÅäÉÏ£¬ÕæÕýµÄ¼ÓÔØ£¬Æ¥ÅäµÄÌõ¼þ¾ÍÊÇradeon¼ÓËÙ´úºÅ38¡£dfb\_gfxcard\_get\_acceleratorº¯Êý£¬¹ûÓÐÓÃ»§ÅäÖÃ£¬·µ»ØÓÃ»§ÅäÖÃµÄÖµ£¬·ñÔò¸ù¾ÝÄÚºËÌá¹©µÄframebuffer½Úµã¶Á³öµÄÐÅÏ¢·µ»Ø¡£Èç¹ûÎÒÃÇ²»ÔÚÓÃ»§ÅäÖÃÀïÅäÖÃ£¬ÕâÀï¾ÍÆ¥Åä²»ÉÏ£¬ÒòÎª´Ófb½ÚµãµÃµ½µÄÖµ²»ÊÇ38£¬¶øÊÇ0.

ÔÚdfbÖÐ£¬Ó²¼þ¼ÓËÙÇý¶¯Ê×ÏÈÖ´ÐÐÁ½¸ö³õÊ¼»¯º¯Êý£ºdriver\_init\_driver  ºÍdriver\_init\_device¡£Ç°Ò»¸öº¯ÊýÖ÷ÒªµÃµ½ÁËÏÔ¿¨µÄmmioµØÖ·ºÍÏÔ´æµÄÆðÊ¼µØÖ·£º
\begin{verbatim}
rdrv->mmio_base = (volatile u8*) dfb_gfxcard_map_mmio( device, 0, 0x4000 );
rdrv->fb_base = dfb_gfxcard_memory_virtual( device, 0 );
\end{verbatim}

ÕâÁ½¸öº¯Êý¶¼ÐèÒªÄÚºËµÄframebufferÇý¶¯Ìá¹©Ö§³Ö£¬¹ØÓÚÏ¸½ÚºóÃæÌÖÂÛ¡£
½ÓÏÂÀ´ÐèÒªÐÞ¸ÄµÄÊÇ:
\begin{verbatim}
if (chip >= CHIP_R300) {
funcs->CheckState   = r300CheckState;
funcs->SetState     = r300SetState;
}
\end{verbatim}

ÕâÀï¸ù¾ÝÏÔ¿¨µÄÐÍºÅ£¬ÊµÏÖ²»Í¬µÄCheckStateºÍSetStateº¯Êý¡£ÎÒÃÇµÄr500ÒªÓÐ×Ô¼ºµÄÊµÏÖ£¬CheckStateÓÃÓÚ¼ì²éÊÇ·ñÖ§³ÖÄ³ÖÖ¼ÓËÙ²Ù×÷£¬SetStateÓÃÓÚÓ²¼þ¼ÓËÙµÄ×¼±¸ÐÔ¹¤£¬×÷ÉèÖÃÒ»Ð©¼Ä´æÆ÷£¬Èç£ºÑÕÉ«£¬»æÖÆ·½ÏòµÈ¡£ÎÒÃÇÔÚÉÏÃæµÄÓï¾äÇ°¼ÓÉÏ£º
\begin{verbatim}
if(1) {
funcs->CheckState   = r500CheckState;
funcs->SetState =r500SetState;
}
\end{verbatim}

driver\_init\_deviceÖ÷ÒªÊÇÍ¨¹ý¶¼Ð´ÏÔ¿¨µÄ¼Ä´æÆ÷£¬µÃµ½Ò»Ð©ÏÔ¿¨µÄÐÅÏ¢²¢½øÐÐÉèÖÃ£¬ÎÒÃÇ½«¶ÔÏÔ¿¨µÄÉèÖÃ²¿·Ö£¬Ò²¾ÍÊÇÐ´¼Ä´æÆ÷µÄ²¿·ÖÉ¾³ýÁË£¬ÒòÎªÄÚºËÒÑ¾­ºÜºÃµÄ³õÊ¼»¯ÏÔ¿¨¡£ÁíÍâ¶ÔÓÚ¶ÔÆëÒªÇóÓÐ£º
\begin{verbatim}
     device_info->limits.surface_byteoffset_alignment = 32;
     device_info->limits.surface_pixelpitch_alignment = 64;
     device_info->limits.surface_bytepitch_alignment  = 128;
\end{verbatim}

½«µÚÒ»ÐÐµÄ¸ÄÎª1024£¬offsetÐèÒª1k¶ÔÆë¡£¶ÔÓÚ³õÊ¼»¯µÄ¸Ä¶¯¾ÍÍê³ÉÁË¡£ÕâÀï»¹Ã»ÓÐ¾ßÌåµÄ»­Í¼¹¤×÷¡£

ÊµÏÖr500CheckState£¬Ö»ÐèÒªcopyÒ»·Ýr300µÄCheckState£¬È»ºó¸ÄºÃº¯ÊýÃû¾Í¿ÉÒÔÁË¡£
\begin{verbatim}
static void r500SetState( void *drv, void *dev, GraphicsDeviceFuncs *funcs, CardState *state, DFBAccelerationMask accel )
{
	RadeonDriverData *rdrv = (RadeonDriverData*) drv;
	RadeonDeviceData *rdev = (RadeonDeviceData*) dev;
	void * mmio=rdrv->mmio_base;

	rdev->set &= ~state->mod_hw;
	if (DFB_BLITTING_FUNCTION( accel )) {
		if ((rdev->accel ^ accel) & DFXL_TEXTRIANGLES)
			rdev->set &= ~SMF_BLITTING_FLAGS;
	}
	rdev->accel = accel;
	r500_set_destination(rdrv,rdev,state);
	r500_set_clip(rdrv,rdev,state);
	switch (accel) {
		case DFXL_FILLRECTANGLE:
		case DFXL_FILLTRIANGLE:
		case DFXL_DRAWRECTANGLE:
		case DFXL_DRAWLINE:
			r500_set_drawing_color( rdrv, rdev, state );
			//if (state->drawingflags & DSDRAW_BLEND)
				//r300_set_blend_function( rdrv, rdev, state );
			r500_set_drawingflags( rdrv, rdev, state );
			funcs->DrawRectangle = r500drawrectangle;
			funcs->FillRectangle = r500fillrectangle;
			funcs->DrawLine = r500drawline;
			state->set = rdev->drawing_mask;
			break;
		case DFXL_BLIT:
		case DFXL_STRETCHBLIT:
		case DFXL_TEXTRIANGLES:
			r500_set_source( rdrv, rdev, state );
			r500_set_blittingflags( rdrv, rdev, state );
			state->set = (accel & DFXL_TEXTRIANGLES)
				? : (rdev->blitting_mask & ~DFXL_TEXTRIANGLES);
			break;
		default:
			D_BUG( "unexpected drawing/blitting function" );
			break;
	}
	funcs->FillTriangle  = NULL;
	funcs->Blit = r500blit;
	funcs->EmitCommands  = NULL;
	state->mod_hw = 0;
}
\end{verbatim}

ÒÔÉÏ´úÂëÖµµÃ×¢ÒâµÄÊÇºÚÌå²¿·Ö£¬Á÷³ÌÈçÍ¼\ref{setstatepipe}¡£

\begin{figure}
  \centering
  % Requires \usepackage{graphicx}
  \includegraphics[scale=1.2]{setstatepipe}\\
  \caption{set\_stateº¯ÊýÁ÷³ÌÍ¼}\label{setstatepipe}
\end{figure}


Ê×ÏÈÊÇÉèÖÃ»­Í¼µØÖ·r500\_set\_destination£¬È»ºóÉèÖÃ²Ã¼ô²ÎÊý£¬È»ºó¸ù¾Ý²»Í¬µÄ»­Í¼²Ù×÷ÉèÖÃ»­Í¼ÑÕÉ«ºÍ±êÖ¾»òÕßÉèÖÃÔ´µØÖ·ºÍblit±êÖ¾¡£½ÓÏÂÀ´ÎÒÃÇÒÀ´ÎÕ¹¿ªÕâÐ©º¯Êý¡£


\noindent \textbf{1£© ÉèÖÃ»æÍ¼Î»ÖÃ}
\begin{verbatim}
void r500_set_destination( RadeonDriverData *rdrv,  RadeonDeviceData *rdev,
CardState*state )
{
    CoreSurface   *surface = state->destination;
    CoreSurfaceBuffer *buffer  = state->dst.buffer;
    volatile u8   *mmio= rdrv->mmio_base;
    u32offset;
    u32pitch;
    u32format  = 0;
    bool   dst_422 = false;

    if (RADEON_IS_SET( DESTINATION ))
        return;
    offset=state->dst.offset + rdev->fb_offset;
    pitch = state->dst.pitch;
    if (rdev->dst_offset != offset ||
            rdev->dst_pitch  != pitch ||
            rdev->dst_format != buffer->format) {
        format = R300_COLOR_FORMAT_ARGB8888;
        rdev->gui_master_cntl = GMC_DST_32BPP;
        rdev->gui_master_cntl |= GMC_DP_SRC_SOURCE_MEMORY  |
                GMC_WR_MSK_DIS|
                GMC_SRC_PITCH_OFFSET_CNTL |
                GMC_DST_PITCH_OFFSET_CNTL |
                GMC_DST_CLIPPING;
        radeon_waitfifo( rdrv, rdev, 1 );
        radeon_out32(mmio, RADEON_DST_PITCH_OFFSET,
                            (( pitch/64)<<22) | (offset>>10));
        if (rdev->dst_format != buffer->format) {
            if (dst_422 && !rdev->dst_422) {
                RADEON_UNSET( CLIP );
                RADEON_UNSET( SOURCE );
                rdev->src_format = DSPF_UNKNOWN;
            }
            RADEON_UNSET( COLOR );
            RADEON_UNSET( DST_BLEND );
        }
        rdev->dst_format = buffer->format;
        rdev->dst_offset = offset;
        rdev->dst_pitch  = pitch;
        rdev->dst_422= dst_422;
    }
    RADEON_SET( DESTINATION );
}
\end{verbatim}

Õâ¸öº¯ÊýÊ®·ÖÖØÒª£¬ÉèÖÃÁË»æÍ¼Ê±Ö÷ÒªÐèÒªÉèÖÃµÄ¼Ä´æÆ÷£¬Èç¹ûÃ»ÓÐÕýÈ·ÉèÖÃ£¬Í¼ÐÎ²»»á±»»æÖÆ³öÀ´»òÕß»æÖÆµ½´íÎóµÄÎ»ÖÃÉÏ¡£×¢Òâ¼Ó´ÖµÄÄÇ²¿·Ö´úÂë£¬fb\_offsetÊÇframebufferÏà¶ÔÏÔ´æµÄÆ«ÒÆ£¬dst.offset dst.pitch¶¼ÊÇÍ¨¹ýstate´«À´µÄ£¬ÔÝÊ±²»ÓÃ¿¼ÂÇ¡£¿´µ½ÉÏÃæÐ´¼Ä´æÆ÷µÄ²Ù×÷£¬Äã¾ÍÃ÷°×ÎªÊ²Ã´ÎªÊ²Ã´offset±ØÐë1024¶ÔÆëÁË°É£¬ÒòÎªËüÐ´Èë¼Ä´æÆ÷Ê±ÓÒÒÆ10Î»¡£Í¼\ref{alignproblem}ÏÔÊ¾ÁË²»¶ÔÆëµÄÇé¿öÏÂ³öÏÖµÄ½á¹û£¬Í¼Æ¬±»±£´æµ½ÁËfbdev·ÖÅäµÄÒ»¿ésurfaceÖÐ£¬È»ºóÍ¨¹ýÓ²¼þ¼ÓËÙµÄ·½Ê½blitµ½ÁËÆÁÄ»ÏÔÊ¾ÇøÓò£¬Èç¹ûfbdev·ÖÅäµÄÄÚ´æ²»ÊÇ1024×Ö½Ú¶ÔÆëµÄ£¬ÄÇÃ´Ð´ÈëRADEON\_DST\_PITCH\_OFFSET¼Ä´æÆ÷µÄÊ±ºò£¬ºóÃæ10Î»»á±»½Øµô£¬µ«ÊÇÏÔ¿¨È¡Êý¾ÝµÄÊ±ºò£¬Ö»»á´Ó1024×Ö½Ú¶ÔÆëµÄµØÖ·´¦¿ªÊ¼È¡Êý¾Ý£¬ÕâÑù¾Í»á³öÏÖÍ¼4-4×ó±ß³öÏÖµÄÇé¿ö£¬ÓÒ±ßÊÇ¶ÔÆëÇé¿öÏÂblitµÄ½á¹û¡£

\begin{figure}
  \centering
  % Requires \usepackage{graphicx}
  \includegraphics[scale=0.7]{alignproblem}\\
  \caption{¶ÔÆëÎÊÌâ}\label{alignproblem}
\end{figure}

\noindent \textbf{2£©ÉèÖÃ²Ã¼ô²ÎÊý}
\begin{verbatim}
void r500_set_clip( RadeonDriverData *rdrv,
			RadeonDeviceData *rdev,
				CardState	   *state )
{
	DFBRegion   *clip = &state->clip;
	volatile u8 *mmio = rdrv->mmio_base;

	if (RADEON_IS_SET( CLIP ))
		return;
	radeon_out32( mmio, SC_TOP_LEFT,
		(clip->y1 << 16) | (clip->x1 & 0xffff) );
	radeon_out32( mmio, SC_BOTTOM_RIGHT,
		((clip->y2+1) << 16) | ((clip->x2+1) & 0xffff) );
	rdev->clip = state->clip;
	RADEON_SET( CLIP );
}
\end{verbatim}


\noindent \textbf{3£©ÉèÖÃÁË»­Í¼µÄ±³¾°É«ºÍ»­±ÊÉ«}
\begin{verbatim}
void r500_set_drawing_color(RadeonDriverData *rdrv, RadeonDeviceData *rdev, CardState	   *state)
{
	void *mmio = rdrv->mmio_base;
	unsigned int dp_brush_bkgd_clr = 0x00000000;
	unsigned int dp_src_frgd_clr = 0xffffffff;
	unsigned int dp_src_bkgd_clr = 0x00000000;
	unsigned int dp_brush_frgd_clr = state->color.a << 24 |state->color.r<<16 |state->color.g<<8 | state->color.b;

	OUT_ACCEL_REG(RADEON_DEFAULT_SC_BOTTOM_RIGHT,(0X1fff<<0)|(0x1fff<<16));
	OUT_ACCEL_REG(RADEON_DP_BRUSH_FRGD_CLR, dp_brush_frgd_clr);
	OUT_ACCEL_REG(RADEON_DP_BRUSH_BKGD_CLR, dp_brush_bkgd_clr);
	OUT_ACCEL_REG(RADEON_DP_SRC_FRGD_CLR,   dp_src_frgd_clr);
	OUT_ACCEL_REG(RADEON_DP_SRC_BKGD_CLR,   dp_src_bkgd_clr);
	RADEON_SET( COLOR );
}
\end{verbatim}

\noindent \textbf{4£©ÉèÖÃ»æÍ¼µÄ·½ÏòºÍ±êÖ¾}

\begin{verbatim}
void r500_set_drawingflags( RadeonDriverData *rdrv,
					   RadeonDeviceData *rdev,
					   CardState	   *state )
{
	volatile u8   *mmio	   = rdrv->mmio_base;
	u32  master_cntl = rdev->gui_master_cntl	  |
					GMC_SRC_DATATYPE_MONO_FG_LA |
					GMC_BRUSH_SOLID_COLOR  |
					GMC_CLR_CMP_CNTL_DIS;
	u32 rb3d_blend;

	if (RADEON_IS_SET( DRAWING_FLAGS ))
		return;
	if (state->drawingflags & DSDRAW_XOR)
		master_cntl |= GMC_ROP3_PATXOR;
	else
		master_cntl |= GMC_ROP3_PATCOPY;
	radeon_waitfifo( rdrv, rdev, 2 );
	radeon_out32( mmio, DP_GUI_MASTER_CNTL, master_cntl );
	radeon_out32( mmio, DP_CNTL, DST_X_LEFT_TO_RIGHT | DST_Y_TOP_TO_BOTTOM );
	rdev->drawingflags = state->drawingflags;
	RADEON_SET  ( DRAWING_FLAGS );
	RADEON_UNSET( BLITTING_FLAGS );
}
\end{verbatim}


\noindent \textbf{5£©ÉèÖÃblit±êÖ¾}
\begin{verbatim}
void r500_set_blittingflags( RadeonDriverData *rdrv,
					    RadeonDeviceData *rdev,
					    CardState	 *state )
{
	volatile u8   *mmio	   = rdrv->mmio_base;
	u32		  master_cntl = rdev->gui_master_cntl |
						    GMC_BRUSH_NONE	   |
						    GMC_SRC_DATATYPE_COLOR;
	u32		  txfilter1   = R300_TX_TRI_PERF_0_8;
	u32		  cmp_cntl    = 0;
	u32		  rb3d_blend;
	if (RADEON_IS_SET( BLITTING_FLAGS ))
		return;
	if (state->blittingflags & DSBLIT_SRC_COLORKEY) {
		txfilter1 |= R300_CHROMA_KEY_FORCE;
		cmp_cntl   = SRC_CMP_EQ_COLOR | CLR_CMP_SRC_SOURCE;
	}
	else {
		master_cntl |= GMC_CLR_CMP_CNTL_DIS;
	}

	if (state->blittingflags & DSBLIT_XOR)
		master_cntl |= GMC_ROP3_XOR;
	else
		master_cntl |= GMC_ROP3_SRCCOPY;
	radeon_waitfifo( rdrv, rdev, 2 );
	radeon_out32( mmio, CLR_CMP_CNTL, cmp_cntl );
	radeon_out32( mmio, DP_GUI_MASTER_CNTL, master_cntl );
rdev->drawingflags = state->drawingflags;

	RADEON_UNSET  ( DRAWING_FLAGS );
	RADEON_SET( BLITTING_FLAGS );
}
\end{verbatim}

½ÓÏÂÀ´½éÉÜ¸÷¸ö¼ÓËÙ²Ù×÷¡£¶ÁÕß¶ÁÉÏÃæÕâÐ©´úÂëµÄÊ±ºò¿ÉÄÜÒÑ¾­×¢Òâµ½£¬ÉÏÃæÕâÐ©²Ù×÷Ð´µÄ¼Ä´æÆ÷µÄÃû³ÆºÍµÚ4ÕÂGPUÃüÁî°üÖÐÃüÁî°üº¬µÄÒ»Ð©±êÖ¾Î»Ãû³ÆÏàÍ¬£¬Êµ¼ÊÉÏºóÃæ¸÷¸ö¼ÓËÙ²Ù×÷Íù¼Ä´æÆ÷ÖÐÌîÐ´µÄÊ±¾ãºÍÄÇÐ©3ÐÍÃüÁî°üµÄÖ÷Ìå²¿·ÖÊÇÀàËÆµÄ¡£ÎÒÃÇÑ¡È¡blit¹ý³Ì£¬¶ÁÕß¿É²Î¿¨´úÂëÁË½âÆäËü¹ý³Ì¼ÓËÙ¹ý³ÌËùÐ´µÄ¼Ä´æÆ÷¡£

\begin{verbatim}
bool r500blit(CardState *state, void *drv, void *dev,
            DFBRectangle *sr, int dx, int dy )
{
    RadeonDeviceData *rdev = (RadeonDeviceData*) dev;
    RadeonDriverData *rdrv = (RadeonDriverData*) drv;
    unsigned int dir = 0;
    volatile void * mmio=rdrv->mmio_base;
    if (sr->x <= dx) {
        sr->x += sr->w-1;
        dx += sr->w-1;
    }
    else {
        dir |= DST_X_LEFT_TO_RIGHT;
    }
    if(sr->y <= dy) {
        sr->y += sr->h - 1;
        dy += sr->h - 1;
    }
    else {
        dir |= DST_Y_TOP_TO_BOTTOM;
    }
    OUT_ACCEL_REG(DP_CNTL, dir);
    OUT_ACCEL_REG(SRC_Y_X, (sr->y << 16) | (sr->x));
    OUT_ACCEL_REG(DST_Y_X, (dy << 16) | dx);
    OUT_ACCEL_REG(DST_HEIGHT_WIDTH, (sr->h << 16) | (sr->w) );
    return true;
}
\end{verbatim}

Blitº¯ÊýÖÐÅÐ¶ÏÔ´ÓëÄ¿±êµÄ×ø±ê´óÐ¡£¬ÊÇÎªÁË¾ö¶¨copyµÄ·½Ïò£¬blitÊÇ½«ÄÚ´æÖÐµÄÒ»¿éframebufferÐÅÏ¢copyµ½ÁíÒ»¸ö×ø±ê¡£Èç¹ûÁ½¿éÇøÓòÊÇÖØµþµÄ£¬ÄÇÃ´¾Í»áÔÚ¿½±´ÖÐ³öÏÖ¸²¸ÇµÄÏÖÏó¡£ËùÒÔifÓï¾ä¾ÍÊÇµ÷Õû¿½±´µÄ·½ºÍÆðÊ¼×ø±ê¡£

ÕâÀï¹²²Ù×÷ÁËËÄ¸ö¼Ä´æÆ÷£¬DP\_CNTL¼Ä´æÆ÷¿ØÖÆ¿½±´·½Ïò£¬½ÓÏÂÀ´Á½¸ö·Ö±ðÊÇÔ´×ø±êºÍÄ¿µÄ×ø±ê£¬×îºóÊÇ¿½±´µÄ¿í¸ß¡£

¾ßÌåµ½Ã¿¸ö²Ù×÷¶¼²»ÐèÒªÐ´ºÜ¶à¼Ä´æÆ÷£¬ÆäÊµÊÇÒòÎª·ÖÁËºÜ¶à¸öº¯ÊýÀïÃæÈ¥ÁË¡£Ã¿¸ö»­Í¼º¯ÊýÀïÃæÖ»×öËüÌØÓÐµÄ²Ù×÷£¬ÆäËû¹²ÐÔµÄ²Ù×÷¶¼¹éÀàµ½SetStateÖÐµÄ¼¸¸öº¯ÊýÀïÈ¥ÁË¡£ÕâÑùÊ¹ÖØ¸´µÄ´úÂë±äÉÙÁË£¬²ã´ÎÒ²ºÜ·ÖÃ÷¡£

\subsection{¼ÓËÙÐ§¹û}
Ê¹ÓÃdf\_dok³ÌÐò½øÐÐÁË²âÊÔ£¬²âÊÔÆ½Ì¨ÊÇÒ»Ì¨Intel xx»úÆ÷£¬DirectFB°æ±¾£¬Ê¹ÓÃ-O3 ²ÎÊýÓÅ»¯¡£
½á¹û¼ûÍ¼\ref{r5002d}£¬¡¾ÓèÒÔÊÊµ±ËµÃ÷¡¿

\begin{figure}
  \centering
  % Requires \usepackage{graphicx}
  \includegraphics[scale=0.75]{r5002d}\\
  \caption{R500ÏÔ¿¨2D¼ÓËÙ½á¹û}\label{r5002d}
\end{figure}


\section{R600 DirectFB 2D¼ÓËÙÇý¶¯}



\ifx \allfiles \undefined
\end{document}
\fi
