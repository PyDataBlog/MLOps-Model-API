\hypertarget{classCqrs_1_1Authentication_1_1BasicTokenResolver}{}\section{Cqrs.\+Authentication.\+Basic\+Token\+Resolver Class Reference}
\label{classCqrs_1_1Authentication_1_1BasicTokenResolver}\index{Cqrs.\+Authentication.\+Basic\+Token\+Resolver@{Cqrs.\+Authentication.\+Basic\+Token\+Resolver}}


Resolves basic, known parameter types when serialising with W\+CF.  


Inheritance diagram for Cqrs.\+Authentication.\+Basic\+Token\+Resolver\+:\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=2.000000cm]{classCqrs_1_1Authentication_1_1BasicTokenResolver}
\end{center}
\end{figure}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
virtual bool \hyperlink{classCqrs_1_1Authentication_1_1BasicTokenResolver_aee92bd9283bf949149a351c8d8cdb079_aee92bd9283bf949149a351c8d8cdb079}{Try\+Resolve\+Type} (Type data\+Contract\+Type, Type declared\+Type, Data\+Contract\+Resolver known\+Type\+Resolver, out Xml\+Dictionary\+String type\+Name, out Xml\+Dictionary\+String type\+Namespace)
\begin{DoxyCompactList}\small\item\em Indicates if the provided {\itshape data\+Contract\+Type}  is of type Guid, Nullable$<$\+Guid$>$, int, Nullable$<$integer$>$, string OR if it is other resolvable. \end{DoxyCompactList}\item 
virtual Type \hyperlink{classCqrs_1_1Authentication_1_1BasicTokenResolver_aeb429e2f8dca2c8e96682be8d7a590bb_aeb429e2f8dca2c8e96682be8d7a590bb}{Resolve\+Name} (string type\+Name, string type\+Namespace, Type declared\+Type, Data\+Contract\+Resolver known\+Type\+Resolver)
\begin{DoxyCompactList}\small\item\em Returns the Type if the {\itshape type\+Name}  is resolvable or if it is of type Guid, Nullable$<$\+Guid$>$, int, Nullable$<$integer$>$ and string \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Resolves basic, known parameter types when serialising with W\+CF. 



\subsection{Member Function Documentation}
\mbox{\Hypertarget{classCqrs_1_1Authentication_1_1BasicTokenResolver_aeb429e2f8dca2c8e96682be8d7a590bb_aeb429e2f8dca2c8e96682be8d7a590bb}\label{classCqrs_1_1Authentication_1_1BasicTokenResolver_aeb429e2f8dca2c8e96682be8d7a590bb_aeb429e2f8dca2c8e96682be8d7a590bb}} 
\index{Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver@{Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver}!Resolve\+Name@{Resolve\+Name}}
\index{Resolve\+Name@{Resolve\+Name}!Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver@{Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver}}
\subsubsection{\texorpdfstring{Resolve\+Name()}{ResolveName()}}
{\footnotesize\ttfamily virtual Type Cqrs.\+Authentication.\+Basic\+Token\+Resolver.\+Resolve\+Name (\begin{DoxyParamCaption}\item[{string}]{type\+Name,  }\item[{string}]{type\+Namespace,  }\item[{Type}]{declared\+Type,  }\item[{Data\+Contract\+Resolver}]{known\+Type\+Resolver }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Returns the Type if the {\itshape type\+Name}  is resolvable or if it is of type Guid, Nullable$<$\+Guid$>$, int, Nullable$<$integer$>$ and string 



Implements \hyperlink{interfaceCqrs_1_1Services_1_1IServiceParameterResolver_a37c4b53616192e4e2f15ab4661ab99ae_a37c4b53616192e4e2f15ab4661ab99ae}{Cqrs.\+Services.\+I\+Service\+Parameter\+Resolver}.

\mbox{\Hypertarget{classCqrs_1_1Authentication_1_1BasicTokenResolver_aee92bd9283bf949149a351c8d8cdb079_aee92bd9283bf949149a351c8d8cdb079}\label{classCqrs_1_1Authentication_1_1BasicTokenResolver_aee92bd9283bf949149a351c8d8cdb079_aee92bd9283bf949149a351c8d8cdb079}} 
\index{Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver@{Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver}!Try\+Resolve\+Type@{Try\+Resolve\+Type}}
\index{Try\+Resolve\+Type@{Try\+Resolve\+Type}!Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver@{Cqrs\+::\+Authentication\+::\+Basic\+Token\+Resolver}}
\subsubsection{\texorpdfstring{Try\+Resolve\+Type()}{TryResolveType()}}
{\footnotesize\ttfamily virtual bool Cqrs.\+Authentication.\+Basic\+Token\+Resolver.\+Try\+Resolve\+Type (\begin{DoxyParamCaption}\item[{Type}]{data\+Contract\+Type,  }\item[{Type}]{declared\+Type,  }\item[{Data\+Contract\+Resolver}]{known\+Type\+Resolver,  }\item[{out Xml\+Dictionary\+String}]{type\+Name,  }\item[{out Xml\+Dictionary\+String}]{type\+Namespace }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [virtual]}}



Indicates if the provided {\itshape data\+Contract\+Type}  is of type Guid, Nullable$<$\+Guid$>$, int, Nullable$<$integer$>$, string OR if it is other resolvable. 



Implements \hyperlink{interfaceCqrs_1_1Services_1_1IServiceParameterResolver_a31c82a00b192b877faff6df99e1b689b_a31c82a00b192b877faff6df99e1b689b}{Cqrs.\+Services.\+I\+Service\+Parameter\+Resolver}.

