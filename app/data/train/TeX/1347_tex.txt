\section{Conclusion}

Our design has four advantages.
\begin{itemize}
\item The user adds runtime API calls or directives only where the data should be saved and compared, minimizing the changes required to the program.
\item Directives allow the compiler to implicitly add more information, such as the datatype of the data to be compared, variable name, function name, and file location.
\item The directives can be maintained in the program, only enabling them with a command line option when testing.
\item The same API calls or directives are used for both the \emph{reference} run, creating the reference file, as for the \emph{test} run, comparing to that file.
The behavior of the API calls or directives are controlled by a runtime environment variable.
\end{itemize}

Future work will look at improving the implementation, and introducing options to allow the programmer to save and compare values less frequently under environment variable control.
