\section{Setup}

\subsection{Prerequisites}
To run N2O websites you will need Erlang R17 or higher and basho rebar installed.
N2O works on Windows, Mac and Linux.

\subsection{Kickstart Bootstrap}
To try N2O you only need to fetch it from Github and build. We don't use
fancy scripts so building process is OTP compatible: bootstrap site
is bundled as an Erlang release.

\vspace{1\baselineskip}
\begin{lstlisting}
    $ git clone https://github.com/5HT/n2o
    $ cd n2o/samples
    $ make && make console
\end{lstlisting}
\vspace{1\baselineskip}

Now you can try: \footahref{http://localhost:8000}{http://localhost:8000}.

\newpage
\subsection{Depending N2O Core}
If you want to start using raw N2O core you can use Cowboy dispatch parameter
for passing N2O http and websocket handlers and cowboy static handler:

\begin{lstlisting}[caption=web\_sup.erl]
    cowboy:start_http(http, 100, [{port, wf:config(transition_port)}],
                                 [{env, [{dispatch, dispatch_rules()}]}]),

    dispatch_rules() ->
        cowboy_router:compile(
            [{'_', [
            {"/static/[...]", cowboy_static,
                {priv_dir, ?APP, <<"static">>,[{mimetypes,cow_mimetypes,all}]}},
            {"/rest/:resource", rest_cowboy, []},
            {"/rest/:resource/:id", rest_cowboy, []},
            {"/ws/[...]", bullet_handler, [{handler, n2o_bullet}]},
            {'_', n2o_cowboy, []} ]}]).
\end{lstlisting}

N2O uses two ports for SSL and non-SSL connections: 

\begin{lstlisting}
    wf:config(n2o,port,443)
    wf:config(n2o,transition_port,80)
\end{lstlisting}

These ports you can also redefine WS:// port in bullet connection inside template:

\begin{lstlisting}
    <script>var transition = {pid: '', host: 'localhost', port: '8000' };</script>
\end{lstlisting}

And then add a minimal {\bf index.erl} page:

\begin{lstlisting}[caption=index.erl]
    -module(index).
    -compile(export_all).
    -include_lib("n2o/include/wf.hrl").

    main() -> #span{text="Hello"}.
\end{lstlisting}

\subsection{Rich Clients Applications Assembling}
You will also need node.js, npm, less and uglify-js to assemble
client-side N2O applications by packaging CSS/LESS, JavaScript and HTML templates.

\vspace{1\baselineskip}
\begin{lstlisting}
    $ sudo apt-get install python-software-properties
    $ sudo add-apt-repository ppa:richarvey/nodejs
    $ sudo apt-get update
    $ sudo apt-get install nodejs npm
    $ sudo npm install uglify-js -g
\end{lstlisting}
\vspace{1\baselineskip}

Having accomplished that you will be able to build N2O App Store
Demo \footahref{http://github.com/5HT/skyline}{http://skyline.synrc.com}.
