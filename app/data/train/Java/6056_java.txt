package com.coolweather.app.db;

import java.util.ArrayList;
import java.util.List;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import com.coolweather.app.model.City;
import com.coolweather.app.model.County;
import com.coolweather.app.model.Province;

public class CoolWeatherDB {
	/*
	 * Êý¾Ý¿âÃû
	 */
	public static final String DB_NAME = "cool_weather";
	/*
	 * Êý¾Ý¿â°æ±¾
	 */
	public static final int VERSION = 1;
	private static CoolWeatherDB coolWeatherDB;
	private SQLiteDatabase db;
	/*
	 * ½«¹¹Ôì·½·¨Ë½ÓÐ»¯
	  */
	private CoolWeatherDB(Context context){
		CoolWeatherOpenHelper dbHelper = new CoolWeatherOpenHelper(context,DB_NAME,null,VERSION);
		db = dbHelper.getWritableDatabase();
		
	}
	/*
	 * »ñÈ¡CoolWeatherDBÊµÀý
	 * */
	public synchronized static CoolWeatherDB getInstance(Context context){
		if(coolWeatherDB == null){
			coolWeatherDB = new CoolWeatherDB(context);
		}
		return coolWeatherDB;
	}
	/*
	 * ½«ProvinceÊµÀý´æ´¢µ½Êý¾Ý¿â¡£
	 * */
	public void saveProvince(Province province){
		if (province !=null){
			ContentValues values = new ContentValues();
			values.put("province_name", province.getProvinceName());
			db.insert("Province", null, values);
		}
	}
	/*
	 * ´ÓÊý¾Ý¿â¶ÁÈ¡È«¹úËùÓÐÊ¡·ÝµÄÐÅÏ¢¡£
	 * */
	public List<Province> loadProvinces(){
		List<Province>list = new ArrayList<Province>();
		Cursor cursor = db.query("Province", null, null,null, null, null, null);
		if(cursor.moveToFirst()){
			do{
				Province province = new Province();
				province.setId(cursor.getInt(cursor.getColumnIndex("id")));
				
				province.setProvinceName(cursor.getString(cursor.getColumnIndex("province_name")));
				list.add(province);
			}while(cursor.moveToNext());
		}
		return list;
	}
	/*
	 * ½«CityÊý¾Ý´æ´¢µ½Êý¾Ý¿âÖÐ
	 */
	public void saveCity(City city) {
		if(city !=null){
			ContentValues values = new ContentValues();
			values.put("city_name", city.getCityName());
			values.put("province_id", city.getProvinceId());
			db.insert("City", null, values);
		}
	}
	/*
	 * ´ÓÊý¾Ý¿â¶ÁÈ¡Ä³Ê¡ÏÂËùÓÐµÄ³ÇÊÐÐÅÏ¢
	 * */
	public List<City> loadCities(int provinceId){
		List<City>list = new ArrayList<City>();
		Cursor cursor = db.query("City", null, "province_id = ?",new String[] {String.valueOf(provinceId) },null,null,null);
		if(cursor.moveToFirst()){
			do {
				City city = new City();
				city.setId(cursor.getInt(cursor.getColumnIndex("id")));
				city.setCityName(cursor.getString(cursor.getColumnIndex("city_name")));
				city.setProvinceId(provinceId);
				list.add(city);
			}while(cursor.moveToNext());
			
		}
		return list;
	}
	/*
	 * ½«CountyÊµÀý´æ´¢µ½Êý¾Ý¿â¡£
	 */
	public void saveCounty(County county){
		if(county !=null){
			ContentValues values = new ContentValues();
			values.put("county_name", county.getCountyName());
			values.put("city_id", county.getCityId());
			db.insert("County", null, values);
		}
	}
	/*
	 * ´ÓÊý¾Ý¿â¶ÁÈ¡Ä³³ÇÊÐÏÂËùÓÐµÄÏØÐÅÏ¢¡£
	 */
	public List<County> loadCounty(int cityId){
		List<County> list = new ArrayList<County>();
		Cursor cursor = db.query("County", null, "city_id = ?", new String [] {String.valueOf(cityId)}, null, null,null);
		if (cursor.moveToFirst()){
			do{
				County county = new County();
				county.setCityId(cursor.getInt(cursor.getColumnIndex("id")));
				county.setCountyName(cursor.getString(cursor.getColumnIndex("county_name")));
				
				county.setCityId(cityId);
				list.add(county);
			}while(cursor.moveToNext());
		}
		return list;
		}
	
}
