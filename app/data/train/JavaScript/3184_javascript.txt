'use strict'

// create a net-peer compatible object based on a UDP datagram socket
module.exports = function udpAdapter(udpSocket, udpDestinationHost, udpDestinationPort) {
  const _listeners = []

  udpSocket.on('message', (msg, rinfo) => {
    //console.log(`server got: ${msg} from ${rinfo.address}:${rinfo.port}`)
    for(let i=0; i < _listeners.length; i++) {
      _listeners[i](msg)
    }
  })

  let on = function(event, fn) {
    if (event === 'data') {
      _listeners.push(fn)
    }
  }

  let send = function(message) {
    udpSocket.send(Buffer.from(message.buffer), udpDestinationPort, udpDestinationHost, (err) => { })
  }

  return Object.freeze({ on, send })
}
