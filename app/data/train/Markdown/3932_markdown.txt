# NEI平台规则函数使用说明

为方便处理相同的逻辑, 在 NEI 平台上可以创建规则函数, 用户可以自己编写 JavaScript 脚本来处理数据。

>注意: 参数可以通过 arguments 对象获取, 请参考: [arguments 对象说明](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments)

目前有三类规则函数: 生成规则、发送规则、接收规则。

## 生成规则

指的是 mock 数据的生成规则, 用户可以编写 JavaScript 脚本来生成自定义的 mock 数据。

在生成规则的函数内部，可以通过 `this.param` 获取到当前参数的内容，可以通过 `this.ds` 获取所有的数据模型列表。

>提示: 目前 NEI 系统已经内置了 10 个规则函数方便用户调用, 具体请查看: [NEI平台系统预置的规则函数集](./NEI平台系统预置的规则函数集.md)

>注意: NEI 系统内置的方法通过 `NEI.[方法名]` 的形式调用, 比如 `NEI.chinese(15)`, 用户自定义的规则函数直接调用, 比如用户定义了一个叫 `RandomPrizeType` 的规则函数, 则可以直接调用 `RandomPrizeType()`

比如, 你在 NEI 上定义了一个 User 的数据模型, 它有两个字段:

```json
{
    "id": "{Number}",
    "name": "{String}"
}
```

其中, `name` 字段的类型是 `String`, 默认生成的 mock 数据是随机的英文字符。此时如果指定它的生成规则是 `NEI.chinese(15)`, 则生成的 mock 数据是长度为 15 的随机中文字符。


## 发送规则

在测试异步接口时, 有时在发送数据之前可能想对数据再进行一层处理, 此时可以使用发送规则的功能。

NEI 平台在调用发送规则时, 会传入一个参数对象, 然后是用户传入的参数。

第一个系统传入的对象包含以下 4 个字段:

```json
{
    "host": "接口的服务器地址",
    "path": "接口的相对路径",
    "method": "接口的请求方法",
    "headers": "请求头参数, 是一个键值对列表对象",
    "data": "请求的 mock 数据"
}
```

**发送规则须返回一个对象**, 并且该对象也包含上述 4 个字段, 测试接口时真正发送的数据是返回对象中的相应数据。


## 接收规则

在测试异步接口时, 有时在接收数据之前可能想对数据再进行一层处理, 此时可以使用接收规则的功能。

NEI 平台在调用接收规则时, 会传入一个参数对象, 然后是用户传入的参数。

第一个系统传入的对象包含以下 4 个字段:

```json
{
    "host": "接口的服务器地址",
    "path": "接口的相对路径",
    "method": "接口的请求方法",
    "headers": "服务器返回的响应头参数, 是一个键值对列表对象",
    "data": "服务器返回的响应数据"
}
```

**接收规则须返回一个对象**, 并且该对象也包含上述 4 个字段, 在验证接口的响应时, 使用的是返回对象中的相应数据。


## 其他说明

在发送规则和接收规则中, NEI 内置的规则函数, 除了 `repeat` 和 `loop` 外, 其他的都可以直接调用。







