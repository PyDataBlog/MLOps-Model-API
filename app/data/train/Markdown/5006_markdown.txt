[_template]: ../templates/roundup.html
[date]: / "2014-06-11T15:50:49+01:00"
[modified]: / "2014-08-01T15:12:40+01:00"
[“”]: a ""
# Haxe Roundup № 204

[Cristian Baluta][tw1] has renamed his Objective-C Haxe compile target to Swift, I 
wonder what its going be [targeting][l1] now...

[Lars Doucet][gh1] has written an update on the [Defender's Quest 2 DevLog][l2] which
goes into detail of how he plans on using [Crash Dumper][l3] to provide a solid game.

[Sven Bergström][tw2] who is one of the main contributors to Lime, the low level library
that powers OpenFL, has created and released [hxcollision][l11]. It is a port of the [Separating
Axis Theorem][l4], currently supporting polygons and circles. It only provides support
for collision, no physics have been include, by design. The [site][l11] provides a solid
set of demos, examples, documentation and release notes.

[Yummy Circus][l5] made by [Puzzl][tw3] are using Haxe and OpenFL to deploy to the
OUYA, Windows, Mac, Linux, Amazon Fire TV, Nvidia Shield and more, allowing up to 12
players.

![haxe openfl puzzl](/img/204/puzzl.jpg "Yummy Circus!")

[Michel Käser][tw4] has been busy this week. He has created usage examples for [hxdispatch],
his optionally asynchronous dispath library, [documenting][l6] Cascades, Futures, 
Dispatcher and Promise.

Michel has created and released [hxstd.vm] which covers everything you know from
the standard library, but unified under a single package allowing cross-platform
usage of Mutex, Locks and Threads without any more conditional imports.

Michel then finishes off by creating bindings to [nanomsg], which is a socket library
that provides several common communication patterns that make networking fast, scalable
and easy to use. The [hxnn] library can be used with the C++ and Neko compile targets.

![haxe openfl haxeflixel bronko social](/img/204/bronko.png "Bronko Blue - The Kitten Copter")

[Chris Willcocks][tw5] has created and released a programmers calculator using Haxe,
HaxeFlixel and HScript to the HaxeFlixel [demos][l7] repository. Checkout the [live][l8]
version.

This is an interesting use of Haxe, [Paul Fitzpatrick][tw6] is using Haxe to publish
the compiled output of [daff] to npm, pip and gem, which are package managers for
JavaScript, Python and Ruby programming languages, respectively.

[Dan Korostelev][tw7] has pushed a proof of concept [unpack] macro to his [haxe thingies]
library. It allows you to unpack arrays and object fields into local variables,
similar to pattern matching.

If you need to generate es5 style properties [Juraj Kirchheim][tw8] has [written][l9]
a custom JavaScript generator using macros.

![haxe motiontwins uppercup](/img/204/uppercup.png "Uppercup Football coming soon!")

And to finish up, you can now get the [Haxe manual][l10] on your ebook, currently 
only `epub` and `mobi` formats are available.

[tw1]: https://twitter.com/cristi_tulcea "@cristi_tulcea"
[tw2]: https://twitter.com/___discovery "@___discovery"
[tw3]: https://twitter.com/PuzzlTweet "@PuzzlTweet"
[tw4]: https://twitter.com/frontenderch "@frontenderch"
[tw5]: https://twitter.com/cwkx "@cwkx"
[tw6]: https://twitter.com/fitzyfitzyfitzy "@fitzyfitzyfitzy"c
[tw7]: https://twitter.com/nadako "@nadako"
[tw8]: https://twitter.com/back2dos "@back2dos"
	
[gh1]: https://github.com/larsiusprime "@larsiusprime"
	
[l1]: https://github.com/ralcr/swift-target "The Haxe Swift Compile Target"
[l2]: http://discourse.leveluplabs.com/t/defenders-quest-2-devlog/292/20 "Defender's Quest 2 DevLog"
[l3]: https://github.com/larsiusprime/crashdumper "CrashDumper on GitHub"
[l4]: http://en.wikipedia.org/wiki/Hyperplane_separation_theorem "Hyperplane Separation Theorem on Wikipedia"
[l5]: http://yummycircus.com/ "Yummy Circus"
[l6]: https://github.com/MaddinXx/hxdispatch/blob/develop/docs/Examples.md "Hxdispatch Usage Examples"
[l7]: https://github.com/HaxeFlixel/flixel-demos "HaxeFlixel Demos on GitHub"
[l8]: http://www.cwkx.com/calc.swf "HaxeFlixel Programmers Calculator"
[l9]: https://gist.github.com/back2dos/ad1703c631abbd451b75 "Generate es5 style properties"
[l10]: https://github.com/HaxeFoundation/HaxeManual "Haxe Manual Ebook"
[l11]: https://underscorediscovery.github.io/hxcollision/ "Hxcollision on GitHub"
	
[hxdispatch]: https://github.com/MaddinXx/hxdispatch "Hxdispatch on GitHub"
[hxstd.vm]: https://github.com/MaddinXx/hxstd/tree/develop/src/hxstd/vm "Hxstd on GitHub"
[nanomsg]: http://nanomsg.org/ "NanoMsg"
[hxnn]: https://github.com/MaddinXx/hxnn "Hxnn on GitHub"
[daff]: https://github.com/paulfitz/daff "Daff: Data Diff"
[haxe thingies]: https://github.com/nadako/haxe-thingies "Haxe Thingies on GitHub"
[unpack]: https://github.com/nadako/haxe-thingies#unpack "Haxe Thingies on GitHub"
