## Boot, reboot, and shutdown

* CentOS uses systemd for initialization manager
* 'shutdown' command is the convienience command - use it - can do everything you need
* Reboot - `shutdown -r `
* Power off - `shutdown -P`
* Power off in 5 minutes with message - `shutdown -P +5 This is the broadcasted message`
* Cancel - `shutdown -c`
* Shutdown imediately - `shutdown -P +0` or `shutdown -P now`
* Halt - `shutdown -h`


### Boot into targets

* Targets replace runlevels in systemd
* Systemd provides the advantage of parallelization bootup - much faster.  Also manages dependencies
* `systemctl list-units --type=target` - See available targets
* `systemctl -t help` - see available unit types
* `/usr/lib/systemd/system` - standard unit configuration files
* `/etc/systemd/system` - Additional unit configuration files 
* `systemctl list-dependencies multi-user.target` - see dependency tree for specific target
* `systectl get-default` - see default target
* `systemctl isolate <target>` - change target (target must be configured to allow changing into it, `AllowIsolate=yes`
* `systemctl set-default <target>` - set new default target

### Interupt boot process and modify boot target

* Press any key during grub boot to interupt and enter Grub menu
* Edit desired OS and press `e` to edit the boot commands
* Modify `linux16` line to edit kernel command
* Append `systemd.unit=rescue.target` to boot into rescue target
* Once at command line, run `mount -oremount,rw /sysroot` 
* `chroot /sysroot` to give access to the passwd command
* 

### Interrupt boot process to gain access to a system (to, for example, change the root password)

* Enter grub boot menu
* Edit boot directives
* add `rd.break` to stop initramfs before passing control to linux kernel, enabling us to 'break into' the root file system
* remount /sysroot with rw using `mount -oremount,rw /sysroot`
* change root to /sysroot `chroot /sysroot`
* Change root password with `passwd`
* `touch /.autorelabel` to enable SELinux

### Common targets 

* `multi-user.target` - Standard target
* `graphical.target` - GUI
* `emergency.target` - root command prompt and read only file system
* `rescue.target` - single user env with minimal environment to troubleshoot issues


### Log and Journal Files

`/var/log/`

### Journald (systemd journal daemon)
 
* `journalctl`
* Not persistent
as
* `journalctl -n` - last 10 lines (same as tail /var/log/secure)
* `journalctl -f` - tail 
* `journalctl -xn` - `x` provides e`x`planations
* `journalctl _SYSTEM_UNIT=httpd.service` - see information on specific system unit
* `systemctl -t help` or `ls /usr/lib/systemd` to see available units
* `journalctl -p info` - see all info prioirty messages (as established in '/etc/rsyslog.conf')
* `journalctl --since=yesterday` - see all log files since yesterday (remember logs are non persistent by default)
* `systemd-analyze` - info on boot process (how long boot processs took)
* `systemd-analyze blame` - see boot time by unit configuration file (what is holding up the boot process?)

### Virtual Machines

* `virsh`  - CLI for managing virtual machines (guests) and hypervisor
* `virsh - list --all` - list all virtual machines, including non-running VMs
* `virsh - shutdown <name>` - shutdown virtual machine
* `virsh - start <name>` - start VM
* `virt-manager` - GUI for managing VMs

### 
