# 前端个人知识笔记（第四章 定位、层级以及居中)

标签（空格分隔）： 前端笔记 知识库 HTML

---

[TOC]

## Position

- static			默认值，不定位
- relative			相对定位
    - 只加相对定位，不设置元素移动的位置(top, bottom, left, right值)，元素和之前是没有变化
    - 根据自己原来的位置计算移动的位置
    - 不脱离文档流，元素移走以后，原来的位置还会被保留
    - 加上相对定位后对原来的元素本身的特征没有影响
    - 提升层级
- absolute			绝对定位
    - 完全脱离文档流
    - 行内元素支持所有样式（与加上浮动或者inline-block以后的效果是一样的）
    - 如果父级有定位，那位置会根据父级移动。如果父级没有定位，那位置根据可视区移动。(一般情况下，要用到绝对定位的时候，都会给父级来一个相对定位, *子元素绝对定位, 父元素相对定位*)
    - 提升层级
    - 触发BFC
- fixed			固定定位
    - 完全脱离文档流
    - 行内元素支持所有样式（与加上浮动或者inline-block以后的效果是一样的）
    - 相对可视区来移动位置
    - 提升层级
    - 触发BFC
    - IE6不支持

## z-index

 - 在正常情况下，层级的大小由顺序决定，后面的元素要比前面的元素的层级要高
 - 有定位元素的层级要比没有定位元素层级要高
 - 在都有定位的情况下，层级还是取决于书写顺序
 - z-index	层级，它的值是一个数字，数字越大层级越高（在同一个层里）

## 居中

需要注意的是, 以下例子中parent的宽高, 可以通过上下文确定或者手动指定。

### 水平居中

1. `margin: 0 auto`
    - 用在子元素上的
    - 如果它是行内元素, 需要把它转成块元素`display:block`(行内元素没margin效果)

2. `text-align: center`

    - 用在父元素上的
    - 子元素不能是行内元素, 需要是块元素或行内块元素。


### 水平垂直居中

1. 经典方法, 绝对定位加上子元素的宽高一半的负边距。 
    - 用在子元素上的
    - 需要知道子元素的宽高
    ```css
    
    .parent{
        position: relative;
    }
    
    .children{
        position: absolute;
        width: 100px;
        height: 150px;
        top: 50%;
        width: 50%;
        margin-top: -75px; /* 高的一半 */
        margin-left: -50px; /* 宽的一半 */
    }
   ```
2. 经典方法: `margin: auto`
     - 用在子元素上的
     - 不用受子元素宽高限制
    ```css
    
        .parent{
            position: relative;
        }
        
        .children{
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            margin: auto;
        }
    
    ```
3. 绝对定位和transform
    - 用在子元素上的
    - 使用了transform方法, 如果支持CSS3的话, 在性能上有优势。

    ```css
    
        .parent{
            position: relative;
        }
        
        .children{
            position: absolute;
            width: 100px;
            height: 150px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    
    ```
4. `display: table-cell`
    - 用在父元素上的
    - 让父元素变成表格, 再用表格的样式居中。

    ```css
    
        .parent{
            display: table-cell;
            vertical-align: middle;
            text-align: center;
            width: 300px; 
            height: 300px; 
        }
        
        .children{
        
            width: 100px;
            height: 150px;
        }
    
    ```

5. CSS3新特性 flexbox
    - 用在父元素身上
    - PC有兼容问题, 移动端完美
    - 未来的方法

    ```css
        .parent{
            display: flex;
            justify-content: center;
            align-items: center;
            width: 300px; 
            height: 300px; 
        }
        
        .children{
        
            width: 100px;
            height: 150px;
        }
    ```
6. 利用`vertical-align: middle`

    - 需要有一个块参照元素(如下面的`.refer`)
    - 父元素需要使用`font-size: 0`消去子元素间产生的间隙
    - 子元素宽高不需要确定
    
    ```css
            .parent{
                text-align:center;
                font-size: 0;
            }
            
            .refer{
                width: 0;
                height: 100%;
                vertical-align: middle;
                display: inline-block;
            }
            
            .children{
                display: inline-block;
                vertical-align: middle;
                font-size: 14px;
                text-align: left;
            }
    ```
    
    ```html
            <div class="parent">
                <div class=“refer”></div>
                <div class=“children”>需要内容把我撑开</div>
            </div>
    ```