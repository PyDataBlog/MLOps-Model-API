# Annotated Disassembly of prog.c #

This program defines 2 integer variables, assigns values to the and returns the sum of the two values.

    00000000004015b0 <main>:
	  ;	Start of prolog
      4015b0:	55                   	push   %rbp
      4015b1:	48 89 e5             	mov    %rsp,%rbp
	  ;	Allocate 48 bytes on the stack (why)?
      4015b4:	48 83 ec 30          	sub    $0x30,%rsp
      4015b8:	e8 a3 01 00 00       	callq  401760 <__main>
	  ;	Initialize the 2 variables.
      4015bd:	c7 45 fc 05 00 00 00 	movl   $0x5,-0x4(%rbp)  ;  i = 5
      4015c4:	c7 45 f8 06 00 00 00 	movl   $0x6,-0x8(%rbp)  ;  j = 6
	  ;	Since arithmetic operations are  done in registers, copy i to the edx register.
      4015cb:	8b 55 fc             	mov    -0x4(%rbp),%edx
	  ;	Copy j to the eax register (which will hold our return code at the end of the program).
      4015ce:	8b 45 f8             	mov    -0x8(%rbp),%eax
	  ;	Perform the actual addition eax = eax + edx
      4015d1:	01 d0                	add    %edx,%eax
      4015d3:	48 83 c4 30          	add    $0x30,%rsp
	  ;	pop the return address and return
      4015d7:	5d                   	pop    %rbp
      4015d8:	c3                   	retq   
      4015d9:	90                   	nop
      4015da:	90                   	nop
      4015db:	90                   	nop
      4015dc:	90                   	nop
      4015dd:	90                   	nop
      4015de:	90                   	nop
      4015df:	90                   	nop
