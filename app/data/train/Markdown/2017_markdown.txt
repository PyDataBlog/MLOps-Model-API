<!-- vscode-markdown-toc -->
* 1. [Language](#Language)
* 2. [Tips](#Tips)
* 3. [Pickle](#Pickle)
* 4. [DSL](#DSL)
* 5. [Libraries & resources](#Librariesresources)
* 6. [FP](#FP)
* 7. [Flask](#Flask)

<!-- vscode-markdown-toc-config
	numbering=true
	autoSave=true
	/vscode-markdown-toc-config -->
<!-- /vscode-markdown-toc -->
# Tips related with Python

##  1. <a name='Language'></a>Language

- Inline if  
  [How to write inline if statement for print?](http://stackoverflow.com/questions/11880430/how-to-write-inline-if-statement-for-print)  
  if expression (introduced in **Python 2.5**)
    ```
    expression_if_true if condition else expression_if_false
    ```
    And note, that both print a and b = a are statements. Only the a part is an expression. So if you write
    ```python
      print a if b else 0
    ```
    it means
    ```python
    print (a if b else 0)
    ```
    and similarly when you write
    ```python
    x = a if b else 0
    ```
    it means
    ```python
    x = (a if b else 0)
    ```
-  Python Time processing
  * [python time, datetime, string, timestamp相互转换](http://blog.sina.com.cn/s/blog_b09d460201018o0v.html)
  * [Converting datetime.date to UTC timestamp in Python](http://stackoverflow.com/questions/8777753/converting-datetime-date-to-utc-timestamp-in-python)
  
##  2. <a name='Tips'></a>Tips
  - [Constantly print Subprocess output while process is running](http://stackoverflow.com/questions/4417546/constantly-print-subprocess-output-while-process-is-running/4417735#4417735
  )
  
  Using iter you can yield lines as soon as the command outputs them: lines = iter(fd.readline, ""). A full example:

  ```python
        from __future__ import print_function # Only Python 2.x
        import subprocess

        def execute(cmd):
            popen = subprocess.Popen(cmd, stdout=subprocess.PIPE, universal_newlines=True)
            for stdout_line in iter(popen.stdout.readline, ""):
                yield stdout_line

            popen.stdout.close()
            return_code = popen.wait()
            if return_code:
                raise subprocess.CalledProcessError(return_code, cmd)

        # Example
        for path in execute(["locate", "a"]):
            print(path, end="")
  ```
##  3. <a name='Pickle'></a>Pickle
  [Official Document](https://docs.python.org/3.5/library/pickle.html)

##  4. <a name='DSL'></a>DSL
  - [pyparsing](http://pyparsing.wikispaces.com/)
  - [funcparserlib](https://github.com/vlasovskikh/funcparserlib)

  - [DSL与自动化测试 – 用Python实现简单的DSL](http://magustest.com/blog/python/dsl-automation-testing-using-python/)

##  5. <a name='Librariesresources'></a>Libraries & resources
- [Awesome Python](http://awesome-python.com/)
  A curated list of awesome Python frameworks, libraries, software and resources.

- [scales - Metrics for Python](https://github.com/Cue/scales)  
  Tracks server state and statistics, allowing you to see what your server is doing. It can also send metrics to Graphite for graphing or to a file for crash forensics.

  scales is inspired by the fantastic metrics library, though it is by no means a port.
  
- [omergertel/pyformance](https://github.com/omergertel/pyformance/)  
  A Python port of the core portion of a Java Metrics library by Coda Hale, with inspiration by YUNOMI - Y U NO MEASURE IT?

  PyFormance is a toolset for performance measurement and statistics, with a signaling mechanism that allows to issue events in cases of unexpected behavior
##  6. <a name='FP'></a>FP

- Class & Closure  
  A class is **“data with operations attached”** while a closure is **“operations with data attached.”**
  classes emphasizing mutable or rebindable state, and closures emphasizing immutability and pure functions. 

## Excel

- [python操作Excel读写--使用xlrd](http://www.cnblogs.com/lhj588/archive/2012/01/06/2314181.html)

##  7. <a name='Flask'></a>Flask
  Here are my notes for my Windows installation:

  ```bash
    pip install -r requirements/dev.txt
  ```

    Ensure no spaces in paths in project
    Rename "flask.exe" in /scripts to "flask"
    set FLASK_DEBUG=1 and set FLASK_APP=autoapp.py
    cd [YOURCOOKIECUTTERDIRECTORY]
    flask run

## Pip

* [Remove cache for Pip](https://stackoverflow.com/questions/9510474/removing-pips-cache)

  Clear the cache directory where appropriate for your system

  * Linux and Unix
  ```bash
    ~/.cache/pip  # and it respects the XDG_CACHE_HOME directory.
  ```
  * OS X
  ```bash
    ~/Library/Caches/pip
  ```
  * Windows
  ```bash
    %LocalAppData%\pip\Cache
  ```