      SUBROUTINE KURFIT (X,Y,YFIT,NPTS,N,A,SIGMAA,NTERMS,NT,
     :                   FUNCTN,FDERIV,FLAMDA,CHISQR,STATUS)
C+
C     KURFIT.
C  
C     Non-linear least squares routine, based on routine in
C     Bevington p238.
C
C  Given;
C   X     (RA) Set of X values to be fitted.
C   Y     (RA)  "  "  Y   "    "  "    "   .
C   YFIT  (RA) Set of Y values generated by the final solution.
C   NPTS  (I)  No. of points to be fitted.
C   N     (I)  Size of arrays to hold data.
C   NTERMS (I) No. of terms to be fitted.
C   NT    (I)  Size of parameter arrays.
C   FUNCTN (F) External function to be fitted.
C   FDERIV (F) Derivative of the function to be fitted.
C   FLAMDA (R) Non-linear least squares parameter lamda.
C
C  Returned;
C   YFIT  (RA) Fit evaluated at the data points.
C   A     (RA) derived set of parameters.
C   SIGMAA (RA) Errors on parameters.
C   FLAMDA (R)  Modified non-linear least squares parameter.
C   CHISQR (R) Mean square residual.
C   STATUS (I) Return status;
C              = 0 - Successful return.
C              = 1 - More parameters required than data points.
C              = 2 - Invalid arithmetic operation attempted
C                    (routine has gone wild).
C
C  Subroutine called;
C   DMATINV.
C
C  Functions called;
C   Internal functions called:-                FCHISQ.
C   Functions passed in calling arguments:-    FUNCTN, FDERIV.
C
C  A C Davenhall./ROE/                                   4/8/82.
C  A C Davenhall./ROE/  {Modified}                      26/7/83.
C-
      IMPLICIT NONE
C
      INTEGER NPTS,N,NTERMS,NT,STATUS
      REAL X(N),Y(N),YFIT(N)
      REAL A(NT),SIGMAA(NT)
      REAL CHISQR,FLAMDA
C
C    Define functions passed in calling argument.
C
      REAL FUNCTN,FDERIV
C
C
      DOUBLE PRECISION ARRAY(10,10),ALPHA(10,10),BETA(10)
      DOUBLE PRECISION WORK
      REAL DERIV(10),B(10)
      INTEGER I,J,K,NFREE
      REAL XPT,DIFF,CHISQ1
      LOGICAL OKAY
C
C    Define the function used internally.
C
      REAL FCHISQ
C
C
      NFREE=NPTS-NTERMS
      IF (NFREE.GT.0) THEN
C
C    Enough data points to fit the no. of parameters requested.
C
        STATUS=0
C
C    Evaluate the alpha and beta matrices.
C
        DO I=1,NTERMS
          BETA(I)=0.0D0
          DO J=1,I
            ALPHA(I,J)=0.0D0
          END DO
        END DO
        DO I=1,NPTS
          XPT=X(I)
          YFIT(I)=FUNCTN(XPT,A,NT)
          DIFF=Y(I)-YFIT(I)
          DO J=1,NTERMS
            DERIV(J)=FDERIV(XPT,A,NT,J)
            BETA(J)=BETA(J)+(DIFF*DERIV(J))
            DO K=1,J
              ALPHA(J,K)=ALPHA(J,K)+(DERIV(J)*DERIV(K))
            END DO
          END DO
        END DO
        DO J=1,NTERMS
          DO K=1,J
            ALPHA(K,J)=ALPHA(J,K)
          END DO
        END DO
C
C    Evaluate the Chi-square at the starting point.
C
        CHISQ1=FCHISQ(Y,YFIT,NPTS,N,NFREE)
        CHISQR=CHISQ1+1.0E1
C
C    Invert the modified curvature matrix to find new parameters.
C
        OKAY=.TRUE.
        DO WHILE (CHISQR.GT.CHISQ1.AND.OKAY)
          DO J=1,NTERMS
            DO K=1,NTERMS
              WORK=ALPHA(J,J)*ALPHA(K,K)
              IF (WORK.GT.1.0E-6) THEN
                ARRAY(J,K)=ALPHA(J,K)/DSQRT(WORK)
              ELSE
                ARRAY(J,K)=0.0D0
                OKAY=.FALSE.
                STATUS=2
              END IF
            END DO
            ARRAY(J,J)=1.0D0+FLAMDA
          END DO
          IF (OKAY) CALL DMATINV (ARRAY,NTERMS,NT)
          DO J=1,NTERMS
            B(J)=A(J)
            DO K=1,NTERMS
              WORK=ALPHA(J,J)*ALPHA(K,K)
              IF (WORK.GT.1.0E-6) THEN
                B(J)=B(J)+(BETA(K)*ARRAY(J,K)/DSQRT(WORK))
              ELSE
                B(J)=0.0D0
                OKAY=.FALSE.
                STATUS=2
              END IF
            END DO
          END DO
C
C    If chi-square increased, increase FLAMDA and try again.
C
          IF (OKAY) THEN
            DO I=1,NPTS
              XPT=X(I)
              YFIT(I)=FUNCTN(XPT,B,NT)
            END DO
            CHISQR=FCHISQ(Y,YFIT,NPTS,N,NFREE)
          END IF
          FLAMDA=1.0E1*FLAMDA
        END DO
        FLAMDA=1.0E1*FLAMDA
C
C    Evaluate parameters and uncertainties.
C
        IF (STATUS.EQ.0) THEN
          DO J=1,NTERMS
            A(J)=B(J)
            IF (ABS(ALPHA(J,J)).GT.1.0D-6) THEN
              WORK=ARRAY(J,J)/ALPHA(J,J)
              IF (WORK.GT.1.0D-6) THEN
                SIGMAA(J)=DSQRT(WORK)
              ELSE
                SIGMAA(J)=0.0E0
              END IF
            ELSE
              SIGMAA(J)=0.0E0
            END IF
          END DO
        ELSE
C
C    An illegal condition has arisen during the iterations -
C    erase any (wrong) solution that it might have produced.
C
          DO J=1,NTERMS
            A(J)=0.0E0
            SIGMAA(J)=0.0E0
          END DO
        END IF
C
      ELSE
C
C    Not enough data points to fit the requested no. of parameters.
C
        CHISQR=0.0E0
        STATUS=1
      END IF
C
      END
