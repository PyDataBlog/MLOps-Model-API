// Package ansiwriter wraps a standard io.Writer in ANSI escape codes to enable
// colorful output to an attached supported terminal.
package ansiwriter

import (
	"fmt"
	"io"
)

// Modifier is any function capable of generating an opening escape sequence.
type Modifier func() string

func escapeANSI(code int) string {
	return fmt.Sprintf("\033[%dm", code)
}

func Bold() string    { return escapeANSI(1) }
func Black() string   { return escapeANSI(30) }
func Red() string     { return escapeANSI(31) }
func Green() string   { return escapeANSI(32) }
func Yellow() string  { return escapeANSI(33) }
func Blue() string    { return escapeANSI(34) }
func Magenta() string { return escapeANSI(35) }
func Cyan() string    { return escapeANSI(36) }
func White() string   { return escapeANSI(37) }

type awr struct {
	io.Writer
	modifiers []Modifier
}

// New wraps a provided io.Writer in one or more escape sequences. It only makes
// sense to combine a single color with boldness since if two colors are
// specified then only the latter one will in fact be visible.
func New(w io.Writer, mods ...Modifier) io.Writer {
	return awr{w, mods}
}

func (a awr) Write(b []byte) (n int, err error) {
	for _, mod := range a.modifiers {
		a.Writer.Write([]byte(mod()))
	}
	n, err = a.Writer.Write(b)
	_, _ = a.Writer.Write([]byte("\033[0m"))
	return
}
