package controllers

import (
	"github.com/gin-gonic/gin"
	clayControllers "github.com/qb0C80aE/clay/controllers"
	"github.com/qb0C80aE/clay/extensions"
	"github.com/qb0C80aE/pottery/logics"
	"github.com/qb0C80aE/pottery/models"
)

type hostGroupController struct {
	*clayControllers.BaseController
}

func newHostGroupController() extensions.Controller {
	controller := &hostGroupController{
		BaseController: clayControllers.NewBaseController(
			models.SharedHostGroupModel(),
			logics.UniqueHostGroupLogic(),
		),
	}
	return controller
}

func (controller *hostGroupController) RouteMap() map[int]map[int]gin.HandlerFunc {
	routeMap := map[int]map[int]gin.HandlerFunc{
		extensions.MethodGet: {
			extensions.URLSingle: controller.GetSingle,
			extensions.URLMulti:  controller.GetMulti,
		},
		extensions.MethodPost: {
			extensions.URLMulti: controller.Create,
		},
		extensions.MethodPut: {
			extensions.URLSingle: controller.Update,
		},
		extensions.MethodDelete: {
			extensions.URLSingle: controller.Delete,
		},
	}
	return routeMap
}

var uniqueHostGroupController = newHostGroupController()

func init() {
	extensions.RegisterController(uniqueHostGroupController)
}
