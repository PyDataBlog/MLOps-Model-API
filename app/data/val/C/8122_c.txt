
#ifndef __PSMUX_H__
#define __PSMUX_H__


/*****************************************************************************
  1 ÆäËûÍ·ÎÄ¼þ°üº¬
*****************************************************************************/
#include    "TTFUtil.h"
#include    "AtMuxInterface.h"

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif

#pragma pack(4)

/*****************************************************************************
  2 ºê¶¨Òå
*****************************************************************************/
#define MUX_DLCI_PAYLOAD_LEN_MAX        (1852)      /*×î´óµÄÖ¡ÄÚÊý¾Ý³¤¶È*/

#define MUX_DLCI_ID_OFFSET              (1)         /* µ±Ç°DLCIµÄ¶¨ÒåÊÇ1µ½16, Òò´ËÓÐÒ»¸ö1µÄÆ«ÒÆÁ¿ */

#define MUX_FRAME_FLAG                  (0XF9)      /*MuxÖ¡µÄÆðÊ¼ºÍ½áÊø±êÖ¾·û*/

#define MUX_CONTROL_UIH                 (0xEF)

#define MUX_FRAME_LEN_0                 (0)
#define MUX_FRAME_LEN_1                 (1)
#define MUX_FRAME_LEN_2                 (2)
#define MUX_FRAME_LEN_3                 (3)
#define MUX_FRAME_LEN_4                 (4)
#define MUX_FRAME_LEN_5                 (5)
#define MUX_FRAME_LEN_6                 (6)
#define MUX_FRAME_LEN_7                 (7)
#define MUX_FRAME_LEN_8                 (8)

#define MUX_FRAME_LEN_128               (128)


/* »ñÈ¡ADSÏÂÐÐRAB INFOµØÖ· */
#define MUX_AT_UL_GET_DLCI_INFO_PTR(Dlci)           (&(g_stMuxAtUlDlciInfo[Dlci - MUX_DLCI_ID_OFFSET]))

/* »ñÈ¡MUXÉÏÐÐÊý¾Ý»Øµ÷º¯ÊýÖ¸Õë */
#define MUX_AT_UL_DLCI_GET_DATA_CALLBACK_FUNC(Dlci) (MUX_AT_UL_GET_DLCI_INFO_PTR(Dlci)->pRcvUlDlciDataFunc)

/*»ñµÃ½ÓÊÕÊ±×éÖ¡ÓÃÏà¹Ø²ÎÊý*/
#define MUX_GET_UL_RX_STAT()                        (&g_stMuxUnframeState.ucUnframeState)
#define MUX_GET_UL_RX_BUFF()                        (g_stMuxUnframeState.pUnframeBuf)
#define MUX_GET_UL_RX_HEAD()                        (g_stMuxUnframeState.aucHeadBuff)
#define MUX_GET_UL_RX_LEN()                         (&g_stMuxUnframeState.usLeftInfoLen)

/*»ñµÃ½ÓÊÕ»º³å*/
#define MUX_GET_RX_Q_ADDR()                         (&(g_stMuxUlQue))


#define MUX_SET_116_BIT(a,b,c)     (VOS_UINT8)(((VOS_UINT8)((a) & 0x01)) \
                                    | ((VOS_UINT8)(((b) << 1) & 0x02)) \
                                    | ((VOS_UINT8)(((c) << 2) & 0xFC)))

#define MUX_GET_116_BIT(uc, b)      (b) = (VOS_UINT8)(((uc) & 0xFC)>>2);

#define MUX_SET_17_BIT(a,b)         (VOS_UINT8)(((VOS_UINT8)((a) & 0x01) ) \
                                    |(VOS_UINT8)(((b) << 1) & 0xFE))

#define MUX_GET_17_BIT(uc, a, b)    (a) = ((VOS_UINT8)(uc) & 0x01);\
                                    (b) = (VOS_UINT8)(((uc) & 0xFE)>>1);


/*ÏÂÐÐÍ³¼ÆÐÅÏ¢*/
#define  MUX_DBG_DL_SEND_SUCC_PKT_NUM(n)            (g_stMuxStaticInfo.ulSuccSendDlPacketNums += (n))
#define  MUX_DBG_DL_SEND_FAIL_PKT_NUM(n)            (g_stMuxStaticInfo.ulFailSendDlPacketNums += (n))
#define  MUX_DBG_DL_FREE_PKT_NUM(n)                 (g_stMuxStaticInfo.ulFreeDlPacketNums += (n))


/*ÉÏÐÐÍ³¼ÆÐÅÏ¢*/
#define  MUX_DBG_UL_SEND_SUCC_PKT_NUM(n)            (g_stMuxStaticInfo.ulSuccSendUlPacketNums += (n))
#define  MUX_DBG_UL_SEND_FAIL_PKT_NUM(n)            (g_stMuxStaticInfo.ulFailSendUlPacketNums += (n))
#define  MUX_DBG_UL_GET_SUCC_PKT_NUM(n)             (g_stMuxStaticInfo.ulSuccGetUlPacketNums += (n))
#define  MUX_DBG_UL_DISCARD_PKT_NUM(n)              (g_stMuxStaticInfo.ulDiscardUlPacketNums += (n))
#define  MUX_DBG_UL_CALLBACK_FAIL_NUM(n)            (g_stMuxStaticInfo.ulGetDataFailNums += (n))
#define  MUX_DBG_GET_INVALID_UDI_HANDLE_NUM(n)      (g_stMuxStaticInfo.ulInvalidUdiHandleNums += (n))


/*****************************************************************************
  3 Ã¶¾Ù¶¨Òå
*****************************************************************************/
/* ¿ÉÎ¬¿É²âÊ¹ÓÃÏûÏ¢ */
typedef enum
{
    ID_MUX_TRACE_UL_DATA                   = 0x1001,   /* ÉÏÐÐÊý¾Ý¹´°ü */
    ID_MUX_TRACE_DL_DATA                   = 0x1002,   /* ÏÂÐÐÊý¾Ý¹´°ü */
    ID_MUX_TRACE_TYPE_BUTT
}MUX_TRACE_MSG_TYPE_ENUM;
typedef VOS_UINT32 MUX_TRACE_MSG_TYPE_ENUM_UINT32;

/*½ÓÊÕÊý¾Ý×´Ì¬*/
typedef enum
{
    MUX_DLCI_UNFRAME_STATE_FNDING_F9        = 0,
    MUX_DLCI_UNFRAME_STATE_FNDING_ADDR,
    MUX_DLCI_UNFRAME_STATE_FNDING_CTRL,
    MUX_DLCI_UNFRAME_STATE_FNDING_LEN1,
    MUX_DLCI_UNFRAME_STATE_FNDING_LEN2,
    MUX_DLCI_UNFRAME_STATE_FNDING_INFO,
    MUX_DLCI_UNFRAME_STATE_FNDING_FCS,
    MUX_DLCI_UNFRAME_STATE_FNDING_EOF,
    MUX_DLCI_UNFRAME_STATE_FNDING_BUTT
}MUX_DLCI_UNFRAME_STATE_FNDING_ENUM;
typedef VOS_UINT8 MUX_DLCI_UNFRAME_STATE_FNDING_ENUM_UINT8;


/*****************************************************************************
  4 È«¾Ö±äÁ¿ÉùÃ÷
*****************************************************************************/


/*****************************************************************************
  5 ÏûÏ¢Í·¶¨Òå
*****************************************************************************/


/*****************************************************************************
  6 ÏûÏ¢¶¨Òå
*****************************************************************************/
/*Ö¡Í·²¿¸ñÊ½*/
typedef struct
{
    VOS_UINT8               ucStartFlag;        /*0x9F*/
    VOS_UINT8               ucAddr;             /*bit:1,1,6 EA/CR/DLCI
                                                EA:¹Ì¶¨Îª1±íÊ¾Îª×îºóÒ»¸ö×Ö¶Î
                                                CR:command or response »Ø¸´Îª»ØÌî£¬
                                                ³õÊ¼·¢ËÍÌîÐ´ÎªAPP:1 PS:0*/
    VOS_UINT8               ucControl;          /*Ö¡ÀàÐÍ*/
    VOS_UINT8               ucLen1;             /*bit:1,7 EA/LEN
                                                EA:±íÊ¾Îª×îºóÒ»¸ö×Ö¶Î£¬0±íÊ¾»¹ÓÐÒ»¸ö×Ö¶Î*/
    VOS_UINT8               ucLen2;             /*Èç¹ûÒ»¸ö×Ö½ÚÎÞ·¨±íÊ¾³¤¶È£¬
                                                Ôò¸Ã×Ö¶Î±íÊ¾³¤¶ÈµÄµÍ×Ö½Ú*/
    VOS_UINT8               ucRsv[3];           /*±£Áô*/
} MUX_FRAME_HEAD;


/*Mux½ÓÊÕ¶ÔÓ¦×´Ì¬½á¹¹*/
typedef struct
{
    VOS_UINT8               ucUnframeState;     /* ½âÖ¡×´Ì¬ */
    VOS_UINT8               aucHeadBuff[5];     /* ÓÃÀ´´æ·ÅÊý¾ÝÍ·²¿µÄÊý¾Ý»º³å*/
    VOS_UINT16              usLeftInfoLen;      /* Î´½ÓÊÕµÄÐÅÏ¢Óò³¤¶È */
    TTF_MBUF_ST            *pUnframeBuf;        /* ½ÓÊÕÖ¡µÄ»º³å */
} MUX_UNFRAME_STATE_ST;


/*****************************************************************************
  7 STRUCT¶¨Òå
*****************************************************************************/

typedef struct
{
    AT_MUX_DLCI_TYPE_ENUM_UINT8         enDlci;                                 /* Á´Â·ºÅ */
    VOS_UINT8                           aucRsv[3];                              /* ±£Áô */
    RCV_UL_DLCI_DATA_FUNC               pRcvUlDlciDataFunc;                     /* ¶ÔÓ¦µÄÉÏÐÐ½ÓÊÕº¯Êý */
}MUX_AT_UL_DLCI_INFO_STRU;

/* ¼ÇÂ¼Éè±¸µÄÐÅÏ¢ */
typedef struct
{
    UDI_DEVICE_ID               enUdiDevId;                     /* µ×ÈíÊµ¼ÊºÍMUXÒ»ÆðÊ¹ÓÃµÄÉè±¸ID */
    UDI_HANDLE                  slUdiMuxAcmHdl;                 /* Éè±¸¶ÔÓ¦µÄ¾ä±ú */
    VOS_UINT32                  (*pMuxAcmUlRxFunc)(VOS_VOID);   /* ¸Ã¾ä±úÉÏ±¨Êý¾ÝÊ±MUXµ÷ÓÃµÄ»Øµ÷º¯ÊýÖ¸Õë */
}MUX_DEV_INFO_STRU;

typedef struct
{
    VOS_UINT32                  ulInvalidUdiHandleNums;         /* »ñÈ¡µ×ÈíUDI¾ä±ú´íÎóµÄ´ÎÊý */
    VOS_UINT32                  ulGetDataFailNums;              /* µ×Èí»Øµ÷ºó»ñÈ¡²»µ½Êý¾ÝµÄ´ÎÊý */
    VOS_UINT32                  ulDiscardUlPacketNums;          /* ÉÏÐÐÒòÎª×´Ì¬²»¶ÔµÈÔ­Òò¶ªÆúµÄÊý¾Ý°ü¸öÊý */
    VOS_UINT32                  ulSuccGetUlPacketNums;          /* ÉÏÐÐHsicÍ¨µÀ³É¹¦»ñÈ¡µÄÊý¾Ý°ü¸öÊý */
    VOS_UINT32                  ulFailSendUlPacketNums;         /* ÉÏÐÐÏòATÍ¨µÀ·¢ËÍÊ§°ÜµÄÊý¾Ý°ü¸öÊý */
    VOS_UINT32                  ulSuccSendUlPacketNums;         /* ÉÏÐÐÏòATÍ¨µÀ³É¹¦·¢ËÍµÄÊý¾Ý°ü¸öÊý*/
    VOS_UINT32                  ulFailSendDlPacketNums;         /* ÏÂÐÐµ÷ÓÃµ×ÈíÍ¨µÀ·¢ËÍÊ§°ÜµÄÊý¾Ý°ü¸öÊý */
    VOS_UINT32                  ulSuccSendDlPacketNums;         /* ÏÂÐÐµ÷ÓÃµ×ÈíÍ¨µÀ·¢ËÍ³É¹¦µÄÊý¾Ý°ü¸öÊý */
    VOS_UINT32                  ulFreeDlPacketNums;             /* ÏÂÐÐµ÷ÓÃµ×ÈíÍ¨µÀÊÍ·Å³É¹¦µÄÊý¾Ý°ü¸öÊý */
} MUX_DEV_STATIC_INFO_STRU;


/*****************************************************************************
  8 UNION¶¨Òå
*****************************************************************************/


/*****************************************************************************
  9 OTHERS¶¨Òå
*****************************************************************************/


/*****************************************************************************
  10 º¯ÊýÉùÃ÷
*****************************************************************************/
extern VOS_UINT32 MUX_DlciDlUsbAcmFreeDataCB(VOS_UINT8 *pucBuf);
extern VOS_UINT32 MUX_DlciUlHsicFreeDataBuf(
    UDI_HANDLE                          ulUdiHdl,
    VOS_UINT8                          *pucBuf,
    VOS_UINT16                          usLen
);
extern VOS_UINT32 MUX_DlciDlDataProc (AT_MUX_DLCI_TYPE_ENUM_UINT8 enDlci, VOS_UINT8* pucSendBuf,
    VOS_UINT16 *pusSendDataLen, VOS_UINT8* pucBuf, VOS_UINT16 usDataLen);

extern VOS_VOID MUX_TraceUlData(VOS_UINT32 ulDeviceId, VOS_UINT8 *pucBuf, VOS_UINT16 usLen);
extern VOS_VOID MUX_TraceDlData(AT_MUX_DLCI_TYPE_ENUM_UINT8 enDlci, VOS_UINT8 *pData, VOS_UINT16 usDataLen);
extern VOS_VOID MUX_StaticInfoInit( VOS_VOID );
extern VOS_UINT32 MUX_Pid_InitFunc( enum VOS_INIT_PHASE_DEFINE ip );
extern VOS_UINT32 MUX_AtMsgProc( const MsgBlock *pMsgBlock );

#if (VOS_OS_VER == VOS_WIN32)
#pragma pack()
#else
#pragma pack(0)
#endif


#ifdef __cplusplus
    #if __cplusplus
        }
    #endif
#endif

#endif /* end of PsHsic.h */

