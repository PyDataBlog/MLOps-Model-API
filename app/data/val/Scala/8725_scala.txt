import org.joda.time.{ Days, IllegalFieldValueException, LocalDate }
import org.scalatest.FunSuite
import org.scalatest.prop.Checkers
import org.scalacheck._
import Prop._
import com.github.probe.backend.ClientHandlerActor.LogParser.guessDate

class ClientHandlerActorTest extends FunSuite with Checkers with TestSetup {

  def dateIsOk(year: Int, month: Int, day: Int) =
    try {
      new LocalDate(year, month, day)
      true
    } catch {
      case e: IllegalFieldValueException => false
    }

  test("guessDate") {
    check(forAll(Gen.choose(2010, 2020), Gen.choose(1, 12), Gen.choose(1, 31), Gen.choose(-90, 90)) { (year: Int, month: Int, day: Int, dayDiff: Int) =>
      dateIsOk(year, month, day) ==> {
        val ref = new LocalDate(year, month, day)
        val testDate = ref plus Days.days(dayDiff)
        testDate == guessDate(ref, testDate.getMonthOfYear, testDate.getDayOfMonth)
      }
    })
  }
}
