package com.realizationtime.btdogg.frontend.mock

import com.realizationtime.btdogg.frontend.SearchEngine
import com.realizationtime.btdogg.frontend.domain.SearchQuery
import org.scalatest.{AsyncFlatSpec, Matchers}

class MockSearchEngineTest extends AsyncFlatSpec with Matchers {

  val queryAll: SearchQuery = SearchQuery("")

  val mockSearch: SearchEngine = new MockSearchEngine

  "search()" should "have first three results with liveness 0" in {
    mockSearch.search(queryAll).map(results => assert(results.items.take(3).forall(_.liveness == 0)))
  }

  it should "have fourth result with liveness 1" in {
    mockSearch.search(queryAll).map(results => assert(results.items(3).liveness == 1))
  }

  it should "have tenth result with liveness 9" in {
    mockSearch.search(queryAll).map(results => assert(results.items(9).liveness == 9))
  }

}
