Imports System
Imports System.IO
Imports System.Text
Imports System.Globalization
Imports System.Threading
Imports System.Runtime.InteropServices
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Vitens.DbmDesktop.Generics
Imports Vitens.DbmDesktop.Drivers

<TestClass()> Public Class CsvDriverShould
    Private Const TestCsvFile = "sample3input_nl-NL.csv"
    Private Const TestCsvFileCorrelation = "sample3correlation_nl-NL.csv"

    Private testpath As String
    Private startdate As Date
    Private testdate As Date

    Public Sub New()
        Thread.CurrentThread.CurrentCulture = New CultureInfo("nl-NL")
        testpath = Directory.GetCurrentDirectory() & "\..\..\..\..\DBMEXT.Tests\data"
        startdate = Date.Parse("1-1-2016")
        testdate = Date.Parse("1-1-2016 7:00:00")
    End Sub

    <TestMethod(), TestCategory("CI")>
    Public Sub ReturnZeroCachedValues_WhenInitialisedWithNothing()
        ' arrange

        ' act
        Dim driver As New CustomDataDriver()

        ' assert
        Assert.AreEqual(0, driver.CachedValues.Count)
    End Sub

    <TestMethod(), TestCategory("CI")>
    Public Sub Return3900CachedValues_WhenInitialisedWithCsvFile()
        ' arrange
        Dim filename = Path.Combine(testpath, TestCsvFile)

        If IO.File.Exists(filename) Then
            Dim driver = getTestDriver(testpath, TestCsvFile)

            ' act
            driver.InitialiseData(startdate, 1)

            ' assert
            Assert.AreEqual(3900, driver.CachedValues.Count, "Cached values are not equal to 3900.")
        Else
            ' assert
            Assert.Inconclusive("No testfile found so test was inconclusive")
        End If
    End Sub

    <TestMethod(), TestCategory("CI")>
    Public Sub ReturnCorrectData_WhenGettingDataForCsvFile()
        ' arrange
        If IO.File.Exists(Path.Combine(testpath, TestCsvFile)) Then
            Dim driver = getTestDriver(testpath, TestCsvFile)

            driver.InitialiseData(startdate, 1)
            Dim cachedvalue = driver.CachedValues(testdate)

            ' act
            Dim value = driver.GetData(testdate)

            ' assert
            Assert.AreEqual(cachedvalue, value, "Value is not equal to cached CSV value.")
        Else
            ' assert
            Assert.Inconclusive("No testfile found so test was inconclusive")
        End If
    End Sub

    <TestMethod(), TestCategory("CI")>
    Public Sub ReturnCorrectData_WhenGettingUncachedDataForCsvFile()
        ' arrange
        If IO.File.Exists(Path.Combine(testpath, TestCsvFile)) Then
            Dim driver = getTestDriver(testpath, TestCsvFile)

            ' act
            Dim value = driver.GetData(testdate)

            ' assert
            Assert.AreEqual(Double.NaN, value, "Value is not NaN when uncached.")
        Else
            ' assert
            Assert.Inconclusive("No testfile found so test was inconclusive")
        End If
    End Sub

    <TestMethod(), TestCategory("CI")>
    Public Sub ReturnNA_WhenGettingDataForNotInitialisedCSVdriver()
        ' arrange
        Dim driver = getTestDriver()

        ' act
        Dim value = driver.GetData(startdate)

        ' assert
        Assert.AreEqual(Double.NaN, value, "Value for non-initialised driver in not NaN")
    End Sub

    Private Function getTestDriver(Optional testpath As String = "", Optional TestCsvFile As String = "") As CustomDataDriver
        Dim driver = New CustomDataDriver()

    If testpath.Length * TestCsvFile.Length > 0 Then driver.InitialiseWith(testpath, TestCsvFile, "Test")

    driver.splitChars = vbTab
        driver.decimalSign = ","
        driver.dateFormat = "DMY"

        Return driver
    End Function

End Class