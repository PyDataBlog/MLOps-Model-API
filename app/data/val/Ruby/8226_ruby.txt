require 'json'

require 'redis'

module Ruboty
  module Handlers
    class Bokete < Base
      AVAILABLE_MODES = ['recent', 'hot', 'popular', 'pickup', 'select', 'legend']
      CACHE_EXPIRE = 10800

      on /bokete (?<mode>.+)/, name: 'bokete', description: 'Get a bokete'

      def initialize(*args)
        super(*args)

        @client = Ruboty::Bokete::Client.new
      end

      def bokete(message)
        mode = message[:mode]

        unless AVAILABLE_MODES.include?(mode)
          message.reply("Usage: [#{AVAILABLE_MODES.join('|')}]")
          return
        end

        cache_updated = brain['cache_updated'].to_i
        if !brain[mode] || cache_updated + CACHE_EXPIRE < Time.now.to_i
          results = @client.get(mode)

          brain[mode] = results.to_json
          brain['cache_updated'] = Time.now.to_i
        end

        result = JSON.parse(brain[mode]).sample
        message.reply((result['url'].start_with?('//') ? 'http:' + result['url'] : result['url']) + "\n" + result['boke'])
      end

      def brain
        robot.brain.data[Ruboty::Bokete::NAMESPACE] ||= {}
      end
    end
  end
end
