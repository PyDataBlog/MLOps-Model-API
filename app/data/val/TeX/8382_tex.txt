\chapter{Visão de Casos de Uso}
\label{ch:visao_casos_uso}
A visão de casos de uso do sistema é apresentada abaixo através de diagramas UML de casos de uso. Foram criados diagramas que representam os casos de uso em diferentes níveis de abstração, conforme exposto a seguir.

A figura~\ref{use_case_overall} apresenta os casos de uso gerais do sistema, considerando cada caso de uso a partir de uma perspectiva bem elevada. Essencialmente, os casos de uso que representa correspondem a casos para criação, recuperação, atualização e remoção (CRUD) dos elementos conceituais do sistema, como \emph{modelos}, \emph{implementações} e \emph{testes}. Embora essencialmente estes casos de uso correspondam as tarefas CRUD, a complexidade das informações envolvidas e das interações com estes usuários tornam os casos de uso mais complexos do que a simples persistência e recuperação de dados, como será apresentado posteriormente.

Além dos casos de uso CRUD, o diagrama também apresenta os casos de uso centrados na execução dos testes e na obtenção dos dados resultantes, seja na forma de relatório, seja na forma de exportação de dados brutos.

Conforme citado anteriormente, os casos de uso da figura~\ref{use_case_overall} correspondem aos casos de uso a partir de uma visão com um nível de abstração bastante elevado. No restante desta seção são apresentados os diagramas de casos de uso que detalham de forma mais abrangente as funcionalidades do sistema.

\begin{figure}
    \includegraphics[width=\textwidth]{images/overall_use_case_diagram}
    \caption{Diagrama geral de casos de uso}
    \label{use_case_overall}
\end{figure}

\begin{landscape}
    \begin{figure}
        \includegraphics{images/manage_project_use_case_diagram}
        \caption{Diagrama de casos de uso do gerenciamento de projetos}
        \label{use_case_manage_project}
    \end{figure}

    \begin{figure}
        \includegraphics[scale=0.9]{images/manage_models_use_case_diagram}
        \caption{Diagrama de casos de uso do gerenciamento de modelos e implementações}
    \end{figure}
\end{landscape}

\begin{figure}
    \includegraphics{images/manage_test_suites_use_case_diagram}
    \caption{Diagrama de casos de uso do gerenciamento de \foreign{suites} de testes}
\end{figure}

\begin{figure}
    \includegraphics{images/manage_tests_use_case_diagram}
    \caption{Diagrama de casos de uso do gerenciamento de casos de testes do projeto}
\end{figure}

\begin{figure}
    \includegraphics{images/manage_premiss_use_case_diagram}
    \caption{Diagrama de casos de uso do gerenciamento das premissas de testes}
\end{figure}

\begin{figure}
    \includegraphics{images/manage_binding_use_case_diagram}
    \caption{Diagrama de casos de uso do gerenciamento de vínculos com fontes de dados}
\end{figure}

\begin{figure}
    \includegraphics{images/manage_data_source_use_case_diagram}
    \caption{Diagrama de casos de uso do gerenciamento das fontes de dados}
\end{figure}

\begin{landscape}
    \begin{figure}
        \includegraphics{images/execute_test_suite_use_case_diagram}
        \caption{Diagrama de casos de uso da execução de \foreign{suites} de teste}
    \end{figure}

    \begin{figure}
        \includegraphics{images/generate_report_use_case_diagram}
        \caption{Diagrama de casos de uso da geração de relatórios}
    \end{figure}
\end{landscape}

\section{Realizações de Casos de Uso}
A seguir serão detalhados os casos de uso mais significativos em relação aos aspectos arquiteturais do sistema. Este detalhamento se dará através de uma explicação do interesse arquitetural do caso de uso, seguido de uma breve descrição da funcionalidade representada pelo cado de uso. A explicação é apoiada por um protótipo da tela a partir da qual a funcionalidade é acessada. Finalmente, a apresentação do caso de uso é encerrada com o diagrama UML de sequência do caso de uso, a partir do qual é possível visualizar como os diferentes elementos de \foreign{software} interagem entre si para realizar a sua funcionalidade.

\subsection{Edit Premiss}
O caso de uso \emph{Edit Premiss} ilustra o foco do sistema na usabilidade da ferramenta para facilitar o acesso de cientistas e engenheiros à automatização de testes de modelos matemáticos sem que seja necessários conhecimentos de programação, ao mesmo tempo que visa fornecer os recursos necessários para que tais modelos sejam testados de forma compreensiva. 

As premissas de um teste são condições que se espera que o modelo respeite em todos os estados do modelo matemático durante a sua simulação. Fornece um outro mecanismo de testes do modelo, além da comparação direta com saídas esperadas, ao expressar as restrições do sistema, como por exemplo, a impossibilidade de um modelo de determinado motor operar como gerador, calculando um consumo negativo de energia. Neste exemplo, cria-se uma premissa que restringe a variável de consumo de energia como sendo maior ou igual a zero.

\begin{landscape}
    \begin{figure}
        \includegraphics[scale=0.8]{images/ihm_premiss}
        \caption{Protótipo da tela de premissas de um teste}
    \end{figure}

    \begin{figure}
        \includegraphics[scale=0.4]{images/edit_premiss_sequence_diagram}
        \caption{Diagrama de sequência do caso de uso de edição de premissas}
    \end{figure}
\end{landscape}

\subsection{Execute Test Suite}
O caso de uso \emph{Execute Test Suite} explora o comportamento distribuído do sistema. A execução de conjuntos de testes pode ser realizada por diferentes nós computacionais da rede, cada qual com seus recursos de \foreign{hardware} (núcleos, memória, etc.) e \foreign{software} (linguagens e ambientes de execução suportados).

Os \foreign{suites} de testes são conjuntos de testes que devem ser executados juntos. A execução de um \foreign{suite} de testes, seja ele unitário ou não, corresponde à principal funcionalidade do sistema, uma vez que é através da execução de testes que se comprova a qualidade do modelo desenvolvido para a aplicação em questão. No entanto, a execução de um vasto conjunto de testes pode ter um custo computacional alto. Sendo assim, a possibilidade de empregar diversos nós computacionais (diferentes máquinas em uma rede de computadores) e diversos processos de testes em paralelo constituí um recurso valioso da ferramenta.

O usuário configura como deseja executar o conjunto como um todo e as configurações de execução dos testes que formam o \foreign{suite} e comanda o início da execução. No caso da execução distribuída do \foreign{suite}, o sistema irá distribuir os vários testes entre os nós de acordo com seus recursos, e o resultados centralizados enviados de volta para consolidação.

\begin{landscape}
    \begin{figure}
        \includegraphics[scale=0.8]{images/ihm_test_suite}
        \caption{Protótipo da tela de execução de \foreign{suites} de teste}
    \end{figure}

    \begin{figure}
        \includegraphics[scale=0.35]{images/execute_test_suite_sequence_diagram}
        \caption{Diagrama de sequência do caso de uso de execução de suites de teste}
    \end{figure}

    \begin{figure}
        \includegraphics[scale=0.5]{images/execute_test_sequence_diagram}
        \caption{Diagrama de sequência do caso de uso de execução de teste}
    \end{figure}
\end{landscape}

\subsection{Add Data Source}
O caso de uso \emph{Add Data Source} representa os aspectos relativos à extensibilidade do sistema, que visa facilitar a expansão das capacidades do \foreign{software} para suportar novas fontes de dados. O mesmo ferramental se aplica à extensibilidade em relação à linguagens de programação para implementação de modelos e ambientes de execução de simulações. Pretende-se, desta forma, flexibilizar a ferramenta para que melhor se adeque aos cenários específicos do usuário.

As fontes de dados são arquivos, bancos de dados, etc. a partir dos quais serão obtidos os dados que serão utilizados nos testes. Estas fontes fornecem conjuntos de dados que são vinculados (\foreign{binding}) às variáveis do modelo, sejam elas entradas, parâmetros ou saídas. Cada projeto possui um conjunto de fontes de dados, que podem ser utilizados em um ou mais testes.

O sistema lança mão de uma arquitetura baseada em \foreign{plugins} para suportar diferentes tipos de fontes de dados, de forma que as especificidades de fornecimento de dados passa então a ser de responsabilidade de cada \foreign{plugin}, restando ao sistema fornecer a interface que deve ser implementada por todos eles.

\begin{landscape}
    \begin{figure}
        \includegraphics[scale=0.8]{images/ihm_data_source}
        \caption{Protótipo da tela de gerenciamento de fontes de dados}
    \end{figure}

    \begin{figure}
        \includegraphics[scale=0.4]{images/add_data_source_sequence_diagram}
        \caption{Diagrama de sequência do caso de uso de adição de fonte de dados}
    \end{figure}
\end{landscape}
