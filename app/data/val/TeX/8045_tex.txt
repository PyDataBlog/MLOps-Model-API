\graphicspath{{chapter/imgPWR/}}
\chapter{Управление питанием (PWR)}
\section{Снабжение питанием}
Устройство требует питания в рабочем диапазоне от 1.8 до 3.6 вольт ($V_{DD}$). Встроенный линейный регулятор напряжения используется для питания внутренней 1.2 вольтовой цифровой периферии.

Часы реального времени (ЧРВ), защищенные регистры ЧРВ, и защищенная SRAM (BKP SRAM) могут питаться от напряжения $V_{BAT}$, когда основной источник питания $V_{DD}$ отключен.
\begin{quote}
	\textbf{Примечание: }В зависимости от рабочего диапазона питания, некоторые блоки переферии могут быть использованы с ограниченной функциональностью и производительностью. Для получения больших подробностей, обратитесь к разделу "Основные рабочие условия" в STM32F2xx руководстве пользователя (datasheets).
\end{quote}

1. $V_{DDA}$ и $V_{SSA}$ могут быть подключены к $V_{DD}$ и $V_{SS}$ соответственно.


2. IRROFF доступен только в WLCSP корпусе. 

\subsection{Питание независимого аналого-цифрового преобразователя и рекомендованное напряжение}
Для улучшения точности преобразования ADC имеет независимый источник питания, который может быть особым образом отфильтрован и экранирован от шумов печатной платы.
\begin{itemize}
	\item Вход напряжения питания ADC доступен на отдельном $V_{DDA}$ выводе.
	\item Изолированное заземление источника питания доступно на выводе $V_{SSA}$.
\end{itemize}
Пользователь может подключить отдельный внешний источник питания ADC к выводу $V_{REF}$, что обеспечит лучшую точность при низком входном напряжении. Напряжение на $V_{REF}$ имеет диапазон от 1.8 вольта до $V_{DDA}$.

\subsection{Область батарейного питания}
\subsubsection{Описание батарейной области}
Для сохранения содержимого защищенных регистров RTC, защищенной SRAM и снабжения питанием RTC, когда $V_{DD}$ отключено, $V_{BAT}$ вывод может быть соединен с необязательным резервным источником напряжения. Батарейкой или иным источником. 

Допускается работа RTC, даже когда основной цифровой источник ($V_{DD}$) отключен. $V_{BAT}$ вывод питает следующие блоки:
\begin{itemize}
	\item RTC
	\item LSE генератор
	\item Защищенную SRAM, когда маломощный защищенный регулятор включен
	\item PC13-PC15 линии ввода-вывода и PI8 (когда доступны)
\end{itemize}

Переключатель питания $V_{BAT}$ управляется переключателем, встроенным в блок сброса. 

\begin{quote}
	\textbf{Предупреждение: } В течении $t_{RSTTEMPO}$ (во время подъема $V_{DD}$) или после после обнаружения PDR, переключатель питания между $V_{BAT}$ и $V_{DD}$ остается подключенным к $V_{BAT}$.
	
	Во время фазы запуска, если $V_{DD}$ установлен за менее чем  $t_{RSTTEMPO}$ (ссылаемся к техническому описанию за значением $t_{RSTTEMPO}$) и $V_{DD} > V_{BAT} + 0.6 В$, ток может втекать в $V_{BAT}$ через внутренний диод, подключенный между $V_{DD}$ и переключателем питания ($V_{BAT}$).
	
	Если источник питания/батарейка подключена к $V_{BAT}$ выводу, нельзя поддерживать втекание этого тока. Строго рекомендовано подключить внешний низко-уровневый диод между этим источником питания и $V_{BAT}$ выводом. 
\end{quote}

Если нет внешней батареи, используемой в приложении, рекомендуется подключить $V_{BAT}$ вывод к $V_{DD}$ с внешне развязанным конденсатором 100 nF в параллель. 

Когда защищенная область питается от $V_{DD}$ (аналоговый переключатель подключен к $V_{DD}$), доступны следующие функции:
\begin{itemize}
	\item PC14 и PC15 могут быть использованы либо как линии ввода-вывода. либо LSE выводы
	\item PC13 может быть использован как GPIO или как RTC\_AF1 вывод (обратитесь к таблице 16: вывод RTC\_AF1, для получения больших подробностей о конфигурации этого вывода)
	\item PI8 может быть использован как GPIO или как RTC\_AF2 вывод (обратитесь к таблице 17: вывод RTC\_AF2, для получения больших подробностей о конфигурации этого вывода)
\end{itemize}
\begin{quote}
	\textbf{Примечание: } В связи с тем фактом, что переключатель вливает в схему ограниченное количество тока (3 мА), использование линий PC13-PC15 и PI8 ограничено: в один момент времени, только один вывод может быть использован как выход, скорость ограничена 2 МГц с максимальной нагрузкой 30 пФ. А так же эти выводы не могут быть использованы как источники тока (например, LED драйвер).
\end{quote}

Когда защищенная область питается от $V_{BAT}$ (аналоговый переключатель подключен к $V_{BAT}$, потому что $V_{DD}$ отсутствует), доступны следующие функции:
\begin{itemize}
	\item PC14 и PC15 могут быть использованы только как LSE выводы
	\item PC13 может быть использован как RTC\_AF1 вывод (обратитесь к таблице 16: вывод RTC\_AF1, для получения больших подробностей о конфигурации этого вывода)
	\item PI8 может быть использован как RTC\_AF2 вывод (обратитесь к таблице 17: вывод RTC\_AF2, для получения больших подробностей о конфигурации этого вывода)
\end{itemize}

\subsubsection{Доступ к защищенной области}
После включения, защищенная область (RTC регистры, защищенные регистры RTC и защищенная SRAM) защищена от возможной нежелательной записи. Для получения доступа к защищенной области, сделайте следующее:
\begin{itemize}
	\item Доступ к RTC и RTC защищенным регистрам
\end{itemize}
\begin{enumerate}
	\item Включите тактирование интерфейса питания, установив бит PWREN в регистре включения тактирования периферии RCC APB1 (RCC\_APB1ENR)
	\item Установите DBP бит в регистре контроля питания PWR (PWR\_CR) для получения доступа к защищенной области.
	\item Выберите источник тактирования RTC: смотрите раздел 5.2.8: тактирование RTC/AWU
	\item Включите тактирование RTC, запрограммировав бит RTCEN[15] в регистре контроля защищенной области RCC (RCC\_BDCR)
\end{enumerate}
\begin{itemize}
	\item Доступ к защищенной SRAM
\end{itemize}
\begin{enumerate}
	\item Включите тактирование интерфейса питания, установив бит PWREN в регистре включения тактирования периферии RCC APB1 (RCC\_APB1ENR)
	\item Установите DBP бит в регистре контроля питания PWR (PWR\_CR) для получения доступа к защищенной области
	\item Включите тактирование защищенной SRAM, установив бит BKPSRAMEN в регистре тактирования периферии RCC (RCC\_AHB1ENR)
\end{enumerate}

\subsubsection{RTC и RTC защищенные регистры}
Часы реального времени (RTC) представляют собой независимый BCD таймер/счетчик. RTC предоставляет календарь/счет времени суток, два (2) программируемых сигнала прерывания и периодически программируемый активизирующий флаг со способностью прерывания. RTC содержит 20 защищенных регистров данных (80 байт) которые сбрасываются, когда происходит обнаружение события повреждения. Для более детальной информации обратитесь к разделу 22: часы реального времени (RTC).

\subsubsection{Защищенная SRAM}
Защищенная область содержит 4 кбайта защищенной SRAM, адресуемой в 32-х, 16-ти и 8-ми битных режимах. Эти данные сохраняются даже в режимах ожидания или $V_{BAT}$, когда маломощный регулятор включен. Она (SRAM) может восприниматься как встроенная EEPROM, при условии всегда присутствующего $V_{BAT}$.

Когда защищенная область питается от $V_{DD}$ (аналоговый переключатель подключен к $V_{DD}$), защищенная SRAM питается от $V_{DD}$, который заменяет $V_{BAT}$ источник питания, сохранения жизни батареи.

Когда защищенная область питается от $V_{BAT}$ (аналоговый переключатель подключен к $V_{BAT}$, потому что $V_{DD}$ отсутствует), защищенная SRAM питается от маломощного регулятора. Этот регулятор может быть включен или выключен в зависимости от надобности применения защищенной SRAM в спящем и $V_{BAT}$ режимах. Отключение питания этого регулятора контролируется специальным битом, битом контроля BRE в PWR\_CSR регистре (смотрите раздел 4.2.2: PWR регистр контроля/статуса питания (PWR\_CSR)).

Защищенная SRAM не может быть полностью стерта от события ошибки. Это позволяет считать недоступные конфиденциальные данные, такие как приватные криптографические ключи, являющиеся защищенными. Защищенная SRAM может быть очищена только через Flash интерфейс, когда запрошено защищенное изменение уровня из уровня 1 в уровень 0. Обратитесь к описанию защищенного чтения (PDR) в руководстве программирования Flash.

\subsection{Регулятор напряжения}
Встроенный линейный регулятор напряжения снабжает все цифровые схемы, за исключением защищенной области и схемы ожидания. На выходе регулятора напряжение в 1.2 вольта.

Этот регулятор напряжения требует два (2) внешних конденсатора, подключенных к двум (2) выделенным выводам, $V_{CAP\_1}$ и $V_{CAP\_2}$, доступных во всех корпусах.

Регулятор напряжения, после восстановления, всегда включен. Он работает в трех (3) различных режимах, зависящих от режима приложения.
\begin{enumerate}
	\item В запущенном режиме: регулятор снабжает полной мощностью 1.2 вольтовую область (ядро, память и цифровая периферия)
	\item В режиме остановки: регулятор снабжает низкой мощностью 1.2 вольтовую область, сохраняя содержимое регистров и встроенной SRAM
	\item В режиме ожидания, регулятор отключен. Содержимое регистров и SRAM теряется, кроме схемы ожидания и защищенной области
\end{enumerate}
\begin{quote}
	\textbf{Примечание: } В зависимости от выбранного корпуса, регулятор напряжения может быть отключен. Для более получения больших подробностей обратитесь к разделу регулятор напряжения в справочном руководстве STM32F2xx (datasheets).
\end{quote}

\section{Наблюдатель снабжения питанием}
\subsection{Восстановление питания(POR)/отключение питания(PDR)}
Устройство имеет интегрированную POR/PDR схему, которая гарантирует правильный запуск от/до 1.8 вольта.

Устройство остается в режиме сброса, когда $V_{DD}$/$V_{DDA}$ ниже установленной границы, $V_{POR/PDR}$, через требуемую внешнюю схему сброса. Для более детальной информации о пороге включении/отключении питания, обратитесь к электрическим характеристикам в техническом описании (datasheet).

\subsection{Сброс при отключении питания (BOR)}
Во время подачи питания, устройство остается в отключенном состоянии до тех пор, пока напряжение не достигнет установленной $V_{BOR}$ границы.

$V_{BOR}$ настраивается через байты опций устройства. По-умолчанию, BOR отключен. Могут быть выбраны три (3) программируемых уровня $V_{BOR}$ границы:
\begin{itemize}
	\item BOR уровень 3 ($V_{BOR3}$). Граница сброса при отключении питания 3. 
	\item BOR уровень 2 ($V_{BOR2}$). Граница сброса при отключении питания 2. 
	\item BOR уровень 1 ($V_{BOR1}$). Граница сброса при отключении питания 1. 
\end{itemize}
\begin{quote}
	\textbf{Примечание: }Для получения детальной информации о BOR характеристиках обратитесь к разделу "Электронные характеристики" в техническом описании (datasheet) устройства.
\end{quote}

Когда напряжение питания ($V_{DD}$) опускается установленной $V_{BOR}$ границы, устройство отключается. BOR может быть отключен, запрограммировав байты опций устройства.
После чего восстановление/отключение питания отслеживается POR/PDR (смотрите раздел 4.2.1).

BOR граница имеет гистерезис ~100 мВ (между границами восхождения и падения питающего напряжения).

\subsection{Программируемый детектор напряжения (PVD)}
Вы можете использовать PVD для отслеживания питания $V_{DD}/V_{DDA}$, сравнивая его с границей, установленной PLS[2:0] битами в регистре контроля питания PWR (PWR\_CR).

PVD включается установкой бита PVDE.

PVDO флаг доступен в регистре контроля/статуса питания PWR (PWR\_CSR). Он свидетельствует о том, что $V_{DD}/V_{DDA}$ выше или ниже PVD границы. Это событие внутренне соединено с линией 16 EXTI и может вызывать прерывания, если включено через EXTI регистры. Прерывание на выходе PVD может возникать, когда $V_{DD}/V_{DDA}$ опускается ниже и/или поднимается выше PVD границы, в зависимости от настроек грани падения/подъема линии 16 EXTI. Как пример: программа обслуживания может выполнить экстренное завершение задач.

\section{Маломощный режим}
Микроконтроллер после системной перезагрузки или включения питания по-умолчанию находится в режиме работы. В рабочем режиме CPU тактируется от HCLK и выполняется программный код. Для сохранения питания доступны несколько мало-мощных режимов, когда CPU не требуется для сохранения работы. Например, когда происходит ожидания внешнего события. Это дает пользователю возможность выбрать компромисс между маломощным потреблением, коротким временем запуска и доступным источником пробуждения.

Устройство предоставляет три (3) маломощных режима:
\begin{itemize}
	\item Режим сна (Ядро Cortex®-M3 остановлено, переферия сохраняет работоспособность)
	\item Режим остановки (вся переферия отключена)
	\item Режим ожидания (1.2 вольтовая область отключена)
\end{itemize}

В дополнение, потребление питания в рабочем режиме может быть снижена одним из нижеперечисленных методов:
\begin{itemize}
	\item Снижение скорости тактирования системы
	\item Стробирование тактирования APBx и AHBx переферии, когда таковая не используется.
\end{itemize}

\subsubsection{Вход в маломощный режим}
Войти в маломощный режим можно, если MCU выполнет WFI (ожидание прерывания) или WFE (ожидание события) инструкцию. Или когда по выходе из ISR будет установлен SLEEPONEXIT бит в регистре контроля системы Cortex®-M3.

\subsubsection{Выход из маломощного режима}
Выход MCU из маломощного режима сна или остановки зависит от пути входа в него:
\begin{itemize}
	\item Если WFI инструкция или возврат из ISR были использованы для входа в маломощный режим, любое прерывание переферии, подтвержденных NVIC может пробудить устройство.
	\item Если для входа в маломощный режим была использована WFE инструкция, MCU выходит из маломощного режима в скором времени после возникновения события. Пробуждающее событие может быть создано любым из этих способов:
	\begin{itemize}
		\item NVIC IRQ прерывание.
		
		Когда в регистре контроля системы Cortex®-M3 SEVONPEND = 0  (разрешаются  прерывания в регистре контроля переферии и в NVIC). Когда MCU восстанавливается после WFE, бит ожидания прерывания периферии и бит ожидания канала IRQ переферии (в NVIC регистре ожидающих очистки прерываний) должны быть очищены. Только NVIC прерывания с достаточным приоритетом будут пробуждать и прерывать MCU.
		
		Когда в регистре контроля системы Cortex®-M3 SEVONPEND = 1 (разрешаются  прерывания в регистре контроля переферии и, опционально, в NVIC). Когда MCU восстанавливается после WFE, бит ожидания прерывания периферии и, когда включен, бит ожидания канала IRQ переферии (в NVIC регистре ожидающих очистки прерываний) должны быть очищены. Все NVIC прерывания будут пробуждать MCU, даже отключенные.
		\item Событие
		
		Это делается путем настройки EXTI линии в режим события. Когда CPU пробуждается после WFE, очищать бит ожидания переферии EXTI или бит ожидания канала NVIC IRQ не нужно, т.к. соответствующей линии бит не был установлен. Однако может быть необходима очистка флага прерывания в переферии.
	\end{itemize}
\end{itemize}

MCU выходит из режима ожидания с малым энергопотреблением с помощью: внешней схемы сброса (NRST вывод), IWDG сброса, поднимающегося уровня на одном из включенных WKUPx выводов или возникновения события RTC (смотрите диаграмму...).

После пробуждения из режима ожидания, программа выполняет перезагрузку. Точно так же, как после сброса (анализ boot выводов, загрузка байтов опций, выбор вектора перезагрузки, и т.д.).

\subsection{Замедление тактирования системы}
В рабочем режиме скорость тактирования системы (SYSCLK, HCLK, PCLK1, PCLK2) может быть снижена программированием регистров делителей. Эти делители могут быть так же использованы для замедления переферии до входа в спящий режим.

Для более подробной информации обратитесь к разделу...

\subsection{Стробирование частоты переферии}
В рабочем режиме, для снижения потребления питания, для конкретной переферии и памяти, HCLKx и PCLKx могут быть остановлены в любое время.

Для дальнейшего снижения потребления питания, в спящем режиме тактирование переферии может быть предварительно отключено выполнением инструкций WFI или WFE.

Стробирование тактирования переферии контролируется регистром включения тактирования переферии AHB1 (RCC\_AHB1ENR), регистром включения тактирования переферии AHB2 (RCC\_AHB2ENR),  регистром включения тактирования переферии AHB3 (RCC\_AHB3ENR) (смотрите ... и ...).

Отключение тактирования переферии в спящем режиме может быть выполнено автоматически, сбросом соответствующих бит в регистрах RCC\_AHBxLPENR и RCC\_APBxLPENR.

\subsection{Спящий режим}
\subsubsection{Вход в спящий режим}
Вход в спящий режим производится в соответствии с СЕКЦИЯ, когда бит SLEEPDEEP в регистре контроля системы Cortex®-M3 очищен.

Обратитесь к таблица8 и таблица9 для более детальной информации о том, как войти в спящий режим.

\subsubsection{Выход из спящего режима}
Выход из спящего режима в соответствии с СЕКЦИЯ.
Обратитесь к таблицам 8 и 9 для более детальной информации о том, как выйти из спящего режима.

\subsection{Режим остановки}
Режим остановки является базовым режимом глубокого сна Cortex®-M3, совмещенный с стробированием переферии. Регулятор напряжения может быть настроен как в нормальном, так и в маломощном режиме. В режиме остановки тактирование всей 1.2 вольтовой области останавливается: PLLs, HSI и HSE RC генераторы отключаются. Внутренняя SRAM и данные регистров сохраняются.

Установив бит FPDS в регистре PWR\_CR, Flash память так же переходит в режим пониженного энергопотребления, когда устройство переходит в режим остановки. В случае, если Flash память находится в режиме пониженного энергопотребления, то по выходе из режима остановки ко времени запуска добавляется задержка.

\subsubsection{Вход в режим остановки}
Вход в режим остановки производится соответственно СЕКЦИЯ., когда бит SLEEPDEEP в регистре контроля системы Cortex®-M3 установлен.

Обратитесь к ТАБЛИЦЕ для того, чтобы более подробно узнать, как войти в режим остановки.

С целью дальнейшего снижения потребления питания в режиме остановки, внутренний регулятор напряжения может быть переведен в маломощный режим. Это настраивается битом LPDS в PWR\_CR.

Если Flash память в текущий момент программируется, то вход в режим остановки будет отложен до ее окончания.

Если к области APB в текущий момент кто-то имеет доступ, то вход в режим остановки будет отложен до его окончания.

В режиме остановки, следущие функции могут быть выбраны программированием индивидуальных бит контроля:
\begin{itemize}
	\item независимый watchdog (IWDG): IWDG запускается записью в его регистр ключа или аппаратных опций. Единожды запустив его, его уже нельзя отключить чем-либо кроме перезагрузки. Смотрите СЕКЦИИ!
	\item Часы реального времени (RTC): они настраиваются RTCEN битом в RCC\_BDCR.
	\item Встроенный RC генератор (LSI RC): он настраивается битом LSION в RCC\_CSR.
	\item Внешний генератор 32.768 кГц (LSE OSC): он настраивается битом LSEON в регистре RCC\_BDCR.
\end{itemize}

ЦАП и АЦП так же могут потреблять питание во время прибывания в режиме остановки. Если только они не были отключены до перехода в него. Для их отключения нужно записать "0" в бит ADON регистра ADC\_CR2 и бит ENx регистра DAC\_CR.

Если приложение требует отключения внешнего тактирования после выхода в режим остановки, следует сбросить бит HSEON, после чего переключатель тактирования системы включит HSI.

В противном случае, если HSEON бит останется включенным, функция безопасного тактирования системы (CSS) должна быть включена для обнаружения любой внешней неисправности генератора для того, чтобы избежать неисправного поведения, до тех пор, пока не будет выполнен вход в режим остановки.

\subsubsection{Выход из режима остановки}
Выход из режима остановки производится в соответствии с СЕКЦИЯ.

Обратитесь к ТАБЛИЦА для более детальной информации о том, как выйти из режима остановки.

По выходе из режима остановки (от выдачи прерывания или события пробуждения) система тактируется от HSI RC.

Если регулятор напряжения работал в маломощном режиме, то ко времени выхода из режима остановки добавляется задержка. В случае работы внутреннего регулятора во время режима остановки, потребление питания выше, однако скорость пробуждения выше.

\subsection{Режим ожидания}
Режим ожидания всегда достигает самого низкого потребления питания. Он основывается на режиме глубокого сна Cortex®-M3 с отключенным регулятором напряжения. В следствии этого, 1.2 вольтовая область обесточивается. PLLs, HSI и HSE генераторы так же отключаются. Данные SRAM и регистров так же теряются. За исключением регистров в защищенной области (RTC регистры, защищенные RTC регистры и защищенная SRAM) и схемы ожидания (смотреть ФИГУРА).

\subsubsection{Вход в режим ожидания}
Вход в режим ожидания производится в соответствии с СЕКЦИЯ, когда бит SLEEPDEEP в регистре контроля системы Cortex®-M3 установлен.

Обратитесь к ТАБЛИЦЕ для получения более подробных свединей о входе в режим ожидания. 

В режиме ожидания нижеперечисленные функции могут быть выбранны программированием индивидуальных бит контроля:
\begin{itemize}
	\item независимый watchdog (IWDG): IWDG запускается записью в его регистр ключа или аппаратных опций. Единожды запустив его, его уже нельзя отключить чем-либо кроме перезагрузки. Смотрите СЕКЦИИ!
	\item Часы реального времени (RTC): они настраиваются RTCEN битом в RCC\_BDCR.
	\item Встроенный RC генератор (LSI RC): он настраивается битом LSION в RCC\_CSR.
	\item Внешний генератор 32.768 кГц (LSE OSC): он настраивается битом LSEON в регистре RCC\_BDCR.
\end{itemize}

\subsubsection{Выход из режима ожидания}

Выход из режима ожидания производится в соответствии с СЕКЦИЯ. Флаг статуса SBF в PWR\_CR (смотрите ССЫЛКА) указывает на то, что MCU был в режиме ожидания. Все регистры сбрасываются буждения из режима ожидания, за исключением PWR\_CR.

Микроконтроллер выходит из режима ожидания при: внешнем сбросе (вывод NRST), сбросе IWDG, поднимающимся фронте WKUP вывода, сигнале RTC, событии порчи, обнаружении события с меткой времени. Все регистры сбрасываются после пробуждения из режима ожидания, за исключением PWR\_CRS.

После пробуждения из режима ожидания, программа выполняет перезагрузку. Точно так же, как после сброса (анализ boot выводов, загрузка байтов опций, выбор вектора перезагрузки, и т.д.). Флаг статуса SBF в PWR\_CR (смотрите ССЫЛКА) указывает на то, что MCU был в режиме ожидания. 

Обратитесь к ТАБЛИЦЕ для получения более детальной информации о том, как выйти из режима ожидания.

\subsubsection{Состояние линий ввода-вывода в режиме ожидания}
В режиме остановки все выводы ввода-вывода имеют высокий импеданс, за исключением:
\begin{itemize}
	\item Вывода сброса (по-прежнему доступен)
	\item RTC\_AF1 вывод (PC13), если настроен для искажения, отрезка времени, выхода сигнализации RTC или выход колибровки тактирования RTC. 
	\item RTC\_AF2 вывод (PI8), если настроен для искажения или временных отметок.
	\item WKUP вывод (PA0), если включен.
\end{itemize}

\subsubsection{Режим отладки}
По умолчанию, соединение отладки теряется в случае, если приложение переводит MCU в режим остановки или ожидания, во время выполнения отладки. Это связано с тем фактом, что ядро Cortex®-M3 более не тактируется. 

Однако, установив некоторые биты настроек в регистре DBGMCU\_CR, приложение может отлаживаться даже когда используются режимы пониженного энергопотребления. Для получения более подробной информации обратитесь к СЕКЦИИ.

\subsection{Программирование альтернативных функций RTC для пробуждения устройства из режимов остановки и ожидания}
MCU может быть пробужден из режима пониженного энергопотребления по средствам альтернативных функций RTC.

К альтернативным функциям RTC относятся: сигналы RTC (сигнал A и сигнал B), пробуждение RTC, обнаружение события порчи и обнаружение события метки времени RTC.

Эти альтернативные функции могут пробуждать систему из режимов пониженного энергопотребления (режим остановки и ожидания).

Система так же может быть может быть пробуждена из режима пониженного энергопотребления без зависимости от внешнего прерывания (режим авто-пробуждения), используя RTC сигналы или события пробуждения RTC.

Для этих целий два (2) из трех (3) источников тактирования RTC могут быть выбраны программированием битов RTCSEL[1:0] в RCC\_BDCR.
\begin{itemize}
	\item Маломощный внешний кварцевый генератор 32.768 кГц (LSE OSC)
	
	Этот источник предоставляет точное базовое время с очень малым потреблением питания (дополнительное потребление составляет менее 1 мкА при нормальных условиях)
	\item Маломощный внутренний RC генератор (LSI RC)
	
	Этот источник применяется для экономии на 32.768 кГц генераторе. Этот встроенный RC генератор спроектирован с целью минимального потребления.
\end{itemize}

\subsubsection{Альтернативные функции RTC для пробуждения устройства из режима остановки}
\begin{itemize}
	\item Пробуждение устройства из режима остановки с помощью события сигнала RTC. Для этого необходимо:
	\begin{itemize}
		\item Настроить линию 17 EXTI чувствительной к поднимающемуся фронту (режим прерывания или события)
		\item Включить прерывание сигнала RTC в регистре RTC\_CR
		\item Настроить RTC для генерации RTC сигналов
	\end{itemize}
	\item Пробуждение устройства из режима остановки с помощью событий меток времени или события искажения. Для этого необходимо:
	\begin{itemize}
		\item Настроить линию 21 EXTI чувствительной к поднимающемуся фронту (режим прерывания или события)
		\item Включить прерывание меток времени RTC в регистре RTC\_CR или прерывание RTC порчи в регистре RTC\_TAFCR
		\item Настроить RTC для обнаружения порчи или событий меток времени
	\end{itemize}
	\item Пробуждение устройства из режима остановки с помощью события пробуждения RTC. Для этого необходимо:
	\begin{itemize}
		\item Настроить линию 22 EXTI чувствительной к поднимающемуся фронту (режим прерывания или события)
		\item Включить RTC прерывание пробуждения в регистре RTC\_CR
		\item Настроить RTC для генерации события пробуждения RTC.
	\end{itemize}
\end{itemize}
\subsubsection{Альтернативные функции RTC для пробуждения устройства из режима ожидания}
\begin{itemize}
	\item Пробуждение устройства из режима ожидания с помощью события сигнала RTC. Для этого необходимо:
	\begin{itemize}
		\item Включить прерывание сигнала RTC в регистре RTC\_CR
		\item Настроить RTC для генерации RTC сигналов
	\end{itemize}
	\item Пробуждение устройства из режима ожидания с помощью событий меток времени или события искажения. Для этого необходимо:
	\begin{itemize}
		\item Включить прерывание меток времени RTC в регистре RTC\_CR или прерывание RTC порчи в регистре RTC\_TAFCR
		\item Настроить RTC для обнаружения порчи или событий меток времени
	\end{itemize}
	\item Пробуждение устройства из режима ожидания с помощью события пробуждения RTC. Для этого необходимо:
	\begin{itemize}
		\item Включить RTC прерывание пробуждения в регистре RTC\_CR
		\item Настроить RTC для генерации события пробуждения RTC.
	\end{itemize}
\end{itemize}
\subsubsection{Безопасная последовательность очистки флагов восстановления альтернативных функций RTC}
Если выбранная альтернативная функция RTC устанавливается после очистки флага пробуждения PWR (WUTF), она не будет обнаружена в следующем событии, так как обнаруживается производится один раз по поднимающемуся фронту.

Избегайте скачков на выводах выделенных для альтернативных функций RTC и правильно выходите из режимов ожидания и остановки. Ниже представлена рекомендованная последовательность после входа в режим ожидания: 
\begin{itemize}
	\item Когда для пробуждения из маломощного режима использовался сигнал RTC:
	\begin{itemize}
		\item Отключите прерывание сигнала RTC (биты ALRAIE или ALRBIE в регистре RTC\_CR)
		\item Очистите флаг сигнала RTC (ALRAF/ALRBF)
		\item Очистите флаг пробуждения PWR RTC (WUF)
		\item Включите прерывания сигнала RTC
		\item Повторно зайдите в режим пониженного энергопотребления
	\end{itemize}
	\item Когда для пробуждения из маломощного режима использовался пробуждение RTC:
	\begin{itemize}
		\item Отключите прерывание пробуждения RTC (бит WUTIE в регистре RTC\_CR)
		\item Очистите флаг пробуждения RTC (WUTF)
		\item Очистите флаг пробуждения PWR RTC (WUF)
		\item Включите прерывания пробуждения RTC
		\item Повторно зайдите в режим пониженного энергопотребления
	\end{itemize}
	\item Когда для пробуждения из маломощного режима использовался порча RTC:
	\begin{itemize}
		\item Отключите прерывание порчи RTC (бит TAMPIE в регистре RTC\_TAFCR)
		\item Очистите флаг порчи RTC (TAMP1F/TSF)
		\item Очистите флаг пробуждения PWR RTC (WUF)
		\item Включите прерывания искажения RTC
		\item Повторно зайдите в режим пониженного энергопотребления
	\end{itemize}
	\item Когда для пробуждения из маломощного режима использовался метки времени RTC:
	\begin{itemize}
		\item Отключите прерывание метки времени RTC (бит TSIE в регистре RTC\_CR)
		\item Очистите флаг метки времени RTC (TSF)
		\item Очистите флаг пробуждения PWR RTC (WUF)
		\item Включите прерывания метки времени RTC
		\item Повторно зайдите в режим пониженного энергопотребления
	\end{itemize}
\end{itemize}