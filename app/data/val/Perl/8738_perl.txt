#!/usr/local/bin/perl5
#
#
#
#########################
# Recent changes
# 2013.02    - initial
#########################

use HTTP::Cookies;
#use HTML::Form;
use URI;
use LWP::UserAgent;		# load some more modules
use LWP;
use File::Copy;
use Fcntl ':flock'; # import LOCK_* constants
use strict;
use POSIX;

######
#  Configuration
###
use FileHandle;


use constant DEBUG => 0;
use constant USAGE => " usage: $0 -s id\n";


use constant PRINT_ONLY => 0;

######
#  Parameters
###

use Getopt::Std;		# and the getopt module

my %opt;
die (USAGE) unless (getopts ('s:',\%opt));

die("no site\n". USAGE) unless($opt{s} ne'' or $opt{f} ne'');

my $site = $opt{s};

######
#  Useragent
###

my $ident = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; Q312461)";		# this gets logged, so it should be representative

# Create a user agent object
my $ua = new LWP::UserAgent;	# call the constructor method for this object
$ua->agent($ident);		# set the identity
$ua->timeout(30);		# set the timeout

my $cookie_jar = HTTP::Cookies->new(); 
$ua->cookie_jar($cookie_jar);
#$ua->default_headers->push_header('Host' => HOST);
$ua->default_headers->push_header('Accept' => "*/*");
$ua->default_headers->push_header('Accept-Language' => "en-us");
#$ua->default_headers->push_header('Connection' => "close");
$ua->default_headers->push_header('Connection' => "keep-alive");
$ua->default_headers->push_header('Keep-Alive' => "300");
$cookie_jar->load();


######
#  Timestamp
###

# Get the all the values for current time
my ($Second, $Minute, $Hour, $Day, $Month, $Year, $WeekDay, $DayOfYear, $IsDST) = localtime(time);
$Month++;
$Year = $Year+1900;
$WeekDay++;

print STDERR "-----------------------------------------------\n";
print STDERR "Time is ".($Month<10?'0'.$Month:$Month)."-$Day-$Year ".($Hour<10?'0'.$Hour:$Hour).":".($Minute<10?'0'.$Minute:$Minute)."\n";

    ######
    # get index
    ####
    my $req = new HTTP::Request GET => $site;
    $req->protocol('HTTP/1.1');
    $cookie_jar->add_cookie_header($req);
    my $res = $ua->request($req);
    $cookie_jar->extract_cookies($res);

    if (DEBUG){
      open (LOG, ">>".TMP."video.log") or die ("Cannot save log file: $!\n");
      flock(LOG,LOCK_EX);
      seek(LOG, 0, 2);
    
      my $print = $req->as_string . $res->as_string;
      $print =~ s/[^[:ascii:]]+//g;
      print LOG $print;
      flock(LOG,LOCK_UN);
      close(LOG);
    }

    if($res->is_success or ($res->code >= 300 and $res->code < 400)){

      my $block = $res->as_string;

      while (my ($line) = $block =~ m%([^\n]*)\n%){
        $block =~ s%[^\n]*\n%%;
        while ($line =~ m%meta content\="[^\"]+clip\-[^\.]+\.html%){
           my ($clip) = $line =~ m%meta content\=\"([^\"]+clip\-[^\.]+\.html)%;
           my ($filename) = $clip =~ m%([^\/]+)\.html%;
           print STDERR "found clip = $clip, $filename\n" if (DEBUG);
           print STDERR "perl teennick.pl -s http://www.teennick.com/$clip -f $filename\n";
           $line =~ s%meta content\=\"[^\"]+clip\-[^\.]+\.html%%;
        }

      }


    }else{die("error in loading page");}







