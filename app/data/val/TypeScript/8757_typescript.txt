import {autoinject} from 'aurelia-framework';
import {EventAggregator} from 'aurelia-event-aggregator';
import {Router} from 'aurelia-router';
import {FolderOpened} from './events/folder-opened';
import {StateService} from '../resources/services/state-service';
import {GitService} from '../libs/git-service';

const dialog = require('electron').remote.dialog;

@autoinject
export class LandingPage {
    private folderLoaded: boolean = false;

    constructor( 
        private eventAggregator: EventAggregator, 
        private router: Router,
        private gitService: GitService, 
        private stateService: StateService) {}

    activate(params) {
        if (params.id) {
            let path = decodeURIComponent(params.id);
            this.initializeGitToFolder(path).then(() => {
                this.router.navigate('working-copy');
            });
        }
    }

    openRepository(): void {
        dialog.showOpenDialog({properties: ['openDirectory']}, (paths) => {
            if (paths && paths.length > 0) {
                this.initializeGitToFolder(paths[0]).then(() => {
                    this.router.navigate('working-copy');
                });
            }
        });
    }

    private initializeGitToFolder(path: string): Promise<void> {
        return this.gitService.initialize(path).then(() => {
            this.stateService.setFolder(path);
            this.folderLoaded = true;
            return;
        });
    }
}
