using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

namespace Assets.Scripts
{
    public class GameManager : MonoBehaviour
    {
        System.Random random = new System.Random();
        public GameObject zoya;
        public List<Button> buttonsVariants;

        public String winQuestion = "";

        public List<int> randomValues;
        private static GameManager initiates = null;
        public static GameManager Initiates
        {
            get { return initiates; }
            set { initiates = value; }
        }
        void Awake()
        {
            if (initiates == null)
            {
                initiates = this;
            }
            else
            {
                if (!initiates.Equals(this))
                {
                    Destroy(this);
                }
            }
        }
        // Use this for initialization
        void Start ()
        {
	    
            createVariant();
        }
	
        // Update is called once per frame
        void Update ()
        {

        }

        private void clearAndCreateRandomValues()
        {
            randomValues.Clear();
            for (int i = 0; i < zoya.GetComponent<Animation>().GetClipCount(); i++)
            {
                randomValues.Add(i);
            }
        }

        public void chooseVariant(Button buttonC)
        {
            if (zoya.GetComponent<Animation>().isPlaying)
            {
                return;
            }
            if (buttonC.image.color.Equals(Color.red))
            {
                return;
            }
            if (buttonC.GetComponentInChildren<Text>().text.Equals(winQuestion))
            {
                createVariant();
                foreach (var buttons in buttonsVariants)
                {
                    buttons.image.color = Color.white;
                }
            }
            else
            {
                buttonC.image.color = Color.red;
            }
        }

        public void replayAnim()
        {
            if (zoya.GetComponent<Animation>().isPlaying)
            {
                return;
            }
            zoya.GetComponent<Animation>().Play();
        }

        public void createVariant()
        {
            for (int j = 0; j < buttonsVariants.Count; j++)
            {
                buttonsVariants[j].GetComponentInChildren<Text>().text = "";
            }
            clearAndCreateRandomValues();

            int[] randoms = new int[buttonsVariants.Count];
            for (int c = 0; c < buttonsVariants.Count; c++)
            {
                randoms[c] = randomValues[random.Next(0, randomValues.Count)];
                randomValues.Remove(randoms[c]);
            }
            Animation animationZoya = zoya.GetComponent<Animation>().GetComponent<Animation>();
            winQuestion = "";
            int i = 0;
            foreach (AnimationState clip in zoya.GetComponent<Animation>().GetComponent<Animation>())
            {
                String nameClip = animationZoya.GetClip(clip.name).name;
                int pos = i % 3;
                if (i == randoms[0])
                {
                    winQuestion = nameClip;
                    for (int b = 0; b < buttonsVariants.Count; b++)
                    {
                        bool flag = false;
                        if (buttonsVariants[b].GetComponentInChildren<Text>().text == "")
                        {
                            buttonsVariants[b].GetComponentInChildren<Text>().text = nameClip;
                            flag = true;
                        }
                        if (flag)
                        {
                            break;
                        }
                    }
                    animationZoya.clip = animationZoya.GetClip(clip.name);
                    animationZoya.Play();
                }
                for (int r = 1; r < randoms.Length; r++)
                {
                    if (i == randoms[r])
                    {
                        for (int b = 0; b < buttonsVariants.Count; b++)
                        {
                            bool flag = false;
                            if (buttonsVariants[b].GetComponentInChildren<Text>().text == "")
                            {
                                buttonsVariants[b].GetComponentInChildren<Text>().text = nameClip;
                                flag = true;
                            }
                            if (flag)
                            {
                                break;
                            }
                        }
                    }
                }
                i++;
            }
            if (winQuestion.Equals(""))
            {
                createVariant();
            }
        }
    }
}
