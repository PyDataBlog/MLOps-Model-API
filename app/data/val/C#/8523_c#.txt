using System;
using System.Threading.Tasks;
using DineroPortableClientSDK;
using DineroPortableClientSDK.Sales;

namespace DineroSampleApp
{
    public class SalesDemo
    {
        public static string SalesVoucherToPrintableString(SalesVoucherReadListModel salesVoucher)
        {
            return "{salesVoucher.Type} - '{salesVoucher.Description}' [VoucherNumber: {salesVoucher.Number}] " +
              $"'{salesVoucher.Status}'- {salesVoucher.Date} - {salesVoucher.TotalInclVat:C} - {salesVoucher.ContactName}";
        }

        public static async Task GetList(Dinero dinero, string freeTextSearch = null, string statusFilter = null, DateTime? changedSince = null, bool? includeDeleted = null)
        {
            var fieldsToGet = "Number,ContactName,Date,Description,Status,MailOutStatus,Type,TotalExclVatInDkk,TotalInclVatInDkk,TotalExclVat,TotalInclVat,UpdatedAt,DeletedAt";
            SalesVoucherCollection collectionResult = await dinero.Sales.GetListAsync(null, null, fieldsToGet,
                 freeTextSearch, statusFilter, changedSince, includeDeleted);

            foreach (var creditNote in collectionResult.Collection)
            {
                Console.WriteLine(SalesVoucherToPrintableString(creditNote));
            }
            Console.WriteLine("\nFound {0} sales vouchers", collectionResult.Collection.Count);
        }

        public static async Task GetSettings(Dinero dinero)
        {
            SalesVoucherSetttings settings = await dinero.Sales.GetSettingsAsync();
            Console.WriteLine("\nSettings:");
            Console.WriteLine(
                $"[DefaultAccountNumber: {settings.DefaultAccountNumber}] [FikCode: {settings.FikCode}] [LinesInclVat: {settings.LinesInclVat}]");
        }
    }
}