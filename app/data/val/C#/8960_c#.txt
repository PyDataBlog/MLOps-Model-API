using System;
using log4net;
using MongoDB.Bson;
using ODataV3.Models;

namespace ODataV3.Datasources
{
  public class GGDRegioDatasource<T> : MongoDbBase<T>, IDatasource<T> where T : class
  {
    public GGDRegioDatasource() : base("datasetGGDRegio")
    {
      _logger = LogManager.GetLogger(GetType());
    }

    protected override T Map(BsonDocument d)
    {
      GGDRegioModel model = null;

      try
      {
        model = new GGDRegioModel
        {
          GGDRegioID = d["GGDRegioID"].ToString(),
          BetreftJaar = d["BetreftJaar"].IsNumeric ? d["BetreftJaar"].ToInt32() : (int?)null,
          VerkregenJaar = d["VerkregenJaar"].IsNumeric ? d["VerkregenJaar"].ToInt32() : (int?) null,
          GGDRegioCode = d["GGDRegioCode"].ToString(),
          GGDRegioNaam = d["GGDRegioNaam"].AsString,
          GGDRegioLat = d["GGDRegioLat"].IsNumeric ? d["GGDRegioLat"].ToDouble() : (double?) null,
          GGDRegioLong = d["GGDRegioLong"].IsNumeric ? d["GGDRegioLong"].ToDouble() : (double?) null
        };
      }
      catch (Exception ex)
      {
        _logger.ErrorFormat("Exception: {0} data:{1}", ex, d.ToJson());
      }

      return model as T;
    }
  }
}