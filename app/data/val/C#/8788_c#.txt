using System;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace Examples
{
    public partial class Form1 : Form
    {
        private SolidEdgeFramework.Application _application;
        private SolidEdgeFramework.Window _window;
        private SolidEdgeFramework.View _view;
        private SolidEdgeFramework.ISEAnimationEvents_Event _animationEvents;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            // Connect to a running instance of Solid Edge.
            _application = (SolidEdgeFramework.Application)Marshal.GetActiveObject("SolidEdge.Application");

            // A 3D document must be open.
            _window = (SolidEdgeFramework.Window)_application.ActiveWindow;
            _view = _window.View;

            // Connect to events using delegate event model.
            _animationEvents = (SolidEdgeFramework.ISEAnimationEvents_Event)_view.AnimationEvents;

            // Attach to specific events.
            _animationEvents.AnimationEvent += _animationEvents_AnimationEvent;
        }

        private void _animationEvents_AnimationEvent(SolidEdgeFramework.AnimationEventConstants AnimationEventType, int nFrame)
        {
            // Handle AnimationEvent.
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (_animationEvents != null)
            {
                // Dettach from specific events.
                _animationEvents.AnimationEvent -= _animationEvents_AnimationEvent;
            }

            _animationEvents = null;
            _application = null;
        }
    }
}