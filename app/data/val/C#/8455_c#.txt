using Microsoft.WindowsAzure.Storage;
using Microsoft.WindowsAzure.Storage.Blob;
using RS.Logger;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RS.Azure.StorageUploader
{
    public class AzureStorageManager
    {
        public CloudStorageAccount StorageAccount { get; private set; }

        public AzureStorageManager(string connectionString)
        {
            this.StorageAccount = CloudStorageAccount.Parse(connectionString);
        }

        public void AddContainerIfNotExists(string containerName)
        {
            CloudBlobClient blobClient = StorageAccount.CreateCloudBlobClient();
            CloudBlobContainer container = blobClient.GetContainerReference(containerName);
            container.CreateIfNotExists();
        }

        public void UploadFile(string containerName, string blobName, string filePath)
        {
            CloudBlobClient blobClient = StorageAccount.CreateCloudBlobClient();
            CloudBlobContainer container = blobClient.GetContainerReference(containerName);
            CloudPageBlob pageBlob = container.GetPageBlobReference(blobName);

            if (!pageBlob.Exists())
            {
                using (var fileStream = System.IO.File.OpenRead(filePath))
                {
                    pageBlob.UploadFromStream(fileStream);
                }
            }
            else Log.Info("Skipping because file was already uploaded");
        }
    }
}