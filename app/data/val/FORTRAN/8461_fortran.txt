      SUBROUTINE XYPRGG(X,Y,ID,N,NSAVE,IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO REMOVE DUPLICATE ENTRIES FROM A LIST OF X,Y POSITIONS AND
*	IDENTIFIERS
*
*METHOD
*	COMPARE EACH LIST ENTRY WITH ALL SUBSEQUENT ENTRIES. IF A
*	MATCHING IDENTIFIER IS FOUND, COPY THE MOST RECENT VERSION TO
*	THE OLD LOCATION AND SHIFT SUBSEQUENT ENTRIES DOWN TO FILL
*	THE GAP.
*
*ARGUMENTS
*	X,Y (IN/OUT)
*	REAL(N)
*		THE LISTS OF X,Y POSITIONS
*	ID (IN/OUT)
*	BYTE(20,N)
*		THE LIST OF ASCII IDENTIFIERS
*	N (IN)
*	INTEGER
*		THE NUMBER OF INPUT LIST ENTRIES
*	NSAVE (OUT)
*	INTEGER
*		THE NUMBER OF OUTPUT LIST ENTRIES
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*CALLS
*	THIS PACKAGE:
*		IABORD,BYTCPY
*
*NOTES
*	USES BYTE ARRAYS
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      REAL X(N),Y(N),XTEMP,YTEMP
      BYTE ID(20,N),IDTEMP(20)
      IERR=0
      NSAVE=N
C
C I COUNTS THE NUMBER OF DIFFERENT IDENTIFIERS
C
      I=1
C
C CONTINUE IF THERE ARE MORE LIST ENTRIES REMAINING THAN DIFFERENT
C IDENTIFIERS FOUND
C
   66 IF(I.LT.NSAVE) THEN
C
C SEARCH ALL SUBSEQUENT IDENTIFIERS
C
        NS=NSAVE
        DO 18 J=I+1,NS
C
C IF TWO IDENTIFIERS ARE THE SAME, REPLACE THE FIRST ENTRY WITH THE
C SECOND
C
          IF(IABORD(ID(1,I),ID(1,J),20).EQ.0) THEN
            CALL BYTCPY(ID(1,J),ID(1,I),20)
            X(I)=X(J)
            Y(I)=Y(J)
C
C MOVE REMAINING ENTRIES DOWN TO FILL THE GAP
C
            DO 17 K=J,NS-1
	      CALL BYTCPY(ID(1,K+1),ID(1,K),20)
	      X(K)=X(K+1)
	      Y(K)=Y(K+1)
   17	    CONTINUE
C
C IF AN ENTRY HAS BEEN ELIMINATED, REDUCE NSAVE BY 1
C
	    NSAVE=NSAVE-1
	    GO TO 66
	  ENDIF
   18   CONTINUE
C
C IF NO DUPLICATE WAS FOUND, TEST THE NEXT ENTRY
C
        I=I+1
        GO TO 66
      ENDIF
      END
