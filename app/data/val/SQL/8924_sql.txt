--
-- PostgreSQL database dump
--
-- Dumped from database version 9.5.10
-- Dumped by pg_dump version 9.5.5
SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
SET search_path = public, pg_catalog;
--
-- Name: trig_member_groups_system_accounts_insert(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION trig_member_groups_system_accounts_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
/* 
    Author:   Darshik Shirodaria 
    Created:   June 8, 2018 
     
    Description: 
      Adds all the existing system accounts as organization members into the member group.
    Success: 
      Returns true 
    Change Log: 
       
  */	
	-- check if system account added to group. If true, only then proceed to add other system accounts to the group
	IF ((NEW.organization_member_id IN (SELECT om.id
																FROM organization_member om
																JOIN account a
																	ON a.id = om.account_id
																JOIN member_role mr	
																	ON a.member_role_id = mr.id 
																	AND LOWER(mr.name) = 'system admin'
																JOIN organization_member_group_member omgm
																	ON omgm.organization_member_group_id = NEW.organization_member_group_id
																)) AND (NEW.member_status_id <> 'P')) THEN
		INSERT INTO organization_member_group_member (
			organization_member_group_id,
			administrator,
			organization_member_id,
			member_status_id,
			deleted,
			create_date
		)
		SELECT
			NEW.organization_member_group_id,
			TRUE,
			om.id,
			NEW.member_status_id,
			FALSE,
			now()
			FROM organization_member om
			JOIN organization_member om2
				ON om2.id = NEW.organization_member_id
			JOIN organization o
				ON o.id = om.organization_id
				AND o.id = om2.organization_id
			JOIN account a
				ON a.id = om.account_id
			JOIN member_status ms
				ON ms.id = om.member_status_id
				AND LOWER(ms.name) = 'active'
			JOIN member_role mr
				ON mr.id = a.member_role_id
			WHERE 
				LOWER(mr.name) = 'system admin'
				AND om.id NOT IN ( SELECT organization_member_id 
														FROM organization_member_group_member 
														WHERE organization_member_group_id = NEW.organization_member_group_id);
	END IF;													
  RETURN NEW;
END;
$$;
ALTER FUNCTION public.trig_member_groups_system_accounts_insert() OWNER TO postgres;
--
-- PostgreSQL database dump complete
--
