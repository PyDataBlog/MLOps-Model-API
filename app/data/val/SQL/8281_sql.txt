--
-- PostgreSQL database dump
--
-- Dumped from database version 9.5.10
-- Dumped by pg_dump version 9.5.5
SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;
SET search_path = api, pg_catalog;
--
-- Name: organization_member_indicator_preferences_get(integer, integer, integer); Type: FUNCTION; Schema: api; Owner: postgres
--
CREATE FUNCTION organization_member_indicator_preferences_get(p_account_id integer, p_organization_member_id integer, p_indicator_type_id integer) RETURNS TABLE(indicator_id integer, indicator_name text, description text, domain text, indicator_type text, preference boolean, reference_number text)
    LANGUAGE plpgsql
    AS $$
	BEGIN
	/*
		Author: 	Daniel Egli
		Created: 	January 14, 2017
		Description:
			The function retroeves a member's selection of personal preferred indicators which are then used to manually do data uploads.
			If a organization member has no preferences saved, the entire list of indicators that they are susbscribed to is returned instead.
		Parameters
			p_account_id:			the primary key of the account making the database api call (public.account.id)
			p_organization_member_id: 	the primary key of the organization member that is acepting the sharing invite (public.organization_member.id)
			p_indicator_type_id: the primary key of the indicator type that the results should be filtered for. Eg 'Population' or 'Regular' (public.indicator_type.id)
		Success:
			Returns the indicator preferences for the organization member
		Failure:
			Returns no data
		Change Log:
	*/
		RETURN QUERY
		SELECT
			 il.id
			,il.name
			,il.description
			,d.name
			,il.indicator_type
			,CASE
				WHEN pref.id IS NOT NULL
				THEN true
				ELSE false
			 END as preference
			,il.reference_number
		FROM api.indicator_list(
			 p_account_id				-- account filter
			,(SELECT organization_id from organization_member where id = p_organization_member_id)  	-- organization filter
			,null							-- channel filter
			,null							-- domain filter
			,p_indicator_type_id		-- indicator type filter
			,false						-- match root domain
			,true							-- respect subscriptions
			,0								-- paging start
			,1000							-- paging length
			,'') AS il	-- search string
		LEFT OUTER JOIN domain AS d
			ON public.root_domain(domain_id) = d.id
		LEFT OUTER JOIN
			(SELECT UNNEST(cmip.indicators) as id
			FROM public.organization_member_indicator_preferences cmip
			WHERE cmip.organization_member_id = p_organization_member_id
				--Only let a member retrieve their own prefernces
				AND p_account_id = (SELECT account_id FROM organization_member WHERE id = p_organization_member_id)) AS pref
			ON pref.id = il.id
		WHERE
		 il.id IS NOT NULL;
	END;
$$;
ALTER FUNCTION api.organization_member_indicator_preferences_get(p_account_id integer, p_organization_member_id integer, p_indicator_type_id integer) OWNER TO postgres;
--
-- PostgreSQL database dump complete
--
