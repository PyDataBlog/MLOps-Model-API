--[[
Lua clock for conky
]]

require 'cairo'
require 'os'

function conky_main()
	if conky_window == nil then return end--failed to load conky window
	
	local cs = cairo_xlib_surface_create(conky_window.display, conky_window.drawable, conky_window.visual, conky_window.width, conky_window.height)
	cr = cairo_create(cs)
	local updates=tonumber(conky_parse('${updates}'))
	
	if updates>2 then
		--##############################
		font="Mono"
		font_size=12
		xpos,ypos=10,10
		alpha=1
		red=246/255
		green=155/255
		blue=11/255
		font_slant=CAIRO_FONT_SLANT_NORMAL
		font_face=CAIRO_FONT_WEIGHT_NORMAL
		----------------------------------
		--time_hour = tonumber(conky_parse("${tztime %H}")
	--	time_mins = tonumber(conky_parse("${tztime %M}")
	--	time_secs = tonumber(conky_parse("${tztime %S}")
		dt = os.date("*t")
		----------------------------------
		cairo_select_font_face (cr, font, font_slant, font_face);
		cairo_set_font_size (cr, font_size)
		cairo_set_source_rgba (cr,red,green,blue,alpha)
		
		cairo_set_line_width(cr,1)
		cairo_set_line_cap(cr,CAIRO_LINE_CAP_BUTT)
		
		clock_background(cr)
		
		cairo_set_source_rgba (cr,red,green,blue,alpha)
		
		clock_print_centered_text(cr, 100, 100, 13, string.format("%.4f",(dt.hour+(dt.min+dt.sec/60)/60)))
		clock_print_centered_text(cr, 100, 100, -10, string.format("%.2d:%.2d:%.2d",dt.hour,dt.min, dt.sec))
		
		if (dt.hour >= 12) then cairo_arc(cr, 100, 100, 50, angle_process(0), circle_fraction((dt.hour-12)/12))
		else cairo_arc(cr, 100, 100, 50, angle_process(0), circle_fraction(dt.hour/12))
		end
		cairo_stroke(cr)
		cairo_set_source_rgba (cr,1,0,0,alpha)
		cairo_arc(cr, 100, 100, 45, angle_process(0), circle_fraction(dt.min/60))
		cairo_stroke(cr)
		cairo_arc(cr, 100, 100, 40, angle_process(0), circle_fraction(dt.sec/60))
		cairo_stroke (cr)
		
		cairo_set_line_width(cr,3)
		cairo_set_source_rgba(cr, 0.5, 0.5, 0.5, 1)
		if (dt.hour >= 12) then cairo_arc(cr, 100, 100, 60, angle_process(0), circle_fraction(((dt.hour-12)+(dt.min+dt.sec/60)/60)/12))
		else cairo_arc(cr, 100, 100, 60, angle_process(0), circle_fraction((dt.hour+(dt.min+dt.sec/60)/60)/12))
		end
		cairo_stroke(cr)
		
		--##############################
	end-- if updates>5
	
	cairo_destroy(cr)
	cairo_surface_destroy(cs)
	cr=nil
end-- function conky_main

function angle_process(angle)
	return (tonumber(angle)-90)*(math.pi/180)
end

function circle_fraction(frac)
	return 2*math.pi*frac-math.pi/2
end

function clock_background(cr)
	cairo_set_source_rgba (cr,.3,.3,.3,0.5)
	cairo_arc(cr, 100, 100, 65, 0, 2*math.pi)
	cairo_fill(cr)
end

function clock_print_centered_text(cr, posx, posy, fontrel, text)
	local extents=cairo_text_extents_t:create()
	cairo_text_extents(cr, text, extents)
	cairo_move_to(cr,posx-extents.width/2,posy+fontrel)
	cairo_show_text(cr, text)
	cairo_stroke(cr)
end
