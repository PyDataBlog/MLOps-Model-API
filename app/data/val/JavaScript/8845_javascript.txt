/**
 * helper functions for event entities
 */
(function () {


		/** 
		* show self contained popup for listing Course Event entities
		*/
		radio('Event-CourseEvent').subscribe(function(modelId){
			var id = new Date().getTime();
			$.get(document.endpoints.event.getCourseEvent + "/" + modelId , function (html) {
            var id = new Date().getTime();
            var selected = [] ;
            radio("show-modal").broadcast({ 
                id: id,
                title: "<i class='icon-event'></i> Event Entities <small>Course Event for Course " + modelId + "</small>",
                content: html})
		})
	})
	

    /** 
    * show self contained popup for listing Delegate Event (event) entities
    */
    radio('Event-DelegateEvent').subscribe(function (modelId) {
    
            $.get(document.endpoints.delegate.getDelegateEvent + "/" + modelId + "?selected=true", function (html) {
            var id = new Date().getTime();
            var selected = [] ;
            radio("show-modal").broadcast({ 
                id: id,
                title: "<i class='icon-delegate'></i> Delegate Entities <small>Delegate Event for Event " + modelId + "</small><hr/><button class='btn btn-success btn-sm disableOnAjax' onclick='radio(\"Delegate-Pick-DelegateEvent\").broadcast(" + modelId + ")' ><i class='icon-delegate'></i> Add Delegate</button>",
                content: html,
                pickText: "Update",
                onPick: function (e) {

                    if (e.state == 0) {
                        if (selected.indexOf(e.id) == -1) {
                            selected.push(e.id);
                        }
                    }
                    if (e.state == 1) {
                        selected = _.reject(selected, function (x) { return x == e.id });
                    }
                    if (e.state == -1) {
                        $.ajax({
                            type: 'POST',
                            url: "/event/UnLinkDelegateEvent",
                            data: { modelId: modelId, items: selected },
                            dataType: "json",
                            cache: false
                        }).done(function (e) {
                            if (e.Success) {
                                radio("close-modal-" + id).broadcast();
                                radio("notify-success").broadcast({ title: "Event (" + modelId + ") updated", message: "<span onclick=\"radio('app-event-view').broadcast(" + modelId + ")\"><i class='icon-event'></i> View Event</span>" })
                                radio("app-isDirty").broadcast(true);
                            } else {
                                radio("showError-modal-" + id).broadcast(e.Errors);
                            }
                        });
                    }
                }     
            })
        })        
    })
    
    /**
    * show self contained popup for adding new event Delegate Event
    */
    radio('Event-Add-DelegateEvent').subscribe(function (modelId) {

        $.get(document.endpoints.event.addDelegateEvent , function (html) {
            var id = new Date().getTime();
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-event'></i> Add New Event <small>Delegate Event for Delegate " + modelId + "</small>",
                content: html,
                saveText : "Save",
                onSave: function (data) {
                    data.modelId = modelId;
                    radio("clear-modal-" + id).broadcast();
                    $.ajax({
                        type: 'POST',
                        url: document.endpoints.event.saveDelegateEvent,
                        data: data,
                        dataType: "json",
                        cache: false
                    }).done(function (e) {
                        if (e.Success) {
                            radio("close-modal-" + id).broadcast();
                            radio("notify-success").broadcast({ title: "Event (" + e.Model.Id + ") updated", message: "<span onclick=\"radio('app-event-view').broadcast(" + e.Model.Id + ")\"><i class='icon-event'></i> View Event</span>" })
                            radio("app-isDirty").broadcast(true);
                        } else {
                            radio("showError-modal-" + id).broadcast(e.Errors);
                        }
                    });
                }
            })
        })
    })

    /**
    * show self contained popup for adding new event Delegate Event  
    */
    radio('Event-Pick-DelegateEvent').subscribe(function (modelId) {
        
        var selected = [] ;
        // register a refresh function 
        radio("app-refresh-register").broadcast(function () {
            radio("app-refresh-unregister").broadcast(); // unsubscribe us 
            radio("close-modal-" + id).broadcast(); // close this modal                 
            radio('Event-DelegateEvent').broadcast(modelId); // re open it 
        })
        $.get(document.endpoints.event.list, function (html) {
            var id = new Date().getTime();
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-event'></i> Pick Existing Event <small>Delegate Event for Delegate " + modelId + "</small>",
                content: html,
                pickText: "Pick",
                onPick: function (e) {
                    if (e.state == 1) {
                        if (selected.indexOf(e.id) == -1) {
                            selected.push(e.id);
                        }
                    }
                    if (e.state == 0) {
                        selected = _.reject(selected, function (x) { return x == e.id });
                    }
                    if (e.state == -1) {
                         $.ajax({
                            type: 'POST',
                            url: "/event/LinkDelegateEvent",
                            data: { modelId: modelId, items: selected },
                            dataType: "json",
                            cache: false
                        }).done(function (e) {
                            if (e.Success) {
                                radio("close-modal-" + id).broadcast(); // close this modal     
                                radio("notify-success").broadcast({ title: "Event (" + modelId + ") updated", message: "<span onclick=\"radio('app-event-view').broadcast(" + modelId + ")\"><i class='icon-event'></i> View Event</span>" })
                                radio("app-isDirty").broadcast(true);
                            } else {
                                radio("showError-modal-" + id).broadcast(e.Errors);
                            }
                        });
                    }
                }
            })
        })
    })    
    
    /** 
    * show self contained popup for listing Event Location (event) entities
    */
    radio('Event-EventLocation').subscribe(function (modelId) {
        
            var selected = [] ;
            $.get(document.endpoints.location.getEventLocation + "/" + modelId , function (html) {
            var id = new Date().getTime();

            // register a refresh function 
            radio("app-refresh-register").broadcast(function () {
            radio("app-refresh-unregister").broadcast(); // unsubscribe us 
            radio("close-modal-" + id).broadcast(); // close this modal                 
            radio('Event-EventLocation').broadcast(modelId); // re open it 
            })
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-location'></i> Location Entities <small>Event Location for Event " + modelId + "</small><hr/><button class='btn btn-success btn-sm disableOnAjax' onclick='radio(\"Location-Pick-EventLocation\").broadcast(" + modelId + ")' ><i class='icon-location'></i> Add Location</button>",
                content: html  ,
                pickText: "Update",
                onPick: function (e) {
                    if (e.state == 0) {
                        if (selected.indexOf(e.id) == -1) {
                            selected.push(e.id);
                        }
                    }
                    if (e.state == 1) {
                        selected = _.reject(selected, function (x) { return x == e.id });
                    }
                    if (e.state == -1) {
                         $.ajax({
                            type: 'POST',
                            url: "/location/UnLinkEventLocation",
                            data: { modelId: modelId, items: selected },
                            dataType: "json",
                            cache: false
                        }).done(function (e) {
                            if (e.Success) {
                                radio("close-modal-" + id).broadcast();
                                radio("app-refresh-unregister").broadcast(); // unsubscribe us 
                                radio("notify-success").broadcast({ title: "Location (" + modelId + ") updated", message: "<span onclick=\"radio('app-location-view').broadcast(" + modelId + ")\"><i class='icon-location'></i> View Location</span>" })
                                radio("app-isDirty").broadcast(true);
                            } else {
                                radio("showError-modal-" + id).broadcast(e.Errors);
                            }
                        });
                    }
                }      
            })
        })        
    })    

    /**
    * show self contained popup for adding new event Event Location
    */
    radio('Event-Add-EventLocation').subscribe(function (modelId) {

        $.get(document.endpoints.event.addEventLocation + "/" + modelId, function (html) {
        var id = new Date().getTime();
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-event'></i> Add New Event <small>Event Location for Location " + modelId + "</small>",
                content: html,
                saveText: "Save",
                onSave: function (data) {
                    radio("clear-modal-" + id).broadcast();
                    data.modelId = modelId
                    $.ajax({
                        type: 'Post',
                        data: data,
                        url: document.endpoints.event.saveEventLocation,
                        dataType: "json",
                        cache: false
                    }).done(function (e) {
                        if (e.Success) {
                            radio("close-modal-" + id).broadcast();
                            radio("notify-success").broadcast({ title: "Event updated", message: "" })
                            radio("app-isDirty").broadcast(true);
                        } else {
                            radio("showError-modal-" + id).broadcast(e.Errors);
                        }
                    });
                },
            })
        })
    })

    /**
    * show self contained popup for picking existing event Event Location  
    */
    radio('Event-Pick-EventLocation').subscribe(function (modelId) {
        var selected = [];
        $.get(document.endpoints.event.list, function (html) {
        var id = new Date().getTime();
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-event'></i> Pick Existing Event <small>Event Location for Location " + modelId + "</small>",
                content: html,
                pickText: "Pick",
                onPick: function (e) {
                    if (e.state == 1) {
                        if (selected.indexOf(e.id) == -1) {
                            selected.push(e.id);
                        }
                    }
                    if (e.state == 0) {
                        selected = _.reject(selected, function (x) { return x == e.id });
                    }
                    if (e.state == -1) {
                        $.ajax({
                            type: 'POST',
                            url: "/location/LinkEventLocation",
                            data: { modelId: modelId, items: selected },
                            dataType: "json",
                            cache: false
                        }).done(function (e) {
                            if (e.Success) {
                                radio("close-modal-" + id).broadcast();
                                radio("notify-success").broadcast({ title: "Location (" + modelId + ") updated", message: "<span onclick=\"radio('app-location-view').broadcast(" + modelId + ")\"><i class='icon-location'></i> View Location</span>" })
                                radio("app-isDirty").broadcast(true);
                            } else {
                                radio("showError-modal-" + id).broadcast(e.Errors);
                            }
                        });
                    }
                }
            })
        })
    })    
    
    /** 
    * show self contained popup for listing Event Delegate (event) entities
    */
    radio('Event-EventDelegate').subscribe(function (modelId) {
        
            var selected = [] ;
            $.get(document.endpoints.delegate.getEventDelegate + "/" + modelId , function (html) {
            var id = new Date().getTime();

            // register a refresh function 
            radio("app-refresh-register").broadcast(function () {
            radio("app-refresh-unregister").broadcast(); // unsubscribe us 
            radio("close-modal-" + id).broadcast(); // close this modal                 
            radio('Event-EventDelegate').broadcast(modelId); // re open it 
            })
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-delegate'></i> Delegate Entities <small>Event Delegate for Event " + modelId + "</small><hr/><button class='btn btn-success btn-sm disableOnAjax' onclick='radio(\"Delegate-Pick-EventDelegate\").broadcast(" + modelId + ")' ><i class='icon-delegate'></i> Add Delegate</button>",
                content: html  ,
                pickText: "Update",
                onPick: function (e) {
                    if (e.state == 0) {
                        if (selected.indexOf(e.id) == -1) {
                            selected.push(e.id);
                        }
                    }
                    if (e.state == 1) {
                        selected = _.reject(selected, function (x) { return x == e.id });
                    }
                    if (e.state == -1) {
                         $.ajax({
                            type: 'POST',
                            url: "/delegate/UnLinkEventDelegate",
                            data: { modelId: modelId, items: selected },
                            dataType: "json",
                            cache: false
                        }).done(function (e) {
                            if (e.Success) {
                                radio("close-modal-" + id).broadcast();
                                radio("app-refresh-unregister").broadcast(); // unsubscribe us 
                                radio("notify-success").broadcast({ title: "Delegate (" + modelId + ") updated", message: "<span onclick=\"radio('app-delegate-view').broadcast(" + modelId + ")\"><i class='icon-delegate'></i> View Delegate</span>" })
                                radio("app-isDirty").broadcast(true);
                            } else {
                                radio("showError-modal-" + id).broadcast(e.Errors);
                            }
                        });
                    }
                }      
            })
        })        
    })    

    /**
    * show self contained popup for adding new event Event Delegate
    */
    radio('Event-Add-EventDelegate').subscribe(function (modelId) {

        $.get(document.endpoints.event.addEventDelegate + "/" + modelId, function (html) {
        var id = new Date().getTime();
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-event'></i> Add New Event <small>Event Delegate for Delegate " + modelId + "</small>",
                content: html,
                saveText: "Save",
                onSave: function (data) {
                    radio("clear-modal-" + id).broadcast();
                    data.modelId = modelId
                    $.ajax({
                        type: 'Post',
                        data: data,
                        url: document.endpoints.event.saveEventDelegate,
                        dataType: "json",
                        cache: false
                    }).done(function (e) {
                        if (e.Success) {
                            radio("close-modal-" + id).broadcast();
                            radio("notify-success").broadcast({ title: "Event updated", message: "" })
                            radio("app-isDirty").broadcast(true);
                        } else {
                            radio("showError-modal-" + id).broadcast(e.Errors);
                        }
                    });
                },
            })
        })
    })

    /**
    * show self contained popup for picking existing event Event Delegate  
    */
    radio('Event-Pick-EventDelegate').subscribe(function (modelId) {
        var selected = [];
        $.get(document.endpoints.event.list, function (html) {
        var id = new Date().getTime();
            radio("show-modal").broadcast({
                id: id,
                title: "<i class='icon-event'></i> Pick Existing Event <small>Event Delegate for Delegate " + modelId + "</small>",
                content: html,
                pickText: "Pick",
                onPick: function (e) {
                    if (e.state == 1) {
                        if (selected.indexOf(e.id) == -1) {
                            selected.push(e.id);
                        }
                    }
                    if (e.state == 0) {
                        selected = _.reject(selected, function (x) { return x == e.id });
                    }
                    if (e.state == -1) {
                        $.ajax({
                            type: 'POST',
                            url: "/delegate/LinkEventDelegate",
                            data: { modelId: modelId, items: selected },
                            dataType: "json",
                            cache: false
                        }).done(function (e) {
                            if (e.Success) {
                                radio("close-modal-" + id).broadcast();
                                radio("notify-success").broadcast({ title: "Delegate (" + modelId + ") updated", message: "<span onclick=\"radio('app-delegate-view').broadcast(" + modelId + ")\"><i class='icon-delegate'></i> View Delegate</span>" })
                                radio("app-isDirty").broadcast(true);
                            } else {
                                radio("showError-modal-" + id).broadcast(e.Errors);
                            }
                        });
                    }
                }
            })
        })
    })    
    })();