'use strict';
var yeoman = require('yeoman-generator');
var yosay = require('yosay');
var chalk = require('chalk');
var _ = require('lodash');

module.exports = yeoman.generators.Base.extend({

    /**
     * Constructor
     * @return {undefined}
     */
    constructor: function () {
        yeoman.generators.Base.apply(this, arguments);

        this.option('skip-install', {
            desc: 'Skips the installation of dependencies',
            type: Boolean
        });
    },


    /**
     * Prompt the user
     * @return {undefined}
     */
    prompting: function () {
        var done = this.async();

        this.log('Welcome to ' + chalk.red('uniform') + '. The fullstack form generator tool. Built with love. By developers, for developers.');

        var prompts = [{
            type: 'input',
            name: 'configFile',
            message: 'What\'s the name of your config file?',
            default: 'uniform.json'
        }];

        this.prompt(prompts, function (answers) {
            this.uniformConfig = require(this.destinationPath(answers.configFile));

           done();

        }.bind(this));
    },


    /**
     * Writing
     * @type {Object}
     */
    writing: {

        /**
         * package.json
         * @return {undefined}
         */
        packageJSON: function() {
            this.template('_package.json', 'package.json');
        },


        /**
         * Git
         * @return {undefined}
         */
        git: function() {
            this.copy('gitignore', '.gitignore');
        },


        /**
         * Bower
         * @return {undefined}
         */
        bower: function() {
            this.template('_bower.json', 'bower.json');
            this.copy('bowerrc', '.bowerrc');
        },


        /**
         * Main app
         * @return {undefined}
         */
        app: function() {
            // root level folders
            this.mkdir('bin');
            this.mkdir('public');
            this.mkdir('public/components');
            this.mkdir('routes');
            this.mkdir('views');

            // Main route
            this.template('routes/apiV1.js', 'routes/apiV1.js');

            // Node error view
            this.copy('views/error.jade', 'views/error.jade');

            // app files
            this.copy('bin/www', 'bin/www');
            this.copy('app.js', 'app.js');
        },


        /**
         * Images
         * @return {undefined}
         */
        img: function() {
            this.mkdir('public/img');
        },


        /**
         * Javascript
         * @return {undefined}
         */
        javascript: function() {
            this.mkdir('public/js');
            this.mkdir('public/js/forms');
            this.mkdir('public/js/models');
            this.mkdir('public/js/routers');
            this.mkdir('public/js/views');

            // Forms
            this.copy('public/js/forms/entryform.js', 'public/js/forms/entryform.js');

            // Models
            this.template('public/js/models/_entry.js', 'public/js/models/entry.js');

            // Routers
            this.copy('public/js/routers/default.js', 'public/js/routers/default.js');

            // Views
            this.copy('public/js/views/landingView.js', 'public/js/views/landingView.js');
            this.copy('public/js/views/successView.js', 'public/js/views/successView.js');

            // Main js file
            this.copy('public/js/main.js', 'public/js/main.js');
        },


        /**
         * [styles description]
         * @return {[type]} [description]
         */
        styles: function() {
            this.mkdir('public/css');
            this.copy('public/css/main.styl', 'public/css/main.styl');
        },


        /**
         * Templates
         * @return {undefined}
         */
        templates: function() {
            this.mkdir('public/templates');
            this.template('public/templates/landing.hbs', 'public/templates/landing.hbs');
            this.template('public/templates/form.hbs', 'public/templates/form.hbs');
            this.copy('public/templates/success.hbs', 'public/templates/success.hbs');
        },


        /**
         * Dist
         * @return {undefined}
         */
        dist: function() {
            // Directories
            this.mkdir('public/dist');
            this.mkdir('public/dist/css');
            this.mkdir('public/dist/js');
            this.mkdir('public/dist/templates');
        },


        /**
         * HTML
         * @return {undefined}
         */
        html: function() {
            this.copy('public/index.html', 'public/index.html');
        },


        /**
         * Misc files
         * @return {undefined}
         */
        miscFiles: function() {
            this.copy('public/.editorconfig', 'public/.editorconfig');
            this.copy('public/.gitattributes', 'public/.gitattributes');

            this.copy('public/.gitignore', 'public/.gitignore');
            this.copy('public/.htaccess', 'public/.htaccess');
            this.copy('public/apple-touch-icon.png', 'public/apple-touch-icon.png');
            this.copy('public/browserconfig.xml', 'public/browserconfig.xml');
            this.copy('public/crossdomain.xml', 'public/crossdomain.xml');

            this.copy('public/favicon.ico', 'public/favicon.ico');
            this.copy('public/LICENSE.txt', 'public/LICENSE.txt');
            this.copy('public/robots.txt', 'public/robots.txt');

            this.copy('public/tile-wide.png', 'public/tile-wide.png');
            this.copy('public/tile.png', 'public/tile.png');
        },


        /**
         * Gulp
         * @return {undefined}
         */
        gulp: function() {
            this.copy('gulpfile.js', 'gulpfile.js');
        }

    },


    /**
     * Install Dependencies
     * @return {undefined}
     */
    install: function() {
        this.installDependencies({
            skipInstall: this.options['skip-install']
        });
    }

});