//When change in default attribute:
//  Make code revision and check all values working with the default HTML attribute name 'gridindex' and or the variable `attribute`
var navigationItem, attribute;
var navigationActive = false;
var gridindex = "1-2";
var backupGridindex = "1-2";
var lastGridindex_col = {};
var attributes = ["nav-gridindex"]
function getElem(col, row) {
if (attribute == undefined) {
	return document.querySelector("[gridindex='" + String(col) + "-" + String(row) + "']");
} else {
	return document.querySelector("[" + attribute + "='" + String(col) + "-" + String(row) + "']");
}
}
function getAttribute(elem) {
var i;
for (i in attributes) {
	if (elem.getAttribute(attributes[i]) != null) {
		attribute = attributes[i];
		break
	} else {
		attribute = undefined;
	}
	i += 1;
}
if (attribute == undefined) {
	gridindex = String(elem.getAttribute("gridindex"));
	console.log("%cFocus event: Calling element with id: " + gridindex, "color:orange;"); 
} else {
	gridindex = String(elem.getAttribute(attribute));
}
}
function getIndex(elem) {
if (attribute == undefined) {
	gridindex = String(elem.getAttribute("gridindex"));
	if (gridindex == "null") {
		getAttribute(elem);
	} else {
		console.log("%cFocus event: Calling element with id: " + gridindex, "color:orange;");
	}
} else {
getAttribute(elem);
}
}
function down() {
var elem, col, row;
var navelem = false;
var tmp = gridindex.split("-");
col = parseInt(tmp[0]);
row = parseInt(tmp[1]);
row += 1;
while (true) {
elem = getElem(col, row);
console.log("%cCalling element with id: " + String(col) + "-" + String(row), "color:darkblue;");
if (elem != undefined) {
	if (elem.parentNode.parentNode.className.indexOf("nav-children") > -1 ) {
		elem.parentNode.parentNode.style.display = "block";
		navigationItem = elem.parentNode.parentNode;
		navelem = true;
	} else {
		if (navigationItem != undefined) {
			navigationItem.style = "";
		}
	}
	if (elem.offsetHeight > 0 || navelem) {
		elem.focus();
		gridindex = String(col) + "-" + String(row);
		navelem = false;
		break;
	} else {
		row += 1;
	}
} else {
lastGridindex_col[String(col)] = String(row);
col += 1;
if (getElem(col, 1) != null) {
	gridindex = String(col) + "-0";
	down();
}
break;
}
}
}
function up() {
var elem, col, row;
var tmp = gridindex.split("-");
col = parseInt(tmp[0]);
row = parseInt(tmp[1]);
row -= 1;
while (true) {
elem = getElem(col, row);
console.log("%cCalling element with id: " + String(col) + "-" + String(row), "color:darkblue;");
if (elem != undefined) {
	if (elem.parentNode.parentNode.className.indexOf("nav-children") > -1 ) {
		elem.parentNode.parentNode.style.display = "block";
		navigationItem = elem.parentNode.parentNode;
		navelem = true;
	} else {
		if (navigationItem != undefined) {
			navigationItem.style = "";
		}
	}
	if (elem.offsetHeight > 0) {
		elem.focus();
		gridindex = String(col) + "-" + String(row);
		break;
	} else {
		row -= 1;
	}
} else {
if (getElem(col-1, 1) != null) {
	if (lastGridindex_col[String(col-1)] == undefined) {
		lastGridindex_col[String(col-1)] = "1";
	}
	gridindex = String(col-1) + "-" + lastGridindex_col[String(col-1)];
	if (lastGridindex_col[String(col-1)] == 1) {
		gridindex = String(col-1) + "-" + String(parseInt(lastGridindex_col[String(col-1)])+1);
	}
	up();
}
break;
}
}
}
function left() {
var elem, col, row;
var tmp = gridindex.split("-");
col = parseInt(tmp[0]);
row = parseInt(tmp[1]);
col -= 1;
while (true) {
elem = getElem(col, row);
console.log("%cCalling element with id: " + String(col) + "-" + String(row), "color:darkblue;");
if (elem != undefined) {
	if (elem.offsetHeight > 0) {
		elem.focus();
		gridindex = String(col) + "-" + String(row);
		break;
	} else {
		col -= 1;
	}
} else {
col += 1;
break;
}
}
}
function right() {
var elem, col, row;
var tmp = gridindex.split("-");
col = parseInt(tmp[0]);
row = parseInt(tmp[1]);
col += 1;
while (true) {
elem = getElem(col, row);
console.log("%cCalling element with id: " + String(col) + "-" + String(row), "color:darkblue;");
if (elem != undefined) {
	if (elem.offsetHeight > 0) {
		elem.focus();
		gridindex = String(col) + "-" + String(row);
		break;
	} else {
		col += 1;
	}
} else {
col -= 1;
break;
}
}
}
document.body.addEventListener("keydown", function(event) {
var key = event.keyCode || event.which;
if (event.altKey) {
	var col, row;
	if (key == 78) { // key 'n'
		// activate/deactivate navigation (toggling)
		if (navigationActive) {
			// deactivate navigation
			attribute = undefined;
			navigationActive = false;
			gridindex = backupGridindex;
			row = gridindex.split("-");
			col = parseInt(row[0]);
			row = parseInt(row[1]);
			getElem(col, row).focus();
		} else {
			// activate navigation
			attribute = "nav-gridindex";
			navigationActive = true;
			backupGridindex = gridindex;
			gridindex = "1-1";
			row = gridindex.split("-");
			col = parseInt(row[0]);
			row = parseInt(row[1]);
			getElem(col, row).focus();
		}
	} else if (key == 27) { // escape
		// escape key
		attribute = undefined;
		navigationActive = false;
		gridindex = backupGridindex;
		row = gridindex.split("-");
		col = parseInt(row[0]);
		row = parseInt(row[1]);
		getElem(col, row).focus();
	}
} else {
	if (key == 38 || key == 121) { // arrow up, F10
		up();
		event.preventDefault();
	} else if (key == 40 || key == 120) { // arrow down, F9
		down();
		event.preventDefault();
	} else if (key == 37 || key == 122) { // arrow left, F11
		left();
		event.preventDefault();
	} else if (key == 39 || key == 123) { // arrow right, F12
		right();
		event.preventDefault();
	}
}
})
getElem(1, 2).focus();
