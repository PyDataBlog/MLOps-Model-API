//===========================================================================//
//                                                                           //
// ÎÄ¼þ£º  LED.H                                                             //
// ËµÃ÷£º  BW-DK5438¿ª·¢°åÊýÂë¹ÜÏÔÊ¾º¯Êý¿â                                   //
// ±àÒë£º  IAR Embedded Workbench IDE for msp430 v4.21                       //
// °æ±¾£º  v1.1                                                              //
// ±àÐ´£º  JASON.ZHANG                                                       //
// °æÈ¨£º  ±±¾©ÍØÆÕ²©Î¬µç×Ó¼¼ÊõÓÐÏÞ¹«Ë¾                                      //
// ÈÕÆÚ£º  2010.09.19                                                        //
//                                                                           //
//===========================================================================//

#include "msp430x54x.h"
#include <stdlib.h>
#include <stdio.h>
#include "PIN_DEF.H"
#include "string.h"
#include "math.h"

//ÊýÂë¹ÜÎ»ÏÔÊ¾Ä£Ê½³£Á¿¶¨Òå
#define  DIGIT_OFF       BIT0
#define  DIGIT_FLICKER   BIT1

//ÕûÊýÏÔÊ¾Ä£Ê½³£Á¿¶¨Òå
#define  FIT_ZERO        BIT0
#define  NO_ZERO         0x00

//¸ººÅ³£Á¿
#define  MINUS          ~SEGG

//Ð¡Êýµã³£Á¿
#define  DPOINT         ~SEGDP

//ÊýÂë¹ÜÏÔÊ¾ÄÚÈÝ¡¢Ä£Ê½¶¨Òå
typedef struct
{
  unsigned char data                                       ; // ÏÔÊ¾Êý¾Ý
  unsigned char mode                                       ; // ÏÔÊ¾Ä£Ê½
  unsigned char lightness                                  ; // ÏÔÊ¾ÁÁ¶È
}LED_STRUCT                                                ;

//Íâ²¿±äÁ¿
extern unsigned char SMG[10]                               ;
extern LED_STRUCT LED[8]                                   ;

//º¯Êý¶¨Òå
void LED_Disp_Int(long iValue,unsigned char mode)          ;
void LED_Disp_Float(float fValue,
                    unsigned char dpLength,
                    unsigned char mode         )           ;
void Clear_LED(void)                                       ;
void LED_Hide_Digit(unsigned char digit)                   ;
void LED_Flicker_Digit(unsigned char digit)                ;
void Ini_LED(unsigned char lightness)                      ;

//***************************************************************************//
//                                                                           //
// º¯Êý£ºLED_Disp_Int(long,unsigned char)                                    //
// ¹¦ÄÜ£ºÊýÂë¹ÜÏÔÊ¾ÕûÊý                                                      //
// ²ÎÊý£ºiValue ¡ª¡ªÏÔÊ¾ÊýÖµ                                                 //
//       mode   ¡ª¡ªÏÔÊ¾Ä£Ê½                                                 //
//                                                                           //
//***************************************************************************//
void LED_Disp_Int(long iValue,unsigned char mode)
{
  unsigned char i,l                                        ;
  char string[10]                                          ;
  Clear_LED()                                              ;
  sprintf(string,"%ld",iValue)                             ;
  if(mode&FIT_ZERO)
    sprintf(string,"%08ld",iValue)                         ;
  l                = strlen(string)                        ;
  if(iValue>=0)
  {
    for(i=0;i<l;i++)
      LED[7-i].data  = SMG[string[l-i-1]-0x30]             ;
  }
  else
  {
    for(i=0;i<l-1;i++)
      LED[7-i].data  = SMG[string[l-i-1]-0x30]             ;
  }
  if(iValue<0)
    LED[8-l].data  = MINUS                                 ; 
  if(l<8)
  {
    for(i=0;i<8-l;i++)
      LED[i].mode |= DIGIT_OFF                             ;
  }
}

//***************************************************************************//
//                                                                           //
// º¯Êý£ºLED_Disp_Float(float,unsigned char,unsigned char)                   //
// ¹¦ÄÜ£ºÊýÂë¹ÜÏÔÊ¾ÕûÊý                                                      //
// ²ÎÊý£ºfValue   ¡ª¡ªÏÔÊ¾ÊýÖµ                                               //
//       dpLength ¡ª¡ªÐ¡ÊýµãºóÎ»Êý                                           //
//       mode     ¡ª¡ªÏÔÊ¾Ä£Ê½                                               //
//                                                                           //
//***************************************************************************//
void LED_Disp_Float(float fValue,unsigned char dpLength,unsigned char mode)
{
  char string[10]                                          ;
  long lvTemp                                              ;
  lvTemp       = fValue*pow(10,dpLength)                   ;
  sprintf(string,"%ld",lvTemp)                             ;
  LED_Disp_Int(lvTemp,mode)                                ;
  LED[7-dpLength].data  &= DPOINT                          ;
}

//***************************************************************************//
//                                                                           //
// º¯Êý£ºClear_LED(void)                                                     //
// ¹¦ÄÜ£ºÇå³ýLEDÏÔÊ¾»º³åÇø                                                   //
// ²ÎÊý£ºÎÞ                                                                  //
//                                                                           //
//***************************************************************************//
void Clear_LED(void)
{
  unsigned char i                                          ;
  for(i=0;i<8;i++)
  {
//    LED[i].data   = 0xFF                                   ;
    LED[i].mode  &=~DIGIT_OFF                              ;
  }
}

//***************************************************************************//
//                                                                           //
// º¯Êý£ºLED_Hide_Digit(unsigned char)                                       //
// ¹¦ÄÜ£ºÏûÒþLEDÖ¸¶¨Î»                                                       //
// ²ÎÊý£ºdigit  ¡ª¡ª ÏûÒþÎ»                                                  //
//                                                                           //
//***************************************************************************//
void LED_Hide_Digit(unsigned char digit)
{
  if(digit<=8)
    LED[digit-1].mode  |= DIGIT_OFF                        ;
}

//***************************************************************************//
//                                                                           //
// º¯Êý£ºLED_Flicker_Digit(unsigned char)                                    //
// ¹¦ÄÜ£ºÉÁË¸LEDÖ¸¶¨Î»                                                       //
// ²ÎÊý£ºdigit  ¡ª¡ª ÉÁË¸Î»                                                  //
//                                                                           //
//***************************************************************************//
void LED_Flicker_Digit(unsigned char digit)
{
  if(digit<=8)
    LED[digit-1].mode  |= DIGIT_FLICKER                    ;
}

//***************************************************************************//
//                                                                           //
// º¯Êý£ºIni_LED(void)                                                       //
// ¹¦ÄÜ£º³õÊ¼»¯ÊýÂë¹ÜÏÔÊ¾                                                    //
// ²ÎÊý£ºlightness  ¡ª¡ª ÏÔÊ¾ÁÁ¶È                                            //
//                                                                           //
//***************************************************************************//
void Ini_LED(unsigned char lightness)
{
  unsigned char i                                          ;
  Clear_LED()                                              ;
  if(lightness==0||lightness>63)
    lightness          = 10                                ;
  for(i=0;i<8;i++)
    LED[i].lightness   = lightness                         ;
  SET_DIGITS_OUT                                           ;
  SET_SEGS_OUT                                             ;
}
