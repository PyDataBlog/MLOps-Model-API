/* Copyright (c) Damian Jakub Smoczyk
 *
 * Contact: jakub.smoczyk@gmail.com
 *
 * All rights reserved.
 *
 * This file is part of reVision Project
 *
 * reVision Project is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * reVision Project is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with reVision Project. If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "Asset.hpp"
#include "core/animation/animation.hpp"

/**
 * @brief The SkeletonAsset class is the base class for every skeleton asset
 */
class SkeletonAsset : public Asset
{
public:

	SSkeleton* m_skeletonDef = nullptr;

	SkeletonAsset(const std::string& filePath);

	virtual ~SkeletonAsset();

	static std::shared_ptr<SkeletonAsset> eiFromJson(const RJNode& value);

	static RJNode eiToJson(const std::shared_ptr<SkeletonAsset> asset);

	static void siSave(RJNode& data, const std::shared_ptr<SkeletonAsset> asset);

    static std::shared_ptr<SkeletonAsset> siLoad(const RJNode& data);

};
