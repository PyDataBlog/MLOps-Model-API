DECLARE @aa int, @vvv nvarchar(20)
SELECT @aa = SUM(ÑóììàÎïëàòû) FROM dbo.Ïëàòåæè 
SET @vvv='ALL ok ÈÃîðü'
SELECT @aa as ×ÈÌËÎ
PRINT @vvv
-------
SELECT *
FROM Ïëàòåæè
-------
SELECT RADIANS(90),RADIANS(90.0), RADIANS(90.0000)
-------
DECLARE @a int, @b nvarchar(10)
SET @a = 15
SET @b = 'vfv'
SELECT ISNUMERIC(@a), ISNUMERIC(@b)
-------
SELECT POWER(2,8),
POWER(9,0.5),
POWER(9,1/2),
POWER(9,1.0/2.0)
-------
DECLARE @a int, @b nvarchar(10)
SET @b = 'vfvcfg'
SELECT @a = LEN(@b)
SELECT @a
-------
PRINT GETDATE()
SELECT ISDATE('10.11.2001')
-------
SELECT DATEADD (year,-2, '08-06-07 17:17:17')
-------
SELECT GETDATE() AS [GetDate],
DAY (GETDATE())  AS [Day],
MONTH (getdate()) as [Month],
YEAR (GETDATE()) as year,
DATEADD (year,1,getdate()) as [DaetAdd],
DATEDIFF (Week, '16-07-08 17:17:17', getdate()) as [DateDiff],
DATENAME (Month, getdate()) as [DatePart]
-------
SELECT @@CONNECTIONS
-------
SELECT @@LANGUAGE, @@LOCK_TIMEOUT
-------
SELECT @@VERSION,@@ERROR
-------
SELECT [Òåêóùèé ïîëüçàâàòåëü] = CURRENT_USER, ['public'] = IS_MEMBER('public')
-------
if IS_SRVROLEMEMBER('sysadmin')=1
PRINT ' Âû ñèñàäìèí'
ELSE
PRINT 'Âû íå ñèñàäìèí'
-------
CREATE FUNCTION FunctionA ( 
					@var1 bigint,
					@var2 bigint,
					@operation char(1)='*')
				RETURNS bigint
			AS
			BEGIN 
				DECLARE @var3 bigint
				SET @var3 = 
					CASE @operation
						WHEN '+' THEN @var1+@var2
						WHEN '-' THEN @var1-@var2
						WHEN '*' THEN @var1*@var2
						WHEN '/' THEN @var1/@var2
					ELSE
					0
					END
				RETURN @var3
				END
-------
USE [laba06]
GO
/****** Object:  UserDefinedFunction [dbo].[Students_Dara]    Script Date: 12/24/2011 12:54:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER FUNCTION [dbo].[Students_Dara](@Gr NCHAR(6))
RETURNS @report TABLE(Ôàìèëèÿ nchar(20), Èÿ nchar(20),ÃîäÏîñòóïëåíèÿ int)
as
begin
	insert into @report
	select Ôàìèëèÿ, Èìÿ, ÃîäÏîñòóïëåíèÿ from 
	dbo.Ñòóäåíòû
		where (dbo.Ñòóäåíòû.Ãðóïïà=@Gr)
	return
	end
-------
-- Äàííàÿ ñêàëÿðíàÿ ôóíêöèÿ âîçðîùàåò 
-- êîëè÷åñòâî ñòóäåíòîâ ó÷àùèõñÿ â óêàçàííîé ãðóïïå
CREATE FUNCTION func_laba7
(
	-- Âõîäíûå ïàðàìåòðû ôóíêöèè
	@gr  nchar(6)
)
RETURNS int
AS
BEGIN
	-- Îáÿâëåíèå âîçðîùàåìîé ïåðåìåííîé
	DECLARE @rezult  int
	SET @rezult = (SELECT COUNT(Îò÷åñòâî)
					FROM Ñòóäåíòû
					WHERE Ãðóïïà=@gr)
	RETURN (@rezult)
	-- Çíà÷åíèå âîçðàùàåìîå ôóíêöèåé
	RETURN @rezult
END
-------
-- Äàííàÿ òàáëè÷íàÿ ôóíêöèÿ âîçðîùàåò 
-- òàáëèöó ñòóäåòíòîâ çàäàííîãî ôàêóëüòåòà ñ
-- ñóììàìè îïëàò ïî êàæäàìó ñòóäåíòó
CREATE FUNCTION tbFunc_laba7
(
	-- Âõîäíûå ïàðàìåòðû ôóíêöèè
	
)
RETURNS TABLE
	-- Çíà÷åíèå âîçðàùàåìîå ôóíêöèåé
	RETURN (
	SELECT Ñòóäåíòû.Ôàìèëèÿ,
		   Ñòóäåíòû.Èìÿ,
		   Ñòóäåíòû.Îò÷åñòâî,
		   Ñòóäåíòû.ÑîêðîùåííîåÍàçâàíèåÔàêóëüòåòà,
		   SUM(Ïëàòåæè.ÑóììàÎïëàòû) as Îïëà÷åíîÑòóäåíòîì
	FROM Ïëàòåæè INNER JOIN
         Ñòóäåíòû ON Ïëàòåæè.ÊîäÑòóäåíòà = Ñòóäåíòû.ÊîäÑòóäåíòà
    GROUP BY Ñòóäåíòû.Ôàìèëèÿ,Ñòóäåíòû.Èìÿ,Ñòóäåíòû.Îò÷åñòâî)
-------
-- Äàííàÿ òàáëè÷íàÿ ôóíêöèÿ âîçðîùàåò 
-- òàáëèöó ñòóäåòíòîâ çàäàííîãî ôàêóëüòåòà ñ
-- ñóììàìè îïëàò ïî êàæäàìó ñòóäåíòó
CREATE FUNCTION tMFunc_laba7
(	-- Âõîäíûå ïàðàìåòðû ôóíêöèè
	@fak nchar(7)
)
RETURNS @rep TABLE(Ôàìèëèÿ nchar(20),
				   Èìÿ nchar(20),
				   Îò÷åñòâî nchar(20),
				   Îïëà÷åíî bigint  )
AS
BEGIN
--âñòàâèòü â ïåðåìåííóþ òàáëèöó
INSERT INTO @rep
	SELECT Ñòóäåíòû.Ôàìèëèÿ,
		   Ñòóäåíòû.Èìÿ,
		   Ñòóäåíòû.Îò÷åñòâî,
		   SUM(Ïëàòåæè.ÑóììàÎïëàòû) as Îïëà÷åíîÑòóäåíòîì
	FROM Ïëàòåæè INNER JOIN
         Ñòóäåíòû ON Ïëàòåæè.ÊîäÑòóäåíòà = Ñòóäåíòû.ÊîäÑòóäåíòà
    WHERE (Ñòóäåíòû.ÑîêðîùåííîåÍàçâàíèåÔàêóëüòåòà=@fak)
    GROUP BY Ñòóäåíòû.Ôàìèëèÿ,Ñòóäåíòû.Èìÿ,Ñòóäåíòû.Îò÷åñòâî  
-- Çíà÷åíèå âîçðàùàåìîå ôóíêöèåé
	RETURN
END
-------
-- ================================================
-- Template generated from Template Explorer using:
-- Create Procedure (New Menu).SQL
--
-- Use the Specify Values for Template Parameters 
-- command (Ctrl-Shift-M) to fill in the parameter 
-- values below.
--
-- This block of comments will not be included in
-- the definition of the procedure.
-- ================================================
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE Procd
	-- Add the parameters for the stored procedure here
	@gr char(8)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT Ôàìèëèÿ, Èìÿ, Îò÷åñòâî
	FROM Ñòóäåíòû
	END
GO
-------
DECLARE myCursor CURSOR
   KEYSET
   READ_ONLY
  FOR SELECT * FROM Ñòóäåíòû
DECLARE @cursorVariable CURSOR
 --Ñîçäàíèå ìíîæåñòâà çàïèñåé êóðñîðà
OPEN myCursor 
-- Íàçíà÷åíèå ïåðåìåííîé êóðñîðó
SET @cursorVariable = myCursor
-- Îñâîáîæäåíèå êóðñîðà
 FETCH myCursor
CLOSE myCursor
DEALLOCATE myCursor
-------
USE laba06
GO
DECLARE SimpleCursor CURSOR LOCAL 
	FOR SELECT Èìÿ, Ôàìèëèÿ FROM Ñòóäåíòû
DECLARE @name nchar(20), @surname nchar(30) 
--îòêðûòèå êóðñîðà
OPEN SimpleCursor
--âûáîð äàííûõ èç êóðñîðà
FETCH SimpleCursor
INTO @Name, @Surname
--âûâùä
SELECT @name,@surname
--çàêðûòèå
CLOSE SimpleCursor
DEALLOCATE SimpleCursor
-------
USE laba06
GO
DECLARE SimpleCursor CURSOR LOCAL
	KEYSET
	FOR SELECT Èìÿ, Ôàìèëèÿ FROM Ñòóäåíòû
--îòêðûòèå êóðñîðà
OPEN SimpleCursor
FETCH ABSOLUTE 4 FROM SimpleCursor
UPDATE Ñòóäåíòû SET Ôàìèëèÿ = 'Ïåòðàøîâ'
WHERE CURRENT OF SimpleCursor
--âûâùä
SELECT * FROM Ñòóäåíòû
--çàêðûòèå
CLOSE SimpleCursor
DEALLOCATE SimpleCursor
-------

-------