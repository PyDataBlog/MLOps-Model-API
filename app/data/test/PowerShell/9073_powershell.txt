<#
.SYNOPSIS
This PowerShell script module file contains common, reusable functions that
are intended to be included in all PowerShell scripts that reside within the
automation framework.

.DESCRIPTION
Note: This script module is NOT intended to be executed independent of another
PowerShell script referencing and using it.
#>

function Remove-DirectoryContents {
    <#
    .SYNOPSIS
    Removes all contents of a directory, if it exists.

    .DESCRIPTION
    This function recursively removes all contents of the specified directory,
    if it exists.

    .EXAMPLE
    All parameters are required except
        -showOutMessage
 
    Remove-DirectoryContents -dirPath "/developer/temp" `
                                -showOutMessage $false
    #>

    # function parameters
    [CmdletBinding(SupportsShouldProcess = $true, DefaultParameterSetName = 'Remove')]
    Param(
        [Parameter(
            Mandatory = $true,
            ParameterSetName = '',
            HelpMessage = "The absolute path of the directory in which to remove its contents if it exists. Example: `"/developer/temp`"",
            ValueFromPipeline = $false)]
            [string]$dirPath = $(throw "-dirPath is required"),
        [Parameter(
            Mandatory = $false,
            ParameterSetName = '',
            HelpMessage = "Optional value indcating if an informational output message should be displayed. Example: false",
            ValueFromPipeline = $false)]
            [bool]$showOutMessage = $false
    )

    # remove directory contents if it exists
    if ((Test-Path -PathType Container -Path $dirPath) -eq $true) {

        if ($showOutMessage -eq $true) {
            Write-Info "Removing directory contents '$dirPath'..."
        }

        Get-ChildItem -Path $dirPath -Include *.* | Remove-Item -Recurse 
    }
}