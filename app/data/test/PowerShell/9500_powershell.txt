# End Function

<# Set up monitoring. For this script we only use one two state monitor (good/bad) 
Import-module Automonitoring -force

$Monitors = @()
$MonitorSettings = New-NRKTwoStateMonitorSettings -Eventlog 'Automation' -EventSource 'Sync-CMCollections' -GoodEventId 1000 -BadEventId 1001
$Monitors += (New-NRKScriptMonitor -ApplicationName 'Sync-CMCollections' -MonitorName 'ScriptState' -MonitorSettings $MonitorSettings)

$Monitors | Write-NRKScriptMonitor -OverWrite

#>

Import-module Sqlserver
Import-Module D:\Planlagte_oppgaver\ConfigManagerCollectionSync\CollectionSync\CollectionSync.psd1 -force

$VerbosePreference = "Continue"
$ConfigurationSettingsFileName = "D:\Planlagte_oppgaver\configmanagercollectionsync\Config.json"

$TimeStamp = (Get-Date)

Try {
    $Json = (Get-Content $ConfigurationSettingsFileName -ErrorAction Stop -Encoding UTF8 | ConvertFrom-Json)
    If ([string]::IsNullOrEmpty($Json.Content) -or ($Json.Content -ne "ConfigurationSettings")) {
        Trow "Konfigurasjonsfilen har feil format: $ConfigurationSettingsFilename"
    } Else {
        New-Eventlog -LogName $Json.ErrorHandling.EventLog -Source $Json.ErrorHandling.EventSource -ErrorAction SilentlyContinue
    } 
}
Catch {
    New-LogEntry -LogDetail Error -EventData ("{0}##Feil oppstÃ¥tt: {1}" -f $MyInvocation.MyCommand, $_.Exception.Message)
    Write-Verbose $_.Exception.Message
    Exit (1)
}

$TS = (Get-Date)
If (($TS.DayOfYear % 30) -eq 0) {
    New-LogEntry -LogDetail Debug -EventData ("{0}##Syncronization started" -f $MyInvocation.MyCommand) -Clear | Out-Null
}
$Info = Get-NRKSynchronizedCollection  -Verbose

