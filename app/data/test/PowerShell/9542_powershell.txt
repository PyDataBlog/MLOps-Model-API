#Author: Tom Harrison
#Function: Monitoring Services, and restart them if a problem exists.
###################################start INIT##############################
$scriptDirectory = Split-Path ($MyInvocation.MyCommand.Path) -Parent
write-host "Starting Init process"
write-host " "
#check if settings.xml file exists
if(!(Test-Path "$scriptDirectory\settings.xml")){
    Write-Error "Settings.xml File not in same Directory as this script! Terminating!"
    #Exit becuase of wrong settings
    Exit
}
#read Settings from settings.xml file
[xml]$xmlset = Get-Content "$scriptDirectory\settings.xml"
write-host 'Log Level:' $xmlset.settings.Loglevel
$global:Loglevel = $xmlset.settings.Loglevel
write-host 'Sleep-time between checks:' $xmlset.settings.rechecktime 'seconds'
$global:sleeptime = $xmlset.settings.rechecktime
write-host 'Services to check:' $xmlset.settings.services
$global:services = $xmlset.settings.services
write-host " "
write-host "End of Init"
write-host " "
###############################End INIT#############################
#############################Start Loop#############################
$running = "true"
#start loop
while($running = "true") {
    
    #Check status of services (check for each service defined)
    #start foreach
     foreach ($service in $global:services)
    {
        $respone = get-service $service
        if($respone.status -eq "Running"){
            #IF true, service is running
            if($global:Loglevel -eq 'verbose'){write-host "Service $service is up-and-running!"}
        }
        ELSE{
            #If not true, Service is down or non-existent
            Write-Warning "Service $service is down - will attempt to restart it!"
            #Try to troubleshoot (restart service)
            #if status is "stopped", start it again =>
            if(get-service $service | where-object {$_.Status -eq "Stopped"}){
                if($global:Loglevel -eq 'verbose'){write-host "Service $service is Stopped! Starting it again..."}
                Start-Service $service
            }
            #If status is anything else, restart it =>
            if(get-service $service | where-object {$_.Status -ne "Stopped"}){
            if($global:Loglevel -eq 'verbose'){write-host "Service $service is in undefined state, restarting it..."}
            Restart-Service $service -force #will kill the service, even if dependent ones are still running
            }
        }
    }
    #wait defined waittime 
    sleep -sec $global:sleeptime
}
#############################End Loop#############################

# SIG # Begin signature block
# MIIEKgYJKoZIhvcNAQcCoIIEGzCCBBcCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUhuZik4JrSx/AOwaEfGX3A8Sv
# Sl+gggI0MIICMDCCAZ2gAwIBAgIQpfui+nh2g6xH+ijJ18Xw8zAJBgUrDgMCHQUA
# MCwxKjAoBgNVBAMTIVBvd2VyU2hlbGwgTG9jYWwgQ2VydGlmaWNhdGUgUm9vdDAe
# Fw0xNDEwMzAxOTQ2NDlaFw0zOTEyMzEyMzU5NTlaMBExDzANBgNVBAMTBlRIQ29k
# ZTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAuBHYn4KQB80sKHv+cDK226GA
# FQbAYWoxRI9ktNXyt/e6vAjYNXmNhCETEuzv+akLOLkNXGfj4FrqXLrZNt1rCulI
# vjduNkdQjjno5CidwS7Nqee8Fq3djzf8S1O15kFeeSiWCajUZ9mCDQbNI5+bSVIc
# xCsFC9tFOwJM6Y8FlYkCAwEAAaN2MHQwEwYDVR0lBAwwCgYIKwYBBQUHAwMwXQYD
# VR0BBFYwVIAQh3ve+4uPX4liRG2GxkS8daEuMCwxKjAoBgNVBAMTIVBvd2VyU2hl
# bGwgTG9jYWwgQ2VydGlmaWNhdGUgUm9vdIIQzSlMoP+RWalE3CBHNiMD7DAJBgUr
# DgMCHQUAA4GBAFp7e0a5xVZpBL7d2qDNui5/PQGBDmeS+T2SHMoKL2EebaP1V061
# 40s6zWZCzgoaCjDJR18QOWr7cArbOdNDckquhezPb1KXQw1hPXj9haaUPI4mP1rH
# Q2x1b/ndSUFMee2fiek0Jp40RKmGZCjUfULT4p4Ohyz2IysMDE/1GkQrMYIBYDCC
# AVwCAQEwQDAsMSowKAYDVQQDEyFQb3dlclNoZWxsIExvY2FsIENlcnRpZmljYXRl
# IFJvb3QCEKX7ovp4doOsR/ooydfF8PMwCQYFKw4DAhoFAKB4MBgGCisGAQQBgjcC
# AQwxCjAIoAKAAKECgAAwGQYJKoZIhvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYB
# BAGCNwIBCzEOMAwGCisGAQQBgjcCARUwIwYJKoZIhvcNAQkEMRYEFIMc1P1ZblmR
# lX+HXM2Lgm9TZw/sMA0GCSqGSIb3DQEBAQUABIGALuFTLAGRdDBXsVB9PEblQYC1
# 2GNOX3YZpfoTZ4EvdHcLDG2V26FwXnUUT4hQDdY0f19ADtApKxCyywBTrLR7AFue
# tzhJaXg09ZcxyA4Bz9gqhqnIlQtmgbBH6mbKfpzcafEfxh9HOResKdx7mbS3r9ev
# B9peX9HdKgsp59Vxqeo=
# SIG # End signature block
