Function New-NgCrudComponentTemplateValidationTsToString([TableInfo]$tableInfo, [string]$returnToUrl) {

	[string]$primaryKey = "$($tableInfo.tableLowerCamel)Id"

<##########################################################################################>
return @"

import 'rxjs/add/operator/switchMap';
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router, Params } from '@angular/router';
import { $($tableInfo.tableCapitalCamel) } from '../model/$($tableInfo.tableLowerKebab)';
import { $($tableInfo.tableCapitalCamel)Service } from '../service/$($tableInfo.tableLowerKebab).service';

@Component({
    selector: '$($tableInfo.tableLowerKebab)',
    templateUrl: './$($tableInfo.tableLowerKebab).component.html',
    styleUrls: ['./$($tableInfo.tableLowerKebab).component.css']
})
export class $($tableInfo.tableCapitalCamel)Component implements OnInit {
    private $($tableInfo.tableLowerCamel): $($tableInfo.tableCapitalCamel);

    constructor(
        private $($tableInfo.tableLowerCamel)Service: $($tableInfo.tableCapitalCamel)Service,
        private route: ActivatedRoute,
		private router: Router
    ) {
    }

    ngOnInit(): void {
		this.route.params
			.switchMap(
			(params: Params) => {
				let $($tableInfo.tableLowerCamel)Promise: Promise<$($tableInfo.tableCapitalCamel)>;

				let id: number = params['id'] as number;
				if (id && (id > 0)) {
					$($tableInfo.tableLowerCamel)Promise = this.$($tableInfo.tableLowerCamel)Service.get(id);
				} else {
					$($tableInfo.tableLowerCamel)Promise = new Promise((resolve, reject) => { resolve(new $($tableInfo.tableCapitalCamel)()) });
				}
				return $($tableInfo.tableLowerCamel)Promise;
			}
			)
			.subscribe($($tableInfo.tableLowerCamel) => {
				this.$($tableInfo.tableLowerCamel) = $($tableInfo.tableLowerCamel);
			}
			);
    }

    save(): void {
        if (this.$($tableInfo.tableLowerCamel).$($primaryKey) > 0) {
			// Primary key is not blank, update existing record
            this.$($tableInfo.tableLowerCamel)Service.update(this.$($tableInfo.tableLowerCamel))
                .then(() => { this.router.navigate(['$($returnToUrl)']); });
        } else {
			// Primary key is blank, save new record
			// First set key to 0 instead of null to make C# happy
			this.$($tableInfo.tableLowerCamel).$($primaryKey) = 0;
            this.$($tableInfo.tableLowerCamel)Service.create(this.$($tableInfo.tableLowerCamel))
                .then(() => { this.router.navigate(['$($returnToUrl)']); });
        }
    }

    delete(): void {
        this.$($tableInfo.tableLowerCamel)Service.delete(this.$($tableInfo.tableLowerCamel).$($primaryKey))
            .then(() => this.router.navigate(['$($returnToUrl)']));
    }

    goBack(): void {
        this.router.navigate(['$($returnToUrl)']);
    }
}

"@
<##########################################################################################>
}
