;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;	\file	2_2.asm
;;	\brief	
;;
;;	\author	MYLS
;;	\date	2016.04.18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.386
.model flat, stdcall
option casemap:none

includelib msvcrt.lib
printf		proto c			:dword, :vararg
ExitProcess proto dwexitcode:dword

.stack
.data
	sze		dd	32
	cstrn	db	'zBV23GFGS32rtww23d11axlkoqi217==', 0
	nln		db	 0dh, 0ah, 0
.code

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;	\brief	sort array
;;	\param	beg,	begin of array
;;	\param	len,	length of array
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
sort proc stdcall beg:dword, len:dword
	push eax
	push ebx
	push ecx
	push edx
	push edi

	mov  ebx, beg
	mov  eax, len
	.while eax > 0
		dec eax
		mov edi, 0
		.while edi < eax
			mov cl, [ebx + edi    ]
			mov dl, [ebx + edi + 1]
			.if cl > dl
				mov [ebx + edi + 1], cl
				mov [ebx + edi    ], dl
			.endif
			inc edi
		.endw
	.endw

	pop edi
	pop edx
	pop ecx
	pop ebx
	pop eax
	ret
sort endp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;	\brief	remove digit
;;	\param	beg,	begin of array
;;	\param	len,	length of array
;;	\return eax,	length of result
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
rmdigit proc stdcall beg:dword, len:dword
	push ebx
	push ecx
	push edx
	push edi

	mov  ebx, beg
	mov  ecx, 0			; iter
	mov  edx, len		; end
	mov  edi, 0			; cur pos
	
	.while ecx < edx
		mov al, [ebx + ecx]
		.if al < '0' || al > '9'
			mov [ebx + edi], al
			inc edi
		.endif
		inc ecx
	.endw
	mov al, 0
	mov [ebx + edi], al
	mov eax, edi

	pop edi
	pop edx
	pop ecx
	pop ebx
	ret
rmdigit endp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;	main function
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
main proc c

	; source
	invoke printf,  addr cstrn
	invoke printf,  addr nln

	; remove digit
	invoke rmdigit, addr cstrn, sze
	mov sze, eax

	; sort
	invoke sort,    addr cstrn, sze

	; dest
	invoke printf,  addr cstrn
	invoke printf,  addr nln

	; return 0
	invoke ExitProcess, 0
main endp

end
