; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	D:\Projects\TaintAnalysis\AntiTaint\Epilog\src\func-va.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	??_C@_03JDANDILB@?$CFd?5?$AA@			; `string'
PUBLIC	_func
EXTRN	__imp__printf:PROC
EXTRN	__imp__gets:PROC
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
; File d:\projects\taintanalysis\antitaint\epilog\src\func-va.c
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JDANDILB@?$CFd?5?$AA@
CONST	SEGMENT
??_C@_03JDANDILB@?$CFd?5?$AA@ DB '%d ', 00H		; `string'
; Function compile flags: /Ogtp
CONST	ENDS
;	COMDAT _func
_TEXT	SEGMENT
_buf$ = -8						; size = 8
_num$ = 8						; size = 4
_func	PROC						; COMDAT

; 10   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx

; 15   :   gets(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	edi
	push	eax
	call	DWORD PTR __imp__gets

; 16   :   for (i = 0 ; i < num ; ++i)

	mov	edi, DWORD PTR _num$[ebp]
	mov	ebx, DWORD PTR __imp__printf
	add	esp, 4
	test	edi, edi
	jle	SHORT $LN1@func

; 11   :   va_list ap;
; 12   :   char buf[8];
; 13   :   int i;
; 14   :   va_start(ap, num);

	push	esi
	lea	esi, DWORD PTR _num$[ebp]
$LL3@func:

; 17   :     printf("%d ", va_arg(ap, int));

	mov	ecx, DWORD PTR [esi+4]
	add	esi, 4
	push	ecx
	push	OFFSET ??_C@_03JDANDILB@?$CFd?5?$AA@
	call	ebx
	add	esp, 8
	dec	edi
	jne	SHORT $LL3@func
	pop	esi
$LN1@func:

; 18   :   printf("%s\n", buf);

	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	push	OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
	call	ebx
	add	esp, 8
	pop	edi
	pop	ebx

; 19   :   va_end(ap);
; 20   : }

	mov	esp, ebp
	pop	ebp
	ret	0
_func	ENDP
_TEXT	ENDS
PUBLIC	_main
; Function compile flags: /Ogtp
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 24   :   func(2, 3, 4);

	push	4
	push	3
	push	2
	call	_func
	add	esp, 12					; 0000000cH

; 25   :   return 0;

	xor	eax, eax

; 26   : }

	ret	0
_main	ENDP
_TEXT	ENDS
END
