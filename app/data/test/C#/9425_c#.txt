using System.Collections.Generic;
using jgshort.SqlDom.Expressions;
using jgshort.SqlDom.Expressions.Functions.ScalarFunctions;

namespace jgshort.SqlDom.Select
{
    /// <summary>
    /// Represents a scalar select expression.
    /// </summary>
    public class ScalarSelect : Scalar
    {
        private readonly Select _select;

        public ScalarSelect(Expression selectItem, From.From from, Where.Where where)
            : this(null, selectItem, from, where)
        {
            //
        }
        public ScalarSelect(Top top, Expression selectItem, From.From from, Where.Where where)
            : base(null)
        {
            _select = new Select(null, selectItem, from, where);
        }
        public ScalarSelect(Top top, Expression selectItem, From.From from, Where.Where where, GroupBy.GroupBy groupBy)
            : base(null)
        {
            _select = new Select(top, selectItem, from, where, groupBy);
        }
        public ScalarSelect(Expression selectItem, From.From from, Where.Where where, OrderBy.OrderBy orderBy)
            : this(null, selectItem, from, where, orderBy)
        {
            //
        }
        public ScalarSelect(Top top, Expression selectItem, From.From from, Where.Where where, OrderBy.OrderBy orderBy)
            : base(null)
        {
            _select = new Select(null, selectItem, from, where, orderBy);
        }
        public ScalarSelect(Top top, Expression selectItem, From.From from, Where.Where where, GroupBy.GroupBy groupBy, OrderBy.OrderBy orderBy)
            : base(null)
        {
            _select = new Select(top, selectItem, from, where, groupBy, orderBy);
        }

        public Top SelectTop { get { return _select.SelectTop; } }
        public List<Expression> SelectList { get { return _select.SelectList; } }
        public From.From From { get { return _select.From; } }
        public Where.Where Where { get { return _select.Where; } }
        public GroupBy.GroupBy GroupBy { get { return _select.GroupBy; } }
        public Having.Having Having { get { return _select.Having; } }
        public OrderBy.OrderBy OrderBy { get { return _select.OrderBy; } }
    }
}
