using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using OnlineMediaAnalyzer.Models;

namespace OnlineMediaAnalyzer.Controllers.Analyzer
{
    public class FeedPartiesController : Controller
    {
        private OnlineMediaAnalyzerContext db = new OnlineMediaAnalyzerContext();

        // GET: FeedParties
        public ActionResult Index()
        {
            var feedParties = db.FeedParties.Include(f => f.Feed).Include(f => f.Party);
            return View(feedParties.ToList());
        }

        // GET: FeedParties/Details/5
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            FeedParty feedParty = db.FeedParties.Find(id);
            if (feedParty == null)
            {
                return HttpNotFound();
            }
            return View(feedParty);
        }

        // GET: FeedParties/Create
        public ActionResult Create()
        {
            ViewBag.FeedID = new SelectList(db.Feeds, "ID", "Name");
            ViewBag.PartyID = new SelectList(db.Parties, "ID", "Name");
            return View();
        }

        // POST: FeedParties/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "ID,LastFetchTime,FeedID,PartyID,ArticlesCount,ArticlesMemberCount,PosArticlesCount,NegArticlesCount,Date")] FeedParty feedParty)
        {
            if (ModelState.IsValid)
            {
                db.FeedParties.Add(feedParty);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            ViewBag.FeedID = new SelectList(db.Feeds, "ID", "Name", feedParty.FeedID);
            ViewBag.PartyID = new SelectList(db.Parties, "ID", "Name", feedParty.PartyID);
            return View(feedParty);
        }

        // GET: FeedParties/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            FeedParty feedParty = db.FeedParties.Find(id);
            if (feedParty == null)
            {
                return HttpNotFound();
            }
            ViewBag.FeedID = new SelectList(db.Feeds, "ID", "Name", feedParty.FeedID);
            ViewBag.PartyID = new SelectList(db.Parties, "ID", "Name", feedParty.PartyID);
            return View(feedParty);
        }

        // POST: FeedParties/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "ID,LastFetchTime,FeedID,PartyID,ArticlesCount,ArticlesMemberCount,PosArticlesCount,NegArticlesCount,Date")] FeedParty feedParty)
        {
            if (ModelState.IsValid)
            {
                db.Entry(feedParty).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            ViewBag.FeedID = new SelectList(db.Feeds, "ID", "Name", feedParty.FeedID);
            ViewBag.PartyID = new SelectList(db.Parties, "ID", "Name", feedParty.PartyID);
            return View(feedParty);
        }

        // GET: FeedParties/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            FeedParty feedParty = db.FeedParties.Find(id);
            if (feedParty == null)
            {
                return HttpNotFound();
            }
            return View(feedParty);
        }

        // POST: FeedParties/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            FeedParty feedParty = db.FeedParties.Find(id);
            db.FeedParties.Remove(feedParty);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
