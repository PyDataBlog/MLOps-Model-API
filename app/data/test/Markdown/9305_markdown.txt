# mspa
M Single Page Application
단일 페이지 웹 애플리케이션(SPA)은 "단일 페이지 웹" 글자만 빼면 그냥 애플리케이션입니다. 윈도우에 설치해서 사용하는 .exe 애플리케이션 개발 방식과 하등 차이가 없고 보여지는 기반이 브라우저안이라는 것 밖에 차이가 없습니다. 몇년전 리치 인터넷 애플리케이션(RIA)를 이끌었던 플랙스(Flex)를 떠올려도 좋습니다. 하지만 지금은 모바일과 웹의 시대이니 HTML/CSS/JavaScript 만으로도 충분히 애플리케이션을 만들 수 있습니다.

MSPA 프레임워크는 HTML에서 부족한 레이아웃기능을 단일페이지에 맞게 처리해 주는 레이아웃컴포넌트를 제공합니다. 또한 다 수의 개별화면들을 동적으로 로딩하는 기능을 가지고 있어서, 많은 수의 단위화면과 팝업화면을 처리할 수 있습니다.

MSPA 프레임워크는 단위화면과 팝업화면을 만드는 일관성있는 방법을 제공합니다. 따라서 많은 수의 화면이 있어도 그 구조 동일하기 때문에 유지관리가 용이합니다.

MSPA 프레임워크는 Restful API을 사용할 수 있도록 처리하였습니다. 따라서 서버와의 데이터통신을 이해하기 쉽게 구성되어 있습니다.

# 레이아웃 컴포넌트 소개
# 필요성
애플리케이션처럼 브라우즈의 크기변화에 따라 내부 컨트롤들이 자동으로 재배치 되는 기능을 구현하기 위해서는 각 컴포넌트간의 배치를 자동으로 설정해 주는 레이아웃 컴포넌트가 필요합니다. 웹의 CSS를 사용할 경우에는 픽셀과 퍼센트를 지원하나, 이를 혼용해서 사용할 수 없는 것이 애플리케이션과 가장 큰 차이점입니다. 따라서 이를 혼용해서 사용할 수 있고, 계층구조를 만들수 있는 컴포넌트가 필요합니다.

# 원리
div태크의 위치와 크기를 제어하는 자바스크립트 컴포넌트를 만듭니다. 이것을 부모와 자식간의 계층구조로 만듭니다. 부모컴포넌트는 다 수의 자식컴포넌트를 가질 수 있도록 배열로 자식컴포넌트를 저장합니다. 이들을 HTML의 트리구조를 이용하여, 화면상의 레이아웃 트리로 인식하는 기능을 추가합니다. 부모컴포넌트의 배치가 변경될 때, 부모컴포넌트에 설정한 규칙에 따라 자식컴포넌트를 배치하게 됩니다. MComponent의 가장 큰 특징은 모든 컴포넌트에서 사이즈 변화를 감지하고, 자신의 크기를 재설정하는 것이 아니라, 최상위의 MPageRootScreen에서 크기변화를 감지한 후, 컴포넌트 계층구조를 통해 재배치를 메소드 호출로 처리합니다. 따라서 빠르게 처리가 됩니다.
