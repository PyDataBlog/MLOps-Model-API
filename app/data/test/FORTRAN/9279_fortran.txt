      SUBROUTINE GTXYLW(NAME,NULL,NITEM,LSTLEN,IPOINT,IERR)
*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
*PURPOSE
*	TO OBTAIN AN OUTPUT X,Y LIST FRAME AND HANDLE ANY ERROR
*	CONDITIONS WHICH MAY ARISE
*
*METHOD
*	OBTAIN OUTPUT FRAME OF REQUIRED SIZE. CHECK FOR ERROR CODES.
*	GIVE ERROR MESSAGES AND RETURN FOR A NEW FRAME IF ERRORS
*	ARISE, OR ABORT IF APPROPRIATE.
*
*ARGUMENTS
*	NAME (IN)
*	CHARACTER*(*)
*		NAME OF FRAME
*	NULL (IN)
*	LOGICAL
*		IF NULL IS .TRUE., A NULL FRAME ENTRY IS VALID,
*		OTHERWISE IT IS AN ERROR CONDITION
*	NITEM (IN)
*	INTEGER
*		NUMBER OF ITEMS IN A LIST RECORD
*	LSTLEN (IN)
*	INTEGER
*		NUMBER OF LIST ENTRIES (RECORDS)
*	IPOINT (OUT)
*	INTEGER
*		POINTER TO DATA FRAME
*	IERR (OUT)
*	INTEGER
*		ERROR FLAG: ZERO FOR SUCCESS
*
*STARLINK PARAMETERS
*	'NAME'
*		PARAMETER NAME FOR THE OUTPUT FRAME IS SPECIFIED
*		IN THE ARGUMENT 'NAME'
*	NONULL/ERROR/
*		ACCESSED IF NULL IS GIVEN AND IT IS NOT VALID
*	NOACCESS/ERROR/
*		ACCESSED IF FRAME GIVEN CANNOT BE ACCESSED
*	DIMOOR/ERROR/
*		ACCESSED IF FRAME HAS INVALID DIMENSIONS
*
*CALLS
*	STARLINK:
*		WRDATA,WRERR,CNPAR
*
*WRITTEN BY
*	R.F. WARREN-SMITH
*-----------------------------------------------------------------------
C
C
      CHARACTER NAME*(*)
      INTEGER CNSTAT
      LOGICAL NULL,EXIT
      PARAMETER (MAXNUL=2)
C
C INITIALLISE NULL COUNTER AND ERROR FLAG, CALCULATE DATA AREA LENGTH
C AND CALL WRDATA TO OBTAIN DATA FRAME
C
      NNULL=0
      LEN=NITEM*LSTLEN
   11 IERR=0
      CALL WRDATA(NAME,104,'XYLIST',LEN,IPOINT,ISTAT)
C
C IF NULL ENTRY..
C
      IF(ISTAT.EQ.1) THEN
C
C IF NULL IS NOT ACCEPTABLE, INCREMENT NULL COUNT AND RETURN FOR NEW
C FRAME. IF MAX COUNT IS EXCEEDED, RETURN WITH IERR=1
C
	IF(.NOT.NULL) THEN
	  IF(NNULL.LT.MAXNUL) THEN
	    NNULL=NNULL+1
	    CALL WRERR('NONULL')
            CALL CNPAR(NAME,CNSTAT)
	    EXIT=.FALSE.
	  ELSE
	    IERR=1
            EXIT=.TRUE.
	  ENDIF
C
C IF NULL IS OK, RETURN WITH IERR=1
C
	ELSE
	  IERR=1
	  EXIT=.TRUE.
	ENDIF
C
C IF NOT ACCESSIBLE, GIVE MESSAGE AND GET NEW FRAME
C
      ELSE IF(ISTAT.EQ.3) THEN
	CALL WRERR('NOACCESS')
	CALL CNPAR(NAME,CNSTAT)
	EXIT=.FALSE.
C
C INVALID PARAMETER NAME... IERR=4
C
      ELSE IF(ISTAT.EQ.4) THEN
	IERR=4
        EXIT=.TRUE.
C
C INVALID FRAME SIZE, RETURN WITH IERR=2
C
      ELSE IF(ISTAT.EQ.6) THEN
	CALL WRERR('DIMOOR')
	IERR=2
	EXIT=.TRUE.
C
C IF NONE OF THE ABOVE.. FRAME IS OK
C
      ELSE
	EXIT=.TRUE.
      ENDIF
C
C GO BACK FOR NEW FRAME IF NECESSARY
C
      IF(.NOT.EXIT) GO TO 11
      RETURN
      END
