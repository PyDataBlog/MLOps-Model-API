# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: account
using AWS.Compat
using AWS.UUIDs

"""
    delete_alternate_contact(alternate_contact_type)
    delete_alternate_contact(alternate_contact_type, params::Dict{String,<:Any})

Deletes the specified alternate contact from an Amazon Web Services account. For complete
details about how to use the alternate contact operations, see Access or updating the
alternate contacts.

# Arguments
- `alternate_contact_type`: Specifies which of the alternate contacts to delete.

# Optional Parameters
Optional parameters can be passed as a `params::Dict{String,<:Any}`. Valid keys are:
- `"AccountId"`: Specifies the 12 digit account ID number of the Amazon Web Services
  account that you want to access or modify with this operation. If you do not specify this
  parameter, it defaults to the Amazon Web Services account of the identity used to call the
  operation. To use this parameter, the caller must be an identity in the organization's
  management account or a delegated administrator account, and the specified account ID must
  be a member account in the same organization. The organization must have all features
  enabled, and the organization must have trusted access enabled for the Account Management
  service, and optionally a delegated admin account assigned.  The management account can't
  specify its own AccountId; it must call the operation in standalone context by not
  including the AccountId parameter.  To call this operation on an account that is not a
  member of an organization, then don't specify this parameter, and call the operation using
  an identity belonging to the account whose contacts you wish to retrieve or modify.
"""
function delete_alternate_contact(
    AlternateContactType; aws_config::AbstractAWSConfig=global_aws_config()
)
    return account(
        "POST",
        "/deleteAlternateContact",
        Dict{String,Any}("AlternateContactType" => AlternateContactType);
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
function delete_alternate_contact(
    AlternateContactType,
    params::AbstractDict{String};
    aws_config::AbstractAWSConfig=global_aws_config(),
)
    return account(
        "POST",
        "/deleteAlternateContact",
        Dict{String,Any}(
            mergewith(
                _merge,
                Dict{String,Any}("AlternateContactType" => AlternateContactType),
                params,
            ),
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    get_alternate_contact(alternate_contact_type)
    get_alternate_contact(alternate_contact_type, params::Dict{String,<:Any})

Retrieves the specified alternate contact attached to an Amazon Web Services account. For
complete details about how to use the alternate contact operations, see Access or updating
the alternate contacts.

# Arguments
- `alternate_contact_type`: Specifies which alternate contact you want to retrieve.

# Optional Parameters
Optional parameters can be passed as a `params::Dict{String,<:Any}`. Valid keys are:
- `"AccountId"`: Specifies the 12 digit account ID number of the Amazon Web Services
  account that you want to access or modify with this operation. If you do not specify this
  parameter, it defaults to the Amazon Web Services account of the identity used to call the
  operation. To use this parameter, the caller must be an identity in the organization's
  management account or a delegated administrator account, and the specified account ID must
  be a member account in the same organization. The organization must have all features
  enabled, and the organization must have trusted access enabled for the Account Management
  service, and optionally a delegated admin account assigned.  The management account can't
  specify its own AccountId; it must call the operation in standalone context by not
  including the AccountId parameter.  To call this operation on an account that is not a
  member of an organization, then don't specify this parameter, and call the operation using
  an identity belonging to the account whose contacts you wish to retrieve or modify.
"""
function get_alternate_contact(
    AlternateContactType; aws_config::AbstractAWSConfig=global_aws_config()
)
    return account(
        "POST",
        "/getAlternateContact",
        Dict{String,Any}("AlternateContactType" => AlternateContactType);
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
function get_alternate_contact(
    AlternateContactType,
    params::AbstractDict{String};
    aws_config::AbstractAWSConfig=global_aws_config(),
)
    return account(
        "POST",
        "/getAlternateContact",
        Dict{String,Any}(
            mergewith(
                _merge,
                Dict{String,Any}("AlternateContactType" => AlternateContactType),
                params,
            ),
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    put_alternate_contact(alternate_contact_type, email_address, name, phone_number, title)
    put_alternate_contact(alternate_contact_type, email_address, name, phone_number, title, params::Dict{String,<:Any})

Modifies the specified alternate contact attached to an Amazon Web Services account. For
complete details about how to use the alternate contact operations, see Access or updating
the alternate contacts.

# Arguments
- `alternate_contact_type`: Specifies which alternate contact you want to create or update.
- `email_address`: Specifies an email address for the alternate contact.
- `name`: Specifies a name for the alternate contact.
- `phone_number`: Specifies a phone number for the alternate contact.
- `title`: Specifies a title for the alternate contact.

# Optional Parameters
Optional parameters can be passed as a `params::Dict{String,<:Any}`. Valid keys are:
- `"AccountId"`: Specifies the 12 digit account ID number of the Amazon Web Services
  account that you want to access or modify with this operation. If you do not specify this
  parameter, it defaults to the Amazon Web Services account of the identity used to call the
  operation. To use this parameter, the caller must be an identity in the organization's
  management account or a delegated administrator account, and the specified account ID must
  be a member account in the same organization. The organization must have all features
  enabled, and the organization must have trusted access enabled for the Account Management
  service, and optionally a delegated admin account assigned.  The management account can't
  specify its own AccountId; it must call the operation in standalone context by not
  including the AccountId parameter.  To call this operation on an account that is not a
  member of an organization, then don't specify this parameter, and call the operation using
  an identity belonging to the account whose contacts you wish to retrieve or modify.
"""
function put_alternate_contact(
    AlternateContactType,
    EmailAddress,
    Name,
    PhoneNumber,
    Title;
    aws_config::AbstractAWSConfig=global_aws_config(),
)
    return account(
        "POST",
        "/putAlternateContact",
        Dict{String,Any}(
            "AlternateContactType" => AlternateContactType,
            "EmailAddress" => EmailAddress,
            "Name" => Name,
            "PhoneNumber" => PhoneNumber,
            "Title" => Title,
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
function put_alternate_contact(
    AlternateContactType,
    EmailAddress,
    Name,
    PhoneNumber,
    Title,
    params::AbstractDict{String};
    aws_config::AbstractAWSConfig=global_aws_config(),
)
    return account(
        "POST",
        "/putAlternateContact",
        Dict{String,Any}(
            mergewith(
                _merge,
                Dict{String,Any}(
                    "AlternateContactType" => AlternateContactType,
                    "EmailAddress" => EmailAddress,
                    "Name" => Name,
                    "PhoneNumber" => PhoneNumber,
                    "Title" => Title,
                ),
                params,
            ),
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
