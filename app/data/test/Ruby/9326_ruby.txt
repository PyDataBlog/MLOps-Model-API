#Attr Methods

# I worked on this challenge [by myself, with:]

# I spent [#] hours on this challenge.

# Pseudocode

# Input:
# Output:
# Steps:

class NameData

  attr_reader :name
  def initialize
    @name = 'Eddie'
  end

end


class Greetings
  def initialize
      @greet_name = NameData.new
  end

  def hello
    puts "Hello #{@greet_name}! How wonderful to see you today."
  end
end

standard_greeting = Greetings.new
greet.hello



# Release 1: Reflection
# What are these methods doing? How are they modifying or returning the value of instance variables?
  # The methods are printing off the information on a person, based on the data that is stored in instance variables. When the Profile class is first initialized, it is initialized with information about Kim. Profile methods are used to print her inforamtion, then a Profile method is used to change the information so it is about Taylor.

# Release 2: Reflection
# What changed between the last release and this release? What was replaced? Is this code simpler than the last?
    # The only change is that the method for stating the instance_of_profile's age was refactored to a single line as an attribute reader. There was also a change to the way the method was called so it calls upon the symbol that the attribute reader corresponds to. The single line of code (attr_reader :age) is much simpler than what the previous release had.

# Release 3: What changed between the last release and this release? What was replaced? Is this code simpler than the last?
  # More refactoring. This time the method for updating the age was reduced to a sigle line as an attribute writer (attr_writer :age), which allowed for both reading and writing. Indeed, this code is also simpler than that last. The method name maybe isn't quite as readable, but still readable enough.

# Release 6 Reflection
# What is a reader method?
#   A method within a class that allows other methods to retreive a piece of data within that class.
#
# What is a writer method?
#   A method within a class that allows other methods to modify a piece of data within that class.
#
# What do the attr methods do for you?
#   They simplify the code needed to allow other methods to read and modify a piece of data within a class.
#
# Should you always use an accessor to cover your bases? Why or why not?
#   I don't know, but I doubt it. These methods should only be used when a certain piece of data needs to be shared with other methods or classes, and not as a matter of routine.
#
# What is confusing to you about these methods?
#   I am looking forward to seeing how it can play a part within a larger program, and how different classes will interact across different files. These challenges are so simple, I'm curious how things will change once the programs are scaled up.
