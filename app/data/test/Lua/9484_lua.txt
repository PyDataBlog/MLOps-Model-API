StringBuilder = {}

function StringBuilder:New()
	local o = {}
	setmetatable(o, self)
	self.__index = self
	o.buffer = {}
	return o
end

function StringBuilder:Append(...)
	for i, v in pairs({...}) do
		table.insert(self.buffer, tostring(v))
	end
end

function StringBuilder:Insert(pos, ...)
	for i, v in pairs({...}) do
		table.insert(self.buffer, pos, tostring(v))
	end
end

function StringBuilder:ToString()
	return table.concat(self.buffer)
end

function StringBuilder:Rip()
	local s = self:ToString()
	local result = {}
	
	for i in(string.gmatch(s, "%S+")) do
		table.insert(result, i)
	end
	
	return result
end

function StringBuilder:Char()
	local s = self:ToString()
	local result = {}
	local final = {}
	
	for i = 1, string.len(s) do
		table.insert(result, string.byte(string.sub(s, i, i)))
	end
	
	for i, v in pairs(result) do
		table.insert(final, string.char(v))
	end
	
	return final
end

function StringBuilder:Byte()
	local s = self:ToString()
	local result = {}
	for i = 1, string.len(s) do
		table.insert(result, string.byte(string.sub(s, i, i)))
	end
	return result
end

function StringBuilder:Find(...)
	if self.buffer then 
		local i1, i2 = string.find(self:ToString(), ...);
		if not i1 or not i2 then 
			return false; 
		else 
			return string.sub(self:ToString(), i1, i2); 
		end; 
	else  
		return false;
	end;
end

function StringBuilder:Clear()
	if self.buffer then self.buffer = {}; else return false; end;
end

function StringBuilder:Remove(...)
	local result = ""
	local i1, i2 = string.find(self:ToString(), ...)
	if not i1 or not i2 then 
		return false; 
	else
		for i, v in pairs(self.buffer) do
			for _, s in pairs({...}) do
				result = result..string.gsub(v, s, "")
			end
		end
		return result
	end
end

function StringBuilder:Length()
	return string.len(self:ToString())
end

function StringBuilder:Reverse()
	return string.reverse(self:ToString())
end

function StringBuilder:Replace(char, newChar)
	local s = self:ToString()
	local newS = string.gsub(s, tostring(char), tostring(newChar))
	return newS
end

function StringBuilder:Set(...)
	self:Clear()
	self:Append(...)
end
----------------------------------------------------------------------------------------------------
