//
//  NCSV.h
//  NNRObC
//
//  Created by Karl-Johan Alm on 20/11/14.
//  Copyright (c) 2014 Me. All rights reserved.
//

#ifndef included_NCSV_h
#define included_NCSV_h

#include <stdio.h>
#include "N.h"


N_in();

struct NCSV {
    int      entries;   ///< Number of entries
    int      properties;///< Number of properties per entry
    char   **headers;   ///< Headers, i.e. property names, or NULL if not included
    NMatRef  matrix;    ///< Matrix containing data
};

/**
 *  Create an NCSV object with the given stream.
 *
 *  @param stream         FILE stream to CSV data
 *  @param includesHeader If true, the first line is a comma-separated list of headers
 *
 *  @return New NCSV object
 */
NCSVRef NCSVCreateWithStream(FILE * stream, bool includesHeader);

/**
 *  Destroy the NCSV object.
 *  
 *  @note The matrix object is destroyed with the NCSV object, and can thus not be used after destroying the NCSV. To keep the matrix, copy it first.
 *
 *  @param csv NCSV instance
 */
void NCSVDestroy(NCSVRef csv);

/**
 *  Get the matrix for the given NCSV object.
 *
 *  @param csv NCSV instance
 *
 *  @return NMatRef for the CSV data
 */
NMatRef NCSVGetMatrix(NCSVRef csv);

/**
 *  Get the headers for the given NCSV object.
 *
 *  @param csv NCSV instance
 *
 *  @return Char array. The length is given by NCSVGetPropertyCount()
 */
char **NCSVGetHeaders(NCSVRef csv);

/**
 *  Get the number of entries in the given CSV file.
 *
 *  @param csv NCSV instance
 *
 *  @return Number of entries
 */
int NCSVGetEntryCount(NCSVRef csv);

/**
 *  Get the number of properties in the given CSV file.
 *
 *  @param csv NCSV instance
 *
 *  @return Number of properties
 */
int NCSVGetPropertyCount(NCSVRef csv);

N_out();

#endif 
