include(CMakeParseArguments)

option(USE_SYSTEM_BOOST "Use system boost libraries" ON)

function(useBoost)

    cmake_parse_arguments(OPTS
        # Optional
            ""
        # Single
            "TARGET"
        # Multiple
            "COMPONENTS"
        # Arguments
            ${ARGN}
    )

    if(NOT Boost_FOUND)
        if(USE_SYSTEM_BOOST)
            set(Boost_USE_STATIC_LIBS    OFF)
            set(Boost_USE_MULTITHREADED   ON)
            set(Boost_USE_STATIC_RUNTIME OFF)
            find_package(Boost REQUIRED COMPONENTS ${OPTS_COMPONENTS} QUIET)
        else()
            include(ExternalBoost)
            useExternalBoost(COMPONENTS ${OPTS_COMPONENTS})
        endif()
        showBoost()
    endif()

    target_include_directories(${OPTS_TARGET} PUBLIC ${Boost_INCLUDE_DIRS})
    target_link_libraries(${OPTS_TARGET} ${Boost_LIBRARIES})

endfunction()

function(showBoost)

    include(ShowVariables)

    message(STATUS "[Boost]")

    ShowVariables(
        NAMES
            Boost_FOUND
            Boost_LIBRARIES
            Boost_INCLUDE_DIRS
        INDENT "    "
    )

endfunction()
