Imports Visomes.MySQL
Imports Visomes.SGV.Core

''' <summary>
''' CADASTRO DE SOFTWARE
''' </summary>
''' <remarks></remarks>
Public Class CadSoftwareTI



    ''' <summary>
    ''' Procedimentos Iniciais
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub frmCadTipoComponentePC_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        LoadsGrid()

        If dgvSoftware.RowCount = 0 Then
            btnDelTipo.Enabled = False
            btnEditTipo.Enabled = False
        Else
            btnDelTipo.Enabled = True
            btnEditTipo.Enabled = True
        End If
    End Sub

    ''' <summary>
    ''' Carrega o Grid de Tipo de Acreditação
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub LoadsGrid()
        dgvSoftware.DataSource = DML.FeedDataGridView("t.idSoftwarePC 'Cod. Tipo',u.login Criador,t.descricao 'Descricao'," _
                                                    & "t.status Status,t.dtCadastro 'Data de Cadastro'", _
                                                      "software_pc t, usuario u", "t.idUsuario = u.idusuario")

        With dgvSoftware()
            .AutoGenerateColumns = False
            .Columns.Clear()

            'Cód Tipo
            Dim cod_Text As New DataGridViewTextBoxColumn
            cod_Text.HeaderText = "Cód Tipo"
            cod_Text.DataPropertyName = "Cod. Tipo"
            .Columns.Add(cod_Text)
            .Columns(0).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

            'Criador
            Dim criador_Text As New DataGridViewTextBoxColumn
            criador_Text.HeaderText = "Criador por"
            criador_Text.DataPropertyName = "Criador"
            .Columns.Add(criador_Text)
            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

            'Descrição
            Dim desc_Text As New DataGridViewTextBoxColumn
            desc_Text.HeaderText = "Descrição"
            desc_Text.DataPropertyName = "Descricao"
            .Columns.Add(desc_Text)
            .Columns(2).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

            'Status
            Dim status_Check As New DataGridViewCheckBoxColumn
            status_Check.HeaderText = "Status"
            status_Check.DataPropertyName = "Status"
            .Columns.Add(status_Check)
            .Columns(3).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter

            'Data de Cadastro
            Dim data_Text As New DataGridViewTextBoxColumn
            data_Text.HeaderText = "Data de Cadastro"
            data_Text.DataPropertyName = "Data de Cadastro"
            .Columns.Add(data_Text)
            .Columns(4).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
        End With

        FeedFields()
    End Sub

    ''' <summary>
    ''' Edita Tipo
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnEditTipo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnEditTipo.Click
        EnableFields()
        btnNovoTipo.Enabled = False
        btnAceitaTipo.Enabled = True
        btnEditTipo.Enabled = False
        btnCancelaTipo.Enabled = True
        dgvSoftware.Enabled = False
    End Sub

    ''' <summary>
    ''' Aceita Edição
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnAceitaTipo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAceitaTipo.Click

        CleanSQLInjection(Me)
        If UpdateFields() Then
            CleanFields()
            FeedFields()
            DisablesFields()
            LoadsGrid()
            btnAceitaTipo.Enabled = False
            btnCancelaTipo.Enabled = False
            btnAddTipo.Enabled = False
            btnNovoTipo.Enabled = True
            btnEditTipo.Enabled = True
            dgvSoftware.Enabled = True
        End If

    End Sub

    ''' <summary>
    ''' Cancela Processo
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnCancelaTipo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnCancelaTipo.Click

        CleanFields()
        DisablesFields()
        FeedFields()

        epvSofware.SetError(btnAddTipo, "")

        btnNovoTipo.Enabled = True
        btnCancelaTipo.Enabled = False
        btnAddTipo.Enabled = False
        btnAceitaTipo.Enabled = False
        dgvSoftware.Enabled = True

        If dgvSoftware.RowCount = 0 Then
            btnDelTipo.Enabled = False
            btnEditTipo.Enabled = False
        Else
            btnDelTipo.Enabled = True
            btnEditTipo.Enabled = True
        End If

    End Sub

    ''' <summary>
    ''' Novo Tipo
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnNovoTipo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnNovoTipo.Click

        CleanFields()
        EnableFields()
        mtbDtCad.Text = CStr(CurrentDate())

        'OBTEM O PRÓXIMO VALOR DA PK
        txtCodTipo.Text = CStr(DML.NextPK("idSoftwarePC", "software_pc"))

        btnNovoTipo.Enabled = False
        btnAddTipo.Enabled = True
        btnCancelaTipo.Enabled = True
        btnEditTipo.Enabled = False
        btnDelTipo.Enabled = False
        dgvSoftware.Enabled = False

    End Sub

    ''' <summary>
    ''' Adiciona Tipo
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnAddTipo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnAddTipo.Click

        CleanSQLInjection(Me)

        If (InsertFields()) Then

            DisablesFields()
            CleanFields()
            LoadsGrid()
            FeedFields()

            btnNovoTipo.Enabled = True
            btnAddTipo.Enabled = False
            btnCancelaTipo.Enabled = False
            btnDelTipo.Enabled = True
            btnEditTipo.Enabled = True
            dgvSoftware.Enabled = True
        End If

    End Sub

    ''' <summary>
    ''' Deleta Tipo
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub btnDelTipo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnDelTipo.Click

        RemoveField()
        LoadsGrid()
        CleanFields()
        FeedFields()

        If dgvSoftware.RowCount > 0 Then
            btnDelTipo.Enabled = True
            btnEditTipo.Enabled = True
        Else
            btnDelTipo.Enabled = False
            btnEditTipo.Enabled = False
        End If

    End Sub

    ''' <summary>
    ''' Ativa campos do formulario
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub EnableFields()
        txtDescricao.Enabled = True
        cboStatus.Enabled = True
    End Sub

    ''' <summary>
    ''' Desativa campos do formulario
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub DisablesFields()
        txtDescricao.Enabled = False
        cboStatus.Enabled = False
    End Sub

    ''' <summary>
    ''' Alimenta Campos
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub FeedFields()

        If dgvSoftware.RowCount > 0 Then
            If Not dgvSoftware.CurrentRow Is Nothing Then

                txtCodTipo.Text = dgvSoftware.CurrentRow.Cells(0).Value.ToString
                txtDescricao.Text = dgvSoftware.CurrentRow.Cells(2).Value.ToString

                If CBool(dgvSoftware.CurrentRow.Cells(3).Value) Then
                    cboStatus.SelectedIndex = 0
                Else
                    cboStatus.SelectedIndex = 1
                End If
                mtbDtCad.Text = dgvSoftware.CurrentRow.Cells(4).Value.ToString
            End If
        End If
    End Sub

    ''' <summary>
    ''' Limpa Campos
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub CleanFields()
        txtCodTipo.Text = String.Empty
        txtDescricao.Text = String.Empty
        cboStatus.SelectedIndex = -1
        mtbDtCad.Text = String.Empty
    End Sub

    ''' <summary>
    ''' Alterar datagrid
    ''' </summary>
    ''' <returns>Verdadeiro se Alterou, falsou se não Alterou</returns>
    ''' <remarks></remarks>
    Private Function UpdateFields() As Boolean

        Dim strMesageErro As String = "Há campos que faltam ser preenchidos."
        epvSofware.SetError(btnAddTipo, "")

        If Not (String.IsNullOrEmpty(txtDescricao.Text) Or String.IsNullOrEmpty(cboStatus.Text)) Then
            If DML.Update("software_pc", "descricao = '" & txtDescricao.Text & "'," _
                        & "status = " & Status(cboStatus.SelectedIndex) & "," _
                        & "dtCadastro=CURRENT_DATE(),idUsuario=" & Core.Usuario.ID & "", _
                          "idSoftwarePC = " & txtCodTipo.Text & "") Then
                Return True
            Else
                Return False
            End If
        Else
            epvSofware.SetError(btnAddTipo, strMesageErro)
            Return False
        End If
    End Function

    ''' <summary>
    ''' Alimenta datagrid
    ''' </summary>
    ''' <returns>Verdadeiro se adicionou, falsou se não adicionou</returns>
    ''' <remarks></remarks>
    Private Function InsertFields() As Boolean

        Dim strMesageErro As String = "Há campos que faltam ser preenchidos."
        epvSofware.SetError(btnAddTipo, "")

        'OBTEM O PRÓXIMO VALOR DA PK
        txtCodTipo.Text = CStr(DML.NextPK("idSoftwarePC", "software_pc"))

        If Not (String.IsNullOrEmpty(txtDescricao.Text) Or String.IsNullOrEmpty(cboStatus.Text)) Then
            If DML.Insert("software_pc", "idSoftwarePC,idUsuario,descricao,status,dtCadastro", _
                          "" & txtCodTipo.Text & "," & Core.Usuario.ID & ",'" & txtDescricao.Text & "'," _
                        & "" & Status(cboStatus.SelectedIndex) & ",CURRENT_DATE()") Then
                Return True
            Else
                Return False
            End If
        Else
            epvSofware.SetError(btnAddTipo, strMesageErro)
            Return False
        End If

    End Function

    ''' <summary>
    ''' Procedimento de exclusão de linhas no datagrid
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub RemoveField()

        Dim intLinhas() As Integer = {}
        Dim index As Integer = 0
        Dim count As Integer = 0
        DML.Delete("software_pc", "idSoftwarePC = " & txtCodTipo.Text & "")

        Connection.ConnectionMysql()
        MyData = DML.Select("idSoftwarePC", "software_pc", String.Empty)
        While MyData.Read
            ReDim Preserve intLinhas(index)
            intLinhas(index) = MyData.GetInt32(0)
            index += 1
        End While
        Connection.DisconnectMySQL()

        While count < index
            If Not DML.Update("software_pc", "idSoftwarePC = " & count + 1 & "", _
                                     "idSoftwarePC = " & intLinhas(count) & "") Then
                Exit While
            End If
            count += 1
        End While

    End Sub

    ''' <summary>
    ''' Alimenta os Campos
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub dgvTipoAcreditacaoCellClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles dgvSoftware.CellClick
        FeedFields()
    End Sub

    Private Sub dgvTipoAcritacao_KeyUp(ByVal sender As System.Object, ByVal e As System.Windows.Forms.KeyEventArgs) Handles dgvSoftware.KeyUp
        FeedFields()
    End Sub

End Class