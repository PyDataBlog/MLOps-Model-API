Imports Visomes.MySQL
Imports Visomes.SGV.Core

Public Class TipoDeEquipamento
    Implements ICadastro(Of TipoDeEquipamento)

    Private idValue As Integer
    Private usuarioValue As Usuario
    Private descricaoValue As String
    Private tempoValue As Double
    Private statusValue As Boolean = True
    Private cadastroValue As Date

    Public Property ID() As Integer Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).ID
        Get
            Return Me.idValue
        End Get
        Set(ByVal value As Integer)
            Me.idValue = value
        End Set
    End Property

    Public Property Usuario() As Usuario Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).Usuario
        Get
            Return Me.usuarioValue
        End Get
        Set(ByVal value As Usuario)
            Me.usuarioValue = value
        End Set
    End Property

    Public Property Descricao() As String Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).Descricao
        Get
            Return Me.descricaoValue
        End Get
        Set(ByVal value As String)
            Me.descricaoValue = value
        End Set
    End Property

    Public Property Tempo() As Double
        Get
            Return Me.tempoValue
        End Get
        Set(ByVal value As Double)
            Me.tempoValue = value
        End Set
    End Property

    Public Property Status() As Boolean Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).Status
        Get
            Return Me.statusValue
        End Get
        Set(ByVal value As Boolean)
            Me.statusValue = value
        End Set
    End Property

    Public Property Cadastro() As Date Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).Cadastro
        Get
            Return Me.cadastroValue
        End Get
        Set(ByVal value As Date)
            Me.cadastroValue = value
        End Set
    End Property

    Public Sub New(ByVal id As Integer)
        Me.idValue = id
        CarregaDados()
    End Sub

    Public Sub New()
    End Sub

    Public Sub CarregaDados()
        Dim idUsuario As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("*", "tipo_equipamento_controle", "idTipoEquipamento = '" & Me.idValue & "'")
        If Core.MyData.Read Then
            idUsuario = Core.MyData.GetInt32(1)
            Me.descricaoValue = Core.MyData.GetString(2)
            If Not Core.MyData.IsDBNull(3) Then Me.tempoValue = Core.MyData.GetInt32(3)
            Me.statusValue = Core.MyData.GetBoolean(4)
            Me.cadastroValue = Core.MyData.GetDateTime(5)
        End If
        Core.MyData.Dispose()
        Connection.DisconnectMySQL()
        If idUsuario > 0 Then Me.usuarioValue = New Usuario(idUsuario)
    End Sub

    Public Function GetLista() As Object() Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).GetLista
        Return Core.FeedsLists("tec.descricao", "tipo_equipamento_controle tec ", "tec.status=1 ORDER BY tec.descricao")
    End Function

    Public Shared Function GetIDByDescricao(ByVal str As String) As Integer
        Dim id As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idTipoEquipamento", "tipo_equipamento_controle", "descricao = '" & str & "'")
        If Core.MyData.Read() Then id = Core.MyData.GetInt32(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return id
    End Function

    Public Shared Function GetDescricaoByID(ByVal id As Integer) As String
        Dim descricao As String = String.Empty
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("descricao", "tipo_equipamento_controle", "idTipoEquipamento = '" & id & "'")
        If Core.MyData.Read() Then descricao = Core.MyData.GetString(0)
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        Return descricao
    End Function

    Public Shared Function CarregaEquipamentos(Optional ByVal condicao As String = "  t.status = 1") As DataTable
        Return DML.FeedDataGridView("t.idTipoEquipamento,u.login,t.descricao,t.status,t.dtCadastro,t.tempoCalib", _
                                    "tipo_equipamento_controle t " _
                                  & "INNER JOIN usuario u ON t.idUsuario = u.idusuario ", _
                                    condicao & " ORDER BY t.descricao")
    End Function

    Public Function CarregaSubareas() As DataTable
        Return DML.FeedDataGridView("s.descricao,ts.idSubArea", _
                                    "tipo_equipamento_has_sub_area ts " _
                                  & "INNER JOIN tipo_sub_area s ON s.idSubArea = ts.idSubArea", _
                                    "ts.idEquipamento = " & Me.idValue & "")
    End Function

    Public Shared Function GetListaByServicoID(ByVal idServico As Integer) As Object()
        Return Core.FeedsLists("tec.descricao", _
                               "tipo_equipamento_controle tec " _
                             & "INNER JOIN servico_equip se ON se.idEquip = tec.idTipoEquipamento ", _
                               "tec.status = 1 AND se.idServico = '" & idServico & "' AND tec.status=1")
    End Function

    Public Shared Function GetListaByFuncionarioID(ByVal idFuncionario As String) As Object()
        Return Core.FeedsLists("tec.descricao", _
                               "tipo_equipamento_controle tec " _
                             & "INNER JOIN tipo_equipamento_has_sub_area t ON tec.idTipoEquipamento = t.idEquipamento " _
                             & "INNER JOIN tipo_sub_area s ON t.idSubArea = s.idSubArea " _
                             & "INNER JOIN usuario_sub_area usa ON usa.idSubArea = s.idSubArea " _
                             & "INNER JOIN usuario u ON u.idUsuario = usa.idUsuario ", _
                               "tec.status = 1 AND u.idFuncionario = '" & idFuncionario & "' ORDER BY tec.descricao")
    End Function

    Public Function CarregaCadastros() As System.Collections.Generic.List(Of TipoDeEquipamento) Implements ICadastro(Of TipoDeEquipamento).CarregaCadastros
        Dim lista As New Generic.List(Of TipoDeEquipamento)
        Dim listaID As New Generic.List(Of Integer)
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("idTipoEquipamento", "tipo_equipamento_controle", "status=1")
        While MyData.Read
            listaID.Add(MyData.GetInt32(0))
        End While
        Connection.DisconnectMySQL()
        Core.MyData.Dispose()
        For Each num As Integer In listaID
            lista.Add(New TipoDeEquipamento(num))
        Next
        Return lista
    End Function

    Public Function Commit() As Boolean Implements ICadastro(Of TipoDeEquipamento).Commit
        If Me.idValue = 0 Then
            DML.Insert("tipo_equipamento_controle", "descricao,dtCadastro,status,idUsuario,tempoCalib", _
                       "'" & Me.descricaoValue & "',CURRENT_DATE()," & Me.statusValue & "," & Me.usuarioValue.ID & "," & Me.tempoValue.ToString().Replace(",", ".") & "")
            Me.idValue = GetLastID()
            Return True
        Else
            Return DML.Update("tipo_equipamento_controle", _
                              "descricao='" & Me.descricaoValue & "'," _
                            & "dtCadastro=CURRENT_DATE()," _
                            & "status=" & Me.statusValue & "," _
                            & "idUsuario=" & Me.usuarioValue.ID & "," _
                            & "tempoCalib=" & Me.tempoValue.ToString().Replace(",", ".") & "", _
                              "idTipoEquipamento=" & Me.idValue & "")
        End If
        Return False
    End Function

    Private Function GetLastID() As Integer
        Dim id As Integer = 0
        Connection.ConnectionMysql()
        Core.MyData = DML.Select("SELECT MAX(idTipoEquipamento) FROM sgv.tipo_equipamento_controle")
        If Core.MyData.Read() Then If Not MyData.IsDBNull(0) Then id = MyData.GetInt32(0)
        MyData.Dispose()
        Connection.DisconnectMySQL()
        Return id
    End Function

    Public Function Delete() As Boolean Implements ICadastro(Of TipoDeEquipamento).Delete
        Return DML.Delete("tipo_equipamento_controle", "idTipoEquipamento=" & Me.idValue & "")
    End Function

    Public Function Inativar() As Boolean Implements ICadastro(Of Visomes.SGV.TipoDeEquipamento).Inativar
        Return DML.Update("tipo_equipamento_controle", "status=0", "idTipoEquipamento=" & Me.idValue & "")
    End Function

    Public Overrides Function ToString() As String
        Return Me.descricaoValue
    End Function

    Public Overrides Function Equals(ByVal obj As Object) As Boolean
        If obj Is Nothing Then Return False
        If TypeOf obj Is TipoServico Then
            Return CType(obj, TipoServico).ID = Me.idValue
        Else
            Return False
        End If
        Return False
    End Function
End Class
