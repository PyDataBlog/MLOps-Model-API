''' <summary>
''' Infroma possíveis updates ao sistema
''' </summary>
''' <remarks></remarks>
Public Class ViewUpdate

    Private Declare Function EnableMenuItem Lib "user32" (ByVal hMenu As IntPtr, ByVal nPosition As Integer, ByVal wFlags As Long) As IntPtr
    Private Declare Function GetSystemMenu Lib "user32" (ByVal hWnd As IntPtr, ByVal bRevert As Boolean) As IntPtr
    Private Declare Function GetMenuItemCount Lib "user32" (ByVal hMenu As IntPtr) As Integer
    Private Declare Function DrawMenuBar Lib "user32" (ByVal hwnd As IntPtr) As Boolean

    Private Const SC_CLOSE As Integer = &HF060
    Private Const MF_BYPOSITION As Integer = &H400
    Private Const MF_ENABLED As Integer = &H0
    Private Const MF_DISABLED As Integer = &H2
    Private Const MF_GRAYED As Integer = &H1

    Private segundo As Integer
    Private minuto As Integer
    Private hora As Integer

    ''' <summary>
    ''' CONFIGURA OU OBTEM MENSSAGEM EXIBIDA NA TELA 
    ''' </summary>
    ''' <value></value>
    ''' <returns></returns>
    ''' <remarks></remarks>
    Public Property Menssage() As String
        Get
            Return lblMessage.Text
        End Get
        Set(ByVal value As String)
            lblMessage.Text = value
        End Set
    End Property

    ''' <summary>
    ''' Inicial uma nova instância de frmUpdates
    ''' com tempo de desligamento definido
    ''' </summary>
    ''' <param name="hora"></param>
    ''' <param name="minuto"></param>
    ''' <param name="segundo"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal hora As Integer, ByVal minuto As Integer, ByVal segundo As Integer)
        InitializeComponent()
        DisableCloseButton(Me.Handle)
        Me.hora = hora
        Me.minuto = minuto
        Me.segundo = segundo
    End Sub

    ''' <summary>
    ''' INICIA UMA NOVA INSTÂNCIA DE frmUpdates
    ''' COM MENSSAGEM DE AVISO DEFINIDA
    ''' </summary>
    ''' <param name="message"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal message As String)
        InitializeComponent()
        DisableCloseButton(Me.Handle)
        Me.hora = 0
        Me.minuto = 5
        Me.segundo = 0
        Me.lblMessage.Text = message
    End Sub

    Public Sub New(ByVal messsage As String, ByVal hora As Integer, ByVal minuto As Integer, ByVal segundo As Integer)
        InitializeComponent()
        DisableCloseButton(Me.Handle)
        Me.lblMessage.Text = messsage
        Me.hora = hora
        Me.minuto = minuto
        Me.segundo = segundo
    End Sub

    ''' <summary>
    ''' HABILITA BOTÃO FECHAR
    ''' </summary>
    ''' <param name="hwnd"></param>
    ''' <remarks></remarks>
    Public Sub EnableCloseButton(ByVal hwnd As IntPtr)
        Dim hMenu As IntPtr
        Dim menuItemCount As Integer
        hMenu = GetSystemMenu(hwnd, False)
        menuItemCount = GetMenuItemCount(hMenu)
        EnableMenuItem(GetSystemMenu(hwnd, False), SC_CLOSE, MF_ENABLED)
        DrawMenuBar(hwnd)
    End Sub

    ''' <summary>
    ''' DESABILITA BOTÃO FECHAR
    ''' </summary>
    ''' <param name="hwnd"></param>
    ''' <remarks></remarks>
    Public Sub DisableCloseButton(ByVal hwnd As IntPtr)
        Dim hMenu As IntPtr
        Dim menuItemCount As Integer
        hMenu = GetSystemMenu(hwnd, False)
        menuItemCount = GetMenuItemCount(hMenu)
        EnableMenuItem(GetSystemMenu(hwnd, False), SC_CLOSE, MF_ENABLED Or MF_GRAYED)
        DrawMenuBar(hwnd)
    End Sub

    ''' <summary>
    ''' INICIO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub frmUpdates_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        time.Enabled = True
    End Sub

    ''' <summary>
    ''' CONTAGEM DO TEMPO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub time_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles time.Tick
        Try
            If hora = 0 And minuto = 0 And segundo = 0 Then
                Me.Close()
                If Application.MessageLoop Then Application.Exit() Else Environment.Exit(1)
            End If
            If segundo = 0 And minuto > 0 Then
                segundo = 59
                minuto -= 1
            Else
                segundo -= 1
            End If
            If minuto = 0 And hora > 0 Then
                minuto = 59
                hora -= 1
            End If
            Me.lblTime.Text = String.Format("{0:00}:{1:00}:{2:00}", hora, minuto, segundo)
        Catch ex As Exception
            MessageBox.Show(ex.Message, Core.STR_NOME_SISTEMA)
        End Try
    End Sub

    ''' <summary>
    ''' FECHAMENTO
    ''' </summary>
    ''' <remarks></remarks>
    Private Sub frmUpdates_FormClosing(ByVal sender As System.Object, ByVal e As System.Windows.Forms.FormClosingEventArgs) Handles MyBase.FormClosing
        If segundo = 0 And minuto = 0 And hora = 0 Then
            e.Cancel = False
        Else
            e.Cancel = True
        End If
    End Sub
End Class