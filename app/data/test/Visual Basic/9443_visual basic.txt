Option Infer On

Imports System
Imports System.Runtime.InteropServices

Namespace Examples
    Friend Class Program
        <STAThread>
        Shared Sub Main(ByVal args() As String)
            Dim application As SolidEdgeFramework.Application = Nothing
            Dim partDocument As SolidEdgePart.PartDocument = Nothing
            Dim models As SolidEdgePart.Models = Nothing
            Dim model As SolidEdgePart.Model = Nothing
            Dim body As SolidEdgeGeometry.Body = Nothing
            Dim faces As SolidEdgeGeometry.Faces = Nothing
            Dim face As SolidEdgeGeometry.Face = Nothing
            Dim loops As SolidEdgeGeometry.Loops = Nothing
            Dim [loop] As SolidEdgeGeometry.Loop = Nothing
            Dim edgeUses As SolidEdgeGeometry.EdgeUses = Nothing
            Dim edgeUse As SolidEdgeGeometry.EdgeUse = Nothing

            Try
                ' See "Handling 'Application is Busy' and 'Call was Rejected By Callee' errors" topic.
                OleMessageFilter.Register()

                ' Attempt to connect to a running instance of Solid Edge.
                application = DirectCast(Marshal.GetActiveObject("SolidEdge.Application"), SolidEdgeFramework.Application)
                partDocument = TryCast(application.ActiveDocument, SolidEdgePart.PartDocument)

                If partDocument IsNot Nothing Then
                    models = partDocument.Models
                    model = models.Item(1)
                    body = CType(model.Body, SolidEdgeGeometry.Body)

                    Dim FaceType = SolidEdgeGeometry.FeatureTopologyQueryTypeConstants.igQueryAll
                    faces = CType(body.Faces(FaceType), SolidEdgeGeometry.Faces)

                    For i As Integer = 1 To faces.Count
                        face = CType(faces.Item(i), SolidEdgeGeometry.Face)

                        loops = CType(face.Loops, SolidEdgeGeometry.Loops)

                        For j As Integer = 1 To loops.Count
                            [loop] = CType(loops.Item(j), SolidEdgeGeometry.Loop)
                            edgeUses = CType([loop].EdgeUses, SolidEdgeGeometry.EdgeUses)

                            For k As Integer = 1 To edgeUses.Count
                                edgeUse = CType(edgeUses.Item(k), SolidEdgeGeometry.EdgeUse)

                                Dim partner = edgeUse.Partner
                            Next k
                        Next j
                    Next i
                End If
            Catch ex As System.Exception
                Console.WriteLine(ex)
            Finally
                OleMessageFilter.Unregister()
            End Try
        End Sub
    End Class
End Namespace