<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Emp extends MY_Controller {

    /**
     * Index Page for this controller.
     *
     * Maps to the following URL
     * 		http://example.com/index.php/welcome
     * 	- or -
     * 		http://example.com/index.php/welcome/index
     * 	- or -
     * Since this controller is set as the default controller in
     * config/routes.php, it's displayed at http://example.com/
     *
     * So any other public methods not prefixed with an underscore will
     * map to /index.php/welcome/<method_name>
     * @see https://codeigniter.com/user_guide/general/urls.html
     */
    public function __construct() {
        parent::__construct();
        $this->data['view'] = $this->router->fetch_class();
        $this->load->model('master_model');
        $this->load->model('employee_model');
        // $this->data['template'] = 'auth';
    }

    public function index() {
        if ($this->input->is_ajax_request()) {
            if ($this->input->get('delete'))
                echo $this->employee_model->remove($this->input->get('id'));
            else
                echo $this->employee_model->grid($this->input->get());
        } else{
            $this->data['command_status'] = $this->master_model->get_command_status();
            $this->load->view('template', $this->data);
        }
    }

    public function add($id = false, $allow = false) { 
        $this->data['view'] .= "_add";
        $this->data['allow'] = $allow;
        $this->data['allow_view'] = false;

        // generate data
        $this->data['marital_list'] = $this->employee_model->get_marital_data();
        $this->data['vendor_list'] = $this->employee_model->get_vendor_data();
        $this->data['sbu_list'] = $this->employee_model->get_sbu_data();
        $this->data['branch_list'] = $this->employee_model->get_branch_data();
        $this->data['location_list'] = $this->employee_model->get_location_data();
        $this->data['city_list'] = $this->employee_model->get_city_data();
        $this->data['province_list'] = $this->employee_model->get_province_data();
        $this->data['land_list'] = $this->employee_model->get_land_data();
        $this->data['customer_list'] = $this->employee_model->get_customer_data();
        $this->data['job_list'] = $this->employee_model->get_job_data();
        $this->data['position_list'] = $this->employee_model->get_position_data();
        $this->data['bank_list'] = $this->employee_model->get_bank_data();
        $this->data['ident_list'] = $this->employee_model->get_identity_data();
        $this->data['insurance_list'] = $this->employee_model->get_insurance_data();
        $this->data['role_list'] = $this->employee_model->get_role_data();
        $this->data['allowance_list'] = $this->employee_model->get_allowance_data();
        $this->data['schedule_list'] = $this->employee_model->get_schedule_data();
        $this->data['allowance_method_list'] = isset($this->data['constant']['pay_method']) ? $this->data['constant']['pay_method'] : false;
        // get request code list from mr. Anton server 
        $this->data['request_code'] = $this->get_api($this->config->item('url_eform'));
        $this->data['request_code_used'] = $this->employee_model->get_request_code_used();

        // getting data if edit data
        if ($id && $allow) {
            $data = $this->employee_model->get_data($id);
            $this->data['allow_view'] = $allow == "view";
        }
        // default value for list data
        $this->data['id'] = $id ? $id : false;
        $this->data['emp_gender'] = isset($data) ? $data->emp_gender : "";
        $this->data['emp_married'] = isset($data) ? $data->emp_married_status_id : "";
        $this->data['emp_status'] = isset($data) ? $data->emp_status : "";
        $this->data['emp_bank'] = isset($data) ? $data->emp_bank_id : "";
        $this->data['emp_bank_acc_number'] = isset($data) ? $data->emp_bank_acc_number : "";
        $this->data['emp_bank_acc_name'] = isset($data) ? $data->emp_bank_acc_name : "";
        $this->data['emp_type'] = isset($data) ? $data->emp_status_type_id : "";
        $this->data['emp_nik'] = isset($data) ? $data->emp_number : "";
        $this->data['emp_name'] = isset($data) ? $data->emp_name : "";
        $this->data['emp_tax_number'] = isset($data) ? $data->emp_tax_number : "";
        $this->data['emp_email'] = isset($data) ? $data->emp_email : "";
        $this->data['emp_handphone'] = isset($data) ? $data->emp_handphone : "";
        $this->data['emp_phone'] = isset($data) ? $data->emp_phone : "";
        $this->data['emp_vendor'] = isset($data) ? $data->emp_vendor_id : "";
        $this->data['emp_sbu'] = isset($data) ? $data->emp_sbu_id : "";
        $this->data['emp_branch'] = isset($data) ? $data->emp_branch_id : "";
        $this->data['emp_location'] = isset($data) ? $data->emp_location_id : "";
        $this->data['emp_city'] = isset($data) ? $data->emp_city_id : "";
        $this->data['emp_province'] = isset($data) ? $data->emp_province_id : "";
        $this->data['emp_land'] = isset($data) ? $data->emp_land_id : "";
        $this->data['emp_customer'] = isset($data) ? $data->emp_cust_id : "";
        $this->data['emp_job'] = isset($data) ? $data->emp_job_id : "";
        $this->data['emp_position'] = isset($data) ? $data->emp_position_id : "";
        $this->data['emp_card_number'] = isset($data) ? $data->emp_identity_value : "";
        $this->data['emp_join_date'] = isset($data) ? date("d-m-Y", strtotime($data->emp_start_date)) : "";
        $this->data['emp_end_date'] = isset($data) ? date("d-m-Y", strtotime($data->emp_end_date)) : "";
        $this->data['emp_schedule_id'] = isset($data) ? $data->emp_schedule_id : "";
        $this->data['emp_user'] = isset($data) ? $data->user_name : "";
        // $this->data['emp_user_ad'] = isset($data) ? $data->username_ad : "";
        $this->data['emp_request_code'] = isset($data) ? $data->emp_request_code : "";
        $this->data['usr_role'] = isset($data) ? $data->role_id : "";

        if ($this->input->is_ajax_request()) {
            if ($this->input->post('terminate') && $id) {
                echo $this->employee_model->terminate($this->input->post(), $id);
            } else{
                $post = $this->input->post();
                $post['request_code_list'] = $this->parse_by_id($this->data['request_code']);
                echo $this->employee_model->save($post);
            }
            die();
        }
        $this->data['command_status'] = $this->master_model->get_command_status();
        $this->load->view('template', $this->data);
    }

    public function salary($id = false, $allow = false) {
        if ($this->input->is_ajax_request()) {
            echo $this->employee_model->save_salary($this->input->post());
            die();
        }
    }

    public function identity($id = false, $allow = false) {
        if ($this->input->is_ajax_request()) {
            echo $this->employee_model->save_identity($this->input->post());
            die();
        }
    }

    public function allowance($id = false, $allow = false) {
        if ($this->input->is_ajax_request()) {
            echo $this->employee_model->save_allowance($this->input->post());
            die();
        }
    }

    public function get_salary() {
        echo $this->employee_model->salary_grid($this->input->get());
    }

    public function get_work_hst() {
        echo $this->employee_model->work_grid($this->input->get());
    }

    public function get_identity() {
        echo $this->employee_model->identity_grid($this->input->get());
    }

    public function get_allowance() {
        if($this->input->get('delete')){
            echo $this->employee_model->delete_allowance($this->input->get('id'));
        } else
            echo $this->employee_model->allowance_grid($this->input->get());
    }

    public function check_ktp() {
        if ($this->input->is_ajax_request()) {
            echo $this->employee_model->check_blacklist($this->input->post());
            die();
        }
    }

    public function check_emp_code() {
        if ($this->input->is_ajax_request()) {
            echo $this->employee_model->check_emp_code($this->input->post('id'));
            die();
        }
    }

    public function parse_by_id($data=false){
        if(is_array($data)){
            $all = array();
            foreach ($data as $i => $row) {
                $all[$row->id] = $row->quota; 
            }
            return $all;
        }
        return array();
    }

    public function nik_validate(){        
        if ($this->input->is_ajax_request()) {
            echo $this->employee_model->check_nrp($this->input->post('id'));
            die();
        }
    }

    public function get_api($url=false){
        if($url){
            $options = array(
                CURLOPT_RETURNTRANSFER => true,     // return web page
                CURLOPT_HEADER         => false,    // don't return headers
                CURLOPT_FOLLOWLOCATION => true,     // follow redirects
                CURLOPT_ENCODING       => "",       // handle all encodings
                CURLOPT_USERAGENT      => "Linux", // who am i
                CURLOPT_AUTOREFERER    => true,     // set referer on redirect
                CURLOPT_CONNECTTIMEOUT => 120,      // timeout on connect
                CURLOPT_TIMEOUT        => 120,      // timeout on response
                CURLOPT_MAXREDIRS      => 10,       // stop after 10 redirects
                CURLOPT_SSL_VERIFYPEER => false     // Disabled SSL Cert checks
            );

            $curl      = curl_init($url);
            curl_setopt_array( $curl, $options );

            $response = json_decode(curl_exec($curl));
            curl_close($curl);
            return $response;
        }
        return false;
    }

}
