<?php
class Controller_Admin_Recruitments extends Controller_Admin
{

	public function action_index()
	{
		$data['recruitments'] = Model_Recruitment::find('all');
		$this->template->title = "Recruitments";
		$this->template->content = View::forge('admin/recruitments/index', $data);

	}

	public function action_view($id = null)
	{
		$data['recruitment'] = Model_Recruitment::find($id);

		$this->template->title = "Recruitment";
		$this->template->content = View::forge('admin/recruitments/view', $data);

	}

	public function action_create()
	{
		if (Input::method() == 'POST')
		{
			$val = Model_Recruitment::validate('create');

			if ($val->run())
			{
				$recruitment = Model_Recruitment::forge(array(
					'position' => Input::post('position'),
					'code' => Input::post('code'),
					'typeofwork' => Input::post('typeofwork'),
					'rank' => Input::post('rank'),
					'personal' => Input::post('personal'),
					'salary' => Input::post('salary'),
					'is_percent' => Input::post('is_percent'),
					'gender' => Input::post('gender'),
					'certificate' => Input::post('certificate'),
					'address' => Input::post('address'),
					'career_id' => Input::post('career_id'),
					'description' => Input::post('description'),
					'benefit' => Input::post('benefit'),
					'profile' => Input::post('profile'),
					'end_date' => Input::post('end_date'),
					'profile_language' => Input::post('profile_language'),
					'contact' => Input::post('contact'),
					'email' => Input::post('email'),
					'phone' => Input::post('phone'),
					'company_id' => Input::post('company_id'),
					'is_hot' => Input::post('is_hot'),
					'is_active' => Input::post('is_active'),
					'package_id' => Input::post('package_id'),
					'end_hot' => Input::post('end_hot'),
					'user_id' => Input::post('user_id'),
				));

				if ($recruitment and $recruitment->save())
				{
					Session::set_flash('success', e('Added recruitment #'.$recruitment->id.'.'));

					Response::redirect('admin/recruitments');
				}

				else
				{
					Session::set_flash('error', e('Could not save recruitment.'));
				}
			}
			else
			{
				Session::set_flash('error', $val->error());
			}
		}

		$this->template->title = "Recruitments";
		$this->template->content = View::forge('admin/recruitments/create');

	}

	public function action_edit($id = null)
	{
		$recruitment = Model_Recruitment::find($id);
		$val = Model_Recruitment::validate('edit');

		if ($val->run())
		{
			$recruitment->position = Input::post('position');
			$recruitment->code = Input::post('code');
			$recruitment->typeofwork = Input::post('typeofwork');
			$recruitment->rank = Input::post('rank');
			$recruitment->personal = Input::post('personal');
			$recruitment->salary = Input::post('salary');
			$recruitment->is_percent = Input::post('is_percent');
			$recruitment->gender = Input::post('gender');
			$recruitment->certificate = Input::post('certificate');
			$recruitment->address = Input::post('address');
			$recruitment->career_id = Input::post('career_id');
			$recruitment->description = Input::post('description');
			$recruitment->benefit = Input::post('benefit');
			$recruitment->profile = Input::post('profile');
			$recruitment->end_date = Input::post('end_date');
			$recruitment->profile_language = Input::post('profile_language');
			$recruitment->contact = Input::post('contact');
			$recruitment->email = Input::post('email');
			$recruitment->phone = Input::post('phone');
			$recruitment->company_id = Input::post('company_id');
			$recruitment->is_hot = Input::post('is_hot');
			$recruitment->is_active = Input::post('is_active');
			$recruitment->package_id = Input::post('package_id');
			$recruitment->end_hot = Input::post('end_hot');
			$recruitment->user_id = Input::post('user_id');

			if ($recruitment->save())
			{
				Session::set_flash('success', e('Updated recruitment #' . $id));

				Response::redirect('admin/recruitments');
			}

			else
			{
				Session::set_flash('error', e('Could not update recruitment #' . $id));
			}
		}

		else
		{
			if (Input::method() == 'POST')
			{
				$recruitment->position = $val->validated('position');
				$recruitment->code = $val->validated('code');
				$recruitment->typeofwork = $val->validated('typeofwork');
				$recruitment->rank = $val->validated('rank');
				$recruitment->personal = $val->validated('personal');
				$recruitment->salary = $val->validated('salary');
				$recruitment->is_percent = $val->validated('is_percent');
				$recruitment->gender = $val->validated('gender');
				$recruitment->certificate = $val->validated('certificate');
				$recruitment->address = $val->validated('address');
				$recruitment->career_id = $val->validated('career_id');
				$recruitment->description = $val->validated('description');
				$recruitment->benefit = $val->validated('benefit');
				$recruitment->profile = $val->validated('profile');
				$recruitment->end_date = $val->validated('end_date');
				$recruitment->profile_language = $val->validated('profile_language');
				$recruitment->contact = $val->validated('contact');
				$recruitment->email = $val->validated('email');
				$recruitment->phone = $val->validated('phone');
				$recruitment->company_id = $val->validated('company_id');
				$recruitment->is_hot = $val->validated('is_hot');
				$recruitment->is_active = $val->validated('is_active');
				$recruitment->package_id = $val->validated('package_id');
				$recruitment->end_hot = $val->validated('end_hot');
				$recruitment->user_id = $val->validated('user_id');

				Session::set_flash('error', $val->error());
			}

			$this->template->set_global('recruitment', $recruitment, false);
		}

		$this->template->title = "Recruitments";
		$this->template->content = View::forge('admin/recruitments/edit');

	}

	public function action_delete($id = null)
	{
		if ($recruitment = Model_Recruitment::find($id))
		{
			$recruitment->delete();

			Session::set_flash('success', e('Deleted recruitment #'.$id));
		}

		else
		{
			Session::set_flash('error', e('Could not delete recruitment #'.$id));
		}

		Response::redirect('admin/recruitments');

	}

}
