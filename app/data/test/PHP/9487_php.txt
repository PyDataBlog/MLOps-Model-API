<?php
// src/Acme/DemoBundle/Form/EventListener/AddNameFieldSubscriber.php
namespace CCTracing\CMSBundle\Form\EventListener;


use Doctrine\ORM\EntityRepository;
use Symfony\Component\Form\FormFactoryInterface;
use Doctrine\ORM\EntityManager;
use Symfony\Component\EventDispatcher\EventSubscriberInterface;
use Symfony\Component\Form\FormEvents;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\PropertyAccess\PropertyAccess;


class AddCampanaFieldSubscriber implements EventSubscriberInterface
{
    private $factory;

    public function __construct(FormFactoryInterface $factory)
    {
        $this->factory = $factory;
    }

    public static function getSubscribedEvents()
    {
        return array(
            FormEvents::PRE_SET_DATA => 'preSetData',
            FormEvents::PRE_SUBMIT     => 'preSubmit'
        );
    }
	
    private function addCampanaForm($form, $campana, $marca)
    {
        $form->add($this->factory->createNamed('campana','entity', $campana, array(
            'class'         	=> 'CCTracingCMSBundle:Campana',
            'empty_value'   	=> 'CampaÃ±a',
            'mapped'        	=> false,
			'auto_initialize' 	=> false,
			'property' => 'campana',
            'query_builder' => function (EntityRepository $repository) use ($marca) {
                $qb = $repository->createQueryBuilder('campana')
                    ->innerJoin('campana.marca', 'marca');
                if($marca instanceof CCTracing\CMSBundle\Marca){
                    $qb->where('campana.marca = :marca')
                    ->setParameter('marca', $marca);
                }elseif(is_numeric($marca)){
                    $qb->where('marca.id = :marca')
                    ->setParameter('marca', $marca);
                }else{
                    $qb->where('marca.marca = :marca')
                    ->setParameter('marca', null);
                }
 
                return $qb;
            }
        )));
    }	

	//se le llama justo antes de poblar el formulario con los datos del modelo
    public function preSetData(FormEvent $event)
    {
        $data = $event->getData();
        $form = $event->getForm();
 
        if (null === $data) {
            return;
        }
		
		$accessor = PropertyAccess::getPropertyAccessor();
		$campana = $accessor->getValue($data, 'campana');
		$marca = ($campana) ? $campana->getMarca() : null ;
		$this->addCampanaForm($form, $campana, $marca);
    }
 
    public function preSubmit(FormEvent $event)
    {
		$data = $event->getData();
        $form = $event->getForm();
 
        if (null === $data) {
            return;
        }
		
		echo "----------------";

        $campana = array_key_exists('campana', $data) ? $data['campana'] : null;
        $marca = array_key_exists('marca', $data) ? $data['marca'] : null;
		print_r($marca);		
		print_r($campana);		
		die();
		$this->addCampanaForm($form, $campana, $marca);
    }
}