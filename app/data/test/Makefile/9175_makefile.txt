# This is how we want to name the binary output
BINARY=./bin/covert

# These are the values we want to pass for Version and BuildTime
BUILD_VERSION=$(shell git describe --abbrev=0 --tags)
BUILD_TIME=$(shell date +'%Y-%m-%d %T %Z')
BUILD_REVISION=$(shell git rev-parse HEAD)

# Setup the -ldflags option for go build here, interpolate the variable values
LDFLAGS=-s -w \
	-X 'github.com/maxvw/covert/version.revision=${BUILD_REVISION}' \
	-X 'github.com/maxvw/covert/version.release=${BUILD_VERSION}' \
	-X 'github.com/maxvw/covert/version.date=${BUILD_TIME}'

# Build the binary
build:
	go get
	go build -ldflags "${LDFLAGS}" -o ${BINARY} main.go

# Build the binaries for CI
ci:
	go get
	GOOS=darwin GOARCH=amd64 go build -ldflags "${LDFLAGS}" -o ${BINARY}-darwin-amd64 main.go
	GOOS=linux GOARCH=386 go build -ldflags "${LDFLAGS}" -o ${BINARY}-linux-386 main.go
	GOOS=linux GOARCH=arm go build -ldflags "${LDFLAGS}" -o ${BINARY}-linux-arm main.go
	GOOS=windows GOARCH=386 go build -ldflags "${LDFLAGS}" -o ${BINARY}-window-386.exe main.go

# Run the test suites for our libraries
test:
	go get
	go test -v -bench=. ./manifest ./security ./version ./command