
CXXFLAGS += -O3
CXXFLAGS += -Wall
CXXFLAGS += -fexceptions
CXXFLAGS += -I lib/la-C/src
CXXFLAGS += -I src
CXXFLAGS += -I prj/module
#WINDOWS
ifdef WIN32
CXX := i686-pc-mingw32-g++
CXXFLAGS += -static-libgcc
CXXFLAGS += -D__USE_MINGW_ANSI_STDIO=1
LDFLAGS += lib/core.lib
LDFLAGS += lib/module.lib
LDFLAGS += lib/la.lib
LDFLAGS += -lws2_32 -lwsock32
EXT := .exe
AR := i686-pc-mingw32-ar
ARFLAGS := -rcs
else
CXX := g++
CXXFLAGS += -ggdb3
LDFLAGS += lib/libcore.a
LDFLAGS += lib/libmodule.a
LDFLAGS += lib/libla.a
EXT :=
AR := ar
ARFLAGS := -rcs
endif

all: init la utl build core mod archive srv nice

init:
	mkdir -p bin bin/utl bin/mod bin/srv
	mkdir -p obj/lib obj/utl obj/mod

la: lib/libla.a lib/la.lib

lib/libla.a:
	rm -rf lib/la-C
	git clone https://github.com/Laukien/la-C.git lib/la-C
	cd lib/la-C && make WITH_CPP=y
	cp lib/la-C/lib/libla++.*.a lib/libla.a

lib/la.lib:
ifdef WIN32
	rm -rf lib/la-C
	git clone https://github.com/Laukien/la-C.git lib/la-C
	cd lib/la-C && make WITH_CPP=y WIN32=y
	cp lib/la-C/lib/la++.*.lib lib/la.lib
endif

utl: utl_lib utl_tool

utl_lib:
	$(CXX) $(CXXFLAGS) -c -o obj/utl/lib.o src/utl/lib.cc

utl_tool:
ifndef WIN32
	$(CXX) $(CXXFLAGS) -o bin/utl/build src/utl/build.cc obj/utl/lib.o lib/libla.a
	$(CXX) $(CXXFLAGS) -o bin/utl/drop src/utl/drop.cc obj/utl/lib.o lib/libla.a
	$(CXX) $(CXXFLAGS) -o bin/utl/compile src/utl/compile.cc obj/utl/lib.o lib/libla.a  
	$(CXX) $(CXXFLAGS) -o bin/utl/config src/utl/config.cc obj/utl/lib.o lib/libla.a
	$(CXX) $(CXXFLAGS) -o bin/utl/create src/utl/create.cc obj/utl/lib.o lib/libla.a
endif

build:
	bin/utl/config
	bin/utl/build

archive:
ifdef WIN32
	$(AR) $(ARFLAGS) lib/utl.lib obj/utl/*.o 
	$(AR) $(ARFLAGS) lib/core.lib obj/lib/*.o 
	$(AR) $(ARFLAGS) lib/module.lib obj/mod/*.o
else
	$(AR) $(ARFLAGS) lib/libutl.a obj/utl/*.o 
	$(AR) $(ARFLAGS) lib/libcore.a obj/lib/*.o 
	$(AR) $(ARFLAGS) lib/libmodule.a obj/mod/*.o
endif

clean:
	rm -rf lib
	rm -rf obj/*

core:
	rm -f obj/lib/*
	$(CXX) $(CXXFLAGS) -c -o obj/lib/application.o src/lib/application.cc
	$(CXX) $(CXXFLAGS) -c -o obj/lib/common.o src/lib/common.cc
	$(CXX) $(CXXFLAGS) -c -o obj/lib/config.o src/lib/config.cc
	$(CXX) $(CXXFLAGS) -c -o obj/lib/mapper.o src/lib/mapper.cc
	$(CXX) $(CXXFLAGS) -c -o obj/lib/module.o src/lib/module.cc
	$(CXX) $(CXXFLAGS) -c -o obj/lib/response.o src/lib/response.cc
	$(CXX) $(CXXFLAGS) -c -o obj/lib/request.o src/lib/request.cc

srv:
	$(CXX) $(CXXFLAGS) -o bin/srv/KCC$(EXT) src/srv/http.cc $(LDFLAGS)

nice:
ifdef WIN32
	strip -s bin/srv/KCC$(EXT)
	upx bin/srv/KCC$(EXT)
else
	strip -s bin/srv/KCC
	upx bin/srv/KCC
endif

mod: mod_index mod_error mod_static mod_sc_connector mod_ksi_host

mod_index:
	bin/utl/compile index
	$(CXX) $(CXXFLAGS) -c -o obj/mod/index.model.o prj/module/index/model.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/index.view.o prj/module/index/view.html.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/index.controller.o prj/module/index/controller.cc

mod_error:
	bin/utl/compile error
	$(CXX) $(CXXFLAGS) -c -o obj/mod/error.model.o prj/module/error/model.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/error.view.o prj/module/error/view.html.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/error.controller.o prj/module/error/controller.cc

mod_static:
	$(MAKE) -C prj/module/static
	bin/utl/compile static
	$(CXX) $(CXXFLAGS) -c -o obj/mod/static.model.o prj/module/static/model.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/static.view.o prj/module/static/view.html.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/static.controller.o prj/module/static/controller.cc

mod_sc_connector:
	bin/utl/compile sc_connector
	$(CXX) $(CXXFLAGS) -c -o obj/mod/sc_connector.model.o prj/module/sc_connector/model.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/sc_connector.view.o prj/module/sc_connector/view.html.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/sc_connector.controller.o prj/module/sc_connector/controller.cc

mod_ksi_host:
	bin/utl/compile ksi_host
	$(CXX) $(CXXFLAGS) -c -o obj/mod/ksi_host.model.o prj/module/ksi_host/model.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/ksi_host.view.o prj/module/ksi_host/view.html.cc
	$(CXX) $(CXXFLAGS) -c -o obj/mod/ksi_host.controller.o prj/module/ksi_host/controller.cc
