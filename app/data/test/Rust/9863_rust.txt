// Our use cases
use super::stream;

pub const WAVE_FORMAT_PCM: usize = 1;

#[derive(Default)]
pub struct WaveFormatEx {
    pub format_tag: u16,
    pub channels: u16,
    pub samples_per_second: i32,
    pub average_bytes_per_second: i32,
    pub block_align: u16,
    pub bits_per_sample: u16,
    pub cb_size: u16,
}

pub struct SoundExpander {
    pub memb_20: i32,
    pub memb_24: i32,
    pub memb_28: i32,
    pub memb_30: i32,
    pub memb_34: i32,
    pub memb_40: i32,
    pub memb_48: i32,
    pub memb_4C: i32,
    pub memb_54: i32,
    pub memb_58: i32,
    pub memb_5C: i32,
    pub memb_64: i32,
    pub memb_68: i32,
    pub memb_70: i32,
    pub memb_74: i32,
    pub memb_80: i32,
    pub memb_8C: i32,
    pub memb_90: i32,
    pub file_reader: stream::FileReader,
    pub wave_format_ex: WaveFormatEx,
    pub flags0: i32,
    pub flags1: i32,
    pub flags2: i32,
    pub loop_point: i32,
    pub file_length: i32,
    pub read_limit: i32,
    pub some_var_6680EC: i32,
    pub some_var_6680E8: i32,
    pub previous: Box<SoundExpander>,
    pub next: Box<SoundExpander>,
}

impl SoundExpander {
    pub fn new() -> SoundExpander {
		let wave_format: WaveFormatEx = Default::default();

        SoundExpander {
			memb_20: 0,
			memb_24: 0,
			memb_28: 0,
			memb_30: 0,
			memb_34: 0,
			memb_40: 0,
			memb_48: 0,
			memb_4C: 0,
			memb_54: 0,
			memb_58: 0,
			memb_5C: 0,
			memb_64: 0,
			memb_68: 0,
			memb_70: 0,
			memb_74: 0,
			memb_80: 0,
			memb_8C: 0,
			memb_90: 0,
			file_reader: stream::FileReader::new(),
			wave_format_ex: wave_format,
			flags0: 0,
			flags1: 0,
			flags2: 0,
			loop_point: 0,
			file_length: 0,
			read_limit: 0,
			some_var_6680EC: 0,
			some_var_6680E8: 0,
			previous: Box::new(SoundExpander::new()),
			next: Box::new(SoundExpander::new()),
        }
    }
}

