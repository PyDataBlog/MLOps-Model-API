# -*- coding:utf-8; mode:python -*-
"""
Implements a queue efficiently using only two stacks.
"""

from helpers import SingleNode
from stack import Stack


class QueueOf2Stacks:

    def __init__(self):
        self.stack_1 = Stack()
        self.stack_2 = Stack()

    def enqueue(self, value):
        self.stack_1.push(value)

    def dequeue(self):
        self.transfer_if_necessary()
        if self.stack_2:
            return self.stack_2.pop()

    def peek(self):
        self.transfer_if_necessary()
        if self.stack_2:
            return self.stack_2.peek()

    def transfer_if_necessary(self):
        if not self.stack_2:
            while self.stack_1:
                self.stack_2.push(self.stack_1.pop())

    def __len__(self):
        return len(self.stack_1) + len(self.stack_2)


def main():
    queue = QueueOf2Stacks()
    print()
    for i in range(10):
        queue.enqueue(i)
        print(i)
    print("---")
    for i in range(len(queue)):
        print(queue.dequeue())


if __name__ == "__main__":
    main()

main()
